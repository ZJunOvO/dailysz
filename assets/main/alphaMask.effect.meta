{
  "ver": "1.0.27",
  "uuid": "53b87a72-b11c-4307-93be-fc8c2345f67d",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nattribute vec4 a_color;\nvarying vec2 v_uv0;\nvarying vec4 v_color;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  vec4 pos = vec4(a_position, 1);\n}",
        "frag": "\nprecision highp float;\nvarying vec2 v_uv0;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float height;\nvoid main () {\n  vec4 color = v_color;\n  int part = int(height);\n  int row = int(float(part - 1) / 3.0);\n  int col = (part - 1) - (row * 3);\n  float minX = float(col) / 3.0;\n  float maxX = float(col + 1) / 3.0;\n  float minY = float(row) / 3.0;\n  float maxY = float(row + 1) / 3.0;\n  if ( v_uv0.x <= maxX && v_uv0.y <= maxY) {\n      color *= texture2D(texture, v_uv0);\n  }else if( v_uv0.x >= maxX && v_uv0.y <= minY){\n    color *= texture2D(texture, v_uv0);\n  }else {\n      discard;\n  }\n  color.a *= v_color.a;\n  gl_FragColor = color;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec3 a_position;\nin vec2 a_uv0;\nin vec4 a_color;\nout vec2 v_uv0;\nout vec4 v_color;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  vec4 pos = vec4(a_position, 1);\n}",
        "frag": "\nprecision highp float;\nin vec2 v_uv0;\nin vec4 v_color;\nuniform sampler2D texture;\nuniform Properties {\n  vec2 center;\n  vec2 size;\n  float width;\n  float height;\n};\nvoid main () {\n  vec4 color = v_color;\n  int part = int(height);\n  int row = int(float(part - 1) / 3.0);\n  int col = (part - 1) - (row * 3);\n  float minX = float(col) / 3.0;\n  float maxX = float(col + 1) / 3.0;\n  float minY = float(row) / 3.0;\n  float maxY = float(row + 1) / 3.0;\n  if ( v_uv0.x <= maxX && v_uv0.y <= maxY) {\n      color *= texture(texture, v_uv0);\n  }else if( v_uv0.x >= maxX && v_uv0.y <= minY){\n    color *= texture(texture, v_uv0);\n  }else {\n      discard;\n  }\n  color.a *= v_color.a;\n  gl_FragColor = color;\n}"
      }
    }
  ],
  "subMetas": {}
}