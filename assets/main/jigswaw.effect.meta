{
  "ver": "1.0.27",
  "uuid": "8c1ae0e4-ba73-4166-a37c-3bf59e6875fc",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying lowp vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  mat4 mvp;\n  mvp = cc_matViewProj;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nvoid main () {\n    float a = v_color.a;\n    if (a <= 0.0) {\n        a = 0.1;\n    }\n    float _x1 = v_color.r / a;\n    float _y1 = v_color.g / a;\n    float y = 0.09704641 * v_uv0.y + _y1;\n    float x = 0.11383285 * v_uv0.x + _x1;\n    float b = v_color.b / a;\n    if (b >= 0.8) {\n        x -= 0.07129886;\n    } else if (b >= 0.6) {\n        x -= 0.07129886;\n        y -= 0.03445850;\n    } else if (b >= 0.4) {\n        y -= 0.03445850;\n    } else if (b >= 0.2) {\n        y -= 0.08298171;\n    }\n    if (y < 0.0 || y > 1.0 || x < 0.0 || x > 1.0) {\n        gl_FragColor = vec4(0, 0, 0, 0);\n    } else {\n        vec4 color1 = texture2D(texture, v_uv0);\n        vec4 color2 = texture2D(texture2, vec2(x,y));\n        gl_FragColor = color2 * color1.a * v_color.a;\n    }\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec3 a_position;\nin vec4 a_color;\nout lowp vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  mat4 mvp;\n  mvp = cc_matViewProj;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nvoid main () {\n    float a = v_color.a;\n    if (a <= 0.0) {\n        a = 0.1;\n    }\n    float _x1 = v_color.r / a;\n    float _y1 = v_color.g / a;\n    float y = 0.09704641 * v_uv0.y + _y1;\n    float x = 0.11383285 * v_uv0.x + _x1;\n    float b = v_color.b / a;\n    if (b >= 0.8) {\n        x -= 0.07129886;\n    } else if (b >= 0.6) {\n        x -= 0.07129886;\n        y -= 0.03445850;\n    } else if (b >= 0.4) {\n        y -= 0.03445850;\n    } else if (b >= 0.2) {\n        y -= 0.08298171;\n    }\n    if (y < 0.0 || y > 1.0 || x < 0.0 || x > 1.0) {\n        gl_FragColor = vec4(0, 0, 0, 0);\n    } else {\n        vec4 color1 = texture2D(texture, v_uv0);\n        vec4 color2 = texture2D(texture2, vec2(x,y));\n        gl_FragColor = color2 * color1.a * v_color.a;\n    }\n}"
      }
    }
  ],
  "subMetas": {}
}