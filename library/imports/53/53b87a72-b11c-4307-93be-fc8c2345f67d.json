{
  "__type__": "cc.EffectAsset",
  "_name": "alphaMask",
  "_objFlags": 0,
  "_native": "",
  "properties": null,
  "techniques": [
    {
      "passes": [
        {
          "blendState": {
            "targets": [
              {
                "blend": true
              }
            ]
          },
          "rasterizerState": {
            "cullMode": 0
          },
          "properties": {
            "size": {
              "value": [
                1,
                1
              ],
              "editor": {
                "tooltip": "节点尺寸"
              },
              "type": 14
            },
            "center": {
              "value": [
                0.5,
                0.5
              ],
              "editor": {
                "tooltip": "中心点 (左上角为原点)"
              },
              "type": 14
            },
            "width": {
              "value": [
                1
              ],
              "editor": {
                "tooltip": "宽 (目标宽度 / 节点宽度)"
              },
              "type": 13
            },
            "height": {
              "value": [
                1
              ],
              "editor": {
                "tooltip": "九宫格下标"
              },
              "type": 13
            }
          },
          "program": "alphaMask|vs|fs"
        }
      ]
    }
  ],
  "shaders": [
    {
      "hash": 2936379288,
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec3 a_position;\nin vec2 a_uv0;\nin vec4 a_color;\nout vec2 v_uv0;\nout vec4 v_color;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  vec4 pos = vec4(a_position, 1);\n}",
        "frag": "\nprecision highp float;\nin vec2 v_uv0;\nin vec4 v_color;\nuniform sampler2D texture;\nuniform Properties {\n  vec2 center;\n  vec2 size;\n  float width;\n  float height;\n};\nvoid main () {\n  vec4 color = v_color;\n  int part = int(height);\n  int row = int(float(part - 1) / 3.0);\n  int col = (part - 1) - (row * 3);\n  float minX = float(col) / 3.0;\n  float maxX = float(col + 1) / 3.0;\n  float minY = float(row) / 3.0;\n  float maxY = float(row + 1) / 3.0;\n  if ( v_uv0.x <= maxX && v_uv0.y <= maxY) {\n      color *= texture(texture, v_uv0);\n  }else if( v_uv0.x >= maxX && v_uv0.y <= minY){\n    color *= texture(texture, v_uv0);\n  }else {\n      discard;\n  }\n  color.a *= v_color.a;\n  gl_FragColor = color;\n}"
      },
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nattribute vec4 a_color;\nvarying vec2 v_uv0;\nvarying vec4 v_color;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  vec4 pos = vec4(a_position, 1);\n}",
        "frag": "\nprecision highp float;\nvarying vec2 v_uv0;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float height;\nvoid main () {\n  vec4 color = v_color;\n  int part = int(height);\n  int row = int(float(part - 1) / 3.0);\n  int col = (part - 1) - (row * 3);\n  float minX = float(col) / 3.0;\n  float maxX = float(col + 1) / 3.0;\n  float minY = float(row) / 3.0;\n  float maxY = float(row + 1) / 3.0;\n  if ( v_uv0.x <= maxX && v_uv0.y <= maxY) {\n      color *= texture2D(texture, v_uv0);\n  }else if( v_uv0.x >= maxX && v_uv0.y <= minY){\n    color *= texture2D(texture, v_uv0);\n  }else {\n      discard;\n  }\n  color.a *= v_color.a;\n  gl_FragColor = color;\n}"
      },
      "builtins": {
        "globals": {
          "blocks": [
            {
              "name": "CCGlobal",
              "defines": []
            }
          ],
          "samplers": []
        },
        "locals": {
          "blocks": [],
          "samplers": []
        }
      },
      "defines": [],
      "blocks": [
        {
          "name": "Properties",
          "members": [
            {
              "name": "center",
              "type": 14,
              "count": 1
            },
            {
              "name": "size",
              "type": 14,
              "count": 1
            },
            {
              "name": "width",
              "type": 13,
              "count": 1
            },
            {
              "name": "height",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "binding": 0
        }
      ],
      "samplers": [
        {
          "name": "texture",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 30
        }
      ],
      "record": null,
      "name": "alphaMask|vs|fs"
    }
  ]
}