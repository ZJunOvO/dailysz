
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/scripts/0/request');
require('./assets/scripts/Creator');
require('./assets/scripts/IServerCfg');
require('./assets/scripts/NumberUtils');
require('./assets/scripts/PopupLoading');
require('./assets/scripts/Puzzle');
require('./assets/scripts/PuzzleCell');
require('./assets/scripts/PuzzleLine');
require('./assets/scripts/Solver');
require('./assets/scripts/Utility');
require('./assets/scripts/adC');
require('./assets/scripts/ali');
require('./assets/scripts/androidP');
require('./assets/scripts/bagMgr');
require('./assets/scripts/banner');
require('./assets/scripts/baseUI');
require('./assets/scripts/c');
require('./assets/scripts/cfgMgr');
require('./assets/scripts/challengeMgr');
require('./assets/scripts/chaptBtn');
require('./assets/scripts/chapterItem');
require('./assets/scripts/chgBtn');
require('./assets/scripts/com');
require('./assets/scripts/dateItem');
require('./assets/scripts/dayReward');
require('./assets/scripts/dynamicBtnBg');
require('./assets/scripts/env');
require('./assets/scripts/errorCode');
require('./assets/scripts/evts');
require('./assets/scripts/festivalMgr');
require('./assets/scripts/game');
require('./assets/scripts/global');
require('./assets/scripts/grid');
require('./assets/scripts/guide');
require('./assets/scripts/h5');
require('./assets/scripts/head');
require('./assets/scripts/heart');
require('./assets/scripts/hedge');
require('./assets/scripts/ice');
require('./assets/scripts/idx');
require('./assets/scripts/iosP');
require('./assets/scripts/item');
require('./assets/scripts/item1');
require('./assets/scripts/jigMenu');
require('./assets/scripts/jigsaw');
require('./assets/scripts/jigsawMgr');
require('./assets/scripts/lang');
require('./assets/scripts/levelItem');
require('./assets/scripts/levelMgr');
require('./assets/scripts/loading');
require('./assets/scripts/loadingAni');
require('./assets/scripts/mailItem');
require('./assets/scripts/mailMgr');
require('./assets/scripts/main');
require('./assets/scripts/mySafeArea');
require('./assets/scripts/nameFrame');
require('./assets/scripts/nativeP');
require('./assets/scripts/newJigMgr');
require('./assets/scripts/pConst');
require('./assets/scripts/pInfo');
require('./assets/scripts/packItem');
require('./assets/scripts/packItem1');
require('./assets/scripts/page_challenge');
require('./assets/scripts/page_jigsaw');
require('./assets/scripts/page_level');
require('./assets/scripts/page_race');
require('./assets/scripts/page_shop');
require('./assets/scripts/panelMgr');
require('./assets/scripts/pf');
require('./assets/scripts/plugins/fly');
require('./assets/scripts/plugins/flyio');
require('./assets/scripts/qq');
require('./assets/scripts/questItem');
require('./assets/scripts/raceRankItem');
require('./assets/scripts/random_notice');
require('./assets/scripts/rankItem');
require('./assets/scripts/rankMgr');
require('./assets/scripts/res');
require('./assets/scripts/rewardMgr');
require('./assets/scripts/scrollView');
require('./assets/scripts/shopItem');
require('./assets/scripts/shopItem1');
require('./assets/scripts/shopMgr');
require('./assets/scripts/skinBg');
require('./assets/scripts/skinContent');
require('./assets/scripts/skinHeadFrame');
require('./assets/scripts/skinItemBase');
require('./assets/scripts/skinMgr');
require('./assets/scripts/skinNameFrame');
require('./assets/scripts/skinRole');
require('./assets/scripts/slider');
require('./assets/scripts/sound');
require('./assets/scripts/swBtn');
require('./assets/scripts/tE');
require('./assets/scripts/taskMgr');
require('./assets/scripts/tb');
require('./assets/scripts/time');
require('./assets/scripts/tipMgr');
require('./assets/scripts/toast');
require('./assets/scripts/top');
require('./assets/scripts/tt');
require('./assets/scripts/uData');
require('./assets/scripts/ui_backReward');
require('./assets/scripts/ui_challengeInfo');
require('./assets/scripts/ui_chapter');
require('./assets/scripts/ui_chapterDone');
require('./assets/scripts/ui_contentUs');
require('./assets/scripts/ui_deskReward');
require('./assets/scripts/ui_festival');
require('./assets/scripts/ui_flyAni');
require('./assets/scripts/ui_gamesetlattice');
require('./assets/scripts/ui_getHeart');
require('./assets/scripts/ui_getItem');
require('./assets/scripts/ui_getRes');
require('./assets/scripts/ui_getReward');
require('./assets/scripts/ui_info');
require('./assets/scripts/ui_jigFinish');
require('./assets/scripts/ui_jigTip');
require('./assets/scripts/ui_jigsaw');
require('./assets/scripts/ui_luckyGift');
require('./assets/scripts/ui_lvInfo');
require('./assets/scripts/ui_mail');
require('./assets/scripts/ui_mailInfo');
require('./assets/scripts/ui_newGift');
require('./assets/scripts/ui_preReward');
require('./assets/scripts/ui_privacy');
require('./assets/scripts/ui_quest');
require('./assets/scripts/ui_raceTip');
require('./assets/scripts/ui_rank');
require('./assets/scripts/ui_rePlay');
require('./assets/scripts/ui_rePlayRace');
require('./assets/scripts/ui_record');
require('./assets/scripts/ui_reiGift');
require('./assets/scripts/ui_save');
require('./assets/scripts/ui_saveConfirm');
require('./assets/scripts/ui_saveRestore');
require('./assets/scripts/ui_selectMode');
require('./assets/scripts/ui_set');
require('./assets/scripts/ui_sevenDay');
require('./assets/scripts/ui_shopPack');
require('./assets/scripts/ui_sidebar');
require('./assets/scripts/ui_skin');
require('./assets/scripts/ui_skinInfo');
require('./assets/scripts/ui_tip');
require('./assets/scripts/ui_userInfo');
require('./assets/scripts/uvAni');
require('./assets/scripts/vb');
require('./assets/scripts/veBtn');
require('./assets/scripts/vivo');
require('./assets/scripts/worm');
require('./assets/scripts/wormSp');
require('./assets/scripts/wx');
require('./assets/temp');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_getRes.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5dcedloo3JKQKfpXRHkTJiZ', 'ui_getRes');
// scripts/ui_getRes.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _res = require("res");

var _uData = require("uData");

var _cfgMgr = require("cfgMgr");

var _lang = require("lang");

var _item = require("item");

var _bagMgr = require("bagMgr");

var _panelMgr = require("panelMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var v = cc._decorator;
var _ = v.ccclass;
var b = v.property;

var w = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.typeSps = [];
    e.iconSps = [];
    e.titleLb = null;
    e.iconSpr = null;
    e.proNodes = [];
    e.tarNodes = [];
    e.getLbs = [];
    e.tarNums = [];
    e.adNode = null;
    e.giftNode = null;
    e.packNode = null;
    e.doubleNode = null;
    e.packItems = [];
    e.priceLb = null;
    e.eventFunc = null;
    e.shopData = null;
    e.isDouble = !1;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    var e = this;
    var o = t.itemId;
    var n = t.cb;
    var i = t.gType;
    var r = t.useTo;
    this.tarNodes[0].active = !1;
    this.tarNodes[1].active = !1;
    this.tarNodes[2].active = !1;
    this.itemId = o;
    this.closeCb = n;
    var a = r || "";
    var s = _cfgMgr["default"].serverCfg;
    var d = this.data = {};

    switch (o) {
      case "times":
        this.titleLb.string = "体力不足", this.iconSpr.spriteFrame = this.iconSps[1];

        var h = _pInfo["default"].ins.getPowerAdTimes(),
            f = _uData["default"].ins.getIsNewUser() ? s.times.forUser.new_user.rules.level : s.times.forUser.all.rules.level,
            g = f[h];

        d.normalGet = d.adGet = g.rules.val, this.proNodes[1].active = !1, this.getLbs[0].string = "+" + f[0].rules.val, this.getLbs[2].string = "+" + f[1].rules.val, this.tarNums[0].string = h + "/1", this.tarNums[2].string = h + "/2", 1 === h && (this.tarNodes[0].active = !0), this.adNode.adDotData = "主线-体力";
        break;

      case "coin":
        this.titleLb.string = "元宝不足", this.iconSpr.spriteFrame = this.iconSps[0];

        var m = _pInfo["default"].ins.getCoinAdTimes(),
            v = s.ad_coin_rules.rules.level,
            _ = v[m];

        d.normalGet = d.adGet = _.rules.val;

        for (var b = 0; b < 3; b++) {
          this.proNodes[b].active = !0, this.getLbs[b].string = "+" + v[b].rules.val, m > b ? (this.tarNums[b].string = b + 1 + "/" + (b + 1), this.tarNodes[b].active = !0) : this.tarNums[b].string = m + "/" + (b + 1);
        }

        var w = "主线";
        _lang.gemeTypeKey[i] && (w = _lang.gemeTypeKey[i]), this.adNode.adDotData = w + "-元宝-" + a;
    }

    _res["default"].ins.getBundleByString("resSps").then(function (t) {
      t.load("item/" + o, cc.SpriteFrame, function (t, o) {
        !t && e.node && e.node.isValid && e.typeSps.forEach(function (t) {
          t.spriteFrame = o;
        });
      }), t.load("spine/light/action", sp.SkeletonData, function (t, o) {
        if (!t && e.node && e.node.isValid) {
          var n = new cc.Node();
          var i = n.addComponent(sp.Skeleton);
          i.skeletonData = o, i.animation = "animation", n.parent = e.iconSpr.node;
        }
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });

    this.initPack();
  };

  e.prototype.hideThis = function () {
    var t;
    null === (t = this.closeCb) || void 0 === t || t.call(this);
    this.hide();
  };

  e.prototype.initPack = function () {
    var t;
    var e;
    var o = _cfgMgr["default"].serverCfg;
    var n = ("times" === this.itemId ? null === (t = null == o ? void 0 : o.buy_stamina) || void 0 === t ? void 0 : t.stamina : null === (e = null == o ? void 0 : o.buy_gold_coins) || void 0 === e ? void 0 : e.gold_coins)["times" === this.itemId ? "times2" : "coin7"];

    if (n) {
      this.packNode.active = !0;
      this.shopData = n;
      var i = n.key;

      var r = _pInfo["default"].ins.getShopUnreset();

      var a = n["double"] || 0;
      var s = r[i] || 0;
      var c = this.isDouble = this.doubleNode.active = s < a;
      this.packItems.forEach(function (t) {
        t.node.active = !0;
      });
      var l = n.props;

      for (var p in l) {
        var d = Number(l[p]);
        c ? (this.packItems[0].initByData(p, 2 * d), this.packItems[1].initByData(p, d), this.packItems[2].initByData(p, d)) : (this.packItems[0].initByData(p, d), this.packItems[1].initByData(p, d), this.packItems[2].node.active = !1);
      }

      this.priceLb.string = "¥" + n.price;
    } else this.packNode.active = !1;
  };

  e.prototype.onAdGet = function () {
    this.getItem(!0);
  };

  e.prototype.getItem = function (t) {
    this.tarNodes[0].active = !1;
    this.tarNodes[1].active = !1;
    this.tarNodes[2].active = !1;
    var e = this.data;
    var o = t ? e.normalGet : e.adGet;
    var n = _pInfo["default"].ins;
    var i = _cfgMgr["default"].serverCfg;

    switch (this.itemId) {
      case "times":
        n.addPower(o, !1), n.addPowerAdTimes(), this.proNodes[1].active = !1;
        var r = _uData["default"].ins.getIsNewUser() ? i.times.forUser.new_user.rules.level : i.times.forUser.all.rules.level,
            c = n.getPowerAdTimes(),
            p = r[c];
        e.normalGet = e.adGet = p.rules.val, 1 === c ? (this.tarNodes[0].active = !0, this.tarNums[0].string = c + "/1", this.tarNums[2].string = c + "/2") : 0 === c && (this.tarNodes[0].active = !0, this.tarNodes[2].active = !0, this.tarNums[0].string = "1/1", this.tarNums[2].string = "2/2"), !_pInfo["default"].ins.isMaxAdCount() && _idx.platform.reportEvent(_idx.ERepEvt.buyTimes);
        break;

      case "coin":
        n.addCoin(o, !1), n.addCoinAdTimes();

        var d = _pInfo["default"].ins.getCoinAdTimes(),
            h = i.ad_coin_rules.rules.level[d];

        e.normalGet = e.adGet = h.rules.val;

        for (var g = 0; g < 3; g++) {
          this.proNodes[g].active = !0, d > g ? (this.tarNums[g].string = g + 1 + "/" + (g + 1), this.tarNodes[g].active = !0) : this.tarNums[g].string = d + "/" + (g + 1);
        }

        !_pInfo["default"].ins.isMaxAdCount() && _idx.platform.reportEvent(_idx.ERepEvt.buyCoins);
    }

    var m = this.iconSpr.node;
    var v = m.parent.convertToWorldSpaceAR(m.position);

    _panelMgr["default"].ins.open("ui/ui_flyAni", {
      itemDatas: [{
        itemId: this.itemId,
        worldPos: v,
        value: o
      }],
      hideCb: function hideCb() {
        _evts["default"].opE.emit({
          action: _evts["default"].POWER_CHG
        });

        _evts["default"].opE.emit({
          action: _evts["default"].COIN_CHG
        });
      }
    });
  };

  e.prototype.onDestroy = function () {
    cc.assetManager.releaseAsset(this.iconSpr.spriteFrame);
  };

  e.prototype.onBtnBuy = function () {
    var t = this;

    if (this.shopData) {
      var e = this.isDouble ? 1 : 0;
      var o = this.shopData.props;
      var n = JSON.stringify(this.shopData.props);

      _idx.platform.reportEvent(_idx.ERepEvt.susPayment, {
        key: this.shopData.key
      });

      _idx.platform.payment(this.shopData.key, this.shopData.price, e, n).then(function () {
        var e = [];

        for (var n in o) {
          var i = o[n];
          t.isDouble && (i *= 2);

          _bagMgr["default"].ins.addItem(n, i);

          var r = {};
          r.itemId = n;
          r.worldPos = t.packItems[0].node.parent.convertToWorldSpaceAR(t.packItems[0].node.position);
          r.value = i;
          e.push(r);
        }

        _panelMgr["default"].ins.open("ui/ui_flyAni", {
          itemDatas: e
        });

        _pInfo["default"].ins.addShopUnreset(t.shopData.key);

        t.initPack();

        _idx.platform.reportEvent(_idx.ERepEvt.paymentResult, {
          key: t.shopData.key,
          success: 1
        });
      })["catch"](function (e) {
        _tipMgr["default"].ins.showTip(e, !0);

        _idx.platform.reportEvent(_idx.ERepEvt.paymentResult, {
          key: t.shopData.key,
          success: 0
        });
      });
    }
  };

  e.prototype.onBtnShop = function () {
    this.hideThis();

    _evts["default"].opE.emit({
      action: _evts["default"].MAINJUMP,
      data: 0
    });

    _panelMgr["default"].ins.open("ui/ui_shopPack", null).then(function () {
      _evts["default"].opE.emit({
        action: _evts["default"].UPD_MAIN_RED
      });
    });
  };

  __decorate([b([cc.Sprite])], e.prototype, "typeSps", void 0);

  __decorate([b([cc.SpriteFrame])], e.prototype, "iconSps", void 0);

  __decorate([b(cc.Label)], e.prototype, "titleLb", void 0);

  __decorate([b(cc.Sprite)], e.prototype, "iconSpr", void 0);

  __decorate([b([cc.Node])], e.prototype, "proNodes", void 0);

  __decorate([b([cc.Node])], e.prototype, "tarNodes", void 0);

  __decorate([b([cc.Label])], e.prototype, "getLbs", void 0);

  __decorate([b([cc.Label])], e.prototype, "tarNums", void 0);

  __decorate([b(cc.Node)], e.prototype, "adNode", void 0);

  __decorate([b(cc.Node)], e.prototype, "giftNode", void 0);

  __decorate([b(cc.Node)], e.prototype, "packNode", void 0);

  __decorate([b(cc.Node)], e.prototype, "doubleNode", void 0);

  __decorate([b([_item["default"]])], e.prototype, "packItems", void 0);

  __decorate([b(cc.Label)], e.prototype, "priceLb", void 0);

  return __decorate([_], e);
}(_baseUI["default"]);

exports["default"] = w;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/0/request.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c853fD3v1xDPam4tdNFLok2', 'request');
// scripts/0/request.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _cfgMgr = require("cfgMgr");

var _idx = require("idx");

var _uData = require("uData");

var _pConst = require("pConst");

var _time = require("time");

var _evts = require("evts");

var _flyio = require("flyio");

var _errorCode = require("errorCode");

var h = window.fly || _flyio["default"];

var f = function () {
  function t() {
    this._urlCache = {};
    this.APPID = _idx.platform.appId;
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      this._ins || (this._ins = new t());
      return this._ins;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.getUserToken = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this._userToken ? [3, 2] : [4, this.desynclogin()];

          case 1:
            t.sent(), t.label = 2;

          case 2:
            return [2, this._userToken];
        }
      });
    });
  };

  Object.defineProperty(t.prototype, "userToken", {
    set: function set(t) {
      this._userToken = t;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype._post = function (t, e, o, n, i, r) {
    return;
    void 0 === n && (n = !1);
    void 0 === i && (i = 5e3);
    void 0 === r && (r = "https://adapi.tjkj300.com");
    var s = {
      Authorization: e
    };
    n && (s["X-Fc-Invocation-Type"] = "Async", s["X-Fc-Stateful-Async-Invocation-Id"] = Date.now().toString());
    return new Promise(function (e, l) {
      var u = {
        headers: s,
        timeout: i
      };
      (_pConst.PFCode.Alipay === _idx.platform.string() || _idx.platform.isNative) && (u.responseType = "json");
      h.post(r + t, o, u).then(function (t) {
        var o = "string" != typeof t.data || n ? t.data : JSON.parse(t.data);
        e(o);
      })["catch"](function (t) {
        console.warn("[reason]", JSON.stringify(t));
        l(_errorCode.errorCode.HTTP_ERR);
      });
    });
  };

  t.prototype.desynclogin = function () {
    return __awaiter(this, void 0, void 0, function () {
      var e;
      var o;
      var n;
      var r;
      var s;
      var c;
      return __generator(this, function (i) {
        switch (i.label) {
          case 0:
            return [4, _idx.platform.login()];

          case 1:
            return e = i.sent(), o = e.code, n = e.anonymous_code, o ? [4, t.ins.login(o, n)] : [2];

          case 2:
            if (0 == (r = i.sent()).state) throw new Error("登录状态吗错误：" + r.state);
            return s = t.ins, c = r.data, _time["default"].ins.sync(r.server_time), s.userToken = c.token, s.openId = c.openid, [2];
        }
      });
    });
  };

  t.prototype.getJson = function () {
    var t = {};
    t.appid = this.APPID;
    return this._post("/v1/GameConfigApi/get_game_init_config", "N644UF9VMU9OFTTYHOV3DEGY7L2DMMVP", t, !1);
  };

  t.prototype.login = function (t, e, o, n) {
    var i = {};
    i.appid = this.APPID;
    i.system_info = _idx.platform.getSystemData();
    i.code = t;
    i.openid = o;
    i.unionid = n;
    _pConst.PFCode.Alipay === _idx.platform.string() && (i.grant_type = "authorization_code");
    i.anonymous_code = e;
    i.launch_options = _uData["default"].ins.getLaunchOption();
    return this._post("/v1/GameConfigApi/game_user_login", "N644UF9VMU9OFTTYHOV3DEGY7L2DMMVP", i, void 0, 2e3);
  };

  t.prototype.getTime = function () {
    return this._post("/v1/GameConfigApi/game_user_login", "123456", {}, void 0, 2e3);
  };

  t.prototype.updateUserInfo = function (t) {
    var e = this;
    this.getUserToken().then(function (o) {
      if (o && t) {
        var n = _uData["default"].ins;
        n.setHeadImg(t.avatar || t.avatarUrl);
        n.setName(t.nickName || t.nickname);

        e._post("/v1/GameApi/update_game_user", o, {
          user_info: t
        });

        _evts["default"].opE.emit({
          action: _evts["default"].UPD_TOP_HEADINFO
        });
      }
    })["catch"](function (t) {
      console.error("updateUserInfoErr", t);
    });
  };

  t.prototype.addHomepageConsult = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      var e;
      var o;
      return __generator(this, function (n) {
        switch (n.label) {
          case 0:
            return t = "/v1/GameApi/get_addHome", (e = {}).alipay_user_id = this.openId, [4, this.getUserToken()];

          case 1:
            return o = n.sent(), [2, this._post(t, o, e, !1)];
        }
      });
    });
  };

  t.prototype.uploadRank = function (t, e) {
    var o = this;
    this.getUserToken().then(function (n) {
      if (n) {
        var i = {};
        i.client_data = [t];
        i.type = e;

        o._post("/v1/GameApi/upload_gamer_score", n, i, !0);
      }
    })["catch"](function (t) {
      console.error("uploadRankErr", t);
    });
  };

  t.prototype.getRank = function (t, e, o, n, i, r) {
    var a = this;
    return Promise.resolve(function (res) {
      cc.resources.load('rank', function (err, json) {
        res(json.json);
      });
    }); // return this.getUserToken()
    //     .then(function(s) {
    //         if (!s) return Promise.reject("no auth");
    //         var c = {};
    //         c.rank_tag = t;
    //         c.sort_type = o;
    //         c.sec_sort_type = r;
    //         c.type = e;
    //         c.limit = i || 100;
    //         c.date = n;
    //         return a._post("/v1/GameApi/get_rank_list", s, c);
    //     })
    //     .catch(function(t) {
    //         console.error("getRankErr", t);
    //     });
  };

  t.prototype.adDot = function (t, e, o, n) {
    var i = this;
    void 0 === o && (o = 1);
    void 0 === n && (n = 1);
    this.getUserToken().then(function (a) {
      if (a) {
        var s = _cfgMgr["default"].serverCfg.upload_ad_result;

        if (s && 1 == s.val) {
          var c = {};
          c.type = o;
          c.path = t;
          c.ad_nums = n;
          c.status = e;

          i._post("/v1/GameApi/upload_gamer_ad_recode", a, c, !0);
        }
      }
    })["catch"](function (t) {
      console.error("adDotErr", t);
    });
  };

  t.prototype.userFeedBack = function (t) {
    var e = this;
    return this.getUserToken().then(function (o) {
      if (o) {
        var n = {};
        n.content = t;
        return e._post("/v1/GameApi/add_reply", o, n);
      }
    })["catch"](function (t) {
      console.error("userFeedBackErr", t);
    });
  };

  t.prototype.updateServerData = function (t, e, o, n) {
    var i = this;
    return this.getUserToken().then(function (r) {
      if (r) {
        var a = {};
        a.user_data = t;
        a.save_tag = e;
        a.title = o;
        a.extra_data = n;
        var s = "backData" != e;
        return i._post("/v1/GameApi/backup_user_data", r, a, s, 5500);
      }
    })["catch"](function (t) {
      console.error("updateServerDataErr", t);
    });
  };

  t.prototype.getServerData = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      var e;
      var o;
      var n;
      return __generator(this, function (i) {
        switch (i.label) {
          case 0:
            return e = "/v1/GameApi/get_user_backup", [4, this.getUserToken()];

          case 1:
            return (o = i.sent()) ? ((n = {}).save_tag = t, [2, this._post(e, o, n)]) : [2];
        }
      });
    });
  };

  t.prototype.getMailData = function (t, e) {
    var o = this;
    return this.getUserToken().then(function (n) {
      if (n) {
        var i = {};
        i.type = t;
        i.exp_ids = e;
        return o._post("/v1/GameApi/get_mail", n, i);
      }
    })["catch"](function (t) {
      console.error("getMailDataErr", t);
    });
  };

  t.prototype.updateChallengeData = function (t) {
    var e = this;
    this.getUserToken().then(function (o) {
      if (o && t) {
        var n = {};
        n.level = t;

        e._post("/v1/GameApi/passLevel", o, n);
      }
    })["catch"](function (t) {
      console.error("updateUserInfoErr", t);
    });
  };

  t.prototype.getChallengeData = function (t) {
    var e = this;
    return this.getUserToken().then(function (o) {
      if (o && t) {
        var n = {};
        n.level = t;
        return e._post("/v1/GameApi/getCompletionInfo", o, n);
      }
    })["catch"](function (t) {
      console.error("updateUserInfoErr", t);
    });
  };

  t.prototype.getUserDataByUid = function (t) {
    var e = this;
    return this.getUserToken().then(function (o) {
      if (o && t) {
        var n = {};
        n.game_uid = t;
        return e._post("/v1/GameApi/getUserData", o, n);
      }
    })["catch"](function (t) {
      console.error("getUserDataByUid", t);
    });
  };

  t.prototype.sendSevenCard = function (t, e) {
    var o = this;
    this.getUserToken().then(function (n) {
      if (n && e) {
        var i = {};
        i.aid = t;
        i.open_id = o.openId;
        i.reward_index = e;
        return o._post("/v1/GameApi/saveUserAlienCard", n, i);
      }
    })["catch"](function (t) {
      console.error("sendSevenCard", t);
    });
  };

  t.prototype.paymentResult = function (t) {
    var e = this;
    return this.getUserToken().then(function (o) {
      if (o) {
        var n = t;
        return e._post("/v1/GameApi/get_delivery_status", o, n);
      }
    })["catch"](function (t) {
      console.error("get_delivery_status", t);
    });
  };

  t.prototype.getPayGamecoins = function () {
    var t = this;
    return this.getUserToken().then(function (e) {
      if (e) {
        var o = {};
        o.open_id = t.openId;
        console.log("获取游戏币参数", o);
        return t._post("/v1/GameApi/get_balance", e, o);
      }
    });
  };

  t.prototype.getUnshippedOrders = function () {
    var t = this;
    return this.getUserToken().then(function (e) {
      if (e) {
        var o = {};
        o.open_id = t.openId;
        return t._post("/v1/GameApi/get_unshipped_orders", e, o);
      }
    })["catch"](function (t) {
      console.error("get_unshipped_orders", t);
    });
  };

  return t;
}();

exports["default"] = f;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/temp.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c3183USi7VC9LK6sjitvsGm', 'temp');
// temp.ts

//容错处理,勿删

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcdGVtcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxTQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy/lrrnplJnlpITnkIYs5Yu/5YigIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/PopupLoading.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4e230uEA9dEv6CDagtCkl4n', 'PopupLoading');
// scripts/PopupLoading.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.loadingIcon = null;
    e.loadingTxt = null;
    e.speed = 0.5;
    e.bgNode = null;
    e.charPoint = [".", "..", "..."];
    e.charIndex = 0;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.bgNode.height = this.node.height = cc.winSize.height;
  };

  e.prototype.onEnable = function () {
    this.start();
  };

  e.prototype.onDisable = function () {
    cc.Tween.stopAllByTarget(this.loadingIcon);
    this.unschedule(this.txtAppend);
  };

  e.prototype.onShow = function () {
    this.loadingIcon.angle = 0;
    var t = cc.tween().by(0.6, {
      angle: -90
    }).by(0.6, {
      angle: -180
    }).by(0.6, {
      angle: -90
    });
    cc.tween(this.loadingIcon).repeatForever(t).start();
  };

  e.prototype.onHide = function () {};

  e.prototype.start = function () {
    this.charIndex = 0;
    this.onShow();
    this.unschedule(this.txtAppend);
    this.schedule(this.txtAppend, this.speed, cc.macro.REPEAT_FOREVER);
  };

  e.prototype.txtAppend = function () {
    this.loadingTxt.string = "loading" + this.charPoint[this.charIndex];
    this.charIndex++;
    this.charIndex > this.charPoint.length - 1 && (this.charIndex = 0);
  };

  e.prototype.update = function () {};

  __decorate([c(cc.Node)], e.prototype, "loadingIcon", void 0);

  __decorate([c(cc.Label)], e.prototype, "loadingTxt", void 0);

  __decorate([c(cc.Integer)], e.prototype, "speed", void 0);

  __decorate([c(cc.Node)], e.prototype, "bgNode", void 0);

  return __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcUG9wdXBMb2FkaW5nLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImEiLCJjYyIsIl9kZWNvcmF0b3IiLCJzIiwiY2NjbGFzcyIsImMiLCJwcm9wZXJ0eSIsImwiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwibG9hZGluZ0ljb24iLCJsb2FkaW5nVHh0Iiwic3BlZWQiLCJiZ05vZGUiLCJjaGFyUG9pbnQiLCJjaGFySW5kZXgiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJvbkxvYWQiLCJoZWlnaHQiLCJub2RlIiwid2luU2l6ZSIsIm9uRW5hYmxlIiwic3RhcnQiLCJvbkRpc2FibGUiLCJUd2VlbiIsInN0b3BBbGxCeVRhcmdldCIsInVuc2NoZWR1bGUiLCJ0eHRBcHBlbmQiLCJvblNob3ciLCJhbmdsZSIsInR3ZWVuIiwiYnkiLCJyZXBlYXRGb3JldmVyIiwib25IaWRlIiwic2NoZWR1bGUiLCJtYWNybyIsIlJFUEVBVF9GT1JFVkVSIiwic3RyaW5nIiwibGVuZ3RoIiwidXBkYXRlIiwiX19kZWNvcmF0ZSIsIk5vZGUiLCJMYWJlbCIsIkludGVnZXIiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQSxJQUFJQyxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHTCxDQUFDLENBQUNNLFFBQVY7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFJLFVBQVVDLENBQVYsRUFBYTtFQUNsQixTQUFTQyxDQUFULEdBQWE7SUFDVCxJQUFJQSxDQUFDLEdB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QTRCLGFBQTVCLEVBQTJDLEtBQUssQ0FBaEQsQ0FBVjs7RUFDQXdCLFVBQVUsQ0FBQyxDQUFDdEMsQ0FBQyxDQUFDSixFQUFFLENBQUM0QyxLQUFKLENBQUYsQ0FBRCxFQUFnQnBDLENBQUMsQ0FBQ1UsU0FBbEIsRUFBNkIsWUFBN0IsRUFBMkMsS0FBSyxDQUFoRCxDQUFWOztFQUNBd0IsVUFBVSxDQUFDLENBQUN0QyxDQUFDLENBQUNKLEVBQUUsQ0FBQzZDLE9BQUosQ0FBRixDQUFELEVBQWtCckMsQ0FBQyxDQUFDVSxTQUFwQixFQUErQixPQUEvQixFQUF3QyxLQUFLLENBQTdDLENBQVY7O0VBQ0F3QixVQUFVLENBQUMsQ0FBQ3RDLENBQUMsQ0FBQ0osRUFBRSxDQUFDMkMsSUFBSixDQUFGLENBQUQsRUFBZW5DLENBQUMsQ0FBQ1UsU0FBakIsRUFBNEIsUUFBNUIsRUFBc0MsS0FBSyxDQUEzQyxDQUFWOztFQUNBLE9BQU93QixVQUFVLENBQUMsQ0FBQ3hDLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0E3Q08sQ0E2Q0xSLEVBQUUsQ0FBQzhDLFNBN0NFLENBQVI7O0FBOENBakQsT0FBTyxXQUFQLEdBQWtCUyxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBhID0gY2MuX2RlY29yYXRvcjtcbnZhciBzID0gYS5jY2NsYXNzO1xudmFyIGMgPSBhLnByb3BlcnR5O1xudmFyIGwgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5sb2FkaW5nSWNvbiA9IG51bGw7XG4gICAgICAgIGUubG9hZGluZ1R4dCA9IG51bGw7XG4gICAgICAgIGUuc3BlZWQgPSAwLjU7XG4gICAgICAgIGUuYmdOb2RlID0gbnVsbDtcbiAgICAgICAgZS5jaGFyUG9pbnQgPSBbXCIuXCIsIFwiLi5cIiwgXCIuLi5cIl07XG4gICAgICAgIGUuY2hhckluZGV4ID0gMDtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgfVxuICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICBlLnByb3RvdHlwZS5vbkxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuYmdOb2RlLmhlaWdodCA9IHRoaXMubm9kZS5oZWlnaHQgPSBjYy53aW5TaXplLmhlaWdodDtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLm9uRW5hYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnN0YXJ0KCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vbkRpc2FibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNjLlR3ZWVuLnN0b3BBbGxCeVRhcmdldCh0aGlzLmxvYWRpbmdJY29uKTtcbiAgICAgICAgdGhpcy51bnNjaGVkdWxlKHRoaXMudHh0QXBwZW5kKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLm9uU2hvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5sb2FkaW5nSWNvbi5hbmdsZSA9IDA7XG4gICAgICAgIHZhciB0ID0gY2MudHdlZW4oKS5ieSgwLjYsIHthbmdsZTogLTkwfSkuYnkoMC42LCB7YW5nbGU6IC0xODB9KS5ieSgwLjYsIHthbmdsZTogLTkwfSk7XG4gICAgICAgIGNjLnR3ZWVuKHRoaXMubG9hZGluZ0ljb24pLnJlcGVhdEZvcmV2ZXIodCkuc3RhcnQoKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLm9uSGlkZSA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIGUucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmNoYXJJbmRleCA9IDA7XG4gICAgICAgIHRoaXMub25TaG93KCk7XG4gICAgICAgIHRoaXMudW5zY2hlZHVsZSh0aGlzLnR4dEFwcGVuZCk7XG4gICAgICAgIHRoaXMuc2NoZWR1bGUodGhpcy50eHRBcHBlbmQsIHRoaXMuc3BlZWQsIGNjLm1hY3JvLlJFUEVBVF9GT1JFVkVSKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnR4dEFwcGVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5sb2FkaW5nVHh0LnN0cmluZyA9IFwibG9hZGluZ1wiICsgdGhpcy5jaGFyUG9pbnRbdGhpcy5jaGFySW5kZXhdO1xuICAgICAgICB0aGlzLmNoYXJJbmRleCsrO1xuICAgICAgICB0aGlzLmNoYXJJbmRleCA+IHRoaXMuY2hhclBvaW50Lmxlbmd0aCAtIDEgJiYgKHRoaXMuY2hhckluZGV4ID0gMCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICBfX2RlY29yYXRlKFtjKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwibG9hZGluZ0ljb25cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtjKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcImxvYWRpbmdUeHRcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtjKGNjLkludGVnZXIpXSwgZS5wcm90b3R5cGUsIFwic3BlZWRcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtjKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiYmdOb2RlXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW3NdLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSBsO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/NumberUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '26435KE1/pIvr8//0gRYvdJ', 'NumberUtils');
// scripts/NumberUtils.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var n = function () {
  function t() {}

  t.parseNum = function (t, e) {
    void 0 === e && (e = 0);
    "string" == typeof t ? t = parseInt(t) : isNaN(t) && (t = 0);
    return 0 === t ? e : t;
  };

  t.FormatCurrency = function (t) {
    "string" == typeof t && (t = parseInt(t));
    return t >= this.TENBILLION ? parseInt(t / this.TENBILLION + "") + "B" : t >= this.MILLION ? parseInt(t / this.MILLION + "") + "M" : t >= this.KILO ? parseInt(t / this.KILO + "") + "K" : t.toString();
  };

  t.RandomInt = function (t, e) {
    return Math.ceil(Math.random() * (e - t + 1) + t - 1);
  };

  t.stringToNumArr = function (t) {
    var e = [];
    if (!t) return e;

    for (var o = t.split(";"), n = 0, i = o.length; n < i; n++) {
      e.push(this.parseNum(o[n]));
    }

    return e;
  };

  t.clamp = function (t, e, o) {
    e > o && (e = [o, o = e][0]);
    t > o && (t = o);
    (t < e || Number.isNaN(t)) && (t = e);
    return t;
  };

  t.KILO = 1e3;
  t.MILLION = 1e6;
  t.TENBILLION = 1e9;
  t.BILLION = 1e8;
  t.TENKILO = 1e4;
  return t;
}();

exports["default"] = n;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcTnVtYmVyVXRpbHMuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJuIiwidCIsInBhcnNlTnVtIiwiZSIsInBhcnNlSW50IiwiaXNOYU4iLCJGb3JtYXRDdXJyZW5jeSIsIlRFTkJJTExJT04iLCJNSUxMSU9OIiwiS0lMTyIsInRvU3RyaW5nIiwiUmFuZG9tSW50IiwiTWF0aCIsImNlaWwiLCJyYW5kb20iLCJzdHJpbmdUb051bUFyciIsIm8iLCJzcGxpdCIsImkiLCJsZW5ndGgiLCJwdXNoIiwiY2xhbXAiLCJOdW1iZXIiLCJCSUxMSU9OIiwiVEVOS0lMTyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLENBQUMsR0FBSSxZQUFZO0VBQ2pCLFNBQVNDLENBQVQsR0FBYSxDQUFFOztFQUNmQSxDQUFDLENBQUNDLFFBQUYsR0FBYSxVQUFVRCxDQUFWLEVBQWFFLENBQWIsRUFBZ0I7SUFDekIsS0FBSyxDQUFMLEtBQVdBLENBQVgsS0FBaUJBLENBQUMsR0FBRyxDQUFyQjtJQUNBLFlBQVksT0FBT0YsQ0FBbkIsR0FBd0JBLENBQUMsR0FBR0csUUFBUSxDQUFDSCxDQUFELENBQXBDLEdBQTJDSSxLQUFLLENBQUNKLENBQUQsQ0FBTCxLQUFhQSxDQUFDLEdBQUcsQ0FBakIsQ0FBM0M7SUFDQSxPQUFPLE1BQU1BLENBQU4sR0FBVUUsQ0FBVixHQUFjRixDQUFyQjtFQUNILENBSkQ7O0VBS0FBLENBQUMsQ0FBQ0ssY0FBRixHQUFtQixVQUFVTCxDQUFWLEVBQWE7SUFDNUIsWUFBWSxPQUFPQSxDQUFuQixLQUF5QkEsQ0FBQyxHQUFHRyxRQUFRLENBQUNILENBQUQsQ0FBckM7SUFDQSxPQUFPQSxDQUFDLElBQUksS0FBS00sVUFBVixHQUNESCxRQUFRLENBQUNILENBQUMsR0FBRyxLQUFLTSxVQUFULEdBQXNCLEVBQXZCLENBQVIsR0FBcUMsR0FEcEMsR0FFRE4sQ0FBQyxJQUFJLEtBQUtPLE9BQVYsR0FDQUosUUFBUSxDQUFDSCxDQUFDLEdBQUcsS0FBS08sT0FBVCxHQUFtQixFQUFwQixDQUFSLEdBQWtDLEdBRGxDLEdBRUFQLENBQUMsSUFBSSxLQUFLUSxJQUFWLEdBQ0FMLFFBQVEsQ0FBQ0gsQ0FBQyxHQUFHLEtBQUtRLElBQVQsR0FBZ0IsRUFBakIsQ0FBUixHQUErQixHQUQvQixHQUVBUixDQUFDLENBQUNTLFFBQUYsRUFOTjtFQU9ILENBVEQ7O0VBVUFULENBQUMsQ0FBQ1UsU0FBRixHQUFjLFVBQVVWLENBQVYsRUFBYUUsQ0FBYixFQUFnQjtJQUMxQixPQUFPUyxJQUFJLENBQUNDLElBQUwsQ0FBVUQsSUFBSSxDQUFDRSxNQUFMLE1BQWlCWCxDQUFDLEdBQUdGLENBQUosR0FBUSxDQUF6QixJQUE4QkEsQ0FBOUIsR0FBa0MsQ0FBNUMsQ0FBUDtFQUNILENBRkQ7O0VBR0FBLENBQUMsQ0FBQ2MsY0FBRixHQUFtQixVQUFVZCxDQUFWLEVBQWE7SUFDNUIsSUFBSUUsQ0FBQyxHQUFHLEVBQVI7SUFDQSxJQUFJLENBQUNGLENBQUwsRUFBUSxPQUFPRSxDQUFQOztJQUNSLEtBQUssSUFBSWEsQ0FBQyxHQUFHZixDQUFDLENBQUNnQixLQUFGLENBQVEsR0FBUixDQUFSLEVBQXNCakIsQ0FBQyxHQUFHLENBQTFCLEVBQTZCa0IsQ0FBQyxHQUFHRixDQUFDLENBQUNHLE1BQXhDLEVBQWdEbkIsQ0FBQyxHQUFHa0IsQ0FBcEQsRUFBdURsQixDQUFDLEVBQXhEO01BQTRERyxDQUFDLENBQUNpQixJQUFGLENBQU8sS0FBS2xCLFFBQUwsQ0FBY2MsQ0FBQyxDQUFDaEIsQ0FBRCxDQUFmLENBQVA7SUFBNUQ7O0lBQ0EsT0FBT0csQ0FBUDtFQUNILENBTEQ7O0VBTUFGLENBQUMsQ0FBQ29CLEtBQUYsR0FBVSxVQUFVcEIsQ0FBVixFQUFhRSxDQUFiLEVBQWdCYSxDQUFoQixFQUFtQjtJQUN6QmIsQ0FBQyxHQUFHYSxDQUFKLEtBQVViLENBQUMsR0FBRyxDQUFDYSxDQUFELEVBQUtBLENBQUMsR0FBR2IsQ0FBVCxFQUFhLENBQWIsQ0FBZDtJQUNBRixDQUFDLEdBQUdlLENBQUosS0FBVWYsQ0FBQyxHQUFHZSxDQUFkO0lBQ0EsQ0FBQ2YsQ0FBQyxHQUFHRSxDQUFKLElBQVNtQixNQUFNLENBQUNqQixLQUFQLENBQWFKLENBQWIsQ0FBVixNQUErQkEsQ0FBQyxHQUFHRSxDQUFuQztJQUNBLE9BQU9GLENBQVA7RUFDSCxDQUxEOztFQU1BQSxDQUFDLENBQUNRLElBQUYsR0FBUyxHQUFUO0VBQ0FSLENBQUMsQ0FBQ08sT0FBRixHQUFZLEdBQVo7RUFDQVAsQ0FBQyxDQUFDTSxVQUFGLEdBQWUsR0FBZjtFQUNBTixDQUFDLENBQUNzQixPQUFGLEdBQVksR0FBWjtFQUNBdEIsQ0FBQyxDQUFDdUIsT0FBRixHQUFZLEdBQVo7RUFDQSxPQUFPdkIsQ0FBUDtBQUNILENBdENPLEVBQVI7O0FBdUNBSCxPQUFPLFdBQVAsR0FBa0JFLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBuID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiB0KCkge31cbiAgICB0LnBhcnNlTnVtID0gZnVuY3Rpb24gKHQsIGUpIHtcbiAgICAgICAgdm9pZCAwID09PSBlICYmIChlID0gMCk7XG4gICAgICAgIFwic3RyaW5nXCIgPT0gdHlwZW9mIHQgPyAodCA9IHBhcnNlSW50KHQpKSA6IGlzTmFOKHQpICYmICh0ID0gMCk7XG4gICAgICAgIHJldHVybiAwID09PSB0ID8gZSA6IHQ7XG4gICAgfTtcbiAgICB0LkZvcm1hdEN1cnJlbmN5ID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgXCJzdHJpbmdcIiA9PSB0eXBlb2YgdCAmJiAodCA9IHBhcnNlSW50KHQpKTtcbiAgICAgICAgcmV0dXJuIHQgPj0gdGhpcy5URU5CSUxMSU9OXG4gICAgICAgICAgICA/IHBhcnNlSW50KHQgLyB0aGlzLlRFTkJJTExJT04gKyBcIlwiKSArIFwiQlwiXG4gICAgICAgICAgICA6IHQgPj0gdGhpcy5NSUxMSU9OXG4gICAgICAgICAgICA/IHBhcnNlSW50KHQgLyB0aGlzLk1JTExJT04gKyBcIlwiKSArIFwiTVwiXG4gICAgICAgICAgICA6IHQgPj0gdGhpcy5LSUxPXG4gICAgICAgICAgICA/IHBhcnNlSW50KHQgLyB0aGlzLktJTE8gKyBcIlwiKSArIFwiS1wiXG4gICAgICAgICAgICA6IHQudG9TdHJpbmcoKTtcbiAgICB9O1xuICAgIHQuUmFuZG9tSW50ID0gZnVuY3Rpb24gKHQsIGUpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguY2VpbChNYXRoLnJhbmRvbSgpICogKGUgLSB0ICsgMSkgKyB0IC0gMSk7XG4gICAgfTtcbiAgICB0LnN0cmluZ1RvTnVtQXJyID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdmFyIGUgPSBbXTtcbiAgICAgICAgaWYgKCF0KSByZXR1cm4gZTtcbiAgICAgICAgZm9yICh2YXIgbyA9IHQuc3BsaXQoXCI7XCIpLCBuID0gMCwgaSA9IG8ubGVuZ3RoOyBuIDwgaTsgbisrKSBlLnB1c2godGhpcy5wYXJzZU51bShvW25dKSk7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH07XG4gICAgdC5jbGFtcCA9IGZ1bmN0aW9uICh0LCBlLCBvKSB7XG4gICAgICAgIGUgPiBvICYmIChlID0gW28sIChvID0gZSldWzBdKTtcbiAgICAgICAgdCA+IG8gJiYgKHQgPSBvKTtcbiAgICAgICAgKHQgPCBlIHx8IE51bWJlci5pc05hTih0KSkgJiYgKHQgPSBlKTtcbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICB0LktJTE8gPSAxZTM7XG4gICAgdC5NSUxMSU9OID0gMWU2O1xuICAgIHQuVEVOQklMTElPTiA9IDFlOTtcbiAgICB0LkJJTExJT04gPSAxZTg7XG4gICAgdC5URU5LSUxPID0gMWU0O1xuICAgIHJldHVybiB0O1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IG47XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/plugins/fly.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5cb399zOCVMQ7XhcfvghvHe', 'fly');
// scripts/plugins/fly.js

"use strict";

(function (t, n) {
  if ("object" == typeof exports && "object" == typeof module) module.exports = n();else if ("function" == typeof define && define.amd) define([], n);else {
    var i = n();

    for (var r in i) {
      ("object" == typeof exports ? exports : t)[r] = i[r];
    }
  }
})(void 0, function () {
  return function (t) {
    var e = {};

    function o(n) {
      if (e[n]) return e[n].exports;
      var i = e[n] = {
        i: n,
        l: !1,
        exports: {}
      };
      t[n].call(i.exports, i, i.exports, o);
      i.l = !0;
      return i.exports;
    }

    o.m = t;
    o.c = e;

    o.i = function (t) {
      return t;
    };

    o.d = function (t, e, n) {
      o.o(t, e) || Object.defineProperty(t, e, {
        configurable: !1,
        enumerable: !0,
        get: n
      });
    };

    o.n = function (t) {
      var e = t && t.__esModule ? function () {
        return t["default"];
      } : function () {
        return t;
      };
      o.d(e, "a", e);
      return e;
    };

    o.o = function (t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    };

    o.p = "";
    return o(o.s = 2);
  }([function (t) {
    var e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
      return typeof t;
    } : function (t) {
      return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
    };
    t.exports = {
      type: function type(t) {
        return Object.prototype.toString.call(t).slice(8, -1).toLowerCase();
      },
      isObject: function isObject(t, o) {
        return o ? "object" === this.type(t) : t && "object" === (void 0 === t ? "undefined" : e(t));
      },
      isFormData: function isFormData(t) {
        return "undefined" != typeof FormData && t instanceof FormData;
      },
      trim: function trim(t) {
        return t.replace(/(^\s*)|(\s*$)/g, "");
      },
      encode: function encode(t) {
        return encodeURIComponent(t).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
      },
      formatParams: function formatParams(t) {
        var e = "";
        var o = !0;
        var n = this;
        return this.isObject(t) ? (function t(i, r) {
          var a = n.encode;
          var s = n.type(i);
          if ("array" == s) i.forEach(function (e, o) {
            n.isObject(e) || (o = "");
            t(e, r + "%5B" + o + "%5D");
          });else if ("object" == s) for (var c in i) {
            t(i[c], r ? r + "%5B" + a(c) + "%5D" : a(c));
          } else o || (e += "&"), o = !1, e += r + "=" + a(i);
        }(t, ""), e) : t;
      },
      merge: function merge(t, e) {
        for (var o in e) {
          t.hasOwnProperty(o) ? this.isObject(e[o], 1) && this.isObject(t[o], 1) && this.merge(t[o], e[o]) : t[o] = e[o];
        }

        return t;
      }
    };
  },, function (t, e, o) {
    var n = function () {
      function t(t, e) {
        for (var o = 0; o < e.length; o++) {
          var n = e[o];
          n.enumerable = n.enumerable || !1;
          n.configurable = !0;
          "value" in n && (n.writable = !0);
          Object.defineProperty(t, n.key, n);
        }
      }

      return function (e, o, n) {
        o && t(e.prototype, o);
        n && t(e, n);
        return e;
      };
    }();

    function i(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    var r = o(0);
    var a = "undefined" != typeof document;

    var s = function () {
      function t(e) {
        function o(t) {
          var e = void 0;
          var o = void 0;

          function n() {
            t.p = e = o = null;
          }

          r.merge(t, {
            lock: function lock() {
              e || (t.p = new Promise(function (t, n) {
                e = t;
                o = n;
              }));
            },
            unlock: function unlock() {
              e && (e(), n());
            },
            clear: function clear() {
              o && (o("cancel"), n());
            }
          });
        }

        i(this, t);
        this.engine = e || XMLHttpRequest;
        this["default"] = this;
        var n = this.interceptors = {
          response: {
            use: function use(t, e) {
              this.handler = t;
              this.onerror = e;
            }
          },
          request: {
            use: function use(t) {
              this.handler = t;
            }
          }
        };
        var a = n.request;
        o(n.response);
        o(a);
        this.config = {
          method: "GET",
          baseURL: "",
          headers: {},
          timeout: 0,
          params: {},
          parseJson: !0,
          withCredentials: !1
        };
      }

      n(t, [{
        key: "request",
        value: function value(t, e, o) {
          var n = this;
          var i = new this.engine();
          var s = "Content-Type";
          var c = s.toLowerCase();
          var l = this.interceptors;
          var u = l.request;
          var p = l.response;
          var d = u.handler;
          var h = new Promise(function (l, h) {
            function f(t) {
              return t && t.then && t["catch"];
            }

            function g(t, e) {
              t ? t.then(function () {
                e();
              }) : e();
            }

            function y(o) {
              e = o.body;
              t = r.trim(o.url);
              var n = r.trim(o.baseURL || "");

              if (t || !a || n || (t = location.href), 0 !== t.indexOf("http")) {
                var u = "/" === t[0];

                if (!n && a) {
                  var d = location.pathname.split("/");
                  d.pop();
                  n = location.protocol + "//" + location.host + (u ? "" : d.join("/"));
                }

                if ("/" !== n[n.length - 1] && (n += "/"), t = n + (u ? t.substr(1) : t), a) {
                  var y = document.createElement("a");
                  y.href = t;
                  t = y.href;
                }
              }

              var m = r.trim(o.responseType || "");
              var v = -1 !== ["GET", "HEAD", "DELETE", "OPTION"].indexOf(o.method);

              var _ = r.type(e);

              var b = o.params || {};
              v && "object" === _ && (b = r.merge(e, b));
              var w = [];
              (b = r.formatParams(b)) && w.push(b);
              v && e && "string" === _ && w.push(e);
              w.length > 0 && (t += (-1 === t.indexOf("?") ? "?" : "&") + w.join("&"));
              i.open(o.method, t);

              try {
                i.withCredentials = !!o.withCredentials;
                i.timeout = o.timeout || 0;
                "stream" !== m && (i.responseType = m);
              } catch (R) {}

              var S = o.headers[s] || o.headers[c];
              var T = "application/x-www-form-urlencoded";

              for (var I in r.trim((S || "").toLowerCase()) === T ? e = r.formatParams(e) : r.isFormData(e) || -1 === ["object", "array"].indexOf(r.type(e)) || (T = "application/json;charset=utf-8", e = JSON.stringify(e)), S || v || (o.headers[s] = T), o.headers) {
                if (I === s && r.isFormData(e)) delete o.headers[I];else try {
                  i.setRequestHeader(I, o.headers[I]);
                } catch (R) {}
              }

              function D(t, e, n) {
                g(p.p, function () {
                  if (t) {
                    n && (e.request = o);
                    var i = t.call(p, e, Promise);
                    e = void 0 === i ? e : i;
                  }

                  f(e) || (e = Promise[0 === n ? "resolve" : "reject"](e));
                  e.then(function (t) {
                    l(t);
                  })["catch"](function (t) {
                    h(t);
                  });
                });
              }

              function P(t) {
                t.engine = i;
                D(p.onerror, t, -1);
              }

              function k(t, e) {
                this.message = t;
                this.status = e;
              }

              i.onload = function () {
                try {
                  var t = i.response || i.responseText;
                  t && o.parseJson && -1 !== (i.getResponseHeader(s) || "").indexOf("json") && !r.isObject(t) && (t = JSON.parse(t));
                  var e = i.responseHeaders;

                  if (!e) {
                    e = {};
                    var n = (i.getAllResponseHeaders() || "").split("\r\n");
                    n.pop(), n.forEach(function (t) {
                      if (t) {
                        var o = t.split(":")[0];
                        e[o] = i.getResponseHeader(o);
                      }
                    });
                  }

                  var a = i.status;
                  var c = i.statusText;
                  var l = {
                    data: t,
                    headers: e,
                    status: a,
                    statusText: c
                  };
                  if (r.merge(l, i._response), a >= 200 && a < 300 || 304 === a) l.engine = i, l.request = o, D(p.handler, l, 0);else {
                    var u = new k(c, a);
                    u.response = l, P(u);
                  }
                } catch (u) {
                  P(new k(u.msg, i.status));
                }
              };

              i.onerror = function (t) {
                P(new k(t.msg || "Network Error", 0));
              };

              i.ontimeout = function () {
                P(new k("timeout [ " + i.timeout + "ms ]", 1));
              };

              i._options = o;
              setTimeout(function () {
                i.send(v ? null : e);
              }, 0);
            }

            r.isObject(t) && (t = (o = t).url);
            (o = o || {}).headers = o.headers || {};
            g(u.p, function () {
              r.merge(o, JSON.parse(JSON.stringify(n.config)));
              var i = o.headers;
              i[s] = i[s] || i[c] || "";
              delete i[c];
              o.body = e || o.body;
              t = r.trim(t || "");
              o.method = o.method.toUpperCase();
              o.url = t;
              var a = o;
              d && (a = d.call(u, o, Promise) || o);
              f(a) || (a = Promise.resolve(a));
              a.then(function (t) {
                t === o ? y(t) : l(t);
              }, function (t) {
                h(t);
              });
            });
          });
          h.engine = i;
          return h;
        }
      }, {
        key: "all",
        value: function value(t) {
          return Promise.all(t);
        }
      }, {
        key: "spread",
        value: function value(t) {
          return function (e) {
            return t.apply(null, e);
          };
        }
      }]);
      return t;
    }();

    s["default"] = s;
    ["get", "post", "put", "patch", "head", "delete"].forEach(function (t) {
      s.prototype[t] = function (e, o, n) {
        return this.request(e, o, r.merge({
          method: t
        }, n));
      };
    });
    ["lock", "unlock", "clear"].forEach(function (t) {
      s.prototype[t] = function () {
        this.interceptors.request[t]();
      };
    });
    t.exports = s;
  }]);
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/IServerCfg.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0bcfbD71yFNrYEKzKfhcP4r', 'IServerCfg');
// scripts/IServerCfg.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcSVNlcnZlckNmZy5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Utility.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '35509Oblm1OqYii3D8KZBBq', 'Utility');
// scripts/Utility.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var n = function () {
  function t() {}

  t.removeFromArray = function (t, e) {
    var o = t.indexOf(e);
    -1 !== o && t.splice(o, 1);
    return t;
  };

  t.getZeroFilledArray = function (t) {
    return new Array(t).fill(0);
  };

  t.cloneArray = function (t) {
    return t.slice(0);
  };

  return t;
}();

exports["default"] = n;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcVXRpbGl0eS5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm4iLCJ0IiwicmVtb3ZlRnJvbUFycmF5IiwiZSIsIm8iLCJpbmRleE9mIiwic3BsaWNlIiwiZ2V0WmVyb0ZpbGxlZEFycmF5IiwiQXJyYXkiLCJmaWxsIiwiY2xvbmVBcnJheSIsInNsaWNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFJLFlBQVk7RUFDakIsU0FBU0MsQ0FBVCxHQUFhLENBQUU7O0VBQ2ZBLENBQUMsQ0FBQ0MsZUFBRixHQUFvQixVQUFVRCxDQUFWLEVBQWFFLENBQWIsRUFBZ0I7SUFDaEMsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQUYsQ0FBVUYsQ0FBVixDQUFSO0lBQ0EsQ0FBQyxDQUFELEtBQU9DLENBQVAsSUFBWUgsQ0FBQyxDQUFDSyxNQUFGLENBQVNGLENBQVQsRUFBWSxDQUFaLENBQVo7SUFDQSxPQUFPSCxDQUFQO0VBQ0gsQ0FKRDs7RUFLQUEsQ0FBQyxDQUFDTSxrQkFBRixHQUF1QixVQUFVTixDQUFWLEVBQWE7SUFDaEMsT0FBTyxJQUFJTyxLQUFKLENBQVVQLENBQVYsRUFBYVEsSUFBYixDQUFrQixDQUFsQixDQUFQO0VBQ0gsQ0FGRDs7RUFHQVIsQ0FBQyxDQUFDUyxVQUFGLEdBQWUsVUFBVVQsQ0FBVixFQUFhO0lBQ3hCLE9BQU9BLENBQUMsQ0FBQ1UsS0FBRixDQUFRLENBQVIsQ0FBUDtFQUNILENBRkQ7O0VBR0EsT0FBT1YsQ0FBUDtBQUNILENBZE8sRUFBUjs7QUFlQUgsT0FBTyxXQUFQLEdBQWtCRSxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgbiA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gdCgpIHt9XG4gICAgdC5yZW1vdmVGcm9tQXJyYXkgPSBmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICB2YXIgbyA9IHQuaW5kZXhPZihlKTtcbiAgICAgICAgLTEgIT09IG8gJiYgdC5zcGxpY2UobywgMSk7XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgdC5nZXRaZXJvRmlsbGVkQXJyYXkgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICByZXR1cm4gbmV3IEFycmF5KHQpLmZpbGwoMCk7XG4gICAgfTtcbiAgICB0LmNsb25lQXJyYXkgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICByZXR1cm4gdC5zbGljZSgwKTtcbiAgICB9O1xuICAgIHJldHVybiB0O1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IG47XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Puzzle.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4cbfbVyuLJBPbnN8fp3n4Nt', 'Puzzle');
// scripts/Puzzle.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _utility = require("Utility");

var i = function () {
  function t(t, e) {
    if (void 0 === t || void 0 === e) throw "width and height are required constructor parameters.";
    if (t <= 0 || e <= 0 || 1 === t && 1 === e) throw "invalid dimensions: " + t.toString() + " x " + e.toString();
    this.width = "number" == typeof t ? t : parseInt(t.toString(), 10);
    this.height = "number" == typeof e ? e : parseInt(e.toString(), 10);
    this.totalCells = this.width * this.height;
    this.reset();
  }

  t.prototype.reset = function () {
    var t = this;
    var e = _utility["default"].getZeroFilledArray;
    this.creator = null;
    this.cells = [];
    this.rowHints = [];
    this.columnHints = [];
    this.grid = e(this.height).map(function () {
      return e(t.width);
    });
  };

  t.prototype.checkUserSolution = function () {
    return this.cells.every(function (t) {
      var e = 1 === t.userSolution ? 1 : 0;
      return t.solution === e;
    });
  };

  t.prototype.getRowCells = function (t) {
    var e;
    var o = [];
    var n = t * this.width;
    var i = n + this.width;

    for (e = n; e < i; e++) {
      o.push(this.cells[e]);
    }

    return o.length > 0 && o;
  };

  t.prototype.getColumnCells = function (t) {
    var e;
    var o = [];

    for (e = t; e < this.cells.length; e += this.width) {
      o.push(this.cells[e]);
    }

    return o.length > 0 && o;
  };

  t.prototype.getCellByIndex = function (t) {
    var e = "number" != typeof t ? parseInt(t, 10) : t;
    return !!this.cells[e] && this.cells[e];
  };

  return t;
}();

exports["default"] = i;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcUHV6emxlLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX3V0aWxpdHkiLCJyZXF1aXJlIiwiaSIsInQiLCJlIiwidG9TdHJpbmciLCJ3aWR0aCIsInBhcnNlSW50IiwiaGVpZ2h0IiwidG90YWxDZWxscyIsInJlc2V0IiwicHJvdG90eXBlIiwiZ2V0WmVyb0ZpbGxlZEFycmF5IiwiY3JlYXRvciIsImNlbGxzIiwicm93SGludHMiLCJjb2x1bW5IaW50cyIsImdyaWQiLCJtYXAiLCJjaGVja1VzZXJTb2x1dGlvbiIsImV2ZXJ5IiwidXNlclNvbHV0aW9uIiwic29sdXRpb24iLCJnZXRSb3dDZWxscyIsIm8iLCJuIiwicHVzaCIsImxlbmd0aCIsImdldENvbHVtbkNlbGxzIiwiZ2V0Q2VsbEJ5SW5kZXgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQUlDLENBQUMsR0FBSSxZQUFZO0VBQ2pCLFNBQVNDLENBQVQsQ0FBV0EsQ0FBWCxFQUFjQyxDQUFkLEVBQWlCO0lBQ2IsSUFBSSxLQUFLLENBQUwsS0FBV0QsQ0FBWCxJQUFnQixLQUFLLENBQUwsS0FBV0MsQ0FBL0IsRUFBa0MsTUFBTSx1REFBTjtJQUNsQyxJQUFJRCxDQUFDLElBQUksQ0FBTCxJQUFVQyxDQUFDLElBQUksQ0FBZixJQUFxQixNQUFNRCxDQUFOLElBQVcsTUFBTUMsQ0FBMUMsRUFDSSxNQUFNLHlCQUF5QkQsQ0FBQyxDQUFDRSxRQUFGLEVBQXpCLEdBQXdDLEtBQXhDLEdBQWdERCxDQUFDLENBQUNDLFFBQUYsRUFBdEQ7SUFDSixLQUFLQyxLQUFM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V1YsQ0FBWCxDQUExQjtFQUNILENBSEQ7O0VBSUEsT0FBT0QsQ0FBUDtBQUNILENBOUNPLEVBQVI7O0FBK0NBTCxPQUFPLFdBQVAsR0FBa0JJLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfdXRpbGl0eSA9IHJlcXVpcmUoXCJVdGlsaXR5XCIpO1xudmFyIGkgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHQodCwgZSkge1xuICAgICAgICBpZiAodm9pZCAwID09PSB0IHx8IHZvaWQgMCA9PT0gZSkgdGhyb3cgXCJ3aWR0aCBhbmQgaGVpZ2h0IGFyZSByZXF1aXJlZCBjb25zdHJ1Y3RvciBwYXJhbWV0ZXJzLlwiO1xuICAgICAgICBpZiAodCA8PSAwIHx8IGUgPD0gMCB8fCAoMSA9PT0gdCAmJiAxID09PSBlKSlcbiAgICAgICAgICAgIHRocm93IFwiaW52YWxpZCBkaW1lbnNpb25zOiBcIiArIHQudG9TdHJpbmcoKSArIFwiIHggXCIgKyBlLnRvU3RyaW5nKCk7XG4gICAgICAgIHRoaXMud2lkdGggPSBcIm51bWJlclwiID09IHR5cGVvZiB0ID8gdCA6IHBhcnNlSW50KHQudG9TdHJpbmcoKSwgMTApO1xuICAgICAgICB0aGlzLmhlaWdodCA9IFwibnVtYmVyXCIgPT0gdHlwZW9mIGUgPyBlIDogcGFyc2VJbnQoZS50b1N0cmluZygpLCAxMCk7XG4gICAgICAgIHRoaXMudG90YWxDZWxscyA9IHRoaXMud2lkdGggKiB0aGlzLmhlaWdodDtcbiAgICAgICAgdGhpcy5yZXNldCgpO1xuICAgIH1cbiAgICB0LnByb3RvdHlwZS5yZXNldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgICB2YXIgZSA9IF91dGlsaXR5LmRlZmF1bHQuZ2V0WmVyb0ZpbGxlZEFycmF5O1xuICAgICAgICB0aGlzLmNyZWF0b3IgPSBudWxsO1xuICAgICAgICB0aGlzLmNlbGxzID0gW107XG4gICAgICAgIHRoaXMucm93SGludHMgPSBbXTtcbiAgICAgICAgdGhpcy5jb2x1bW5IaW50cyA9IFtdO1xuICAgICAgICB0aGlzLmdyaWQgPSBlKHRoaXMuaGVpZ2h0KS5tYXAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIGUodC53aWR0aCk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuY2hlY2tVc2VyU29sdXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNlbGxzLmV2ZXJ5KGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICB2YXIgZSA9IDEgPT09IHQudXNlclNvbHV0aW9uID8gMSA6IDA7XG4gICAgICAgICAgICByZXR1cm4gdC5zb2x1dGlvbiA9PT0gZTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5nZXRSb3dDZWxscyA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZhciBlO1xuICAgICAgICB2YXIgbyA9IFtdO1xuICAgICAgICB2YXIgbiA9IHQgKiB0aGlzLndpZHRoO1xuICAgICAgICB2YXIgaSA9IG4gKyB0aGlzLndpZHRoO1xuICAgICAgICBmb3IgKGUgPSBuOyBlIDwgaTsgZSsrKSBvLnB1c2godGhpcy5jZWxsc1tlXSk7XG4gICAgICAgIHJldHVybiBvLmxlbmd0aCA+IDAgJiYgbztcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmdldENvbHVtbkNlbGxzID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdmFyIGU7XG4gICAgICAgIHZhciBvID0gW107XG4gICAgICAgIGZvciAoZSA9IHQ7IGUgPCB0aGlzLmNlbGxzLmxlbmd0aDsgZSArPSB0aGlzLndpZHRoKSBvLnB1c2godGhpcy5jZWxsc1tlXSk7XG4gICAgICAgIHJldHVybiBvLmxlbmd0aCA+IDAgJiYgbztcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmdldENlbGxCeUluZGV4ID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdmFyIGUgPSBcIm51bWJlclwiICE9IHR5cGVvZiB0ID8gcGFyc2VJbnQodCwgMTApIDogdDtcbiAgICAgICAgcmV0dXJuICEhdGhpcy5jZWxsc1tlXSAmJiB0aGlzLmNlbGxzW2VdO1xuICAgIH07XG4gICAgcmV0dXJuIHQ7XG59KSgpO1xuZXhwb3J0cy5kZWZhdWx0ID0gaTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/PuzzleLine.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1d7a9hUs9pK9rzKlQnQWDCz', 'PuzzleLine');
// scripts/PuzzleLine.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

exports["default"] = function (t) {
  this.type = "", this.index = -1, this.length = 0, this.minimumSectionLength = 0, this.sections = [], this.cells = [], this.solved = !1, Object.assign(this, t);
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcUHV6emxlTGluZS5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInQiLCJ0eXBlIiwiaW5kZXgiLCJsZW5ndGgiLCJtaW5pbXVtU2VjdGlvbkxlbmd0aCIsInNlY3Rpb25zIiwiY2VsbHMiLCJzb2x2ZWQiLCJhc3NpZ24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3Qzs7QUFDQUQsT0FBTyxXQUFQLEdBQWtCLFVBQVVFLENBQVYsRUFBYTtFQUMxQixLQUFLQyxJQUFMLEdBQVksRUFBYixFQUNLLEtBQUtDLEtBQUwsR0FBYSxDQUFDLENBRG5CLEVBRUssS0FBS0MsTUFBTCxHQUFjLENBRm5CLEVBR0ssS0FBS0Msb0JBQUwsR0FBNEIsQ0FIakMsRUFJSyxLQUFLQyxRQUFMLEdBQWdCLEVBSnJCLEVBS0ssS0FBS0MsS0FBTCxHQUFhLEVBTGxCLEVBTUssS0FBS0MsTUFBTCxHQUFjLENBQUMsQ0FOcEIsRUFPSVgsTUFBTSxDQUFDWSxNQUFQLENBQWMsSUFBZCxFQUFvQlIsQ0FBcEIsQ0FQSjtBQVFILENBVEQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKHQpIHtcbiAgICAodGhpcy50eXBlID0gXCJcIiksXG4gICAgICAgICh0aGlzLmluZGV4ID0gLTEpLFxuICAgICAgICAodGhpcy5sZW5ndGggPSAwKSxcbiAgICAgICAgKHRoaXMubWluaW11bVNlY3Rpb25MZW5ndGggPSAwKSxcbiAgICAgICAgKHRoaXMuc2VjdGlvbnMgPSBbXSksXG4gICAgICAgICh0aGlzLmNlbGxzID0gW10pLFxuICAgICAgICAodGhpcy5zb2x2ZWQgPSAhMSksXG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgdCk7XG59O1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/adC.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '80b6eItmFZEdbpPpK3DOIed', 'adC');
// scripts/adC.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.VEnum = exports.VEnum2 = void 0;

(function (t) {
  t[t.SHORT = 15] = "SHORT", t[t.MEDIUM = 30] = "MEDIUM", t[t.LONG = 60] = "LONG";
})(exports.VEnum2 || (exports.VEnum2 = {}));

exports.VEnum = {
  15: "adunit-c0d0468d71e666b4",
  30: "adunit-c0d0468d71e666b4",
  60: "adunit-c0d0468d71e666b4"
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcYWRDLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVkVudW0iLCJWRW51bTIiLCJ0IiwiU0hPUlQiLCJNRURJVU0iLCJMT05HIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQUQsT0FBTyxDQUFDRSxLQUFSLEdBQWdCRixPQUFPLENBQUNHLE1BQVIsR0FBaUIsS0FBSyxDQUF0Qzs7QUFDQSxDQUFDLFVBQVVDLENBQVYsRUFBYTtFQUNUQSxDQUFDLENBQUVBLENBQUMsQ0FBQ0MsS0FBRixHQUFVLEVBQVosQ0FBRCxHQUFvQixPQUFyQixFQUFnQ0QsQ0FBQyxDQUFFQSxDQUFDLENBQUNFLE1BQUYsR0FBVyxFQUFiLENBQUQsR0FBcUIsUUFBckQsRUFBaUVGLENBQUMsQ0FBRUEsQ0FBQyxDQUFDRyxJQUFGLEdBQVMsRUFBWCxDQUFELEdBQW1CLE1BQXBGO0FBQ0gsQ0FGRCxFQUVHUCxPQUFPLENBQUNHLE1BQVIsS0FBbUJILE9BQU8sQ0FBQ0csTUFBUixHQUFpQixFQUFwQyxDQUZIOztBQUdBSCxPQUFPLENBQUNFLEtBQVIsR0FBZ0I7RUFBQyxJQUFJLHlCQUFMO0VBQWdDLElBQUkseUJBQXBDO0VBQStELElBQUk7QUFBbkUsQ0FBaEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xuZXhwb3J0cy5WRW51bSA9IGV4cG9ydHMuVkVudW0yID0gdm9pZCAwO1xuKGZ1bmN0aW9uICh0KSB7XG4gICAgKHRbKHQuU0hPUlQgPSAxNSldID0gXCJTSE9SVFwiKSwgKHRbKHQuTUVESVVNID0gMzApXSA9IFwiTUVESVVNXCIpLCAodFsodC5MT05HID0gNjApXSA9IFwiTE9OR1wiKTtcbn0pKGV4cG9ydHMuVkVudW0yIHx8IChleHBvcnRzLlZFbnVtMiA9IHt9KSk7XG5leHBvcnRzLlZFbnVtID0gezE1OiBcImFkdW5pdC1jMGQwNDY4ZDcxZTY2NmI0XCIsIDMwOiBcImFkdW5pdC1jMGQwNDY4ZDcxZTY2NmI0XCIsIDYwOiBcImFkdW5pdC1jMGQwNDY4ZDcxZTY2NmI0XCJ9O1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ali.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1ea91av6hxDDJyMqyRofUmH', 'ali');
// scripts/ali.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.my = void 0;

var _c = require("c");

var _com = require("com");

var _env = require("env");

var _evts = require("evts");

var _pConst = require("pConst");

var _request = require("request");

var _sound = require("sound");

var _time = require("time");

var _uData = require("uData");

var _pInfo = require("pInfo");

var v = function (t) {
  function e() {
    var e = t.call(this) || this;
    e.isSharing = !1;
    e.sdkSwitch = _pConst.DefaultSDKSwitch;
    e.videoCheckedMap = {};
    e.videoCheckedLastT = {};
    e.uniqueVideoUnitId = "ad_tiny_2021004133656183_202401292200080698";
    e.isLoading = !1;
    e.isLoggedIn = !1;
    e.onHideT = 0;
    e.noAd = !1;
    e.noVideo = !1;
    e.lastInterAdShowT = 0;
    e.switchesInitd = !1;
    e.gameRecorder = null;
    e.ta = null;
    e.m_nStartRecordT = 0;
    e.m_nRecordT = 0;
    e.m_bIsRecording = !1;
    e.m_nAutoStopVideoId = 0;
    e.m_strVideoPath = "";
    e.cDeskCatch = !1;
    e.isRejed = !1;
    e.onKeyboardComplete = null === exports.my || void 0 === exports.my ? void 0 : exports.my.onKeyboardComplete;
    exports.my = e.string() === _pConst.PFCode.Alipay ? window.my : globalThis.my;

    XMLHttpRequest.prototype.getResponseHeader = function () {};

    var n = console.log;

    console.log = function () {
      for (var t = [], e = 0; e < arguments.length; e++) {
        t[e] = arguments[e];
      }

      var o = t.some(function (t) {
        return "string" == typeof t && t.includes("内容巡检");
      });
      o || n.apply(console, t);
    };

    return e;
  }

  __extends(e, t);

  Object.defineProperty(e.prototype, "appId", {
    get: function get() {
      return "2021004133656183";
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.string = function () {
    return _pConst.PFCode.Alipay;
  };

  e.prototype.init = function () {
    this.initAliListener();
    this.initCommonSetting();
  };

  e.prototype.initTga = function () {};

  e.prototype.isSwitchedInitd = function () {
    return this.switchesInitd;
  };

  e.prototype.initAliListener = function () {
    var t = this;
    exports.my.onShow(function (e) {
      _evts["default"].plE.emit({
        onShow: !0,
        isSharing: t.isSharing
      }), _uData["default"].ins.syncLaunchOption(e), t.isSharing || t.reenter(), t.bySlider = "gamecenter" == e.query.sourceChannel, t.checkDesktopExist().then(function () {
        _evts["default"].opE.emit({
          action: _evts["default"].Desktop_Chg
        });
      }), _evts["default"].opE.emit({
        action: _evts["default"].Slider_Chg
      });
    });
    t.sidebarExist = t.canUse("10.5.60");
    exports.my.onHide(function () {
      t.onHideT = _time["default"].ins.serverTime, _evts["default"].plE.emit({
        onHide: !0
      });
    });
    exports.my.onError(function (t) {
      _env.env.mode !== _env.EM.PROD && exports.my.alert({
        title: t.error || "异常报错",
        content: t.stack || t + "",
        showCancel: !1,
        buttonText: "好的"
      });
    });

    var e = _pConst.SDKConfig.shareData();

    var n = "iOS" === this.getSystemData().platform || "iPhone OS" === this.getSystemData().platform ? "https://tjkj300.oss-cn-shenzhen.aliyuncs.com/web/tjkj300web/other/share.jpg" : e.imageUrl;

    exports.my.onShareAppMessage = function () {
      return {
        title: e.title,
        desc: "",
        bgImgUrl: n,
        success: function success() {
          _sound["default"].ins.playBGM();
        },
        fail: function fail() {
          _sound["default"].ins.playBGM();
        }
      };
    };

    exports.my.onMemoryWarning && exports.my.onMemoryWarning(function () {
      exports.my.triggerGC && exports.my.triggerGC();
    });
    var i = this.uniqueVideoUnitId;
    null == this.videoAd && (this.videoAd = exports.my.createRewardedAd({
      adUnitId: i
    }));
    null == this.videoAd && this.videoAd.load();
  };

  e.prototype.initCommonSetting = function () {
    _uData["default"].ins.syncLaunchOption(exports.my.getLaunchOptionsSync());

    exports.my.getNetworkType({
      success: function success() {},
      fail: function fail() {}
    });

    _evts["default"].chE.on(function () {});
  };

  e.prototype.setAccountID = function () {
    _env.env.mode;
    _env.EM.TEST;
  };

  e.prototype.login = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2, new Promise(function (t) {
          exports.my.getAuthCode({
            scopes: "auth_base",
            success: function success(e) {
              var o = {};
              o.code = e.authCode;

              try {
                t(o);
              } catch (n) {}
            },
            fail: function fail(e) {
              console.error("my.getAuthCode 调用失败", e);
              t({});
            }
          });
        })];
      });
    });
  };

  e.prototype.initCloud = function () {
    return Promise.resolve(null);
  };

  e.prototype.syncTime = function () {
    return Promise.resolve(null);
  };

  e.prototype.reenter = function () {};

  e.prototype.getStorage = function (t) {
    try {
      var e = exports.my.getStorageSync({
        key: t
      });
      return e.success ? null == e.data || "" == e.data ? null : JSON.parse(e.data) : null == e || "" == e ? null : JSON.parse(e);
    } catch (n) {}
  };

  e.prototype.setStorage = function (t, e) {
    try {
      var n = exports.my.setStorageSync({
        key: t,
        data: JSON.stringify(e)
      });
      n.success || console.error("setStorageSync fail", n.errorMessage, "\n", n.error);
    } catch (i) {}
  };

  e.prototype.clearStorage = function () {
    try {
      exports.my.clearStorageSync();
    } catch (t) {}
  };

  e.prototype.removeStorage = function (t) {
    try {
      exports.my.removeStorageSync(t);
    } catch (e) {}
  };

  e.prototype.trackLogin = function () {};

  e.prototype.trackUserSet = function () {};

  e.prototype.trackUserSetOnce = function () {};

  e.prototype.trackEvent = function () {};

  e.prototype.getSeq = function () {};

  e.prototype.consumeSeq = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (e) {
        switch (e.label) {
          case 0:
            return t.sequenceInfo.type != _pConst.STDSeqType.VIDEO ? [3, 2] : [4, this.doWatchAD(t)];

          case 1:
            e.sent(), this.doShare(), e.label = 2;

          case 2:
            return [2];
        }
      });
    });
  };

  e.prototype.doWatchAD = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      var e;
      return __generator(this, function () {
        return this.noAd ? [2] : this.noVideo ? (console.error("[error] no video"), [2, Promise.reject(_pConst.VideoFailCode.NO_AD)]) : (_evts["default"].adE.emit(_c.ADE.VIDEO), this.showLoading(), e = this, [2, new Promise(function (o, n) {
          e.videoAd.onClose(function (i) {
            null != i && i.isEnded ? (_evts["default"].adE.emit(_c.ADE.VIDEO_END), e.trackEvent("video", {
              step: "complete",
              unit: void 0,
              type: t.videoSource,
              item: t.item
            }), o(1)) : (_evts["default"].adE.emit(_c.ADE.VIDEO_END), n(_pConst.VideoFailCode.CANCELED));
          });
          e.videoAd.load().then(function () {
            e.videoAd.show().then(function () {
              e.hideLoading();
            })["catch"](function () {
              e.hideLoading();

              _evts["default"].adE.emit(_c.ADE.VIDEO_END);

              e.videoAd = null;
              n(_pConst.VideoFailCode.NO_AD);
            });
          })["catch"](function () {
            e.hideLoading();
            n(_pConst.VideoFailCode.NO_AD);
          }).then(function () {});
        })]);
      });
    });
  };

  e.prototype.doShare = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2];
      });
    });
  };

  e.prototype._askReShare = function () {};

  e.prototype.canUse = function (t) {
    return _com["default"].ins.compareVersion(this.getSystemData().version, t) >= 0;
  };

  e.prototype.getSystemData = function () {
    if (null == this.systemInfoCache) try {
      this.systemInfoCache = exports.my.getSystemInfoSync();
    } catch (t) {
      return _pConst.DefaultSystemInfo;
    }
    return this.systemInfoCache;
  };

  e.prototype.getSwitches = function () {};

  e.prototype.vibrate = function (t) {
    t == _pConst.VEnum4.SHORT ? exports.my.vibrateShort("heavy") : t == _pConst.VEnum4.LONG && exports.my.vibrateLong({
      success: function success() {},
      fail: function fail() {}
    });
  };

  e.prototype.preloadVideo = function () {
    return !1;
  };

  e.prototype.showConfirm = function (t) {
    return new Promise(function (e) {
      exports.my.confirm(Object.assign(Object.assign({}, t), {
        success: function success(t) {
          t.confirm ? e(!0) : e(!1);
        },
        fail: function fail() {
          e(!1);
        }
      }));
    });
  };

  e.prototype.refreshGame = function () {
    location.reload();
  };

  e.prototype.showLoading = function () {
    this.isLoading = !0;
    exports.my.showLoading({
      content: "加载中",
      mask: !0
    });
  };

  e.prototype.hideLoading = function () {
    this.isLoading && (exports.my.hideLoading(), this.isLoading = !1);
  };

  e.prototype.log = function () {};

  e.prototype.getMenuBounding = function () {};

  e.prototype.createShareImage = function () {};

  e.prototype.preloadInterstitialAD = function () {};

  e.prototype.showInterstitialAD = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2, null];
      });
    });
  };

  e.prototype.canShowBanner = function () {
    return !1;
  };

  e.prototype.getBannerSize = function () {
    return new cc.Size(0, 0);
  };

  e.prototype.showBanner = function () {};

  e.prototype.hideBanner = function () {};

  e.prototype.getSubscribeCnt = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2, 0];
      });
    });
  };

  e.prototype.subscribe = function () {};

  e.prototype.initVideoRecorder = function () {};

  e.prototype.startVideoRecord = function () {};

  e.prototype.pauseVideoRecord = function () {};

  e.prototype.resumeVideoRecord = function () {};

  e.prototype.stopVideoRecord = function () {};

  e.prototype.startStopRecordTimeout = function () {};

  e.prototype.clearStopRecordTimeout = function () {};

  e.prototype.autoStopVideoRecord = function () {};

  e.prototype.onVideoRecordStart = function () {};

  e.prototype.onVideoRecordEnd = function () {};

  e.prototype.onVideoRecordError = function () {};

  e.prototype.hasVideoRecord = function () {};

  e.prototype.shareVideoRecord = function () {};

  e.prototype.uploadAdEvent = function () {};

  e.prototype.PostMessage = function () {};

  e.prototype.SetUserCloudStorage = function () {};

  e.prototype.GetOpenDataContext = function () {};

  e.prototype.addShortcut = function () {};

  e.prototype.checkDesktopExist = function () {
    var t = this;
    return new Promise(function (e) {
      var o = _request["default"].ins;
      t.cDeskCatch = !1;
      o.addHomepageConsult().then(function (o) {
        if (1 === o.status) {
          var n = _uData["default"].ins.getLocalData().aliAddHome;

          var i = "N" === o.data ? 1 : 0;
          1 === n && 0 === i && _evts["default"].opE.emit({
            action: _evts["default"].ALIPAY_MAIN
          });

          _pInfo["default"].ins.setAliAddHome(i);

          e(1);
        } else t.cDeskCatch = !0, e(0);
      })["catch"](function (o) {
        t.cDeskCatch = !0;
        e(0);
        console.error(o);
      });
    });
  };

  e.prototype.addGamesetlattice = function () {
    this.navigateToMiniProgramBySchema("alipays://platformapi/startapp?appId=2021003125685383&url=https%3A%2F%2Frender.alipay.com%2Fp%2Fyuyan%2F180020010001206617%2Findex.html%3FcaprMode%3Dsync&chInfo=gamesetlattice&sms=YES&appClearTop=false", function () {}, function () {});
  };

  e.prototype.share = function () {
    return new Promise(function (t) {
      exports.my.showSharePanel({
        from: "code",
        success: function success() {
          _sound["default"].ins.playBGM();

          t(1);
        },
        fail: function fail(e) {
          console.error("alisharedata fail:", e);

          _sound["default"].ins.playBGM();

          t(0);
        }
      });
    });
  };

  e.prototype.getUserInfo = function () {
    var t = this;
    return new Promise(function (e, n) {
      exports.my.getAuthCode && exports.my.getAuthCode({
        scopes: "auth_user",
        success: function success() {
          exports.my.getAuthUserInfo({
            success: function success(t) {
              var o = t.avatar;
              t.avatar = o.replace("http://", "https://");
              e(t);
            },
            fail: function fail(t) {
              n(t);
            }
          });
        },
        fail: function fail() {
          t.showRefuseTip(e, n);
        }
      });
    });
  };

  e.prototype.showRefuseTip = function (t, e) {
    return __awaiter(this, void 0, void 0, function () {
      var t = this;
      return __generator(this, function () {
        this.showConfirm({
          title: "友情提示",
          content: "申请使用您的用户信息，展示排行榜。",
          confirmButtonText: "允许",
          cancelButtonText: "拒绝"
        }).then(function (o) {
          o ? t.getUserInfo() : e();
        });
        return [2];
      });
    });
  };

  e.prototype._getUserInfo = function () {};

  e.prototype.schemaToParams = function (t) {
    if (!t.startsWith("alipays:")) return {
      message: "! 非 alipays: 开头"
    };

    for (var e = {}, o = 0, n = t.replace(/^.*?\?/, "").split("&").map(function (t) {
      var e = t.includes("=") ? t.indexOf("=") : t.length;
      return [t.slice(0, e), t.slice(e + 1)].map(decodeURIComponent);
    }); o < n.length; o++) {
      var i = n[o];
      var r = i[0];
      var a = i[1];

      if ("appId" == r) {
        if (16 != a.length) return {
          message: "! 非 16 位 appId '" + a + "'"
        };
        e[r] = a;
      } else if ("chInfo" === r) {
        var s = e.startParam || {};
        s[r] = a;
        e.startParam = s;
        continue;
      }
    }

    return {
      params: e
    };
  };

  e.prototype.navigateToMiniProgramBySchema = function (t, e, n) {
    var i = this.schemaToParams(t);
    var a = i.params;
    var s = i.message;
    a ? exports.my.navigateToMiniProgram(__assign(__assign({}, a), {
      success: e,
      fail: n
    })) : n && n({
      error: -1,
      errorMessage: "无效的小程序 schema " + t + ": " + s
    });
  };

  e.prototype.navigateToScene = function (t) {
    void 0 === t && (t = "sidebar");
    this.navigateToMiniProgramBySchema("alipays://platformapi/startapp?appId=2021003125685383&url=https%3A%2F%2Frender.alipay.com%2Fp%2Fyuyan%2F180020010001206617%2Findex.html%3FcaprMode%3Dsync&chInfo=returnvisit&sms=YES&appClearTop=false", function () {}, function () {});
  };

  e.prototype.reportEvent = function (t, e) {
    void 0 === e && (e = {});
  };

  e.prototype.showModal = function (t) {
    var e = t.title;
    var o = t.content;
    var n = t.confirmText;
    var i = (t.showCancel, {
      title: e,
      content: o,
      buttonText: n
    });
    return this.showAlert(i);
  };

  e.prototype.showAlert = function (t) {
    return new Promise(function (e, n) {
      exports.my.alert(Object.assign(Object.assign({}, t), {
        success: function success() {
          e(1);
        },
        fail: function fail(t) {
          console.error(t);
          n(t);
        }
      }));
    });
  };

  e.prototype.requestSubscribeMessage = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }

    return new Promise(function (e, n) {
      exports.my.getSetting({
        withSubscriptions: !0,
        success: function success(i) {
          i.authSetting.subscriptionsSetting.mainSwitch ? e(1) : exports.my.requestSubscribeMessage({
            entityIds: t,
            success: function success(t) {
              t.success && "subscribe" === t.behavior && e(1);
            },
            fail: function fail(t) {
              n(t);
            }
          });
        },
        fail: function fail() {
          n();
        }
      });
    });
  };

  return e;
}(require("pf")["default"]);

exports["default"] = v;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Solver.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f4a76CUybNNl5+41191uovc', 'Solver');
// scripts/Solver.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _puzzleLine = require("PuzzleLine");

var _utility = require("Utility");

var r = function () {
  function t(t) {
    this.puzzle = t;

    this._reset();
  }

  t.prototype.solve = function () {
    var t;
    var e;
    var o;
    var n;
    var i = new Date().getTime();
    var r = -1;

    for (this.isReset || this._reset(), this.isReset = !1; this._getProgress() > r && this._getTotalSolved() < this.puzzle.cells.length;) {
      for (new Date().getTime(), r = this._getProgress(), o = 0; o < this.lines.length; o++) {
        (n = this.lines[o]).solved || this.eliminateImpossibleFits(n), n.solved || this.findKnownPositivesAndNegatives(n), n.solved || this.findSectionDefiningChains(n), n.solved || this.findAnchoredSections(n), n.solved || this.findCompletedSections(n), n.solved || this.findCompletedLines(n);
      }

      new Date().getTime();
    }

    t = this._getTotalSolved() === this.puzzle.cells.length;
    e = (new Date().getTime() - i) / 1e3;
    this.elapsedTime = e;
    return t;
  };

  t.prototype.eliminateImpossibleFits = function (t) {
    var e;
    var o;
    var n;
    var r;
    var a;
    var s;
    var c;
    var l;
    var u;
    var p;
    var d = 0;
    var h = t.length - t.minimumSectionLength;
    if (0 === t.sections.length) for (u = 0; u < t.cells.length; u++) {
      this._setCellSolution(t.cells[u], 0);
    }

    for (p = 0; p < t.length && 0 === t.cells[p].aiSolution; p++) {
      d++;
    }

    for (p = t.length - 1; p >= 0 && 0 === t.cells[p].aiSolution; p--) {
      h--;
    }

    for (a = 0; a < t.sections.length; a++) {
      for (o = t.sections[a], r = _utility["default"].cloneArray(o.possibleStartIndexes), s = 0; s < o.possibleStartIndexes.length; s++) {
        for (n = o.possibleStartIndexes[s], c = t.cells[n + o.length], (n < d || n > h) && (r = _utility["default"].removeFromArray(r, n)), c && 1 === c.aiSolution && (r = _utility["default"].removeFromArray(r, n)), l = (l = n + o.length - 1) > t.length - 1 ? t.length - 1 : l, e = n; e <= l; e++) {
          (e > t.length - 1 || 0 === t.cells[e].aiSolution) && (r = _utility["default"].removeFromArray(r, n));
        }
      }

      d += o.length + 1;
      h += o.length + 1;
      o.possibleStartIndexes = r;
    }
  };

  t.prototype.findKnownPositivesAndNegatives = function (t) {
    var e;
    var o;
    var n;
    var r;
    var a;
    var s;
    var c;
    var l;
    var u;
    var p;

    var d = _utility["default"].getZeroFilledArray(t.length);

    for (e = 0; e < t.sections.length; e++) {
      for (o = t.sections[e], n = _utility["default"].getZeroFilledArray(t.length), r = 0; r < o.possibleStartIndexes.length; r++) {
        for (s = (a = o.possibleStartIndexes[r]) + o.length - 1, c = a; c <= s; c++) {
          n[c]++, d[c]++;
        }
      }

      for (l = 0; l < n.length; l++) {
        u = n[l], (p = t.cells[l]) && null === p.aiSolution && u === o.possibleStartIndexes.length && this._setCellSolution(p, 1);
      }
    }

    for (l = 0; l < d.length; l++) {
      u = d[l], (p = t.cells[l]) && null === p.aiSolution && 0 === u && this._setCellSolution(p, 0);
    }
  };

  t.prototype.findAnchoredSections = function (t) {
    var e;
    var o;
    var n;
    var i;

    if (t.sections.length > 0) {
      for (n = t.sections[0], i = t.sections[t.sections.length - 1], o = null, e = 0; e < t.cells.length && null !== t.cells[e].aiSolution; e++) {
        if (1 === t.cells[e].aiSolution) {
          o = [e, e + n.length - 1];
          break;
        }
      }

      if (null !== o) {
        for (e = o[0]; e <= o[1]; e++) {
          t.cells[e] && this._setCellSolution(t.cells[e], 1);
        }

        t.cells[e] && this._setCellSolution(t.cells[e], 0);
      }

      for (o = null, e = t.cells.length - 1; e >= 0 && null !== t.cells[e].aiSolution; e--) {
        if (1 === t.cells[e].aiSolution) {
          o = [e - i.length + 1, e];
          break;
        }
      }

      if (null !== o) {
        for (e = o[0]; e <= o[1]; e++) {
          t.cells[e] && this._setCellSolution(t.cells[e], 1);
        }

        t.cells[o[0] - 1] && this._setCellSolution(t.cells[o[0] - 1], 0);
      }
    }
  };

  t.prototype.findSectionDefiningChains = function (t) {
    var e;
    var o;
    var n;
    var r;
    var a;
    var s = [];
    var c = 0;

    for (a = _utility["default"].cloneArray(t.sections).sort(function (t, e) {
      return t.length > e.length ? -1 : 1;
    })[0], e = 0; e < t.cells.length; e++) {
      1 === (o = t.cells[e]).aiSolution && (1 !== c ? (n = {
        start: e,
        length: 1
      }, s.push(n)) : n && n.length++), c = o.aiSolution;
    }

    for (r = 0; r < s.length; r++) {
      (n = s[r]).length === a.length && (t.cells[n.start - 1] && this._setCellSolution(t.cells[n.start - 1], 0), t.cells[n.start + a.length] && this._setCellSolution(t.cells[n.start + a.length], 0), a.solved = !0);
    }
  };

  t.prototype.findCompletedSections = function (t) {
    var e;
    var o;
    var n;
    var i;

    for (e = 0; e < t.sections.length; e++) {
      (o = t.sections[e]).solved || 1 !== o.possibleStartIndexes.length || (n = o.possibleStartIndexes[0] - 1, i = o.possibleStartIndexes[0] + o.length, t.cells[n] && null === t.cells[n].aiSolution && this._setCellSolution(t.cells[n], 0), t.cells[i] && null === t.cells[i].aiSolution && this._setCellSolution(t.cells[i], 0), o.solved = !0);
    }
  };

  t.prototype.findCompletedLines = function (t) {
    var e;
    var o;
    var n;
    var i = 0;
    var r = 0;

    for (e = 0; e < t.sections.length; e++) {
      i += t.sections[e].length;
    }

    for (o = 0; o < t.cells.length; o++) {
      r += 1 === (n = t.cells[o]).aiSolution ? 1 : 0;
    }

    if (i === r) for (o = 0; o < t.cells.length; o++) {
      null === (n = t.cells[o]).aiSolution && this._setCellSolution(n, 0);
    }
  };

  t.prototype._reset = function () {
    var t;
    var e;
    var o;
    var i;
    var r;
    var a;
    var s;
    var c;
    var l;
    var u;
    var p = [];
    var d = [];

    for (this.isReset = !0, this.elapsedTime = 0, this.solutionLog = [], this.lines = [], e = 0; e < this.puzzle.cells.length; e++) {
      this.puzzle.cells[e].aiSolution = null;
    }

    for (t = 0; t < this.puzzle.width; t++) {
      p.push(t);
    }

    for (t = 0; t < this.puzzle.height; t++) {
      d.push(t);
    }

    for (o = 0; o < this.puzzle.rowHints.length; o++) {
      if (i = this.puzzle.rowHints[o], r = this.puzzle.getRowCells(o)) {
        for (a = new _puzzleLine["default"]({
          type: "row",
          index: o,
          length: this.puzzle.width,
          cells: r
        }), s = 0; s < i.length; s++) {
          c = i[s], a.sections.push({
            index: s,
            length: c,
            possibleStartIndexes: p,
            knownIndexes: [],
            solved: !1
          }), a.minimumSectionLength += c + 1;
        }

        a.minimumSectionLength--;
        this.lines.push(a);
      }
    }

    for (l = 0; l < this.puzzle.columnHints.length; l++) {
      for (u = this.puzzle.columnHints[l], a = new _puzzleLine["default"]({
        type: "column",
        index: l,
        length: this.puzzle.height,
        cells: this.puzzle.getColumnCells(l)
      }), s = 0; s < u.length; s++) {
        c = u[s], a.sections.push({
          index: s,
          length: c,
          possibleStartIndexes: d,
          knownIndexes: [],
          solved: !1
        }), a.minimumSectionLength += c + 1;
      }

      a.minimumSectionLength--;
      this.lines.push(a);
    }
  };

  t.prototype._setCellSolution = function (t, e) {
    var o;
    var n;
    var i;
    var r;
    var a;
    var s;
    var c;
    if (null === t.aiSolution) for (o = 0; o < this.lines.length; o++) {
      if (i = "row" === (n = this.lines[o]).type && n.index === t.row, r = "column" === n.type && n.index === t.column, a = 0, i || r) {
        for (s = 0; s < n.cells.length; s++) {
          (c = n.cells[s]).index === t.index ? (c.aiSolution = e, a++) : null !== c.aiSolution && a++;
        }

        a === n.length && (n.solved = !0);
      }
    }
  };

  t.prototype._getTotalSolved = function () {
    var t;
    var e = 0;

    for (t = 0; t < this.puzzle.cells.length; t++) {
      e += null !== this.puzzle.cells[t].aiSolution ? 1 : 0;
    }

    return e;
  };

  t.prototype._getProgress = function () {
    var t;
    var e;
    var o;
    var n = 0;
    var i = 0;

    for (t = 0; t < this.lines.length; t++) {
      for (n += (e = this.lines[t]).sections.length * ("row" === e.type ? this.puzzle.width : this.puzzle.height), o = 0; o < e.sections.length; o++) {
        i += e.sections[o].possibleStartIndexes.length;
      }
    }

    return n - i;
  };

  return t;
}();

exports["default"] = r;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/androidP.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '65e81r/NHpIf7QB9ks4KiDS', 'androidP');
// scripts/androidP.js

"use strict";

//电子邮件puhalskijsemen@gmail.com
//源码网站 开vpn全局模式打开 http://web3incubators.com/
//电报https://t.me/gamecode999
//网页客服 http://web3incubators.com/kefu.html
var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var r;

var _pConst = require("pConst");

var s = function (t) {
  function e() {
    var e = t.call(this) || this;
    r = jsb.reflection.callStaticMethod;
    return e;
  }

  __extends(e, t);

  Object.defineProperty(e.prototype, "appId", {
    get: function get() {
      return "dev_nonogram";
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.string = function () {
    return _pConst.PFCode.Android;
  };

  e.prototype.vibrate = function () {
    r("org/cocos2dx/javascript/InstantAppActivity", "vibrate", "()V");
  };

  e.prototype.login = function () {
    return t.prototype.login.call(this);
  };

  e.prototype.setStorage = function (t, e) {
    var o = jsb.fileUtils.getWritablePath() + t;
    jsb.fileUtils.isDirectoryExist(o) || jsb.fileUtils.createDirectory(o);
    jsb.fileUtils.writeStringToFile(JSON.stringify(e), o + "/android_nonogram.txt");
  };

  e.prototype.getStorage = function (t) {
    var e = jsb.fileUtils.getWritablePath() + t;
    jsb.fileUtils.isDirectoryExist(e) || (jsb.fileUtils.createDirectory(e), jsb.fileUtils.writeStringToFile("", e + "/android_nonogram.txt"));
    var o = jsb.fileUtils.getStringFromFile(e + "/android_nonogram.txt");
    return null == o || "" == o ? null : JSON.parse(o);
  };

  e.prototype.setCloudData = function () {};

  e.prototype.doWatchAD = function () {
    var t = this;
    return new Promise(function (e, o) {
      t.resolve = e;
      t.reject = o;
      r("org/cocos2dx/javascript/InstantAppActivity", "playAd", "()V");
    });
  };

  return e;
}(require("nativeP")["default"]);

exports["default"] = s;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcYW5kcm9pZFAuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiciIsIl9wQ29uc3QiLCJyZXF1aXJlIiwicyIsInQiLCJlIiwiY2FsbCIsImpzYiIsInJlZmxlY3Rpb24iLCJjYWxsU3RhdGljTWV0aG9kIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwiZ2V0IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsInN0cmluZyIsIlBGQ29kZSIsIkFuZHJvaWQiLCJ2aWJyYXRlIiwibG9naW4iLCJzZXRTdG9yYWdlIiwibyIsImZpbGVVdGlscyIsImdldFdyaXRhYmxlUGF0aCIsImlzRGlyZWN0b3J5RXhpc3QiLCJjcmVhdGVEaXJlY3RvcnkiLCJ3cml0ZVN0cmluZ1RvRmlsZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJnZXRTdG9yYWdlIiwiZ2V0U3RyaW5nRnJvbUZpbGUiLCJwYXJzZSIsInNldENsb3VkRGF0YSIsImRvV2F0Y2hBRCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQSxJQUFJQyxDQUFKOztBQUNBLElBQUlDLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFJLFVBQVVDLENBQVYsRUFBYTtFQUNsQixTQUFTQyxDQUFULEdBQWE7SUFDVCxJQUFJQSxDQUFDLEdBQUdELENBQUMsQ0FBQ0UsSUFBRixDQUFPLElBQVAsS0FBZ0IsSUFBeEI7SUFDQU4sQ0FBQyxHQUFHTyxHQUFHLENBQUNDLFVBQUosQ0FBZUMsZ0JBQW5CO0lBQ0Es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LEdBQWtCSyxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy/nlLXlrZDpgq7ku7ZwdWhhbHNraWpzZW1lbkBnbWFpbC5jb21cbi8v5rqQ56CB572R56uZIOW8gHZwbuWFqOWxgOaooeW8j+aJk+W8gCBodHRwOi8vd2ViM2luY3ViYXRvcnMuY29tL1xuLy/nlLXmiqVodHRwczovL3QubWUvZ2FtZWNvZGU5OTlcbi8v572R6aG15a6i5pyNIGh0dHA6Ly93ZWIzaW5jdWJhdG9ycy5jb20va2VmdS5odG1sXG52YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIHI7XG52YXIgX3BDb25zdCA9IHJlcXVpcmUoXCJwQ29uc3RcIik7XG52YXIgcyA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gdC5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIHIgPSBqc2IucmVmbGVjdGlvbi5jYWxsU3RhdGljTWV0aG9kO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSwgXCJhcHBJZFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIFwiZGV2X25vbm9ncmFtXCI7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6ICExLFxuICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgfSk7XG4gICAgZS5wcm90b3R5cGUuc3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3BDb25zdC5QRkNvZGUuQW5kcm9pZDtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnZpYnJhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHIoXCJvcmcvY29jb3MyZHgvamF2YXNjcmlwdC9JbnN0YW50QXBwQWN0aXZpdHlcIiwgXCJ2aWJyYXRlXCIsIFwiKClWXCIpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUubG9naW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0LnByb3RvdHlwZS5sb2dpbi5jYWxsKHRoaXMpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuc2V0U3RvcmFnZSA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIHZhciBvID0ganNiLmZpbGVVdGlscy5nZXRXcml0YWJsZVBhdGgoKSArIHQ7XG4gICAgICAgIGpzYi5maWxlVXRpbHMuaXNEaXJlY3RvcnlFeGlzdChvKSB8fCBqc2IuZmlsZVV0aWxzLmNyZWF0ZURpcmVjdG9yeShvKTtcbiAgICAgICAganNiLmZpbGVVdGlscy53cml0ZVN0cmluZ1RvRmlsZShKU09OLnN0cmluZ2lmeShlKSwgbyArIFwiL2FuZHJvaWRfbm9ub2dyYW0udHh0XCIpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuZ2V0U3RvcmFnZSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZhciBlID0ganNiLmZpbGVVdGlscy5nZXRXcml0YWJsZVBhdGgoKSArIHQ7XG4gICAgICAgIGpzYi5maWxlVXRpbHMuaXNEaXJlY3RvcnlFeGlzdChlKSB8fFxuICAgICAgICAgICAgKGpzYi5maWxlVXRpbHMuY3JlYXRlRGlyZWN0b3J5KGUpLCBqc2IuZmlsZVV0aWxzLndyaXRlU3RyaW5nVG9GaWxlKFwiXCIsIGUgKyBcIi9hbmRyb2lkX25vbm9ncmFtLnR4dFwiKSk7XG4gICAgICAgIHZhciBvID0ganNiLmZpbGVVdGlscy5nZXRTdHJpbmdGcm9tRmlsZShlICsgXCIvYW5kcm9pZF9ub25vZ3JhbS50eHRcIik7XG4gICAgICAgIHJldHVybiBudWxsID09IG8gfHwgXCJcIiA9PSBvID8gbnVsbCA6IEpTT04ucGFyc2Uobyk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5zZXRDbG91ZERhdGEgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICBlLnByb3RvdHlwZS5kb1dhdGNoQUQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ID0gdGhpcztcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChlLCBvKSB7XG4gICAgICAgICAgICB0LnJlc29sdmUgPSBlO1xuICAgICAgICAgICAgdC5yZWplY3QgPSBvO1xuICAgICAgICAgICAgcihcIm9yZy9jb2NvczJkeC9qYXZhc2NyaXB0L0luc3RhbnRBcHBBY3Rpdml0eVwiLCBcInBsYXlBZFwiLCBcIigpVlwiKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gZTtcbn0pKHJlcXVpcmUoXCJuYXRpdmVQXCIpLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gcztcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/baseUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7d5a9qK3IdB0LQLFV0VPhWU', 'baseUI');
// scripts/baseUI.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.HIERARCHY = void 0;
var a;

var _com = require("com");

var _idx = require("idx");

var l = cc._decorator;
var u = l.ccclass;
var p = l.property;

(function (t) {
  t[t.None = 0] = "None";
  t[t.Left = 1] = "Left";
  t[t.Right = 2] = "Right";
  t[t.Down = 3] = "Down";
})(a = exports.HIERARCHY || (exports.HIERARCHY = {}));

var d = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.ctx = null;
    e.closeBtn = null;
    e.sAni = !0;
    e.hAni = !0;
    e.panelHierachy = a.Down;
    e.a = 0.5;
    e.cb = null;
    e.b = null;
    e.c = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.closeBtn && this.closeBtn.node.on("click", this.hideThis, this);
  };

  e.prototype.hideThis = function () {};

  e.prototype.show = function (t, e) {
    void 0 === e && (e = this.a);
    this.c = t;
    this.init(this.c);
    this.uD(this.c);
    this.aUI();
    this.checkShow(e);
  };

  e.prototype.hide = function (t) {
    if (!this.isHideing) {
      this.isHideing = !0;
      var e = this;

      _com["default"].ins.a(t, 1);

      _com["default"].ins.b(this.node, !0);

      var o = this.node;
      var n = this.getK(e, o);
      return n ? new Promise(function (t) {
        n.call(function () {
          t(1);
        }).start();
      }) : new Promise(function (t) {
        o.active = !1;
        e.onHide && e.onHide();

        _com["default"].ins.b(e.node, !1);

        e.cb && e.cb(o, e.b);
        t(1);
      });
    }
  };

  e.prototype.getK = function (t, e) {
    switch (this.panelHierachy) {
      case a.Down:
        return cc.tween(this.ctx).to(0.1, {
          y: 60
        }).to(0.2, {
          y: -(cc.winSize.height + e.height) / 2
        }).call(function () {
          e.active = !1;
          t.onHide && t.onHide();

          _com["default"].ins.b(t.node, !1);

          t.cb && t.cb(e, t.b);
        });

      case a.Left:
        return this.moveHideAni(t, e, -cc.view.getVisibleSize().width);

      case a.Right:
        return this.moveHideAni(t, e, cc.view.getVisibleSize().width);

      default:
        return null;
    }
  };

  e.prototype.moveHideAni = function (t, e, o) {
    return cc.tween(this.ctx).to(0.25, {
      x: o
    }, {
      easing: this.customEaseInOut
    }).call(function () {
      e.active = !1;
      t.onHide && t.onHide();

      _com["default"].ins.b(t.node, !1);

      t.cb && t.cb(e, t.b);
    });
  };

  e.prototype.init = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }
  };

  e.prototype.aUI = function () {
    if (_idx.platform.canShowBanner()) {
      var t = _idx.platform.getBannerSize().height / _idx.platform.getSystemData().windowHeight * cc.view.getVisibleSize().height;

      if (null != this.ctx) {
        var e = (cc.view.getVisibleSize().height - cc.view.getDesignResolutionSize().height) / 2;
        e < t && (this.ctx.y += t - e);
      }
    }

    var o = this.ctx.getComponent(cc.Widget);
    o && (o.enabled = !0, o.updateAlignment(), o.enabled = !1);
    var n = this.ctx.getComponentsInChildren(cc.Widget);
    if (n) for (var i = 0; i < n.length; i++) {
      var r = n[i];
      r.enabled = !0;
      r.updateAlignment();
      r.enabled = !1;
    }
  };

  e.prototype.uD = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }
  };

  e.prototype.onShow = function () {};

  e.prototype.onHide = function () {};

  e.prototype.setCb = function (t) {
    this.cb = t;
  };

  e.prototype.showAni = function (t) {
    var e = this;

    if (null != this.ctx && this.sAni) {
      var o = this.ctx;
      o.active = !0;
      o.scale = 0.5;
      o.opacity = 0;
      cc.tween(o).to(t, {
        scale: 1,
        opacity: 255
      }, {
        easing: "backOut"
      }).call(function () {
        e.onShow && e.onShow();
      }).start();
    } else this.onShow && this.onShow();
  };

  e.prototype.downAni = function () {
    var t = this;

    if (null != this.ctx && this.sAni) {
      var e = this.ctx;
      e.active = !0;
      e.y = -(cc.winSize.height + e.height) / 2;
      cc.tween(e).to(0.2, {
        y: 60
      }).to(0.1, {
        y: -20
      }).to(0.04, {
        y: 0
      }).call(function () {
        t.onShow && t.onShow();
      }).start();
    } else this.onShow && this.onShow();
  };

  e.prototype.moveAni = function (t, e) {
    if (this.ctx) {
      this.ctx.x = e;
      var o = this;
      o.onShow && o.onShow();
      cc.tween(this.ctx).to(t, {
        x: 0
      }, {
        easing: this.customEaseInOut
      }).call(function () {
        o.onShow && o.onShow();
      }).start();
    }
  };

  e.prototype.customEaseInOut = function (t) {
    return t < 0.5 ? 8 * t * t * t * t : 1 - Math.pow(-2 * t + 2, 4) / 2;
  };

  e.prototype.checkShow = function (t) {
    switch (this.panelHierachy) {
      case a.Right:
        this.moveAni(t, cc.view.getVisibleSize().width);
        break;

      case a.Down:
        this.downAni();
        break;

      case a.Left:
        this.moveAni(t, -cc.view.getVisibleSize().width);
        break;

      default:
        this.onShow && this.onShow();
    }

    this.node.active = !0;
  };

  __decorate([p(cc.Node)], e.prototype, "ctx", void 0);

  __decorate([p(cc.Button)], e.prototype, "closeBtn", void 0);

  __decorate([p(cc.Boolean)], e.prototype, "sAni", void 0);

  __decorate([p(cc.Boolean)], e.prototype, "hAni", void 0);

  __decorate([p({
    displayName: "入场方式",
    tooltip: "设置当前界面的入场方式：\nPop-弹窗进入\nLeft-左边滑动进入，\nRight-右边滑动进入，\nDown-从底部弹出",
    type: cc.Enum(a)
  })], e.prototype, "panelHierachy", void 0);

  return __decorate([u], e);
}(cc.Component);

exports["default"] = d;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/c.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '68495iWIy9Gaa3DMhCPw98o', 'c');
// scripts/c.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.ADE = void 0;

(function (t) {
  t[t.VIDEO = 0] = "VIDEO", t[t.VIDEO_END = 1] = "VIDEO_END", t[t.SHARE = 2] = "SHARE", t[t.SHARE_END = 3] = "SHARE_END";
})(exports.ADE || (exports.ADE = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcYy5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkFERSIsInQiLCJWSURFTyIsIlZJREVPX0VORCIsIlNIQVJFIiwiU0hBUkVfRU5EIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQUQsT0FBTyxDQUFDRSxHQUFSLEdBQWMsS0FBSyxDQUFuQjs7QUFDQSxDQUFDLFVBQVVDLENBQVYsRUFBYTtFQUNUQSxDQUFDLENBQUVBLENBQUMsQ0FBQ0MsS0FBRixHQUFVLENBQVosQ0FBRCxHQUFtQixPQUFwQixFQUNLRCxDQUFDLENBQUVBLENBQUMsQ0FBQ0UsU0FBRixHQUFjLENBQWhCLENBQUQsR0FBdUIsV0FENUIsRUFFS0YsQ0FBQyxDQUFFQSxDQUFDLENBQUNHLEtBQUYsR0FBVSxDQUFaLENBQUQsR0FBbUIsT0FGeEIsRUFHS0gsQ0FBQyxDQUFFQSxDQUFDLENBQUNJLFNBQUYsR0FBYyxDQUFoQixDQUFELEdBQXVCLFdBSDVCO0FBSUgsQ0FMRCxFQUtHUCxPQUFPLENBQUNFLEdBQVIsS0FBZ0JGLE9BQU8sQ0FBQ0UsR0FBUixHQUFjLEVBQTlCLENBTEgiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xuZXhwb3J0cy5BREUgPSB2b2lkIDA7XG4oZnVuY3Rpb24gKHQpIHtcbiAgICAodFsodC5WSURFTyA9IDApXSA9IFwiVklERU9cIiksXG4gICAgICAgICh0Wyh0LlZJREVPX0VORCA9IDEpXSA9IFwiVklERU9fRU5EXCIpLFxuICAgICAgICAodFsodC5TSEFSRSA9IDIpXSA9IFwiU0hBUkVcIiksXG4gICAgICAgICh0Wyh0LlNIQVJFX0VORCA9IDMpXSA9IFwiU0hBUkVfRU5EXCIpO1xufSkoZXhwb3J0cy5BREUgfHwgKGV4cG9ydHMuQURFID0ge30pKTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/bagMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'dfb15KhzmROJKM0MC8wEsot', 'bagMgr');
// scripts/bagMgr.js

"use strict";

//电子邮件puhalskijsemen@gmail.com
//源码网站 开vpn全局模式打开 http://web3incubators.com/
//电报https://t.me/gamecode999
//网页客服 http://web3incubators.com/kefu.html
Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.bagItem = void 0;

var _evts = require("evts");

var _idx = require("idx");

var _cfgMgr = require("cfgMgr");

var _lang = require("lang");

var _pInfo = require("pInfo");

var c = function () {
  function t() {
    if (this._propTag = "props", t._ins) throw new Error("bagMgr can only be one！");
    t._ins = this;
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      t._ins || new t();
      return t._ins;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.initBag = function (t) {
    if (t) {
      var e = _cfgMgr["default"].serverCfg.qw_line_rules.rules.times.set.basic_times.val;
      this.chgItemCount("qw_line_ticket", e, !1);
      this.updItem();
    }
  };

  Object.defineProperty(t.prototype, "bagItem", {
    get: function get() {
      this._bagItem || (this._bagItem = _pInfo["default"].ins.Bag);
      return this._bagItem;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.clearItem = function () {
    this._bagItem = null;
  };

  t.prototype.updItem = function () {
    _pInfo["default"].ins.Bag = this._bagItem;
  };

  t.prototype.useItem = function (t, e, o) {
    if (void 0 === e && (e = 1), t) if (this.bagItem[t]) {
      this.bagItem[t] -= e;
      this.bagItem[t] <= 0 && delete this.bagItem[t];
      this.updItem();
      var r = "拼图";
      _lang.gemeTypeKey[o] && (r = _lang.gemeTypeKey[o]);

      _idx.platform.reportEvent(_idx.ERepEvt.useItem, {
        gameType: r,
        itemId: _lang.reportKey[t]
      });

      _evts["default"].opE.emit({
        action: _evts["default"].UPD_MAIN_RED
      });
    } else cc.log("使用失败，无该道具：" + t);
  };

  t.prototype.checkItemEnough = function (t, e) {
    void 0 === e && (e = 1);
    return this.bagItem[t] && this.bagItem[t] >= e;
  };

  t.prototype.addItem = function (t, e, o, i) {
    void 0 === e && (e = 1);
    void 0 === o && (o = !0);
    void 0 === i && (i = !0);
    this.specialItemCheck(t, e) || t && (null == this.bagItem[t] && (this.bagItem[t] = 0), this.bagItem[t] += e, o && this.updItem(), "puzzle_pieces" !== t && "newYear_pieces" !== t || _evts["default"].opE.emit({
      action: _evts["default"].UPDJIGSAWGAME
    }), i && _evts["default"].opE.emit({
      action: _evts["default"].UPD_MAIN_RED
    }));
  };

  t.prototype.chgItemCount = function (t, e, o) {
    void 0 === e && (e = 1);
    void 0 === o && (o = !0);
    t && (null == this.bagItem[t] && (this.bagItem[t] = 0), this.bagItem[t] = e, o && this.updItem());
  };

  t.prototype.getItemCount = function (t) {
    return t && this.bagItem[t] ? this.bagItem[t] : 0;
  };

  t.prototype.specialItemCheck = function (t, e) {
    switch (t) {
      case "coin":
        return _pInfo["default"].ins.addCoin(e), !0;

      case "exp":
        return _pInfo["default"].ins.addExp(e), !0;

      case "times":
        return _pInfo["default"].ins.addPower(e), !0;

      default:
        return !1;
    }
  };

  return t;
}();

exports["default"] = c;

exports.bagItem = function () {
  this.count = 0;
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/banner.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b491bWadyVEz4fDbYZRH4YG', 'banner');
// scripts/banner.js

"use strict";

//电子邮件puhalskijsemen@gmail.com
//源码网站 开vpn全局模式打开 http://web3incubators.com/
//电报https://t.me/gamecode999
//网页客服 http://web3incubators.com/kefu.html
var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _com = require("com");

var _lang = require("lang");

var _pInfo = require("pInfo");

var l = cc._decorator;
var u = l.ccclass;
var p = l.property;

var d = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.ani = null;
    e.par = null;
    e.bannerLabel = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t = _pInfo["default"].ins.getRecordData().heWins;

    var e = t >= 50 ? 40002 : 40001;
    40001 === e && (t = _com["default"].ins.rad(80, 99));
    this.bannerLabel.string = _lang.lang[e].format(t);
  };

  e.prototype.play = function () {
    this.ani.play();
    this.par.resetSystem();
  };

  __decorate([p(cc.Animation)], e.prototype, "ani", void 0);

  __decorate([p(cc.ParticleSystem)], e.prototype, "par", void 0);

  __decorate([p(cc.Label)], e.prototype, "bannerLabel", void 0);

  return __decorate([u], e);
}(cc.Component);

exports["default"] = d;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcYmFubmVyLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9jb20iLCJyZXF1aXJlIiwiX2xhbmciLCJfcEluZm8iLCJsIiwiY2MiLCJfZGVjb3JhdG9yIiwidSIsImNjY2xhc3MiLCJwIiwicHJvcGVydHkiLCJkIiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsImFuaSIsInBhciIsImJhbm5lckxhYmVsIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwib25Mb2FkIiwiaW5zIiwiZ2V0UmVjb3JkRGF0YSIsImhlV2lucyIsInJhZCIsInN0cmluZyIsImxhbmciLCJmb3JtYXQiLCJwbGF5IiwicmVzZXRTeXN0ZW0iLCJfX2RlY29yYXRlIiwiQW5pbWF0aW9uIiwiUGFydGljbGVTeXN0ZW0iLCJMYWJlbCIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFuQjs7QUFDQSxJQUFJRSxNQUFNLEdBQUdGLE9BQU8sQ0FBQyxPQUFELENBQXBCOztBQUNBLElBQUlHLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csR0FBRixHQUFRLElBQVI7SUFDQUgsQ0FBQyxDQUFDSSxHQUFGLEdBQVEsSUFBUjtJQUNBSixDQUFDLENBQUNLLFdBQUYsR0FBZ0IsSUFBaEI7SUFDQSxPQUFPTCxDQUFQO0VBQ0g7O0VBQ0RNLFNBQVMsQ0FBQ04sQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FDLENBQUMsQ0FBQ08sU0FBRixDQUFZQyxNQUFaLEdBQXFCLFlBQVk7SUFDN0IsSUFBSVQsQ0FBQyxHQUFHVCxNQUFNLFdBQU4sQ0FBZW1CLEdBQWYsQ0FBbUJDLGFBQW5CLEdBQW1DQyxNQUEzQzs7SUFDQSxJQUFJWCxDQUFDLEdBQUdELENBQUMsSUFBSSxFQUFMLEdBQVUsS0FBVixHQUFrQixLQUExQjtJQUNBLFVBQVVDLENBQVYsS0FBZ0JELENBQUMsR0FBR1osSUFBSSxXQUFKLENBQWFzQixHQUFiLENBQWlCRyxHQUFqQixDQUFxQixFQUFyQixFQUF5QixFQUF6QixDQUFwQjtJQUNBLEtBQUtQLFdBQUwsQ0FBaUJRLE1BQWpCLEdBQTBCeEIsS0FBSyxDQUFDeUIsSUFBTixDQUFXZCxDQUFYLEVBQWNlLE1BQWQsQ0FBcUJoQixDQUFyQixDQUExQjtFQUNILENBTEQ7O0VBTUFDLENBQUMsQ0FBQ08sU0FBRixDQUFZUyxJQUFaLEdBQW1CLFlBQVk7SUFDM0IsS0FBS2IsR0FBTCxDQUFTYSxJQUFUO0lBQ0EsS0FBS1osR0FBTCxDQUFTYSxXQUFUO0VBQ0gsQ0FIRDs7RUFJQUMsVUFBVSxDQUFDLENBQUN0QixDQUFDLENBQUNKLEVBQUUsQ0FBQzJCLFNBQUosQ0FBRixDQUFELEVBQW9CbkIsQ0FBQyxDQUFDTyxTQUF0QixFQUFpQyxLQUFqQyxFQUF3QyxLQUFLLENBQTdDLENBQVY7O0VBQ0FXLFVBQVUsQ0FBQyxDQUFDdEIsQ0FBQyxDQUFDSixFQUFFLENBQUM0QixjQUFKLENBQUYsQ0FBRCxFQUF5QnBCLENBQUMsQ0FBQ08sU0FBM0IsRUFBc0MsS0FBdEMsRUFBNkMsS0FBSyxDQUFsRCxDQUFWOztFQUNBVyxVQUFVLENBQUMsQ0FBQ3RCLENBQUMsQ0FBQ0osRUFBRSxDQUFDNkIsS0FBSixDQUFGLENBQUQsRUFBZ0JyQixDQUFDLENBQUNPLFNBQWxCLEVBQTZCLGFBQTdCLEVBQTRDLEtBQUssQ0FBakQsQ0FBVjs7RUFDQSxPQUFPVyxVQUFVLENBQUMsQ0FBQ3hCLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0F2Qk8sQ0F1QkxSLEVBQUUsQ0FBQzhCLFNBdkJFLENBQVI7O0FBd0JBckMsT0FBTyxXQUFQLEdBQWtCYSxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy/nlLXlrZDpgq7ku7ZwdWhhbHNraWpzZW1lbkBnbWFpbC5jb21cbi8v5rqQ56CB572R56uZIOW8gHZwbuWFqOWxgOaooeW8j+aJk+W8gCBodHRwOi8vd2ViM2luY3ViYXRvcnMuY29tL1xuLy/nlLXmiqVodHRwczovL3QubWUvZ2FtZWNvZGU5OTlcbi8v572R6aG15a6i5pyNIGh0dHA6Ly93ZWIzaW5jdWJhdG9ycy5jb20va2VmdS5odG1sXG52YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9jb20gPSByZXF1aXJlKFwiY29tXCIpO1xudmFyIF9sYW5nID0gcmVxdWlyZShcImxhbmdcIik7XG52YXIgX3BJbmZvID0gcmVxdWlyZShcInBJbmZvXCIpO1xudmFyIGwgPSBjYy5fZGVjb3JhdG9yO1xudmFyIHUgPSBsLmNjY2xhc3M7XG52YXIgcCA9IGwucHJvcGVydHk7XG52YXIgZCA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLmFuaSA9IG51bGw7XG4gICAgICAgIGUucGFyID0gbnVsbDtcbiAgICAgICAgZS5iYW5uZXJMYWJlbCA9IG51bGw7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUub25Mb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IF9wSW5mby5kZWZhdWx0Lmlucy5nZXRSZWNvcmREYXRhKCkuaGVXaW5zO1xuICAgICAgICB2YXIgZSA9IHQgPj0gNTAgPyA0MDAwMiA6IDQwMDAxO1xuICAgICAgICA0MDAwMSA9PT0gZSAmJiAodCA9IF9jb20uZGVmYXVsdC5pbnMucmFkKDgwLCA5OSkpO1xuICAgICAgICB0aGlzLmJhbm5lckxhYmVsLnN0cmluZyA9IF9sYW5nLmxhbmdbZV0uZm9ybWF0KHQpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUucGxheSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5hbmkucGxheSgpO1xuICAgICAgICB0aGlzLnBhci5yZXNldFN5c3RlbSgpO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbcChjYy5BbmltYXRpb24pXSwgZS5wcm90b3R5cGUsIFwiYW5pXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbcChjYy5QYXJ0aWNsZVN5c3RlbSldLCBlLnByb3RvdHlwZSwgXCJwYXJcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtwKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcImJhbm5lckxhYmVsXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW3VdLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSBkO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/cfgMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f62a8NIu0RKNrbUIyQ8mN40', 'cfgMgr');
// scripts/cfgMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _res = require("res");

var s = function () {
  function t() {}

  t.syncServerCfg = function (e) {
    t.serverCfg = e.times ? e : Object.assign(Object.assign({}, this.serverCfg), e);

    _evts["default"].opE.emit({
      action: _evts["default"].REFRESH_CFGDATA
    });
  };

  t.init = function () {
    return __awaiter(this, void 0, void 0, function () {
      var e;
      return __generator(this, function (o) {
        switch (o.label) {
          case 0:
            return t.serverCfg ? [3, 2] : [4, _res["default"].ins.l("json/serverCfgBackup", cc.JsonAsset)];

          case 1:
            (e = o.sent()) && (t.serverCfg = e.json), o.label = 2;

          case 2:
            return [2];
        }
      });
    });
  };

  return t;
}();

exports["default"] = s;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcY2ZnTWdyLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2V2dHMiLCJyZXF1aXJlIiwiX3JlcyIsInMiLCJ0Iiwic3luY1NlcnZlckNmZyIsImUiLCJzZXJ2ZXJDZmciLCJ0aW1lcyIsImFzc2lnbiIsIm9wRSIsImVtaXQiLCJhY3Rpb24iLCJSRUZSRVNIX0NGR0RBVEEiLCJpbml0IiwiX19hd2FpdGVyIiwiX19nZW5lcmF0b3IiLCJvIiwibGFiZWwiLCJpbnMiLCJsIiwiY2MiLCJKc29uQXNzZXQiLCJzZW50IiwianNvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLEtBQUssR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBbkI7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsS0FBRCxDQUFsQjs7QUFDQSxJQUFJRSxDQUFDLEdBQUksWUFBWTtFQUNqQixTQUFTQyxDQUFULEdBQWEsQ0FBRTs7RUFDZkEsQ0FBQyxDQUFDQyxhQUFGLEdBQWtCLFVBQVVDLENBQVYsRUFBYTtJQUMzQkYsQ0FBQyxDQUFDRyxTQUFGLEdBQWNELENBQUMsQ0FBQ0UsS0FBRixHQUFVRixDQUFWLEdBQWNWLE1BQU0sQ0FBQ2EsTUFBUCxDQUFjYixNQUFNLENBQUNhLE1BQVAsQ0FBYyxFQUFkLEVBQWtCLEtBQUtGLFNBQXZCLENBQWQsRUFBaURELENBQWpELENBQTVCOztJQUNBTixLQUFLLFdBQUwsQ0FBY1UsR0FBZCxDQUFrQkMsSUFBbEIsQ0FBdUI7TUFBQ0MsTUFBTSxFQUFFWixLQUFLLFdBQUwsQ0FBY2E7SUFBdkIsQ0FBdkI7RUFDSCxDQUhEOztFQUlBVCxDQUFDLENBQUNVLElBQUYsR0FBUyxZQUFZO0lBQ2pCLE9BQU9DLFNBQVMsQ0FBQyxJQUFELEVBQU8sS0FBSyxDQUFaLEVBQWUsS0FBSyxDQUFwQixFQUF1QixZQUFZO01BQy9DLElBQUlULENBQUo7TUFDQSxPQUFPVSxXQUFXLENBQUMsSUFBRCxFQUFPLFVBQVVDLENBQVYsRUFBYTtRQUNsQyxRQUFRQSxDQUFDLENBQUNDLEtBQVY7VUFDSSxLQUFLLENBQUw7WUFDSSxPQUFPZCxDQUFDLENBQUNHLFNBQUYsR0FBYyxDQUFDLENBQUQsRUFBSSxDQUFKLENBQWQsR0FBdUIsQ0FBQyxDQUFELEVBQUlMLElBQUksV0FBSixDQUFhaUIsR0FBYixDQUFpQkMsQ0FBakIsQ0FBbUIsc0JBQW5CLEVBQTJDQyxFQUFFLENBQUNDLFNBQTlDLENBQUosQ0FBOUI7O1VBQ0osS0FBSyxDQUFMO1lBQ0ksQ0FBQ2hCLENBQUMsR0FBR1csQ0FBQyxDQUFDTSxJQUFGLEVBQUwsTUFBbUJuQixDQUFDLENBQUNHLFNBQUYsR0FBY0QsQ0FBQyxDQUFDa0IsSUFBbkMsR0FBMkNQLENBQUMsQ0FBQ0MsS0FBRixHQUFVLENBQXJEOztVQUNKLEtBQUssQ0FBTDtZQUNJLE9BQU8sQ0FBQyxDQUFELENBQVA7UUFOUjtNQVFILENBVGlCLENBQWxCO0lBVUgsQ0FaZSxDQUFoQjtFQWFILENBZEQ7O0VBZUEsT0FBT2QsQ0FBUDtBQUNILENBdEJPLEVBQVI7O0FBdUJBTixPQUFPLFdBQVAsR0FBa0JLLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfZXZ0cyA9IHJlcXVpcmUoXCJldnRzXCIpO1xudmFyIF9yZXMgPSByZXF1aXJlKFwicmVzXCIpO1xudmFyIHMgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHQoKSB7fVxuICAgIHQuc3luY1NlcnZlckNmZyA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHQuc2VydmVyQ2ZnID0gZS50aW1lcyA/IGUgOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuc2VydmVyQ2ZnKSwgZSk7XG4gICAgICAgIF9ldnRzLmRlZmF1bHQub3BFLmVtaXQoe2FjdGlvbjogX2V2dHMuZGVmYXVsdC5SRUZSRVNIX0NGR0RBVEF9KTtcbiAgICB9O1xuICAgIHQuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGU7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKG8ubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHQuc2VydmVyQ2ZnID8gWzMsIDJdIDogWzQsIF9yZXMuZGVmYXVsdC5pbnMubChcImpzb24vc2VydmVyQ2ZnQmFja3VwXCIsIGNjLkpzb25Bc3NldCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICAoZSA9IG8uc2VudCgpKSAmJiAodC5zZXJ2ZXJDZmcgPSBlLmpzb24pLCAoby5sYWJlbCA9IDIpO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzJdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiB0O1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IHM7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/chapterItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b3964ueQUBM7pwnBS90wcFu', 'chapterItem');
// scripts/chapterItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _global = require("global");

var _levelMgr = require("levelMgr");

var _panelMgr = require("panelMgr");

var _pInfo = require("pInfo");

var d = cc._decorator;
var h = d.ccclass;
var f = d.property;

var g = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.nameLbl = null;
    e.pro = null;
    e.proLbl = null;
    e.goBtn = null;
    e.pics = [];
    e.grayMater = null;
    e.normalMater = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t, e) {
    var o = this;
    this.posObj = e;
    this._chapter = t;
    this.nameLbl.string = "第" + t + "章";

    var n = _pInfo["default"].ins.getPuzzleLvl();

    this.pro.progress = 0;
    var i = n - (54 * (this._chapter - 1) + 1);
    i = i < 0 ? 0 : i;
    _global["default"].levelDone && (i = 54);
    var r = 0;
    i > 0 && (r = Math.floor(i / 9));
    n > 54 * this._chapter && (r = 6, i = 54);

    _levelMgr["default"].ins.getchapterBunder().then(function () {
      for (var t = "" + (100 + o._chapter), e = function e(_e) {
        _levelMgr["default"].ins.getJigsawIcon(_e, t).then(function (t) {
          t && (o.pics[_e - 1].spriteFrame = t, _e <= r ? o.pics[_e - 1].setMaterial(0, o.normalMater) : o.pics[_e - 1].setMaterial(0, o.grayMater));
        })["catch"](function () {
          console.error("getJigsawIconErr");
        });
      }, n = 1; n <= 6; n++) {
        e(n);
      }
    })["catch"](function () {
      console.error("getChapterBundleErr");
    });

    this.updPro();
  };

  e.prototype.updPro = function () {
    if (this._chapter) {
      var t = _pInfo["default"].ins.getPuzzleLvl();

      this.pro.progress = 0;
      var e = t - (54 * (this._chapter - 1) + 1);
      e = (e = e < 0 ? 0 : e) > 54 ? 54 : e;
      cc.tween(this.pro).to(0.5, {
        progress: e / 54
      }).start();
      this.proLbl.string = e + "/54";
    }
  };

  e.prototype.unuse = function () {};

  e.prototype.reuse = function () {};

  e.prototype.onEnable = function () {};

  e.prototype.onDisable = function () {};

  e.prototype.onGoBtn = function () {
    _idx.platform.showLoading();

    var t = _global["default"].levelTmp = this._chapter;

    _levelMgr["default"].ins.updateTmpData(t).then(function () {
      _idx.platform.hideLoading();

      _panelMgr["default"].ins.closeAllPanel();

      _evts["default"].opE.emit({
        action: _evts["default"].UPDATA_LEVEL_TMP
      });
    });
  };

  e.prototype.onDestroy = function () {
    var t = "" + (100 + this._chapter);

    _levelMgr["default"].ins.getchapterBunder().then(function (e) {
      cc.assetManager.releaseAsset(e.get(t + "/chapter", cc.SpriteFrame));
    })["catch"](function () {
      console.error("getBundleErr");
    });
  };

  __decorate([f(cc.Label)], e.prototype, "nameLbl", void 0);

  __decorate([f(cc.ProgressBar)], e.prototype, "pro", void 0);

  __decorate([f(cc.Label)], e.prototype, "proLbl", void 0);

  __decorate([f(cc.Button)], e.prototype, "goBtn", void 0);

  __decorate([f([cc.Sprite])], e.prototype, "pics", void 0);

  __decorate([f(cc.Material)], e.prototype, "grayMater", void 0);

  __decorate([f(cc.Material)], e.prototype, "normalMater", void 0);

  return __decorate([h], e);
}(cc.Component);

exports["default"] = g;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/chaptBtn.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9caaaxFVHdG34DDZ87Jv+Sy', 'chaptBtn');
// scripts/chaptBtn.js

"use strict";

//电子邮件puhalskijsemen@gmail.com
//源码网站 开vpn全局模式打开 http://web3incubators.com/
//电报https://t.me/gamecode999
//网页客服 http://web3incubators.com/kefu.html
var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.sprNode = null;
    e.lbls = [];
    e.redNumLb = null;
    e.flag = !0;
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {
    this.u();
  };

  e.prototype.getState = function () {
    return this.flag;
  };

  e.prototype.setLb = function (t) {
    this.lbls.forEach(function (e) {
      e.string = t;
    });
  };

  e.prototype.setState = function (t) {
    this.flag = t;
    this.u();
  };

  e.prototype.u = function () {
    null != this.sprNode && (this.sprNode.active = this.flag);
  };

  e.prototype.setRed = function (t) {
    this.redNumLb && (t ? (this.redNumLb.string = t + "", this.redNumLb.node.parent.active = !0) : this.redNumLb.node.parent.active = !1);
  };

  __decorate([c(cc.Node)], e.prototype, "sprNode", void 0);

  __decorate([c([cc.Label])], e.prototype, "lbls", void 0);

  __decorate([c(cc.Label)], e.prototype, "redNumLb", void 0);

  return __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcY2hhcHRCdG4uanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYSIsImNjIiwiX2RlY29yYXRvciIsInMiLCJjY2NsYXNzIiwiYyIsInByb3BlcnR5IiwibCIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJzcHJOb2RlIiwibGJscyIsInJlZE51bUxiIiwiZmxhZyIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsInN0YXJ0IiwidSIsImdldFN0YXRlIiwic2V0TGIiLCJmb3JFYWNoIiwic3RyaW5nIiwic2V0U3RhdGUiLCJhY3RpdmUiLCJzZXRSZWQiLCJub2RlIiwicGFyZW50IiwiX19kZWNvcmF0ZSIsIk5vZGUiLCJMYWJlbCIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLElBQUlDLENBQUMsR0FBSSxVQUFVQyxDQUFWLEVBQWE7RUFDbEIsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxPQUFGLEdBQVksSUFBWjtJQUNBSCxDQUFDLENBQUNJLElBQUYsR0FBUyxFQUFUO0lBQ0FKLENBQUMsQ0FBQ0ssUUFBRixHQUFhLElBQWI7SUFDQUwsQ0FBQyxDQUFDTSxJQUFGLEdBQVMsQ0FBQyxDQUFWO0lBQ0EsT0FBT04sQ0FBUDtFQUNIOztFQUNETyxTQUFTLENBQUNQLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNRLFNBQUYsQ0FBWUMsS0FBWixHQUFvQixZQUFZO0lBQzVCLEtBQUtDLENBQUw7RUFDSCxDQUZEOztFQUdBVixDQUFDLENBQUNRLFNBQUYsQ0FBWUcsUUFBWixHQUF1QixZQUFZO0lBQy9CLE9BQU8sS0FBS0wsSUFBWjtFQUNILENBRkQ7O0VBR0FOLENBQUMsQ0FBQ1EsU0FBRixDQUFZSSxLQUFaLEdBQW9CLFVBQVViLENBQVYsRUFBYTtJQUM3QixLQUFLSyxJQUFMLENBQVVTLE9BQVYsQ0FBa0IsVUFBVWIsQ0FBVixFQUFhO01BQzNCQSxDQUFDLENBQUNjLE1BQUYsR0FBV2YsQ0FBWDtJQUNILENBRkQ7RUFHSCxDQUpEOztFQUtBQyxDQUFDLENBQUNRLFNBQUYsQ0FBWU8sUUFBWixHQUF1QixVQUFVaEIsQ0FBVixFQUFhO0lBQ2hDLEtBQUtPLElBQUwsR0FBWVAsQ0FBWjtJQUNBLEtBQUtXLENBQUw7RUFDSCxDQUhEOztFQUlBVixDQUFDLENBQUNRLFNBQUYsQ0FBWUUsQ0FBWixHQUFnQixZQUFZO0lBQ3hCLFFBQVEsS0FBS1AsT0FBYixLQUF5QixLQUFLQSxPQUFMLENBQWFhLE1BQWIsR0FBc0IsS0FBS1YsSUFBcEQ7RUFDSCxDQUZEOztFQUdBTixDQUFDLENBQUNRLFNBQUYsQ0FBWVMsTUFBWixHQUFxQixVQUFVbEIsQ0FBVixFQUFhO0lBQzlCLEtBQUtNLFFBQUwsS0FDS04sQ0FBQyxJQUNNLEtBQUtNLFFBQUwsQ0FBY1MsTUFBZCxHQUF1QmYsQ0FBQyxHQUFHLEVBQTVCLEVBQWtDLEtBQUtNLFFBQUwsQ0FBY2EsSUFBZCxDQUFtQkMsTUFBbkIsQ0FBMEJILE1BQTFCLEdBQW1DLENBQUMsQ0FEM0UsSUFFSyxLQUFLWCxRQUFMLENBQWNhLElBQWQsQ0FBbUJDLE1BQW5CLENBQTBCSCxNQUExQixHQUFtQyxDQUFDLENBSC9DO0VBSUgsQ0FMRDs7RUFNQUksVUFBVSxDQUFDLENBQUN4QixDQUFDLENBQUNKLEVBQUUsQ0FBQzZCLElBQUosQ0FBRixDQUFELEVBQWVyQixDQUFDLENBQUNRLFNBQWpCLEVBQTRCLFNBQTVCLEVBQXVDLEtBQUssQ0FBNUMsQ0FBVjs7RUFDQVksVUFBVSxDQUFDLENBQUN4QixDQUFDLENBQUMsQ0FBQ0osRUFBRSxDQUFDOEIsS0FBSixDQUFELENBQUYsQ0FBRCxFQUFrQnRCLENBQUMsQ0FBQ1EsU0FBcEIsRUFBK0IsTUFBL0IsRUFBdUMsS0FBSyxDQUE1QyxDQUFWOztFQUNBWSxVQUFVLENBQUMsQ0FBQ3hCLENBQUMsQ0FBQ0osRUFBRSxDQUFDOEIsS0FBSixDQUFGLENBQUQsRUFBZ0J0QixDQUFDLENBQUNRLFNBQWxCLEVBQTZCLFVBQTdCLEVBQXlDLEtBQUssQ0FBOUMsQ0FBVjs7RUFDQSxPQUFPWSxVQUFVLENBQUMsQ0FBQzFCLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0F0Q08sQ0FzQ0xSLEVBQUUsQ0FBQytCLFNBdENFLENBQVI7O0FBdUNBbEMsT0FBTyxXQUFQLEdBQWtCUyxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy/nlLXlrZDpgq7ku7ZwdWhhbHNraWpzZW1lbkBnbWFpbC5jb21cbi8v5rqQ56CB572R56uZIOW8gHZwbuWFqOWxgOaooeW8j+aJk+W8gCBodHRwOi8vd2ViM2luY3ViYXRvcnMuY29tL1xuLy/nlLXmiqVodHRwczovL3QubWUvZ2FtZWNvZGU5OTlcbi8v572R6aG15a6i5pyNIGh0dHA6Ly93ZWIzaW5jdWJhdG9ycy5jb20va2VmdS5odG1sXG52YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIGEgPSBjYy5fZGVjb3JhdG9yO1xudmFyIHMgPSBhLmNjY2xhc3M7XG52YXIgYyA9IGEucHJvcGVydHk7XG52YXIgbCA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLnNwck5vZGUgPSBudWxsO1xuICAgICAgICBlLmxibHMgPSBbXTtcbiAgICAgICAgZS5yZWROdW1MYiA9IG51bGw7XG4gICAgICAgIGUuZmxhZyA9ICEwO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnUoKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmdldFN0YXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mbGFnO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuc2V0TGIgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0aGlzLmxibHMuZm9yRWFjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5zdHJpbmcgPSB0O1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnNldFN0YXRlID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdGhpcy5mbGFnID0gdDtcbiAgICAgICAgdGhpcy51KCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS51ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBudWxsICE9IHRoaXMuc3ByTm9kZSAmJiAodGhpcy5zcHJOb2RlLmFjdGl2ZSA9IHRoaXMuZmxhZyk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5zZXRSZWQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0aGlzLnJlZE51bUxiICYmXG4gICAgICAgICAgICAodFxuICAgICAgICAgICAgICAgID8gKCh0aGlzLnJlZE51bUxiLnN0cmluZyA9IHQgKyBcIlwiKSwgKHRoaXMucmVkTnVtTGIubm9kZS5wYXJlbnQuYWN0aXZlID0gITApKVxuICAgICAgICAgICAgICAgIDogKHRoaXMucmVkTnVtTGIubm9kZS5wYXJlbnQuYWN0aXZlID0gITEpKTtcbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW2MoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJzcHJOb2RlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYyhbY2MuTGFiZWxdKV0sIGUucHJvdG90eXBlLCBcImxibHNcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtjKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcInJlZE51bUxiXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW3NdLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSBsO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/com.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5120eEchVJEpIIgUMDKJDde', 'com');
// scripts/com.js

"use strict";

function n(t, e) {
  t.interactable = !e;
}

function i(t) {
  for (var e = t.length - 1; e >= 0; e--) {
    var o = Math.floor(Math.random() * (e + 1));
    var n = t[o];
    t[o] = t[e];
    t[e] = n;
  }

  return t;
}

function r(t) {
  return t && "object" == typeof t && !Array.isArray(t);
}

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var a = function () {
  function t() {
    this.bigs = [, "K", "M", "B", "T", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"];
    this.e = i;

    this.f = function t(e, o) {
      for (var n, i, a = [], c = 1; c < arguments.length; c++) {
        a[c - 1] = arguments[c];
      }

      if (!a.length) return e;
      var l = a.shift();
      if (r(e) && r(l)) for (var u in l) {
        r(l[u]) ? (e[u] || Object.assign(e, ((n = {})[u] = {}, n)), t(e[u], l[u])) : Object.assign(e, ((i = {})[u] = l[u], i));
      }
      return t.apply(void 0, s([e], a));
    };
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      this._ins || (this._ins = new t());
      return this._ins;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.randSort = function (t) {
    t.sort(function () {
      return Math.random() - 0.5;
    });
    return t;
  };

  t.prototype.bigNum = function (t) {
    if (t < 1e3) return t + "";

    for (var e = 0; t > 999;) {
      t /= 1e3, e++;
    }

    var o = this.bigs[e] || "z";
    return Math.floor(100 * t) / 100 + o;
  };

  t.prototype.a = function (t, e) {
    if (void 0 === e && (e = 0), null != t) {
      t instanceof cc.Event.EventTouch && (t = t.target);
      var o = null;

      if (t instanceof cc.Button ? o = t : t instanceof cc.Node && (o = t.getComponent(cc.Button)), null != o) {
        var i = function i() {
          n(o, !1);
        };

        n(o, !0);
        o.scheduleOnce(i, e);
        return function () {
          i();
          o.unschedule(i);
        };
      }
    }
  };

  t.prototype.b = function (t, e) {
    e ? t.pauseSystemEvents(!0) : t.resumeSystemEvents(!0);
  };

  t.prototype.rad = function (t, e) {
    return Math.round(Math.random() * (e - t)) + t;
  };

  t.prototype.compareVersion = function (t, e) {
    for (var o = t.split("."), n = e.split("."), i = Math.max(o.length, n.length); o.length < i;) {
      o.push("0");
    }

    for (; n.length < i;) {
      n.push("0");
    }

    for (var r = 0; r < i; r++) {
      var a = parseInt(o[r]);
      var s = parseInt(n[r]);
      if (a > s) return 1;
      if (a < s) return -1;
    }

    return 0;
  };

  return t;
}();

exports["default"] = a;

var s = function s() {
  for (var t = [], e = 0; e < arguments.length; e++) {
    t[e] = arguments[e];
  }

  for (var o = 0, n = 0, i = arguments.length; n < i; n++) {
    o += arguments[n].length;
  }

  var r = Array(o);
  var a = 0;

  for (n = 0; n < i; n++) {
    for (var s = arguments[n], c = 0, l = s.length; c < l; c++, a++) {
      r[a] = s[c];
    }
  }

  return r;
};

String.prototype.format = function () {
  if (!arguments.length) return this;

  for (var t = this, e = 0, o = arguments.length; e < o; e++) {
    t = t.replace("{" + e + "}", arguments[e]);
  }

  return t;
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcY29tLmpzIl0sIm5hbWVzIjpbIm4iLCJ0IiwiZSIsImludGVyYWN0YWJsZSIsImkiLCJsZW5ndGgiLCJvIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiciIsIkFycmF5IiwiaXNBcnJheSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYSIsImJpZ3MiLCJmIiwiYyIsImFyZ3VtZW50cyIsImwiLCJzaGlmdCIsInUiLCJhc3NpZ24iLCJhcHBseSIsInMiLCJnZXQiLCJfaW5zIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsInByb3RvdHlwZSIsInJhbmRTb3J0Iiwic29ydCIsImJpZ051bSIsImNjIiwiRXZlbnQiLCJFdmVudFRvdWNoIiwidGFyZ2V0IiwiQnV0dG9uIiwiTm9kZSIsImdldENvbXBvbmVudCIsInNjaGVkdWxlT25jZSIsInVuc2NoZWR1bGUiLCJiIiwicGF1c2VTeXN0ZW1FdmVudHMiLCJyZXN1bWVTeXN0ZW1FdmVudHMiLCJyYWQiLCJyb3VuZCIsImNvbXBhcmVWZXJzaW9uIiwic3BsaXQiLCJtYXgiLCJwdXNoIiwicGFyc2VJbnQiLCJTdHJpbmciLCJmb3JtYXQiLCJyZXBsYWNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLFNBQVNBLENBQVQsQ0FBV0MsQ0FBWCxFQUFjQyxDQUFkLEVBQWlCO0VBQ2JELENBQUMsQ0FBQ0UsWUFBRixHQUFpQixDQUFDRCxDQUFsQjtBQUNIOztBQUNELFNBQVNFLENBQVQsQ0FBV0gsQ0FBWCxFQUFjO0VBQ1YsS0FBSyxJQUFJQyxDQUFDLEdBQUdELENBQUMsQ0FBQ0ksTUFBRixHQUFXLENBQXhCLEVBQTJCSCxDQUFDLElBQUksQ0FBaEMsRUFBbUNBLENBQUMsRUFBcEMsRUFBd0M7SUFDcEMsSUFBSUksQ0FBQyxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLE1BQWlCUCxDQUFDLEdB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REgsQ0FBQyxHQUFHSSxDQUFwRCxFQUF1REosQ0FBQyxFQUF4RDtJQUE0REQsQ0FBQyxHQUFHQSxDQUFDLENBQUN3RCxPQUFGLENBQVUsTUFBTXZELENBQU4sR0FBVSxHQUFwQixFQUF5Qm1CLFNBQVMsQ0FBQ25CLENBQUQsQ0FBbEMsQ0FBSjtFQUE1RDs7RUFDQSxPQUFPRCxDQUFQO0FBQ0gsQ0FKRCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbih0LCBlKSB7XG4gICAgdC5pbnRlcmFjdGFibGUgPSAhZTtcbn1cbmZ1bmN0aW9uIGkodCkge1xuICAgIGZvciAodmFyIGUgPSB0Lmxlbmd0aCAtIDE7IGUgPj0gMDsgZS0tKSB7XG4gICAgICAgIHZhciBvID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGUgKyAxKSk7XG4gICAgICAgIHZhciBuID0gdFtvXTtcbiAgICAgICAgdFtvXSA9IHRbZV07XG4gICAgICAgIHRbZV0gPSBuO1xuICAgIH1cbiAgICByZXR1cm4gdDtcbn1cbmZ1bmN0aW9uIHIodCkge1xuICAgIHJldHVybiB0ICYmIFwib2JqZWN0XCIgPT0gdHlwZW9mIHQgJiYgIUFycmF5LmlzQXJyYXkodCk7XG59XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBhID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiB0KCkge1xuICAgICAgICB0aGlzLmJpZ3MgPSBbXG4gICAgICAgICAgICAsXG4gICAgICAgICAgICBcIktcIixcbiAgICAgICAgICAgIFwiTVwiLFxuICAgICAgICAgICAgXCJCXCIsXG4gICAgICAgICAgICBcIlRcIixcbiAgICAgICAgICAgIFwiYVwiLFxuICAgICAgICAgICAgXCJiXCIsXG4gICAgICAgICAgICBcImNcIixcbiAgICAgICAgICAgIFwiZFwiLFxuICAgICAgICAgICAgXCJlXCIsXG4gICAgICAgICAgICBcImZcIixcbiAgICAgICAgICAgIFwiZ1wiLFxuICAgICAgICAgICAgXCJoXCIsXG4gICAgICAgICAgICBcImlcIixcbiAgICAgICAgICAgIFwialwiLFxuICAgICAgICAgICAgXCJrXCIsXG4gICAgICAgICAgICBcImxcIixcbiAgICAgICAgICAgIFwibVwiLFxuICAgICAgICAgICAgXCJuXCIsXG4gICAgICAgICAgICBcIm9cIixcbiAgICAgICAgICAgIFwicFwiLFxuICAgICAgICAgICAgXCJxXCIsXG4gICAgICAgICAgICBcInJcIixcbiAgICAgICAgICAgIFwic1wiLFxuICAgICAgICAgICAgXCJ0XCIsXG4gICAgICAgICAgICBcInVcIixcbiAgICAgICAgICAgIFwidlwiLFxuICAgICAgICAgICAgXCJ3XCIsXG4gICAgICAgICAgICBcInhcIixcbiAgICAgICAgICAgIFwieVwiLFxuICAgICAgICAgICAgXCJ6XCJcbiAgICAgICAgXTtcbiAgICAgICAgdGhpcy5lID0gaTtcbiAgICAgICAgdGhpcy5mID0gZnVuY3Rpb24gdChlLCBvKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBuLCBpLCBhID0gW10sIGMgPSAxOyBjIDwgYXJndW1lbnRzLmxlbmd0aDsgYysrKSBhW2MgLSAxXSA9IGFyZ3VtZW50c1tjXTtcbiAgICAgICAgICAgIGlmICghYS5sZW5ndGgpIHJldHVybiBlO1xuICAgICAgICAgICAgdmFyIGwgPSBhLnNoaWZ0KCk7XG4gICAgICAgICAgICBpZiAocihlKSAmJiByKGwpKVxuICAgICAgICAgICAgICAgIGZvciAodmFyIHUgaW4gbClcbiAgICAgICAgICAgICAgICAgICAgcihsW3VdKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyAoZVt1XSB8fCBPYmplY3QuYXNzaWduKGUsICgoKG4gPSB7fSlbdV0gPSB7fSksIG4pKSwgdChlW3VdLCBsW3VdKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIDogT2JqZWN0LmFzc2lnbihlLCAoKChpID0ge30pW3VdID0gbFt1XSksIGkpKTtcbiAgICAgICAgICAgIHJldHVybiB0LmFwcGx5KHZvaWQgMCwgcyhbZV0sIGEpKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwiaW5zXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLl9pbnMgfHwgKHRoaXMuX2lucyA9IG5ldyB0KCkpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2lucztcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogITEsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogITBcbiAgICB9KTtcbiAgICB0LnByb3RvdHlwZS5yYW5kU29ydCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHQuc29ydChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSAtIDAuNTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuYmlnTnVtID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgaWYgKHQgPCAxZTMpIHJldHVybiB0ICsgXCJcIjtcbiAgICAgICAgZm9yICh2YXIgZSA9IDA7IHQgPiA5OTk7ICkgKHQgLz0gMWUzKSwgZSsrO1xuICAgICAgICB2YXIgbyA9IHRoaXMuYmlnc1tlXSB8fCBcInpcIjtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoMTAwICogdCkgLyAxMDAgKyBvO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuYSA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIGlmICgodm9pZCAwID09PSBlICYmIChlID0gMCksIG51bGwgIT0gdCkpIHtcbiAgICAgICAgICAgIHQgaW5zdGFuY2VvZiBjYy5FdmVudC5FdmVudFRvdWNoICYmICh0ID0gdC50YXJnZXQpO1xuICAgICAgICAgICAgdmFyIG8gPSBudWxsO1xuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICh0IGluc3RhbmNlb2YgY2MuQnV0dG9uID8gKG8gPSB0KSA6IHQgaW5zdGFuY2VvZiBjYy5Ob2RlICYmIChvID0gdC5nZXRDb21wb25lbnQoY2MuQnV0dG9uKSksIG51bGwgIT0gbylcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIHZhciBpID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBuKG8sICExKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIG4obywgITApO1xuICAgICAgICAgICAgICAgIG8uc2NoZWR1bGVPbmNlKGksIGUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGkoKTtcbiAgICAgICAgICAgICAgICAgICAgby51bnNjaGVkdWxlKGkpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmIgPSBmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICBlID8gdC5wYXVzZVN5c3RlbUV2ZW50cyghMCkgOiB0LnJlc3VtZVN5c3RlbUV2ZW50cyghMCk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5yYWQgPSBmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogKGUgLSB0KSkgKyB0O1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuY29tcGFyZVZlcnNpb24gPSBmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICBmb3IgKHZhciBvID0gdC5zcGxpdChcIi5cIiksIG4gPSBlLnNwbGl0KFwiLlwiKSwgaSA9IE1hdGgubWF4KG8ubGVuZ3RoLCBuLmxlbmd0aCk7IG8ubGVuZ3RoIDwgaTsgKSBvLnB1c2goXCIwXCIpO1xuICAgICAgICBmb3IgKDsgbi5sZW5ndGggPCBpOyApIG4ucHVzaChcIjBcIik7XG4gICAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgaTsgcisrKSB7XG4gICAgICAgICAgICB2YXIgYSA9IHBhcnNlSW50KG9bcl0pO1xuICAgICAgICAgICAgdmFyIHMgPSBwYXJzZUludChuW3JdKTtcbiAgICAgICAgICAgIGlmIChhID4gcykgcmV0dXJuIDE7XG4gICAgICAgICAgICBpZiAoYSA8IHMpIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMDtcbiAgICB9O1xuICAgIHJldHVybiB0O1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IGE7XG52YXIgcyA9IGZ1bmN0aW9uICgpIHtcbiAgICBmb3IgKHZhciB0ID0gW10sIGUgPSAwOyBlIDwgYXJndW1lbnRzLmxlbmd0aDsgZSsrKSB0W2VdID0gYXJndW1lbnRzW2VdO1xuICAgIGZvciAodmFyIG8gPSAwLCBuID0gMCwgaSA9IGFyZ3VtZW50cy5sZW5ndGg7IG4gPCBpOyBuKyspIG8gKz0gYXJndW1lbnRzW25dLmxlbmd0aDtcbiAgICB2YXIgciA9IEFycmF5KG8pO1xuICAgIHZhciBhID0gMDtcbiAgICBmb3IgKG4gPSAwOyBuIDwgaTsgbisrKSBmb3IgKHZhciBzID0gYXJndW1lbnRzW25dLCBjID0gMCwgbCA9IHMubGVuZ3RoOyBjIDwgbDsgYysrLCBhKyspIHJbYV0gPSBzW2NdO1xuICAgIHJldHVybiByO1xufTtcblN0cmluZy5wcm90b3R5cGUuZm9ybWF0ID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRoaXM7XG4gICAgZm9yICh2YXIgdCA9IHRoaXMsIGUgPSAwLCBvID0gYXJndW1lbnRzLmxlbmd0aDsgZSA8IG87IGUrKykgdCA9IHQucmVwbGFjZShcIntcIiArIGUgKyBcIn1cIiwgYXJndW1lbnRzW2VdKTtcbiAgICByZXR1cm4gdDtcbn07XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/challengeMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fcc69/466NH/5HdjeFaWPR1', 'challengeMgr');
// scripts/challengeMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _numberUtils = require("NumberUtils");

var _request = require("request");

var _time = require("time");

var _uData = require("uData");

var _global = require("global");

var _pInfo = require("pInfo");

var p = function () {
  function t() {
    this.firstYear = 2024;
    this.firstMonth = 2;
    this.lvDatas = [];
    this.defalutLvData = [{
      id: 1,
      type: 1,
      diff: 3,
      count: 500
    }, {
      id: 2,
      type: 2,
      diff: 4,
      size: 15,
      denstiy: 0.6,
      count: 10
    }, {
      id: 3,
      type: 3,
      diff: 3,
      size: 15,
      denstiy: 0.6,
      count: 5
    }, {
      id: 4,
      type: 1,
      diff: 3,
      count: 501
    }, {
      id: 5,
      type: 2,
      diff: 4,
      size: 15,
      denstiy: 0.6,
      count: 10
    }, {
      id: 6,
      type: 3,
      diff: 3,
      size: 15,
      denstiy: 0.6,
      count: 5
    }, {
      id: 7,
      type: 1,
      diff: 3,
      count: 502
    }, {
      id: 8,
      type: 2,
      diff: 4,
      size: 15,
      denstiy: 0.6,
      count: 10
    }, {
      id: 9,
      type: 3,
      diff: 3,
      size: 15,
      denstiy: 0.6,
      count: 5
    }, {
      id: 10,
      type: 1,
      diff: 3,
      count: 503
    }, {
      id: 11,
      type: 2,
      diff: 4,
      size: 15,
      denstiy: 0.6,
      count: 10
    }, {
      id: 12,
      type: 3,
      diff: 3,
      size: 15,
      denstiy: 0.6,
      count: 5
    }, {
      id: 13,
      type: 1,
      diff: 3,
      count: 504
    }, {
      id: 14,
      type: 2,
      diff: 4,
      size: 15,
      denstiy: 0.6,
      count: 10
    }, {
      id: 15,
      type: 3,
      diff: 3,
      size: 15,
      denstiy: 0.6,
      count: 5
    }, {
      id: 16,
      type: 1,
      diff: 3,
      count: 505
    }, {
      id: 17,
      type: 2,
      diff: 4,
      size: 15,
      denstiy: 0.6,
      count: 10
    }, {
      id: 18,
      type: 3,
      diff: 3,
      size: 15,
      denstiy: 0.6,
      count: 5
    }, {
      id: 19,
      type: 1,
      diff: 3,
      count: 506
    }, {
      id: 20,
      type: 2,
      diff: 4,
      size: 15,
      denstiy: 0.6,
      count: 10
    }, {
      id: 21,
      type: 3,
      diff: 3,
      size: 15,
      denstiy: 0.6,
      count: 5
    }, {
      id: 22,
      type: 1,
      diff: 3,
      count: 507
    }, {
      id: 23,
      type: 2,
      diff: 4,
      size: 15,
      denstiy: 0.6,
      count: 10
    }, {
      id: 24,
      type: 3,
      diff: 3,
      size: 15,
      denstiy: 0.6,
      count: 5
    }, {
      id: 25,
      type: 1,
      diff: 3,
      count: 508
    }, {
      id: 26,
      type: 2,
      diff: 4,
      size: 15,
      denstiy: 0.6,
      count: 10
    }, {
      id: 27,
      type: 3,
      diff: 3,
      size: 15,
      denstiy: 0.6,
      count: 5
    }, {
      id: 28,
      type: 1,
      diff: 3,
      count: 509
    }, {
      id: 29,
      type: 2,
      diff: 4,
      size: 15,
      denstiy: 0.6,
      count: 10
    }, {
      id: 30,
      type: 3,
      diff: 3,
      size: 15,
      denstiy: 0.6,
      count: 5
    }, {
      id: 31,
      type: 1,
      diff: 3,
      count: 600
    }];
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      return this._ins || (this._ins = new t());
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.initNowMonthData = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      var e;
      var o;
      var n;
      var r;
      var a;
      var c = this;
      return __generator(this, function () {
        return this.loaded ? [2] : (this.loaded = 1, t = 1e3 * _time["default"].ins.serverTime, e = new Date(t), o = e.getFullYear(), n = e.getMonth() + 1, r = this.getIdxByDate(o, n), a = 100 * o + n, cc.resources.load("challenge", cc.JsonAsset, function (t, e) {
          !t && e && e.json ? c.lvDatas[r] = e.json : c.lvDatas[r] = c.defalutLvData;
        }), [2]);
      });
    });
  };

  t.prototype.getTodayIsFin = function () {
    var t = 1e3 * _time["default"].ins.serverTime;
    var e = new Date(t);
    var o = e.getFullYear();
    var n = e.getMonth() + 1;
    var i = e.getDate() - 1;
    return this.getfinData(o, n)[i];
  };

  t.prototype.getMonthData = function (t, e) {
    var o = new Date(t, e - 1, 1).getDay();
    return [o = 0 == o ? 7 : o, new Date(t, e, 0).getDate()];
  };

  t.prototype.getfinData = function (t, e) {
    var o = this.getIdxByDate(t, e);
    this.getLvData(o, t, e);

    for (var n = _pInfo["default"].ins.getChallengeData()[o] || 0, i = [], r = 0; r < 31; r++) {
      var a = this.getIsFin(n, r);
      i.push(a);
    }

    return i;
  };

  t.prototype.getLastUnFinIdx = function (t, e) {
    for (var o = this.getfinData(t, e), n = this.getMonthData(t, e), i = (n[0], n[1]), r = 0, a = 0; a < i; a++) {
      o[a] || this.isLocked(t, e, a) || (r = a);
    }

    return r;
  };

  t.prototype.getFinLvNum = function (t, e) {
    for (var o = this.getfinData(t, e), n = 0, i = 0, r = o.length; i < r; i++) {
      o[i] && n++;
    }

    return n;
  };

  t.prototype.getTheMonthIsFin = function (t, e) {
    for (var o = this.getfinData(t, e), n = this.getMonthData(t, e), i = (n[0], n[1]), r = 0, a = 0; a < i; a++) {
      o[a] && r++;
    }

    return r >= i;
  };

  t.prototype.getIsFin = function (t, e) {
    return (t & 1 << e) >> e != 0;
  };

  t.prototype.getLvData = function (t, e, o) {
    var n = this;

    if (!(t < 0)) {
      var i = this.lvDatas[t];
      if (i) return i;
      var r = 100 * e + o;
      cc.resources.load("challenge", cc.JsonAsset, function (e, o) {
        !e && o && o.json && Array.isArray(o.json) ? n.lvDatas[t] = o.json : n.lvDatas[t] = n.defalutLvData;
      });
    }
  };

  t.prototype.getLvDataByDate = function (t, e, o) {
    var n = this.getIdxByDate(t, e);
    var i = this.lvDatas[n];

    if (i) {
      var a = i[o];

      var s = _numberUtils["default"].RandomInt(0, this.defalutLvData.length - 1);

      a || (a = this.defalutLvData[s]);
      return a;
    }

    this.getLvData(n, t, e);
    return this.defalutLvData[o];
  };

  t.prototype.winChallenge = function (t) {
    var e = t.year;
    var o = t.month;
    var n = t.day;

    if (!this.getfinData(e, o)[n - 1]) {
      var i = this.getIdxByDate(e, o);

      var r = _pInfo["default"].ins.getChallengeData();

      var a = r[i] || 0;
      a += Math.pow(2, n - 1);
      r[i] = a;

      _pInfo["default"].ins.setChallengeData(r);

      this.updateChallengeData(e, o, n);

      _uData["default"].ins._setLocalAndCloudData();
    }
  };

  t.prototype.updateChallengeData = function (t, e, o) {
    var n = t + this.addZeroToNum(e) + this.addZeroToNum(o);

    _request["default"].ins.updateChallengeData(n);
  };

  t.prototype.getRequestChallengeData = function (t, e) {
    var o = t + this.addZeroToNum(e);
    return _request["default"].ins.getChallengeData(o);
  };

  t.prototype.addZeroToNum = function (t) {
    if (t < 0) return "";
    var e = "";
    t < 10 && (e = "0");
    return e + t;
  };

  t.prototype.getIdxByDate = function (t, e) {
    return 12 * (t - this.firstYear) + (e - this.firstMonth);
  };

  t.prototype.isLocked = function (t, e, o) {
    var n = 1e3 * _time["default"].ins.serverTime;
    var i = new Date(n);
    var r = i.getFullYear();
    var a = i.getMonth() + 1;
    var c = i.getDate() - 1;
    return t != r ? t > r : e != a ? e > a : o > c;
  };

  t.prototype.getChaPackData = function (t, e) {
    for (var o = this.getIdxByDate(t, e), n = _pInfo["default"].ins.getChallengePackData()[o] || 0, i = [], r = 0; r < 4; r++) {
      var a = this.getIsFin(n, r);
      i.push(a);
    }

    return i;
  };

  t.prototype.setChaPackData = function (t, e, o) {
    var n = this.getIdxByDate(t, e);

    var i = _pInfo["default"].ins.getChallengePackData();

    var r = i[n] || 0;
    r += Math.pow(2, o);
    i[n] = r;

    _pInfo["default"].ins.setChallengePackData(i);
  };

  t.prototype.getMonthRed = function (t, e) {
    for (var o = this.getFinLvNum(t, e), n = this.getChaPackData(t, e), i = 0, r = 0; r < 4; r++) {
      o >= 7 * (r + 1) && !n[r] && i++;
    }

    return i;
  };

  t.prototype.getBeforeMonthRed = function (t, e) {
    for (var o = t, n = e, i = this.getIdxByDate(o, n) + 1, r = 0, a = 0; a < i; a++) {
      r += this.getMonthRed(o, n), --n < 1 && (o -= 1, n = 12);
    }

    return r;
  };

  t.prototype.getAllMonthRed = function () {
    var t = 1e3 * _time["default"].ins.serverTime;
    var e = new Date(t);
    var o = e.getFullYear();
    var n = e.getMonth() + 1;
    return this.getBeforeMonthRed(o, n);
  };

  return t;
}();

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/dateItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fd235ZZ7QVCtYwyn8Ct+nY3', 'dateItem');
// scripts/dateItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bg = null;
    e.bgTypes = [];
    e.dateLb = null;
    e.select = null;
    e.finish = null;
    return e;
  }

  var o;

  __extends(e, t);

  o = e;

  e.prototype.setDate = function (t) {
    this.dateLb.string = t;
  };

  e.prototype.setLocked = function (t) {
    t ? (this.bg.spriteFrame = this.bgTypes[1], this.dateLb.node.color = o.color2, this.dateLb.node.opacity = 180) : (this.bg.spriteFrame = this.bgTypes[0], this.dateLb.node.color = o.color1, this.dateLb.node.opacity = 255);
  };

  e.prototype.setSelected = function (t) {
    this.select.active = t;
  };

  e.prototype.setFinish = function (t) {
    this.finish.active = t;
    t && (this.bg.spriteFrame = this.bgTypes[2], this.dateLb.node.color = cc.Color.WHITE, this.dateLb.node.opacity = 255);
  };

  e.color1 = new cc.Color(201, 103, 23);
  e.color2 = new cc.Color(255, 231, 209);

  __decorate([c(cc.Sprite)], e.prototype, "bg", void 0);

  __decorate([c([cc.SpriteFrame])], e.prototype, "bgTypes", void 0);

  __decorate([c(cc.Label)], e.prototype, "dateLb", void 0);

  __decorate([c(cc.Node)], e.prototype, "select", void 0);

  __decorate([c(cc.Node)], e.prototype, "finish", void 0);

  return o = __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZGF0ZUl0ZW0uanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYSIsImNjIiwiX2RlY29yYXRvciIsInMiLCJjY2NsYXNzIiwiYyIsInByb3BlcnR5IiwibCIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJiZyIsImJnVHlwZXMiLCJkYXRlTGIiLCJzZWxlY3QiLCJmaW5pc2giLCJvIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwic2V0RGF0ZSIsInN0cmluZyIsInNldExvY2tlZCIsInNwcml0ZUZyYW1lIiwibm9kZSIsImNvbG9yIiwiY29sb3IyIiwib3BhY2l0eSIsImNvbG9yMSIsInNldFNlbGVjdGVkIiwiYWN0aXZlIiwic2V0RmluaXNoIiwiQ29sb3IiLCJXSElURSIsIl9fZGVjb3JhdGUiLCJTcHJpdGUiLCJTcHJpdGVGcmFtZSIsIkxhYmVsIiwiTm9kZSIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3QztBQUNBLElBQUlDLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csRUFBRixHQUFPLElBQVA7SUFD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SixDQUFGLENBQUQsRUFBZTdCLENBQUMsQ0FBQ1UsU0FBakIsRUFBNEIsUUFBNUIsRUFBc0MsS0FBSyxDQUEzQyxDQUFWOztFQUNBZSxVQUFVLENBQUMsQ0FBQzdCLENBQUMsQ0FBQ0osRUFBRSxDQUFDcUMsSUFBSixDQUFGLENBQUQsRUFBZTdCLENBQUMsQ0FBQ1UsU0FBakIsRUFBNEIsUUFBNUIsRUFBc0MsS0FBSyxDQUEzQyxDQUFWOztFQUNBLE9BQVFGLENBQUMsR0FBR2lCLFVBQVUsQ0FBQyxDQUFDL0IsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBdEI7QUFDSCxDQTNDTyxDQTJDTFIsRUFBRSxDQUFDc0MsU0EzQ0UsQ0FBUjs7QUE0Q0F6QyxPQUFPLFdBQVAsR0FBa0JTLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIGEgPSBjYy5fZGVjb3JhdG9yO1xudmFyIHMgPSBhLmNjY2xhc3M7XG52YXIgYyA9IGEucHJvcGVydHk7XG52YXIgbCA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLmJnID0gbnVsbDtcbiAgICAgICAgZS5iZ1R5cGVzID0gW107XG4gICAgICAgIGUuZGF0ZUxiID0gbnVsbDtcbiAgICAgICAgZS5zZWxlY3QgPSBudWxsO1xuICAgICAgICBlLmZpbmlzaCA9IG51bGw7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICB2YXIgbztcbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgbyA9IGU7XG4gICAgZS5wcm90b3R5cGUuc2V0RGF0ZSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHRoaXMuZGF0ZUxiLnN0cmluZyA9IHQ7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5zZXRMb2NrZWQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0XG4gICAgICAgICAgICA/ICgodGhpcy5iZy5zcHJpdGVGcmFtZSA9IHRoaXMuYmdUeXBlc1sxXSksXG4gICAgICAgICAgICAgICh0aGlzLmRhdGVMYi5ub2RlLmNvbG9yID0gby5jb2xvcjIpLFxuICAgICAgICAgICAgICAodGhpcy5kYXRlTGIubm9kZS5vcGFjaXR5ID0gMTgwKSlcbiAgICAgICAgICAgIDogKCh0aGlzLmJnLnNwcml0ZUZyYW1lID0gdGhpcy5iZ1R5cGVzWzBdKSxcbiAgICAgICAgICAgICAgKHRoaXMuZGF0ZUxiLm5vZGUuY29sb3IgPSBvLmNvbG9yMSksXG4gICAgICAgICAgICAgICh0aGlzLmRhdGVMYi5ub2RlLm9wYWNpdHkgPSAyNTUpKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnNldFNlbGVjdGVkID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdGhpcy5zZWxlY3QuYWN0aXZlID0gdDtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnNldEZpbmlzaCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHRoaXMuZmluaXNoLmFjdGl2ZSA9IHQ7XG4gICAgICAgIHQgJiZcbiAgICAgICAgICAgICgodGhpcy5iZy5zcHJpdGVGcmFtZSA9IHRoaXMuYmdUeXBlc1syXSksXG4gICAgICAgICAgICAodGhpcy5kYXRlTGIubm9kZS5jb2xvciA9IGNjLkNvbG9yLldISVRFKSxcbiAgICAgICAgICAgICh0aGlzLmRhdGVMYi5ub2RlLm9wYWNpdHkgPSAyNTUpKTtcbiAgICB9O1xuICAgIGUuY29sb3IxID0gbmV3IGNjLkNvbG9yKDIwMSwgMTAzLCAyMyk7XG4gICAgZS5jb2xvcjIgPSBuZXcgY2MuQ29sb3IoMjU1LCAyMzEsIDIwOSk7XG4gICAgX19kZWNvcmF0ZShbYyhjYy5TcHJpdGUpXSwgZS5wcm90b3R5cGUsIFwiYmdcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtjKFtjYy5TcHJpdGVGcmFtZV0pXSwgZS5wcm90b3R5cGUsIFwiYmdUeXBlc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2MoY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwiZGF0ZUxiXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcInNlbGVjdFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2MoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJmaW5pc2hcIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gKG8gPSBfX2RlY29yYXRlKFtzXSwgZSkpO1xufSkoY2MuQ29tcG9uZW50KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGw7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/env.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd6367RuL4ROs7ur5md6t/Gj', 'env');
// scripts/env.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.env = exports.EM = void 0;
exports.EM = {
  PROD: "PROD",
  TEST: "TEST"
};
exports.env = {
  version: "1.0.0",
  mode: exports.EM.PROD,
  network: {
    server: "",
    retryT: 2,
    defaultRetryCnt: 3,
    resourceURL: ""
  },
  game: "sudoku",
  name: "每天数独",
  logo: 0,
  noAds: !1
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZW52LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW52IiwiRU0iLCJQUk9EIiwiVEVTVCIsInZlcnNpb24iLCJtb2RlIiwibmV0d29yayIsInNlcnZlciIsInJldHJ5VCIsImRlZmF1bHRSZXRyeUNudCIsInJlc291cmNlVVJMIiwiZ2FtZSIsIm5hbWUiLCJsb2dvIiwibm9BZHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3QztBQUNBRCxPQUFPLENBQUNFLEdBQVIsR0FBY0YsT0FBTyxDQUFDRyxFQUFSLEdBQWEsS0FBSyxDQUFoQztBQUNBSCxPQUFPLENBQUNHLEVBQVIsR0FBYTtFQUFDQyxJQUFJLEVBQUUsTUFBUDtFQUFlQyxJQUFJLEVBQUU7QUFBckIsQ0FBYjtBQUNBTCxPQUFPLENBQUNFLEdBQVIsR0FBYztFQUNWSSxPQUFPLEVBQUUsT0FEQztFQUVWQyxJQUFJLEVBQUVQLE9BQU8sQ0FBQ0csRUFBUixDQUFXQyxJQUZQO0VBR1ZJLE9BQU8sRUFBRTtJQUFDQyxNQUFNLEVBQUUsRUFBVDtJQUFhQyxNQUFNLEVBQUUsQ0FBckI7SUFBd0JDLGVBQWUsRUFBRSxDQUF6QztJQUE0Q0MsV0FBVyxFQUFFO0VBQXpELENBSEM7RUFJVkMsSUFBSSxFQUFFLFFBSkk7RUFLVkMsSUFBSSxFQUFFLE1BTEk7RUFNVkMsSUFBSSxFQUFFLENBTkk7RUFPVkMsS0FBSyxFQUFFLENBQUM7QUFQRSxDQUFkIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbmV4cG9ydHMuZW52ID0gZXhwb3J0cy5FTSA9IHZvaWQgMDtcbmV4cG9ydHMuRU0gPSB7UFJPRDogXCJQUk9EXCIsIFRFU1Q6IFwiVEVTVFwifTtcbmV4cG9ydHMuZW52ID0ge1xuICAgIHZlcnNpb246IFwiMS4wLjBcIixcbiAgICBtb2RlOiBleHBvcnRzLkVNLlBST0QsXG4gICAgbmV0d29yazoge3NlcnZlcjogXCJcIiwgcmV0cnlUOiAyLCBkZWZhdWx0UmV0cnlDbnQ6IDMsIHJlc291cmNlVVJMOiBcIlwifSxcbiAgICBnYW1lOiBcInN1ZG9rdVwiLFxuICAgIG5hbWU6IFwi5q+P5aSp5pWw54usXCIsXG4gICAgbG9nbzogMCxcbiAgICBub0FkczogITFcbn07XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/evts.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '42cc1Gb2IdEbZRAT34iQX1H', 'evts');
// scripts/evts.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _tE = require("tE");

var i = function () {
  function t() {}

  t.chE = new _tE["default"]();
  t.plE = new _tE["default"]();
  t.usE = new _tE["default"]();
  t.adE = new _tE["default"]();
  t.laE = new _tE["default"]();
  t.opE = new _tE["default"]();
  t.COIN_CHG = "COIN_CHG";
  t.POWER_CHG = "POWER_CHG";
  t.EXP_CHG = "EXP_CHG";
  t.LEV_CHG = "LEV_CHG";
  t.Slider_Chg = "Slider_Chg";
  t.MAIL_Chg = "MAIL_Chg";
  t.FINISH_PUZZLE = "FINISH_PUZZLE";
  t.UNLOCK_PUZZLE = "UNLOCK_PUZZLE";
  t.PURCHASED = "PURCHASED";
  t.LOSEHEART = "LOSEHEART";
  t.UPDATESCORE = "UPDATESCORE";
  t.MAINJUMP = "MAINJUMP";
  t.UPDTASK = "UPDTASK";
  t.UPDJIGSAW = "UPDJIGSAW";
  t.SHOWVIDEOSHARE = "SHOWVIDEOSHARE";
  t.UPDMAIL = "UPDMAIL";
  t.UPDJIGSAWGAME = "UPDJIGSAWGAME";
  t.UPD_MAIN_RED = "UPD_MAIN_RED";
  t.UPD_PANEL = "UPD_PANEL";
  t.FINISH_PUZZLELV = "FINISH_PUZZLELV";
  t.UPD_NEW_GIFT = "UPD_NEW_GIFT";
  t.HIDE_WX_BTNS = "HIDE_WX_BTNS";
  t.CHECK_WX_BTNS = "CHECK_WX_BTNS";
  t.POP_FESTIVAL = "POP_FESTIVAL";
  t.UPD_TOP_HEADINFO = "UPD_TOP_HEADINFO";
  t.UPD_FES_RED = "UPD_FES_RED";
  t.AD_MAX = "AD_MAX";
  t.UPDATA_LEVEL_TMP = "UPDATA_LEVEL_TMP";
  t.ADD_DESKTOP = "ADD_DESKTOP";
  t.Desktop_Chg = "Desktop_Chg";
  t.ALIPAY_MAIN = "ALIPAY_MAIN";
  t.SKIN_CHG = "SKIN_CHG";
  t.SIGN_RED = "SIGN_RED";
  t.REFRESH_CFGDATA = "REFRESH_CFGDATA";
  return t;
}();

exports["default"] = i;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZXZ0cy5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl90RSIsInJlcXVpcmUiLCJpIiwidCIsImNoRSIsInBsRSIsInVzRSIsImFkRSIsImxhRSIsIm9wRSIsIkNPSU5fQ0hHIiwiUE9XRVJfQ0hHIiwiRVhQX0NIRyIsIkxFVl9DSEciLCJTbGlkZXJfQ2hnIiwiTUFJTF9DaGciLCJGSU5JU0hfUFVaWkxFIiwiVU5MT0NLX1BVWlpMRSIsIlBVUkNIQVNFRCIsIkxPU0VIRUFSVCIsIlVQREFURVNDT1JFIiwiTUFJTkpVTVAiLCJVUERUQVNLIiwiVVBESklHU0FXIiwiU0hPV1ZJREVPU0hBUkUiLCJVUERNQUlMIiwiVVBESklHU0FXR0FNRSIsIlVQRF9NQUlOX1JFRCIsIlVQRF9QQU5FTCIsIkZJTklTSF9QVVpaTEVMViIsIlVQRF9ORVdfR0lGVCIsIkhJREVfV1hfQlROUyIsIkNIRUNLX1dYX0JUTlMiLCJQT1BfRkVTVElWQUwiLCJVUERfVE9QX0hFQURJTkZPIiwiVVBEX0ZFU19SRUQiLCJBRF9NQVgiLCJVUERBVEFfTEVWRUxfVE1QIiwiQUREX0RFU0tUT1AiLCJEZXNrdG9wX0NoZyIsIkFMSVBBWV9NQUlOIiwiU0tJTl9DSEciLCJTSUdOX1JFRCIsIlJFRlJFU0hfQ0ZHREFUQSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLEdBQUcsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBakI7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFJLFlBQVk7RUFDakIsU0FBU0MsQ0FBVCxHQUFhLENBQUU7O0VBQ2ZBLENBQUMsQ0FBQ0MsR0FBRixHQUFRLElBQUlKLEdBQUcsV0FBUCxFQUFSO0VBQ0FHLENBQUMsQ0FBQ0UsR0FBRixHQUFRLElBQUlMLEdBQUcsV0FBUCxFQUFSO0VBQ0FHLENBQUMsQ0FBQ0csR0FBRixHQUFRLElBQUlOLEdBQUcsV0FBUCxFQUFSO0VBQ0FHLENBQUMsQ0FBQ0ksR0FBRixHQUFRLElBQUlQLEdBQUcsV0FBUCxFQUFSO0VBQ0FHLENBQUMsQ0FBQ0ssR0FBRixHQUFRLElBQUlSLEdBQUcsV0FBUCxFQUFSO0VBQ0FHLENBQUMsQ0FBQ00sR0FBRixHQUFRLElBQUlULEdBQUcsV0FBUCxFQUFSO0VBQ0FHLENBQUMsQ0FBQ08sUUFBRixHQUFhLFVBQWI7RUFDQVAsQ0FBQyxDQUFDUSxTQUFGLEdBQWMsV0FBZDtFQUNBUixDQUFDLENBQUNTLE9BQUYsR0FBWSxTQUFaO0VBQ0FULENBQUMsQ0FBQ1UsT0FBRixHQUFZLFNBQVo7RUFDQVYsQ0FBQyxDQUFDVyxVQUFGLEdBQWUsWUFBZjtFQUNBWCxDQUFDLENBQUNZLFFBQUYsR0FBYSxVQUFiO0VBQ0FaLENBQUMsQ0FBQ2EsYUFBRixHQUFrQixlQUFsQjtFQUNBYixDQUFDLENBQUNjLGFBQUYsR0FBa0IsZUFBbEI7RUFDQWQsQ0FBQyxDQUFDZSxTQUFGLEdBQWMsV0FBZDtFQUNBZixDQUFDLENBQUNnQixTQUFGLEdBQWMsV0FBZDtFQUNBaEIsQ0FBQyxDQUFDaUIsV0FBRixHQUFnQixhQUFoQjtFQUNBakIsQ0FBQyxDQUFDa0IsUUFBRixHQUFhLFVBQWI7RUFDQWxCLENBQUMsQ0FBQ21CLE9BQUYsR0FBWSxTQUFaO0VBQ0FuQixDQUFDLENBQUNvQixTQUFGLEdBQWMsV0FBZDtFQUNBcEIsQ0FBQyxDQUFDcUIsY0FBRixHQUFtQixnQkFBbkI7RUFDQXJCLENBQUMsQ0FBQ3NCLE9BQUYsR0FBWSxTQUFaO0VBQ0F0QixDQUFDLENBQUN1QixhQUFGLEdBQWtCLGVBQWxCO0VBQ0F2QixDQUFDLENBQUN3QixZQUFGLEdBQWlCLGNBQWpCO0VBQ0F4QixDQUFDLENBQUN5QixTQUFGLEdBQWMsV0FBZDtFQUNBekIsQ0FBQyxDQUFDMEIsZUFBRixHQUFvQixpQkFBcEI7RUFDQTFCLENBQUMsQ0FBQzJCLFlBQUYsR0FBaUIsY0FBakI7RUFDQTNCLENBQUMsQ0FBQzRCLFlBQUYsR0FBaUIsY0FBakI7RUFDQTVCLENBQUMsQ0FBQzZCLGFBQUYsR0FBa0IsZUFBbEI7RUFDQTdCLENBQUMsQ0FBQzhCLFlBQUYsR0FBaUIsY0FBakI7RUFDQTlCLENBQUMsQ0FBQytCLGdCQUFGLEdBQXFCLGtCQUFyQjtFQUNBL0IsQ0FBQyxDQUFDZ0MsV0FBRixHQUFnQixhQUFoQjtFQUNBaEMsQ0FBQyxDQUFDaUMsTUFBRixHQUFXLFFBQVg7RUFDQWpDLENBQUMsQ0FBQ2tDLGdCQUFGLEdBQXFCLGtCQUFyQjtFQUNBbEMsQ0FBQyxDQUFDbUMsV0FBRixHQUFnQixhQUFoQjtFQUNBbkMsQ0FBQyxDQUFDb0MsV0FBRixHQUFnQixhQUFoQjtFQUNBcEMsQ0FBQyxDQUFDcUMsV0FBRixHQUFnQixhQUFoQjtFQUNBckMsQ0FBQyxDQUFDc0MsUUFBRixHQUFhLFVBQWI7RUFDQXRDLENBQUMsQ0FBQ3VDLFFBQUYsR0FBYSxVQUFiO0VBQ0F2QyxDQUFDLENBQUN3QyxlQUFGLEdBQW9CLGlCQUFwQjtFQUNBLE9BQU94QyxDQUFQO0FBQ0gsQ0EzQ08sRUFBUjs7QUE0Q0FMLE9BQU8sV0FBUCxHQUFrQkksQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF90RSA9IHJlcXVpcmUoXCJ0RVwiKTtcbnZhciBpID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiB0KCkge31cbiAgICB0LmNoRSA9IG5ldyBfdEUuZGVmYXVsdCgpO1xuICAgIHQucGxFID0gbmV3IF90RS5kZWZhdWx0KCk7XG4gICAgdC51c0UgPSBuZXcgX3RFLmRlZmF1bHQoKTtcbiAgICB0LmFkRSA9IG5ldyBfdEUuZGVmYXVsdCgpO1xuICAgIHQubGFFID0gbmV3IF90RS5kZWZhdWx0KCk7XG4gICAgdC5vcEUgPSBuZXcgX3RFLmRlZmF1bHQoKTtcbiAgICB0LkNPSU5fQ0hHID0gXCJDT0lOX0NIR1wiO1xuICAgIHQuUE9XRVJfQ0hHID0gXCJQT1dFUl9DSEdcIjtcbiAgICB0LkVYUF9DSEcgPSBcIkVYUF9DSEdcIjtcbiAgICB0LkxFVl9DSEcgPSBcIkxFVl9DSEdcIjtcbiAgICB0LlNsaWRlcl9DaGcgPSBcIlNsaWRlcl9DaGdcIjtcbiAgICB0Lk1BSUxfQ2hnID0gXCJNQUlMX0NoZ1wiO1xuICAgIHQuRklOSVNIX1BVWlpMRSA9IFwiRklOSVNIX1BVWlpMRVwiO1xuICAgIHQuVU5MT0NLX1BVWlpMRSA9IFwiVU5MT0NLX1BVWlpMRVwiO1xuICAgIHQuUFVSQ0hBU0VEID0gXCJQVVJDSEFTRURcIjtcbiAgICB0LkxPU0VIRUFSVCA9IFwiTE9TRUhFQVJUXCI7XG4gICAgdC5VUERBVEVTQ09SRSA9IFwiVVBEQVRFU0NPUkVcIjtcbiAgICB0Lk1BSU5KVU1QID0gXCJNQUlOSlVNUFwiO1xuICAgIHQuVVBEVEFTSyA9IFwiVVBEVEFTS1wiO1xuICAgIHQuVVBESklHU0FXID0gXCJVUERKSUdTQVdcIjtcbiAgICB0LlNIT1dWSURFT1NIQVJFID0gXCJTSE9XVklERU9TSEFSRVwiO1xuICAgIHQuVVBETUFJTCA9IFwiVVBETUFJTFwiO1xuICAgIHQuVVBESklHU0FXR0FNRSA9IFwiVVBESklHU0FXR0FNRVwiO1xuICAgIHQuVVBEX01BSU5fUkVEID0gXCJVUERfTUFJTl9SRURcIjtcbiAgICB0LlVQRF9QQU5FTCA9IFwiVVBEX1BBTkVMXCI7XG4gICAgdC5GSU5JU0hfUFVaWkxFTFYgPSBcIkZJTklTSF9QVVpaTEVMVlwiO1xuICAgIHQuVVBEX05FV19HSUZUID0gXCJVUERfTkVXX0dJRlRcIjtcbiAgICB0LkhJREVfV1hfQlROUyA9IFwiSElERV9XWF9CVE5TXCI7XG4gICAgdC5DSEVDS19XWF9CVE5TID0gXCJDSEVDS19XWF9CVE5TXCI7XG4gICAgdC5QT1BfRkVTVElWQUwgPSBcIlBPUF9GRVNUSVZBTFwiO1xuICAgIHQuVVBEX1RPUF9IRUFESU5GTyA9IFwiVVBEX1RPUF9IRUFESU5GT1wiO1xuICAgIHQuVVBEX0ZFU19SRUQgPSBcIlVQRF9GRVNfUkVEXCI7XG4gICAgdC5BRF9NQVggPSBcIkFEX01BWFwiO1xuICAgIHQuVVBEQVRBX0xFVkVMX1RNUCA9IFwiVVBEQVRBX0xFVkVMX1RNUFwiO1xuICAgIHQuQUREX0RFU0tUT1AgPSBcIkFERF9ERVNLVE9QXCI7XG4gICAgdC5EZXNrdG9wX0NoZyA9IFwiRGVza3RvcF9DaGdcIjtcbiAgICB0LkFMSVBBWV9NQUlOID0gXCJBTElQQVlfTUFJTlwiO1xuICAgIHQuU0tJTl9DSEcgPSBcIlNLSU5fQ0hHXCI7XG4gICAgdC5TSUdOX1JFRCA9IFwiU0lHTl9SRURcIjtcbiAgICB0LlJFRlJFU0hfQ0ZHREFUQSA9IFwiUkVGUkVTSF9DRkdEQVRBXCI7XG4gICAgcmV0dXJuIHQ7XG59KSgpO1xuZXhwb3J0cy5kZWZhdWx0ID0gaTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/festivalMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b79dds9PTVL16Wia/aps1uK', 'festivalMgr');
// scripts/festivalMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.fesTaskKey = void 0;
var a;

var _time = require("time");

var _cfgMgr = require("cfgMgr");

var _pInfo = require("pInfo");

var _bagMgr = require("bagMgr");

var p = cc._decorator;
var d = p.ccclass;
p.property;

(function (t) {
  t.raceScore = "race_score";
  t.raceTimes = "race_times";
  t.costPower = "cost_power";
  t.throughMain = "through_main";
  t.finishPuzzle = "finish_puzzle";
})(a = exports.fesTaskKey || (exports.fesTaskKey = {}));

var h = function () {
  function t() {
    this.fesBeginTime = 0;
    this.fesEndTime = 0;
    this.fesTaskDatas = null;
    this.jigsawNum = 1;
  }

  var e;
  e = t;
  Object.defineProperty(t, "ins", {
    get: function get() {
      return this._ins || (this._ins = new e());
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.isFesEnd = function () {
    var t = _time["default"].ins.serverTime;
    return t < this.fesBeginTime || t >= this.fesEndTime;
  };

  t.prototype.isFesNotOpen = function () {
    return _time["default"].ins.serverTime < this.fesBeginTime;
  };

  t.prototype.getTodayMaxPro = function () {
    var t = _time["default"].ins.serverTime;
    var e = Math.floor((t - this.fesBeginTime) / 86400);
    return e < 0 ? 0 : e;
  };

  t.prototype.getNowTaskIdx = function () {
    var t = this.getTodayMaxPro();

    var e = _pInfo["default"].ins.getFesPro();

    return Math.min(e, t, 24);
  };

  t.prototype.getNowTaskPro = function () {
    return _pInfo["default"].ins.getFesTaskPro();
  };

  t.prototype.getFesPro = function () {
    return _pInfo["default"].ins.getFesPro();
  };

  t.prototype.getNowTaskData = function () {
    var t = this.getNowTaskIdx();
    return this.fesTaskDatas[t];
  };

  t.prototype.isTaskLocked = function () {
    return _pInfo["default"].ins.getFesPro() > this.getTodayMaxPro();
  };

  t.prototype.isTaskAllFinished = function () {
    return _pInfo["default"].ins.getFesPro() >= this.fesTaskDatas.length;
  };

  t.prototype.updPro = function (t, e) {
    if (!this.isTaskLocked() && this.fesTaskDatas && this.getNowTaskData().get_by == t) {
      var o = _pInfo["default"].ins.getFesTaskPro();

      var n = 0;

      switch (t) {
        case a.raceScore:
          n = e;
          break;

        default:
          n = e + Number(o);
      }

      _pInfo["default"].ins.setFesTaskPro(n);
    }
  };

  t.prototype.finishFesTask = function () {
    var t = _pInfo["default"].ins;
    var e = t.getFesPro();
    t.setFesPro(e + 1);
    t.setFesTaskPro(0);
  };

  t.prototype.isPuzzleLocked = function () {
    return this.getFesPuzzleLv() - 1 > this.getTodayMaxPro();
  };

  t.prototype.getFesPuzzleLv = function () {
    return _pInfo["default"].ins.getFesPuzzleLv();
  };

  t.prototype.finishFesPuzzleLv = function () {
    var t = _pInfo["default"].ins.getFesPuzzleLv();

    _pInfo["default"].ins.setFesPuzzleLv(t + 1);
  };

  t.prototype.clearFesPuzzleLv = function () {
    var t = _pInfo["default"].ins;
    t.setFesPuzzleLv(1);
    t.setFesPro(0);
    t.setFesTaskPro(0);
  };

  t.prototype.getRedNum = function () {
    var t = 0;
    if (!this.fesTaskDatas) return t;

    if (this.isPuzzleLocked() || t++, !this.isTaskLocked()) {
      var e = this.getNowTaskData().nums;
      this.getNowTaskPro() >= e && t++;
    }

    return t;
  };

  t.prototype.updateFestivalData = function () {
    var t;
    return __awaiter(this, void 0, void 0, function () {
      var e;
      var o;
      return __generator(this, function (n) {
        switch (n.label) {
          case 0:
            return e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.festival_tasks, o = (null == e ? void 0 : e.fesName) || "newYear", _pInfo["default"].ins.getFesName() != o && (_pInfo["default"].ins.setFesName(o), this.clearFesPuzzleLv()), this.fesBeginTime = Number(null == e ? void 0 : e.beginTime) || 1707148800, this.fesEndTime = Number(null == e ? void 0 : e.endTime) || this.fesBeginTime + 216e4, this.fesTaskDatas = null == e ? void 0 : e.rules, this.jigsawNum = (null == e ? void 0 : e.jigsawNum) || 1, [2];

          case 1:
            return [2, n.sent()];
        }
      });
    });
  };

  t.prototype.getFesPuzzleInfo = function () {
    var t = this.fesPuzzleData;
    var e = t[0];
    var o = t[1];
    var n = this.getFesPuzzleLv() - 1;
    var i = t[2 + o + (0 == n ? 0 : t[2 + n - 1] + n)];
    return {
      id: n,
      type: e,
      size: 255 & i,
      diff: i >> 8 & 255
    };
  };

  t.prototype.getFesPuzzleData = function () {
    for (var t = this.fesPuzzleData, e = t[1], o = this.getFesPuzzleLv() - 1, n = 0 == o ? 0 : t[2 + o - 1] + o, i = t[2 + o] + o, r = t[2 + e + n], a = Math.pow(255 & r, 2), s = 2 + e + i + 1, c = [], l = 0, u = 2 + e + n + 1; u < s; u++) {
      for (var p = t[u], d = 0; d < 32; d++) {
        var h = 1 << d & 4294967295;
        if (c[l++] = (p & h) == h ? 1 : 0, l == a) break;
      }

      if (l == a) break;
    }

    return c;
  };

  t.prototype.getFesPuzzleDiff = function () {
    return this.getFesPuzzleInfo().diff;
  };

  t.prototype.getFesLevelCost = function () {
    var t = e.ins.getFesPuzzleDiff();
    var o = _cfgMgr["default"].serverCfg.difficulty_rules.rules;
    var n = 10;
    var i = 1;

    for (var r in o) {
      var a = o[r];
      if (n = Number(a.times_val), i === t) break;
      i++;
    }

    return n;
  };

  t.prototype.getFesPuzzleSprFrame = function () {
    var t = this;
    return new Promise(function (e, o) {
      t.bundle.load("levels/" + t.getFesPuzzleLv(), cc.SpriteFrame, function (t, n) {
        t ? o() : e(n);
      });
    });
  };

  t.prototype.getFesDownSprFrame = function () {
    var t = this;
    return new Promise(function (e, o) {
      t.bundle.load("chapter", cc.SpriteFrame, function (t, n) {
        t ? o() : e(n);
      });
    });
  };

  t.prototype.isPuzzleMax = function () {
    return e.ins.getFesPuzzleLv() > 25;
  };

  t.prototype.isJigsawMax = function () {
    return _bagMgr["default"].ins.getItemCount("newYear_pieces") >= 105 * this.jigsawNum;
  };

  t.prototype.getJigsawNum = function () {
    return this.jigsawNum;
  };

  return e = __decorate([d], t);
}();

exports["default"] = h;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/dayReward.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '15b97t+7MtFCLfTRDvhWmnX', 'dayReward');
// scripts/dayReward.js

"use strict";

//电子邮件puhalskijsemen@gmail.com
//源码网站 开vpn全局模式打开 http://web3incubators.com/
//电报https://t.me/gamecode999
//网页客服 http://web3incubators.com/kefu.html
var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _res = require("res");

var _item = require("item");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.maskNode = null;
    e.recivedNode = null;
    e.canRecive = null;
    e.rewardItem = null;
    e.rewards = null;
    e.aniDatas = [];
    e.lightNode = null;
    e.showLight = !1;
    return e;
  }

  __extends(e, t);

  e.prototype.initItem = function (t) {
    var e = this;

    if (t) {
      var o = 0;

      var n = function n(_n) {
        var r = t[_n],
            c = i.rewards.children[o];
        c || (c = cc.instantiate(i.rewardItem));

        _res["default"].ins.getBundleByString("resSps").then(function (t) {
          t.load("spine/light/action", sp.SkeletonData, function (t, o) {
            if (!t && e.node && e.node.isValid) {
              var n = new cc.Node(),
                  i = n.addComponent(sp.Skeleton);
              i.skeletonData = o, i.animation = "animation", n.parent = c, e.lightNode = n, n.active = e.showLight;
            }
          });
        })["catch"](function (t) {
          console.error("RTool.ins.getBundleByString('resSps')", t);
        });

        c.parent = i.rewards;
        var l = c.getComponent(_item["default"]);
        l && l.initByData(_n, r);
        var u = {};
        u.itemId = _n;
        u.itemNode = c;
        u.value = Number(r);
        i.aniDatas.push(u);
        o++;
      };

      var i = this;

      for (var r in t) {
        n(r);
      }
    }
  };

  e.prototype.setDefault = function () {
    this.maskNode.active = !1;
    this.recivedNode.active = !1;
    this.canRecive.active = !1;
    this.showLight = !0;
    this.lightNode && (this.lightNode.active = !0);
  };

  e.prototype.setCanRecive = function () {
    this.maskNode.active = !1;
    this.recivedNode.active = !1;
    this.canRecive.active = !0;
    this.showLight = !0;
    this.lightNode && (this.lightNode.active = !0);
  };

  e.prototype.setRecived = function () {
    this.maskNode.active = !0;
    this.recivedNode.active = !0;
    this.canRecive.active = !1;
    this.showLight = !1;
    this.lightNode && (this.lightNode.active = !1);
  };

  __decorate([u(cc.Node)], e.prototype, "maskNode", void 0);

  __decorate([u(cc.Node)], e.prototype, "recivedNode", void 0);

  __decorate([u(cc.Node)], e.prototype, "canRecive", void 0);

  __decorate([u(cc.Node)], e.prototype, "rewardItem", void 0);

  __decorate([u(cc.Node)], e.prototype, "rewards", void 0);

  return __decorate([l], e);
}(cc.Component);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/PuzzleCell.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd167dLHxotLS6RqGxYST/a2', 'PuzzleCell');
// scripts/PuzzleCell.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

exports["default"] = function (t) {
  this.index = -1, this.column = -1, this.row = -1, this.solution = null, this.userSolution = null, this.aiSolution = null, Object.assign(this, t);
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcUHV6emxlQ2VsbC5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInQiLCJpbmRleCIsImNvbHVtbiIsInJvdyIsInNvbHV0aW9uIiwidXNlclNvbHV0aW9uIiwiYWlTb2x1dGlvbiIsImFzc2lnbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBRCxPQUFPLFdBQVAsR0FBa0IsVUFBVUUsQ0FBVixFQUFhO0VBQzFCLEtBQUtDLEtBQUwsR0FBYSxDQUFDLENBQWYsRUFDSyxLQUFLQyxNQUFMLEdBQWMsQ0FBQyxDQURwQixFQUVLLEtBQUtDLEdBQUwsR0FBVyxDQUFDLENBRmpCLEVBR0ssS0FBS0MsUUFBTCxHQUFnQixJQUhyQixFQUlLLEtBQUtDLFlBQUwsR0FBb0IsSUFKekIsRUFLSyxLQUFLQyxVQUFMLEdBQWtCLElBTHZCLEVBTUlWLE1BQU0sQ0FBQ1csTUFBUCxDQUFjLElBQWQsRUFBb0JQLENBQXBCLENBTko7QUFPSCxDQVJEIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgKHRoaXMuaW5kZXggPSAtMSksXG4gICAgICAgICh0aGlzLmNvbHVtbiA9IC0xKSxcbiAgICAgICAgKHRoaXMucm93ID0gLTEpLFxuICAgICAgICAodGhpcy5zb2x1dGlvbiA9IG51bGwpLFxuICAgICAgICAodGhpcy51c2VyU29sdXRpb24gPSBudWxsKSxcbiAgICAgICAgKHRoaXMuYWlTb2x1dGlvbiA9IG51bGwpLFxuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIHQpO1xufTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/guide.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a0385aQUj5Mn4U3i4O115Wr', 'guide');
// scripts/guide.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _res = require("res");

var _sound = require("sound");

var _vb = require("vb");

var _grid = require("grid");

var _global = require("global");

var _pInfo = require("pInfo");

var _game = require("game");

var f = cc._decorator;
var g = f.ccclass;
var y = f.property;
var m = cc.color(252, 254, 94);
var v = cc.color(169, 109, 52, 255);
var _ = {
  2e4: "数字会告诉你一行中有多少方块需要涂上颜色。试试吧！",
  20001: "太棒了！如果有多个数字，那么每段涂色的方块中间至少会有一个空格。",
  20002: "顺序也很重要。涂色的方块的个数的顺序，需要同数字的顺序一致。",
  20003: "恭喜！您已完成教程！让我们去练习一下吧！"
};

var b = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.top = null;
    e.fadeNode = null;
    e.fadeAni = null;
    e.dialogAni = null;
    e.mapAni = null;
    e.hintsLbl = [];
    e.grids = [];
    e.contentLbl = null;
    e.glows = [];
    e.arrows = [];
    e.arrowTops = [];
    e.finger = null;
    e.soundIdx = 1;
    e.emptyArr = [];
    e.steps = [{
      data: [1, 1, 1, 1, 1],
      hint: [5],
      x: [231],
      width: [472],
      content: _[2e4]
    }, {
      data: [1, 1, 0, 1, 1],
      hint: [2, 2],
      x: [99, 363],
      width: [208, 208],
      content: _[20001]
    }, {
      data: [1, 0, 1, 1, 1],
      hint: [1, 3],
      x: [55, 319],
      width: [120, 296],
      content: _[20002]
    }, {
      content: _[20003]
    }];
    e.curStep = 0;
    e.maxStep = e.steps.length - 1;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t = this;
    _global["default"].padScale && (cc.view.setDesignResolutionSize(720, 1280, cc.ResolutionPolicy.FIXED_HEIGHT), this.top.node.scale = _global["default"].padScale);

    _sound["default"].ins.playBGM();

    this.updateView(1);
    this.fadeAni.on(cc.Animation.EventType.FINISHED, this.stepDone, this);
    this.mapAni.on(cc.Animation.EventType.FINISHED, this.reCanTouch, this);
    var e = cc.Node.EventType.TOUCH_START;
    var o = cc.Node.EventType.TOUCH_MOVE;
    var n = cc.Node.EventType.TOUCH_END;
    var i = cc.Node.EventType.TOUCH_CANCEL;
    this.grids.forEach(function (r) {
      r.on(e, t.touchStart, t), r.on(o, t.touchMove, t), r.on(n, t.touchEnd, t), r.on(i, t.touchEnd, t);
    });

    _res["default"].ins.lSF("game/normal/top1", this.top);

    _res["default"].ins.getBundleByString("prefab").then(function (e) {
      e.load("skin/girl1", cc.Prefab, function (e, o) {
        if (t.node && !e && t.node.isValid) {
          var n = cc.instantiate(o);
          t.dialogAni.node.parent.addChild(n), n.setPosition(250, -251), n.setSiblingIndex(0);
          var i = t.topGirlSk = n.getComponent(sp.Skeleton);
          i.animation = _game.grilAni.idle, i.setEndListener(t.playGirlEnd.bind(t));
        }

        if (e) throw new Error(e.message);
      });
    })["catch"](function (t) {
      console.error("guide scene girl load fail", t);
    });

    this.preLoad();
  };

  e.prototype.playGirlAni = function (t) {
    t != this.curGirlAni && this.topGirlSk && (this.curGirlAni = t, this.topGirlSk.animation = t, (this.topGirlSk.loop = t == _game.grilAni.idle) && (this.curGirlAni = null));
  };

  e.prototype.playGirlEnd = function () {
    this.curGirlAni != _game.grilAni.idle && (this.curGirlAni = null, this.playGirlAni && this.playGirlAni(_game.grilAni.idle));
  };

  e.prototype.touchStart = function (t) {
    var e = t.getLocation();
    this.chg(e);
  };

  e.prototype.touchMove = function (t) {
    var e = t.getLocation();
    this.chg(e);
  };

  e.prototype.touchEnd = function () {
    this.soundIdx = 1;
  };

  e.prototype.chg = function (t) {
    var e = this;
    var o = this.grids;
    o.forEach(function (n) {
      if (n.getBoundingBoxToWorld().contains(t)) {
        var i = n.getComponent(_grid["default"]);

        if (i.isRight && i.isEmpty) {
          _vb["default"].p(_vb.VEnum3.SHORT);

          _sound["default"].ins.play("tile_note_" + e.soundIdx);

          e.soundIdx++;
          i.select(1);

          for (var r = e.hintsLbl, a = e.steps[e.curStep].hint, s = 0, p = r.length; s < p; s++) {
            var d = r[s].node;

            if (d.active && d.color.equals(m)) {
              for (var h = a[s], f = 1 == s ? a[s - 1] + 1 : 0, g = 0, y = f; y < h + f; y++) {
                var _ = o[y].getComponent(_grid["default"]);

                !_.isEmpty && _.isRight && g++;
              }

              g == h && (d.color = v);
            }
          }

          if (e.curRightCount++, e.curRightCount == e.allRightCount) {
            e.emptyArr.forEach(function (t) {
              o[t].getComponent(_grid["default"]).select(0, !0);
            });

            for (var b = 0; b < 5; b++) {
              o[b].getComponent(_grid["default"]).playHL(0.04 * b);
            }

            e.fadeNode.active = !0;
            e.fadeAni.play();
          }
        }
      }
    });
  };

  e.prototype.stepDone = function () {
    this.fadeNode.active = !1;
    this.finger.active = !1;
    this.curStep++;
    this.curStep == this.maxStep && (this.playGirlAni(_game.grilAni.happy), _pInfo["default"].ins.setGuideDone(), this.getComponent(cc.Animation).play());
    this.mapAni.play("mapHide");

    _idx.platform.reportEvent(_idx.ERepEvt.guide, {
      step: this.curStep
    });
  };

  e.prototype.updateView = function (t) {
    this.curStep = this.curStep > this.maxStep ? this.maxStep : this.curStep;
    var e = this.curStep;
    var o = this.steps[e];
    var n = o.data;
    var i = o.hint;
    var r = o.content;
    var a = o.x;
    var s = o.width;
    this.contentLbl.string = "        " + r;
    var c = this.arrows;

    if (c.forEach(function (t) {
      return t.clear();
    }), e < this.maxStep) {
      var l = this.grids;
      var p = this.emptyArr;
      p.length = 0;

      for (var d = 0, h = void 0, f = 0; f < 5; f++) {
        var g = l[f];
        var y = n[f];
        d += y;
        y || (p.push(f), h = g);
        g.setSiblingIndex(f + 2);
        var v = g.getComponent(_grid["default"]);
        v.init(y);
        v.isEmpty = !0;
        v.emptyNode.active = !0;
        v.stateNodes.forEach(function (t) {
          t.active = !1;
        });
      }

      h && h.setSiblingIndex(0);
      this.curRightCount = 0;
      this.allRightCount = d;

      for (var _ = this.glows, b = this.arrowTops, w = this.hintsLbl, S = void (f = 0), T = i.length; f < 2; f++) {
        S = 2 == e || 1 == e ? 1 - f : f;
        var I = _[f];
        var D = c[S];
        var P = b[S];
        var k = w[f];

        if (I.active = D.node.active = P.active = k.node.active = f < T) {
          k.string = i[f] + "";
          k.node.setSiblingIndex(0);
          k.node.color = m;
          I.x = P.x = a[f];
          I.width = s[f];
          var R = D.node.position;
          var N = I.position;
          D.moveTo(0, 0);
          D.quadraticCurveTo((R.x + N.x) / 2, 150, N.x, 44);
          D.stroke();
        }
      }

      this.mapAni.play("mapShow");
    }

    t || this.dialogAni.play();
    this.canTouch = !1;
  };

  e.prototype.reCanTouch = function (t, e) {
    "mapShow" == e.name ? this.canTouch = !0 : this.updateView();
  };

  e.prototype.onQuit = function () {
    _global["default"].byGuide = 1;

    _pInfo.chgScene(_pInfo.sceneType.game, {
      gameType: _pInfo.gameType.practice
    });
  };

  e.prototype.preLoad = function () {
    cc.director.preloadScene(_pInfo.sceneType.game);
  };

  __decorate([y(cc.Sprite)], e.prototype, "top", void 0);

  __decorate([y(cc.Node)], e.prototype, "fadeNode", void 0);

  __decorate([y(cc.Animation)], e.prototype, "fadeAni", void 0);

  __decorate([y(cc.Animation)], e.prototype, "dialogAni", void 0);

  __decorate([y(cc.Animation)], e.prototype, "mapAni", void 0);

  __decorate([y([cc.Label])], e.prototype, "hintsLbl", void 0);

  __decorate([y([cc.Node])], e.prototype, "grids", void 0);

  __decorate([y(cc.Label)], e.prototype, "contentLbl", void 0);

  __decorate([y([cc.Node])], e.prototype, "glows", void 0);

  __decorate([y([cc.Graphics])], e.prototype, "arrows", void 0);

  __decorate([y([cc.Node])], e.prototype, "arrowTops", void 0);

  __decorate([y(cc.Node)], e.prototype, "finger", void 0);

  return __decorate([g], e);
}(cc.Component);

exports["default"] = b;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/dynamicBtnBg.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fa179uJATZCx7GK8QWUgMQD', 'dynamicBtnBg');
// scripts/dynamicBtnBg.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _res = require("res");

var s = cc._decorator;
var c = s.ccclass;
var l = s.property;

var u = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bg = null;
    e.url = "";
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {
    var t = this;
    this.node.active = !1;
    this.url && _res["default"].ins.l(this.url, cc.SpriteFrame, "resSps").then(function (e) {
      t.node && t.node.isValid && (t.bg.spriteFrame = e, t.node.active = !0, t.destroy());
    })["catch"](function () {
      console.error("getResSpErr");
    });
  };

  __decorate([l(cc.Sprite)], e.prototype, "bg", void 0);

  __decorate([l(cc.String)], e.prototype, "url", void 0);

  return __decorate([c], e);
}(cc.Component);

exports["default"] = u;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZHluYW1pY0J0bkJnLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9yZXMiLCJyZXF1aXJlIiwicyIsImNjIiwiX2RlY29yYXRvciIsImMiLCJjY2NsYXNzIiwibCIsInByb3BlcnR5IiwidSIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJiZyIsInVybCIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsInN0YXJ0Iiwibm9kZSIsImFjdGl2ZSIsImlucyIsIlNwcml0ZUZyYW1lIiwidGhlbiIsImlzVmFsaWQiLCJzcHJpdGVGcmFtZSIsImRlc3Ryb3kiLCJjb25zb2xlIiwiZXJyb3IiLCJfX2RlY29yYXRlIiwiU3ByaXRlIiwiU3RyaW5nIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLElBQUlDLENBQUMsR0FBSSxVQUFVQyxDQUFWLEVBQWE7RUFDbEIsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxFQUFGLEdBQU8sSUFBUDtJQUNBSCxDQUFDLENBQUNJLEdBQUYsR0FBUSxFQUFSO0lBQ0EsT0FBT0osQ0FBUDtFQUNIOztFQUNESyxTQUFTLENBQUNMLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNNLFNBQUYsQ0FBWUMsS0FBWixHQUFvQixZQUFZO0lBQzVCLElBQUlSLENBQUMsR0FBRyxJQUFSO0lBQ0EsS0FBS1MsSUFBTCxDQUFVQyxNQUFWLEdBQW1CLENBQUMsQ0FBcEI7SUFDQSxLQUFLTCxHQUFMLElBQ0lmLElBQUksV0FBSixDQUFhcUIsR0FBYixDQUNLZCxDQURMLENBQ08sS0FBS1EsR0FEWixFQUNpQlosRUFBRSxDQUFDbUIsV0FEcEIsRUFDaUMsUUFEakMsRUFFS0MsSUFGTCxDQUVVLFVBQVVaLENBQVYsRUFBYTtNQUNmRCxDQUFDLENBQUNTLElBQUYsSUFBVVQsQ0FBQyxDQUFDUyxJQUFGLENBQU9LLE9BQWpCLEtBQThCZCxDQUFDLENBQUNJLEVBQUYsQ0FBS1csV0FBTCxHQUFtQmQsQ0FBcEIsRUFBeUJELENBQUMsQ0FBQ1MsSUFBRixDQUFPQyxNQUFQLEdBQWdCLENBQUMsQ0FBMUMsRUFBOENWLENBQUMsQ0FBQ2dCLE9BQUYsRUFBM0U7SUFDSCxDQUpMLFdBS1csWUFBWTtNQUNmQyxPQUFPLENBQUNDLEtBQVIsQ0FBYyxhQUFkO0lBQ0gsQ0FQTCxDQURKO0VBU0gsQ0FaRDs7RUFhQUMsVUFBVSxDQUFDLENBQUN0QixDQUFDLENBQUNKLEVBQUUsQ0FBQzJCLE1BQUosQ0FBRixDQUFELEVBQWlCbkIsQ0FBQyxDQUFDTSxTQUFuQixFQUE4QixJQUE5QixFQUFvQyxLQUFLLENBQXpDLENBQVY7O0VBQ0FZLFVBQVUsQ0FBQyxDQUFDdEIsQ0FBQyxDQUFDSixFQUFFLENBQUM0QixNQUFKLENBQUYsQ0FBRCxFQUFpQnBCLENBQUMsQ0FBQ00sU0FBbkIsRUFBOEIsS0FBOUIsRUFBcUMsS0FBSyxDQUExQyxDQUFWOztFQUNBLE9BQU9ZLFVBQVUsQ0FBQyxDQUFDeEIsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBakI7QUFDSCxDQXhCTyxDQXdCTFIsRUFBRSxDQUFDNkIsU0F4QkUsQ0FBUjs7QUF5QkFsQyxPQUFPLFdBQVAsR0FBa0JXLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9yZXMgPSByZXF1aXJlKFwicmVzXCIpO1xudmFyIHMgPSBjYy5fZGVjb3JhdG9yO1xudmFyIGMgPSBzLmNjY2xhc3M7XG52YXIgbCA9IHMucHJvcGVydHk7XG52YXIgdSA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLmJnID0gbnVsbDtcbiAgICAgICAgZS51cmwgPSBcIlwiO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IHRoaXM7XG4gICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSAhMTtcbiAgICAgICAgdGhpcy51cmwgJiZcbiAgICAgICAgICAgIF9yZXMuZGVmYXVsdC5pbnNcbiAgICAgICAgICAgICAgICAubCh0aGlzLnVybCwgY2MuU3ByaXRlRnJhbWUsIFwicmVzU3BzXCIpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdC5ub2RlICYmIHQubm9kZS5pc1ZhbGlkICYmICgodC5iZy5zcHJpdGVGcmFtZSA9IGUpLCAodC5ub2RlLmFjdGl2ZSA9ICEwKSwgdC5kZXN0cm95KCkpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcImdldFJlc1NwRXJyXCIpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbbChjYy5TcHJpdGUpXSwgZS5wcm90b3R5cGUsIFwiYmdcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtsKGNjLlN0cmluZyldLCBlLnByb3RvdHlwZSwgXCJ1cmxcIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gX19kZWNvcmF0ZShbY10sIGUpO1xufSkoY2MuQ29tcG9uZW50KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHU7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/grid.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0adafKMQFRHBqpLMtwJNSJZ', 'grid');
// scripts/grid.js

"use strict";

//电子邮件puhalskijsemen@gmail.com
//源码网站 开vpn全局模式打开 http://web3incubators.com/
//电报https://t.me/gamecode999
//网页客服 http://web3incubators.com/kefu.html
var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.GridState = void 0;

var _evts = require("evts");

var _sound = require("sound");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

(function (t) {
  t[t.empty = 0] = "empty";
  t[t.rightTile = 1] = "rightTile";
  t[t.wrongTile = 2] = "wrongTile";
  t[t.rightCross = 3] = "rightCross";
  t[t.wrongCross = 4] = "wrongCross";
})(exports.GridState || (exports.GridState = {}));

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.emptyNode = null;
    e.itemTipNode = null;
    e.itemTipAni = null;
    e.stateNodes = [];
    e.anis = [];
    e.crossShineNode = null;
    e.crossShineAni = null;
    e.norSf = null;
    e.tileSp = null;
    e.tileHLSp = null;
    e.isEmpty = !0;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    for (var t = function t(_t) {
      _t.on(cc.Animation.EventType.FINISHED, function () {
        _t.node.active = !1;
      }, e);
    }, e = this, o = 0, n = this.anis; o < n.length; o++) {
      t(n[o]);
    }
  };

  e.prototype.shine = function () {
    if (this.isEmpty) {
      var t = this.crossShineNode;
      (t.active = !t.active) && this.crossShineAni.play();
    }
  };

  e.prototype.init = function (t) {
    this.isRight = t > 0 ? 1 : 0;
  };

  e.prototype.initType = function (t, e) {
    var o = t || this.norSf;
    this.tileSp.spriteFrame = this.tileHLSp.spriteFrame = o;
    e && (this.itemTipNode.getComponent(cc.Sprite).spriteFrame = e);
  };

  e.prototype.select = function (t, e) {
    if (void 0 === e && (e = !1), this.isEmpty) {
      this.isEmpty = !1;
      this.emptyNode.active = this.crossShineNode.active = !1;
      this.itemTipNode && (this.itemTipNode.active = !1);
      this.unschedule(this.tipShine);
      var o = this.isRight;
      var n = 0;
      e || (n = (t << 1) + o);
      var i = this.stateNodes[n];
      i.active = !0;
      i.getComponent(cc.Animation).play();
      e || 3 == n || _sound["default"].ins.play(0 == n ? _sound["default"].RIGHT : _sound["default"].ERROR);
      this.aniIdx = n < 2 ? 0 : 1;

      _evts["default"].opE.emit({
        action: _evts["default"].UPDATESCORE
      });

      e || 1 != n && 2 != n || _evts["default"].opE.emit({
        action: _evts["default"].LOSEHEART,
        data: this.node.position
      });
    }
  };

  e.prototype.playWormAni = function (t) {
    this.isEmpty || cc.tween(this.node).delay(t).to(7 / 30, {
      scale: 1.5
    }).to(5 / 30, {
      opacity: 0
    }).start();
  };

  e.prototype.playItemTip = function (t) {
    if (this.isEmpty) {
      var e = this.itemTipNode;
      this.unschedule(this.tipShine);
      e.active = t;
      t ? this.scheduleOnce(this.tipShine, 2 * Math.random()) : (this.itemTipAni.stop(), this.itemTipNode.opacity = 0);
    }
  };

  e.prototype.tipShine = function () {
    this.isEmpty ? (this.itemTipNode.active = !0, this.itemTipAni.play()) : this.unschedule(this.tipShine);
  };

  e.prototype.playHL = function (t) {
    this.isEmpty || (this.unschedule(this._playHL), this.scheduleOnce(this._playHL, t));
  };

  e.prototype._playHL = function () {
    var t = this.anis[this.aniIdx];
    t.node.active = !0;
    t.play();
  };

  e.prototype.playShow = function (t) {
    cc.tween(this.node).delay(6 * (Math.random() + 1.5) / 60).to(0.1, {
      scale: t + 0.2
    }).to(0.05, {
      scaleX: t - 0.1,
      scaleY: t - 0.3
    }).to(0.05, {
      scaleX: t + 0.1,
      scaleY: t + 0.1
    }).to(0.05, {
      scale: t
    }).start();
  };

  e.prototype.playFallDown = function () {
    var t = this;
    cc.tween(this.node).by(0.1, {
      angle: 60 * Math.random() - 30
    }).to(1, {
      y: -1e3
    }, {
      easing: "quadOut"
    }).call(function () {
      t.node.destroy();
    }).start();
  };

  e.prototype.playWalk = function (t) {
    var e = this.node;
    var o = e.scale;
    var n = cc.tween(e).to(0.1, {
      position: t
    });
    var i = cc.tween(e).to(0.05, {
      scale: o - 0.4
    }, {
      easing: "cubicOut"
    }).to(0.1, {
      scale: o
    }, {
      easing: "cubicIn"
    });
    cc.tween(e).delay(6 * (Math.random() + 0.5) / 60).parallel(n, i).start();
  };

  __decorate([u(cc.Node)], e.prototype, "emptyNode", void 0);

  __decorate([u(cc.Node)], e.prototype, "itemTipNode", void 0);

  __decorate([u(cc.Animation)], e.prototype, "itemTipAni", void 0);

  __decorate([u([cc.Node])], e.prototype, "stateNodes", void 0);

  __decorate([u([cc.Animation])], e.prototype, "anis", void 0);

  __decorate([u(cc.Node)], e.prototype, "crossShineNode", void 0);

  __decorate([u(cc.Animation)], e.prototype, "crossShineAni", void 0);

  __decorate([u(cc.SpriteFrame)], e.prototype, "norSf", void 0);

  __decorate([u(cc.Sprite)], e.prototype, "tileSp", void 0);

  __decorate([u(cc.Sprite)], e.prototype, "tileHLSp", void 0);

  return __decorate([l], e);
}(cc.Component);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/chgBtn.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'db62fK//GZEhp0t7svoB+gK', 'chgBtn');
// scripts/chgBtn.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bg = null;
    e.lbSpr = null;
    e.offBg = null;
    e.onBg = null;
    e.offLb = null;
    e.onLb = null;
    e.flag = !1;
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {
    this.u();
  };

  e.prototype.setState = function (t) {
    this.flag = t;
    this.u();
  };

  e.prototype.u = function () {
    null != this.bg && (this.bg.spriteFrame = this.flag ? this.onBg : this.offBg);
    null != this.lbSpr && (this.lbSpr.spriteFrame = this.flag ? this.onLb : this.offLb);
  };

  __decorate([c(cc.Sprite)], e.prototype, "bg", void 0);

  __decorate([c(cc.Sprite)], e.prototype, "lbSpr", void 0);

  __decorate([c(cc.SpriteFrame)], e.prototype, "offBg", void 0);

  __decorate([c(cc.SpriteFrame)], e.prototype, "onBg", void 0);

  __decorate([c(cc.SpriteFrame)], e.prototype, "offLb", void 0);

  __decorate([c(cc.SpriteFrame)], e.prototype, "onLb", void 0);

  return __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcY2hnQnRuLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImEiLCJjYyIsIl9kZWNvcmF0b3IiLCJzIiwiY2NjbGFzcyIsImMiLCJwcm9wZXJ0eSIsImwiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwiYmciLCJsYlNwciIsIm9mZkJnIiwib25CZyIsIm9mZkxiIiwib25MYiIsImZsYWciLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJzdGFydCIsInUiLCJzZXRTdGF0ZSIsInNwcml0ZUZyYW1lIiwiX19kZWNvcmF0ZSIsIlNwcml0ZSIsIlNwcml0ZUZyYW1lIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLElBQUlDLENBQUMsR0FBSSxVQUFVQyxDQUFWLEVBQWE7RUFDbEIsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxFQUFGLEdBQU8sSUFBUDtJQUNBSCxDQUFDLENBQUNJLEtBQUYsR0FBVSxJQUFWO0lBQ0FKLENBQUMsQ0FBQ0ssS0FBRixHQUFVLElBQVY7SUFDQUwsQ0FBQyxDQUFDTSxJQUFGLEdBQVMsSUFBVDtJQUNBTixDQUFDLENBQUNPLEtBQUYsR0FBVSxJQUFWO0lBQ0FQLENBQUMsQ0FBQ1EsSUFBRixHQUFTLElBQVQ7SUFDQVIsQ0FBQyxDQUFDUyxJQUFGLEdBQVMsQ0FBQyxDQUFWO0lBQ0EsT0FBT1QsQ0FBUDtFQUNIOztFQUNEVSxTQUFTLENBQUNWLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNXLFNBQUYsQ0FBWUMsS0FBWixHQUFvQixZQUFZO0lBQzVCLEtBQUtDLENBQUw7RUFDSCxDQUZEOztFQUdBYixDQUFDLENBQUNXLFNBQUYsQ0FBWUcsUUFBWixHQUF1QixVQUFVZixDQUFWLEVBQWE7SUFDaEMsS0FBS1UsSUFBTCxHQUFZVixDQUFaO0lBQ0EsS0FBS2MsQ0FBTDtFQUNILENBSEQ7O0VBSUFiLENBQUMsQ0FBQ1csU0FBRixDQUFZRSxDQUFaLEdBQWdCLFlBQVk7SUFDeEIsUUFBUSxLQUFLVixFQUFiLEtBQW9CLEtBQUtBLEVBQUwsQ0FBUVksV0FBUixHQUFzQixLQUFLTixJQUFMLEdBQVksS0FBS0gsSUFBakIsR0FBd0IsS0FBS0QsS0FBdkU7SUFDQSxRQUFRLEtBQUtELEtBQWIsS0FBdUIsS0FBS0EsS0FBTCxDQUFXVyxXQUFYLEdBQXlCLEtBQUtOLElBQUwsR0FBWSxLQUFLRCxJQUFqQixHQUF3QixLQUFLRCxLQUE3RTtFQUNILENBSEQ7O0VBSUFTLFVBQVUsQ0FBQyxDQUFDcEIsQ0FBQyxDQUFDSixFQUFFLENBQUN5QixNQUFKLENBQUYsQ0FBRCxFQUFpQmpCLENBQUMsQ0FBQ1csU0FBbkIsRUFBOEIsSUFBOUIsRUFBb0MsS0FBSyxDQUF6QyxDQUFWOztFQUNBSyxVQUFVLENBQUMsQ0FBQ3BCLENBQUMsQ0FBQ0osRUFBRSxDQUFDeUIsTUFBSixDQUFGLENBQUQsRUFBaUJqQixDQUFDLENBQUNXLFNBQW5CLEVBQThCLE9BQTlCLEVBQXVDLEtBQUssQ0FBNUMsQ0FBVjs7RUFDQUssVUFBVSxDQUFDLENBQUNwQixDQUFDLENBQUNKLEVBQUUsQ0FBQzBCLFdBQUosQ0FBRixDQUFELEVBQXNCbEIsQ0FBQyxDQUFDVyxTQUF4QixFQUFtQyxPQUFuQyxFQUE0QyxLQUFLLENBQWpELENBQVY7O0VBQ0FLLFVBQVUsQ0FBQyxDQUFDcEIsQ0FBQyxDQUFDSixFQUFFLENBQUMwQixXQUFKLENBQUYsQ0FBRCxFQUFzQmxCLENBQUMsQ0FBQ1csU0FBeEIsRUFBbUMsTUFBbkMsRUFBMkMsS0FBSyxDQUFoRCxDQUFWOztFQUNBSyxVQUFVLENBQUMsQ0FBQ3BCLENBQUMsQ0FBQ0osRUFBRSxDQUFDMEIsV0FBSixDQUFGLENBQUQsRUFBc0JsQixDQUFDLENBQUNXLFNBQXhCLEVBQW1DLE9BQW5DLEVBQTRDLEtBQUssQ0FBakQsQ0FBVjs7RUFDQUssVUFBVSxDQUFDLENBQUNwQixDQUFDLENBQUNKLEVBQUUsQ0FBQzBCLFdBQUosQ0FBRixDQUFELEVBQXNCbEIsQ0FBQyxDQUFDVyxTQUF4QixFQUFtQyxNQUFuQyxFQUEyQyxLQUFLLENBQWhELENBQVY7O0VBQ0EsT0FBT0ssVUFBVSxDQUFDLENBQUN0QixDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBL0JPLENBK0JMUixFQUFFLENBQUMyQixTQS9CRSxDQUFSOztBQWdDQTlCLE9BQU8sV0FBUCxHQUFrQlMsQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgYSA9IGNjLl9kZWNvcmF0b3I7XG52YXIgcyA9IGEuY2NjbGFzcztcbnZhciBjID0gYS5wcm9wZXJ0eTtcbnZhciBsID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuYmcgPSBudWxsO1xuICAgICAgICBlLmxiU3ByID0gbnVsbDtcbiAgICAgICAgZS5vZmZCZyA9IG51bGw7XG4gICAgICAgIGUub25CZyA9IG51bGw7XG4gICAgICAgIGUub2ZmTGIgPSBudWxsO1xuICAgICAgICBlLm9uTGIgPSBudWxsO1xuICAgICAgICBlLmZsYWcgPSAhMTtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgfVxuICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICBlLnByb3RvdHlwZS5zdGFydCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy51KCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5zZXRTdGF0ZSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHRoaXMuZmxhZyA9IHQ7XG4gICAgICAgIHRoaXMudSgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUudSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbnVsbCAhPSB0aGlzLmJnICYmICh0aGlzLmJnLnNwcml0ZUZyYW1lID0gdGhpcy5mbGFnID8gdGhpcy5vbkJnIDogdGhpcy5vZmZCZyk7XG4gICAgICAgIG51bGwgIT0gdGhpcy5sYlNwciAmJiAodGhpcy5sYlNwci5zcHJpdGVGcmFtZSA9IHRoaXMuZmxhZyA/IHRoaXMub25MYiA6IHRoaXMub2ZmTGIpO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbYyhjYy5TcHJpdGUpXSwgZS5wcm90b3R5cGUsIFwiYmdcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtjKGNjLlNwcml0ZSldLCBlLnByb3RvdHlwZSwgXCJsYlNwclwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2MoY2MuU3ByaXRlRnJhbWUpXSwgZS5wcm90b3R5cGUsIFwib2ZmQmdcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtjKGNjLlNwcml0ZUZyYW1lKV0sIGUucHJvdG90eXBlLCBcIm9uQmdcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtjKGNjLlNwcml0ZUZyYW1lKV0sIGUucHJvdG90eXBlLCBcIm9mZkxiXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYyhjYy5TcHJpdGVGcmFtZSldLCBlLnByb3RvdHlwZSwgXCJvbkxiXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW3NdLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSBsO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/head.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bd3b6EvuhVISo+Thy3/ym09', 'head');
// scripts/head.js

"use strict";

//电子邮件puhalskijsemen@gmail.com
//源码网站 开vpn全局模式打开 http://web3incubators.com/
//电报https://t.me/gamecode999
//网页客服 http://web3incubators.com/kefu.html
var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _res = require("res");

var _global = require("global");

var _skinMgr = require("skinMgr");

var _pInfo = require("pInfo");

var p = cc._decorator;
var d = p.ccclass;
var h = p.property;

var f = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bg = null;
    e.headIcon = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.eventFunc = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eventFunc);
  };

  e.prototype.onDestroy = function () {
    _evts["default"].opE.off(this.eventFunc);

    this.eventFunc = null;
  };

  e.prototype.onOperTap = function (t) {
    var e;
    (null == t ? void 0 : t.action) === _evts["default"].SKIN_CHG && (null === (e = t.data) || void 0 === e ? void 0 : e.skinId) === _skinMgr.SkinIdEnum.headFrame && t.data.isUse && this.updateHeadFrame();
  };

  e.prototype.updateHeadFrame = function (t) {
    var e = t || _pInfo["default"].ins.getUsingSkin()[_skinMgr.SkinIdEnum.headFrame];

    _skinMgr["default"].ins.updateHeadFrame(e, this.bg);
  };

  e.prototype.loadHeadImg = function (t, e) {
    var o = this;
    t ? cc.assetManager.loadRemote(t, {
      ext: _global.headImgExt
    }, function (t, e) {
      o.node && o.node.isValid && (t ? o.setDefaultHead() : o.headIcon.spriteFrame = new cc.SpriteFrame(e));
    }) : this.setDefaultHead();
    this.updateHeadFrame(e);
  };

  e.prototype.setDefaultHead = function () {
    var t = this;
    var e = this;

    _res["default"].ins.getBundleByString("resSps").then(function (o) {
      o.load("common/head_1", cc.SpriteFrame, function (o, n) {
        !o && t.node && t.node.isValid && (e.headIcon.spriteFrame = n);
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });
  };

  __decorate([h(cc.Sprite)], e.prototype, "bg", void 0);

  __decorate([h(cc.Sprite)], e.prototype, "headIcon", void 0);

  return __decorate([d], e);
}(cc.Component);

exports["default"] = f;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/hedge.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '07d98niZe5NzrFQ7E0lWKMH', 'hedge');
// scripts/hedge.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = (a.property, function (t) {
  function e() {
    return null !== t && t.apply(this, arguments) || this;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t = this;
    this.getComponent(cc.Animation).on(cc.Animation.EventType.FINISHED, function () {
      t.node.destroy();
    }, this);
  };

  return __decorate([s], e);
}(cc.Component));
exports["default"] = c;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcaGVkZ2UuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYSIsImNjIiwiX2RlY29yYXRvciIsInMiLCJjY2NsYXNzIiwiYyIsInByb3BlcnR5IiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsIm9uTG9hZCIsImdldENvbXBvbmVudCIsIkFuaW1hdGlvbiIsIm9uIiwiRXZlbnRUeXBlIiwiRklOSVNIRUQiLCJub2RlIiwiZGVzdHJveSIsIl9fZGVjb3JhdGUiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQSxJQUFJQyxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsSUFBSUMsQ0FBQyxJQUNBTCxDQUFDLENBQUNNLFFBQUYsRUFDQSxVQUFVQyxDQUFWLEVBQWE7RUFDVixTQUFTQyxDQUFULEdBQWE7SUFDVCxPQUFRLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBbkQ7RUFDSDs7RUFDREMsU0FBUyxDQUFDSCxDQUFELEVBQUlELENBQUosQ0FBVDs7RUFDQUMsQ0FBQyxDQUFDSSxTQUFGLENBQVlDLE1BQVosR0FBcUIsWUFBWTtJQUM3QixJQUFJTixDQUFDLEdBQUcsSUFBUjtJQUNBLEtBQUtPLFlBQUwsQ0FBa0JiLEVBQUUsQ0FBQ2MsU0FBckIsRUFBZ0NDLEVBQWhDLENBQ0lmLEVBQUUsQ0FBQ2MsU0FBSCxDQUFhRSxTQUFiLENBQXVCQyxRQUQzQixFQUVJLFlBQVk7TUFDUlgsQ0FBQyxDQUFDWSxJQUFGLENBQU9DLE9BQVA7SUFDSCxDQUpMLEVBS0ksSUFMSjtFQU9ILENBVEQ7O0VBVUEsT0FBT0MsVUFBVSxDQUFDLENBQUNsQixDQUFELENBQUQsRUFBTUssQ0FBTixDQUFqQjtBQUNILENBaEJELENBZ0JHUCxFQUFFLENBQUNxQixTQWhCTixDQUZDLENBQUw7QUFtQkF4QixPQUFPLFdBQVAsR0FBa0JPLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIGEgPSBjYy5fZGVjb3JhdG9yO1xudmFyIHMgPSBhLmNjY2xhc3M7XG52YXIgYyA9XG4gICAgKGEucHJvcGVydHksXG4gICAgKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgICAgICByZXR1cm4gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICAgICAgZS5wcm90b3R5cGUub25Mb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgICAgICAgdGhpcy5nZXRDb21wb25lbnQoY2MuQW5pbWF0aW9uKS5vbihcbiAgICAgICAgICAgICAgICBjYy5BbmltYXRpb24uRXZlbnRUeXBlLkZJTklTSEVELFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdC5ub2RlLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRoaXNcbiAgICAgICAgICAgICk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfX2RlY29yYXRlKFtzXSwgZSk7XG4gICAgfSkoY2MuQ29tcG9uZW50KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/idx.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b1538WEz6ZDt4+3IBZG199Y', 'idx');
// scripts/idx.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.ERepEvt = exports.platform = void 0;

var _ali = require("ali");

var _androidP = require("androidP");

var _h5 = require("h5");

var _iosP = require("iosP");

var _qq = require("qq");

var _tb = require("tb");

var _tt = require("tt");

var _vivo = require("vivo");

var _wx = require("wx");

(function () {
  // var t = cc.sys;
  // if (t.isNative) {
  //     switch (t.os) {
  //         case t.OS_IOS:
  //             exports.platform = new _iosP.default();
  //             break;
  //         case t.OS_ANDROID:
  //             exports.platform = new _androidP.default();
  //     }
  //     cc.platform = exports.platform;
  // } else
  //     switch (t.platform) {
  //         case t.WECHAT_GAME:
  //             exports.platform = globalThis.qq ? new _qq.default() : new _wx.default();
  //             break;
  //         case t.BYTEDANCE_GAME:
  //             exports.platform = new _tt.default();
  //             break;
  //         case t.VIVO_GAME:
  //             exports.platform = new _vivo.default();
  //             break;
  //         case t.ALIPAY_GAME:
  //             exports.platform = new _ali.default();
  //             break;
  //         case t.TAOBAO_MINIGAME:
  //             exports.platform = new _tb.default();
  //     }
  exports.platform || (exports.platform = new _h5["default"]());
})();

(function (t) {
  t.firstEtrGame = "dadian00001", t.finshGuide = "dadian00002", t.maindungeon = "dadian00003", t.dungeonReview = "dadian00004", t.useItem = "dadian00005", t.buyItem = "dadian00006", t.buyTimes = "dadian00007", t.buyCoins = "dadian00008", t.dailyTask = "dadian00009", t.raceEnd = "dadian000010", t.raceReview = "dadian000011", t.challengeCoupon = "dadian000012", t.guide = "dadian000013", t.gameLoaded = "dadian000014", t.login = "dadian000015", t.createNewRole = "dadian000016", t.beginPractice = "dadian000017", t.finishHoleJigsaw = "dadian000018", t.partJigsaw = "dadian000019", t.fesTaskFinish = "dadian000020", t.fesMainPuzzle = "dadian000021", t.fesJigNum = "dadian000022", t.newGiftGet = "dadian000023", t.adMax = "dadian000024", t.dailyChallenge = "dadian000025", t.applaunchShow = "dadian000026", t.reSetData = "dadian000027", t.susPayment = "dadian000028", t.paymentResult = "dadian000029", t.buySkin = "dadian000030", t.useSkin = "dadian000031";
})(exports.ERepEvt || (exports.ERepEvt = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcaWR4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRVJlcEV2dCIsInBsYXRmb3JtIiwiX2FsaSIsInJlcXVpcmUiLCJfYW5kcm9pZFAiLCJfaDUiLCJfaW9zUCIsIl9xcSIsIl90YiIsIl90dCIsIl92aXZvIiwiX3d4IiwidCIsImZpcnN0RXRyR2FtZSIsImZpbnNoR3VpZGUiLCJtYWluZHVuZ2VvbiIsImR1bmdlb25SZXZpZXciLCJ1c2VJdGVtIiwiYnV5SXRlbSIsImJ1eVRpbWVzIiwiYnV5Q29pbnMiLCJkYWlseVRhc2siLCJyYWNlRW5kIiwicmFjZVJldmlldyIsImNoYWxsZW5nZUNvdXBvbiIsImd1aWRlIiwiZ2FtZUxvYWRlZCIsImxvZ2luIiwiY3JlYXRlTmV3Um9sZSIsImJlZ2luUHJhY3RpY2UiLCJmaW5pc2hIb2xlSmlnc2F3IiwicGFydEppZ3NhdyIsImZlc1Rhc2tGaW5pc2giLCJmZXNNYWluUHV6emxlIiwiZmVzSmlnTnVtIiwibmV3R2lmdEdldCIsImFkTWF4IiwiZGFpbHlDaGFsbGVuZ2UiLCJhcHBsYXVuY2hTaG93IiwicmVTZXREYXRhIiwic3VzUGF5bWVudCIsInBheW1lbnRSZXN1bHQiLCJidXlTa2luIiwidXNlU2tpbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFFQyxLQUFLLEVBQUUsQ0FBQztBQUFWLENBQTdDO0FBQ0FELE9BQU8sQ0FBQ0UsT0FBUixHQUFrQkYsT0FBTyxDQUFDRyxRQUFSLEdBQW1CLEtBQUssQ0FBMUM7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFsQjs7QUFDQSxJQUFJQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXZCOztBQUNBLElBQUlFLEdBQUcsR0FBR0YsT0FBTyxDQUFDLElBQUQsQ0FBakI7O0FBQ0EsSUFBSUcsS0FBSyxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFuQjs7QUFDQSxJQUFJSSxHQUFHLEdBQUdKLE9BQU8sQ0FBQyxJQUFELENBQWpCOztBQUNBLElBQUlLLEdBQUcsR0FBR0wsT0FBTyxDQUFDLElBQUQsQ0FBakI7O0FBQ0EsSUFBSU0sR0FBRyxHQUFHTixPQUFPLENBQUMsSUFBRCxDQUFqQjs7QUFDQSxJQUFJTyxLQUFLLEdBQUdQLE9BQU8sQ0FBQyxNQUFELENBQW5COztBQUNBLElBQUlRLEdBQUcsR0FBR1IsT0FBTyxDQUFDLElBQUQsQ0FBakI7O0FBQ0EsQ0FBQyxZQUFXO0VBQ1I7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0FMLE9BQU8sQ0FBQ0csUUFBUixLQUFxQkgsT0FBTyxDQUFDRyxRQUFSLEdBQW1CLElBQUlJLEdBQUcsV0FBUCxFQUF4QztBQUNILENBN0JEOztBQThCQSxDQUFDLFVBQVNPLENBQVQsRUFBWTtFQUNSQSxDQUFDLENBQUNDLFlBQUYsR0FBaUIsYUFBbEIsRUFDQ0QsQ0FBQyxDQUFDRSxVQUFGLEdBQWUsYUFEaEIsRUFFQ0YsQ0FBQyxDQUFDRyxXQUFGLEdBQWdCLGFBRmpCLEVBR0NILENBQUMsQ0FBQ0ksYUFBRixHQUFrQixhQUhuQixFQUlDSixDQUFDLENBQUNLLE9BQUYsR0FBWSxhQUpiLEVBS0NMLENBQUMsQ0FBQ00sT0FBRixHQUFZLGFBTGIsRUFNQ04sQ0FBQyxDQUFDTyxRQUFGLEdBQWEsYUFOZCxFQU9DUCxDQUFDLENBQUNRLFFBQUYsR0FBYSxhQVBkLEVBUUNSLENBQUMsQ0FBQ1MsU0FBRixHQUFjLGFBUmYsRUFTQ1QsQ0FBQyxDQUFDVSxPQUFGLEdBQVksY0FUYixFQVVDVixDQUFDLENBQUNXLFVBQUYsR0FBZSxjQVZoQixFQVdDWCxDQUFDLENBQUNZLGVBQUYsR0FBb0IsY0FYckIsRUFZQ1osQ0FBQyxDQUFDYSxLQUFGLEdBQVUsY0FaWCxFQWFDYixDQUFDLENBQUNjLFVBQUYsR0FBZSxjQWJoQixFQWNDZCxDQUFDLENBQUNlLEtBQUYsR0FBVSxjQWRYLEVBZUNmLENBQUMsQ0FBQ2dCLGFBQUYsR0FBa0IsY0FmbkIsRUFnQkNoQixDQUFDLENBQUNpQixhQUFGLEdBQWtCLGNBaEJuQixFQWlCQ2pCLENBQUMsQ0FBQ2tCLGdCQUFGLEdBQXFCLGNBakJ0QixFQWtCQ2xCLENBQUMsQ0FBQ21CLFVBQUYsR0FBZSxjQWxCaEIsRUFtQkNuQixDQUFDLENBQUNvQixhQUFGLEdBQWtCLGNBbkJuQixFQW9CQ3BCLENBQUMsQ0FBQ3FCLGFBQUYsR0FBa0IsY0FwQm5CLEVBcUJDckIsQ0FBQyxDQUFDc0IsU0FBRixHQUFjLGNBckJmLEVBc0JDdEIsQ0FBQyxDQUFDdUIsVUFBRixHQUFlLGNBdEJoQixFQXVCQ3ZCLENBQUMsQ0FBQ3dCLEtBQUYsR0FBVSxjQXZCWCxFQXdCQ3hCLENBQUMsQ0FBQ3lCLGNBQUYsR0FBbUIsY0F4QnBCLEVBeUJDekIsQ0FBQyxDQUFDMEIsYUFBRixHQUFrQixjQXpCbkIsRUEwQkMxQixDQUFDLENBQUMyQixTQUFGLEdBQWMsY0ExQmYsRUEyQkMzQixDQUFDLENBQUM0QixVQUFGLEdBQWUsY0EzQmhCLEVBNEJDNUIsQ0FBQyxDQUFDNkIsYUFBRixHQUFrQixjQTVCbkIsRUE2QkM3QixDQUFDLENBQUM4QixPQUFGLEdBQVksY0E3QmIsRUE4QkM5QixDQUFDLENBQUMrQixPQUFGLEdBQVksY0E5QmI7QUErQkgsQ0FoQ0QsRUFnQ0c3QyxPQUFPLENBQUNFLE9BQVIsS0FBb0JGLE9BQU8sQ0FBQ0UsT0FBUixHQUFrQixFQUF0QyxDQWhDSCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiAhMCB9KTtcbmV4cG9ydHMuRVJlcEV2dCA9IGV4cG9ydHMucGxhdGZvcm0gPSB2b2lkIDA7XG52YXIgX2FsaSA9IHJlcXVpcmUoXCJhbGlcIik7XG52YXIgX2FuZHJvaWRQID0gcmVxdWlyZShcImFuZHJvaWRQXCIpO1xudmFyIF9oNSA9IHJlcXVpcmUoXCJoNVwiKTtcbnZhciBfaW9zUCA9IHJlcXVpcmUoXCJpb3NQXCIpO1xudmFyIF9xcSA9IHJlcXVpcmUoXCJxcVwiKTtcbnZhciBfdGIgPSByZXF1aXJlKFwidGJcIik7XG52YXIgX3R0ID0gcmVxdWlyZShcInR0XCIpO1xudmFyIF92aXZvID0gcmVxdWlyZShcInZpdm9cIik7XG52YXIgX3d4ID0gcmVxdWlyZShcInd4XCIpO1xuKGZ1bmN0aW9uKCkge1xuICAgIC8vIHZhciB0ID0gY2Muc3lzO1xuICAgIC8vIGlmICh0LmlzTmF0aXZlKSB7XG4gICAgLy8gICAgIHN3aXRjaCAodC5vcykge1xuICAgIC8vICAgICAgICAgY2FzZSB0Lk9TX0lPUzpcbiAgICAvLyAgICAgICAgICAgICBleHBvcnRzLnBsYXRmb3JtID0gbmV3IF9pb3NQLmRlZmF1bHQoKTtcbiAgICAvLyAgICAgICAgICAgICBicmVhaztcbiAgICAvLyAgICAgICAgIGNhc2UgdC5PU19BTkRST0lEOlxuICAgIC8vICAgICAgICAgICAgIGV4cG9ydHMucGxhdGZvcm0gPSBuZXcgX2FuZHJvaWRQLmRlZmF1bHQoKTtcbiAgICAvLyAgICAgfVxuICAgIC8vICAgICBjYy5wbGF0Zm9ybSA9IGV4cG9ydHMucGxhdGZvcm07XG4gICAgLy8gfSBlbHNlXG4gICAgLy8gICAgIHN3aXRjaCAodC5wbGF0Zm9ybSkge1xuICAgIC8vICAgICAgICAgY2FzZSB0LldFQ0hBVF9HQU1FOlxuICAgIC8vICAgICAgICAgICAgIGV4cG9ydHMucGxhdGZvcm0gPSBnbG9iYWxUaGlzLnFxID8gbmV3IF9xcS5kZWZhdWx0KCkgOiBuZXcgX3d4LmRlZmF1bHQoKTtcbiAgICAvLyAgICAgICAgICAgICBicmVhaztcbiAgICAvLyAgICAgICAgIGNhc2UgdC5CWVRFREFOQ0VfR0FNRTpcbiAgICAvLyAgICAgICAgICAgICBleHBvcnRzLnBsYXRmb3JtID0gbmV3IF90dC5kZWZhdWx0KCk7XG4gICAgLy8gICAgICAgICAgICAgYnJlYWs7XG4gICAgLy8gICAgICAgICBjYXNlIHQuVklWT19HQU1FOlxuICAgIC8vICAgICAgICAgICAgIGV4cG9ydHMucGxhdGZvcm0gPSBuZXcgX3Zpdm8uZGVmYXVsdCgpO1xuICAgIC8vICAgICAgICAgICAgIGJyZWFrO1xuICAgIC8vICAgICAgICAgY2FzZSB0LkFMSVBBWV9HQU1FOlxuICAgIC8vICAgICAgICAgICAgIGV4cG9ydHMucGxhdGZvcm0gPSBuZXcgX2FsaS5kZWZhdWx0KCk7XG4gICAgLy8gICAgICAgICAgICAgYnJlYWs7XG4gICAgLy8gICAgICAgICBjYXNlIHQuVEFPQkFPX01JTklHQU1FOlxuICAgIC8vICAgICAgICAgICAgIGV4cG9ydHMucGxhdGZvcm0gPSBuZXcgX3RiLmRlZmF1bHQoKTtcbiAgICAvLyAgICAgfVxuICAgIGV4cG9ydHMucGxhdGZvcm0gfHwgKGV4cG9ydHMucGxhdGZvcm0gPSBuZXcgX2g1LmRlZmF1bHQoKSk7XG59KSgpO1xuKGZ1bmN0aW9uKHQpIHtcbiAgICAodC5maXJzdEV0ckdhbWUgPSBcImRhZGlhbjAwMDAxXCIpLFxuICAgICh0LmZpbnNoR3VpZGUgPSBcImRhZGlhbjAwMDAyXCIpLFxuICAgICh0Lm1haW5kdW5nZW9uID0gXCJkYWRpYW4wMDAwM1wiKSxcbiAgICAodC5kdW5nZW9uUmV2aWV3ID0gXCJkYWRpYW4wMDAwNFwiKSxcbiAgICAodC51c2VJdGVtID0gXCJkYWRpYW4wMDAwNVwiKSxcbiAgICAodC5idXlJdGVtID0gXCJkYWRpYW4wMDAwNlwiKSxcbiAgICAodC5idXlUaW1lcyA9IFwiZGFkaWFuMDAwMDdcIiksXG4gICAgKHQuYnV5Q29pbnMgPSBcImRhZGlhbjAwMDA4XCIpLFxuICAgICh0LmRhaWx5VGFzayA9IFwiZGFkaWFuMDAwMDlcIiksXG4gICAgKHQucmFjZUVuZCA9IFwiZGFkaWFuMDAwMDEwXCIpLFxuICAgICh0LnJhY2VSZXZpZXcgPSBcImRhZGlhbjAwMDAxMVwiKSxcbiAgICAodC5jaGFsbGVuZ2VDb3Vwb24gPSBcImRhZGlhbjAwMDAxMlwiKSxcbiAgICAodC5ndWlkZSA9IFwiZGFkaWFuMDAwMDEzXCIpLFxuICAgICh0LmdhbWVMb2FkZWQgPSBcImRhZGlhbjAwMDAxNFwiKSxcbiAgICAodC5sb2dpbiA9IFwiZGFkaWFuMDAwMDE1XCIpLFxuICAgICh0LmNyZWF0ZU5ld1JvbGUgPSBcImRhZGlhbjAwMDAxNlwiKSxcbiAgICAodC5iZWdpblByYWN0aWNlID0gXCJkYWRpYW4wMDAwMTdcIiksXG4gICAgKHQuZmluaXNoSG9sZUppZ3NhdyA9IFwiZGFkaWFuMDAwMDE4XCIpLFxuICAgICh0LnBhcnRKaWdzYXcgPSBcImRhZGlhbjAwMDAxOVwiKSxcbiAgICAodC5mZXNUYXNrRmluaXNoID0gXCJkYWRpYW4wMDAwMjBcIiksXG4gICAgKHQuZmVzTWFpblB1enpsZSA9IFwiZGFkaWFuMDAwMDIxXCIpLFxuICAgICh0LmZlc0ppZ051bSA9IFwiZGFkaWFuMDAwMDIyXCIpLFxuICAgICh0Lm5ld0dpZnRHZXQgPSBcImRhZGlhbjAwMDAyM1wiKSxcbiAgICAodC5hZE1heCA9IFwiZGFkaWFuMDAwMDI0XCIpLFxuICAgICh0LmRhaWx5Q2hhbGxlbmdlID0gXCJkYWRpYW4wMDAwMjVcIiksXG4gICAgKHQuYXBwbGF1bmNoU2hvdyA9IFwiZGFkaWFuMDAwMDI2XCIpLFxuICAgICh0LnJlU2V0RGF0YSA9IFwiZGFkaWFuMDAwMDI3XCIpLFxuICAgICh0LnN1c1BheW1lbnQgPSBcImRhZGlhbjAwMDAyOFwiKSxcbiAgICAodC5wYXltZW50UmVzdWx0ID0gXCJkYWRpYW4wMDAwMjlcIiksXG4gICAgKHQuYnV5U2tpbiA9IFwiZGFkaWFuMDAwMDMwXCIpLFxuICAgICh0LnVzZVNraW4gPSBcImRhZGlhbjAwMDAzMVwiKTtcbn0pKGV4cG9ydHMuRVJlcEV2dCB8fCAoZXhwb3J0cy5FUmVwRXZ0ID0ge30pKTsiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/h5.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c83f1Tg+ndHibVP6V9Bsrr7', 'h5');
// scripts/h5.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _pConst = require("pConst");

var _time = require("time");

var _uData = require("uData");

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;

    e.trackEvent = function () {};

    e.subscribe = function (t) {
      for (var e = [], o = 1; o < arguments.length; o++) {
        e[o - 1] = arguments[o];
      }

      return new Promise(function (t) {
        t(1);
      });
    };

    return e;
  }

  __extends(e, t);

  Object.defineProperty(e.prototype, "appId", {
    get: function get() {
      return "dev_nonogram";
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.string = function () {
    return _pConst.PFCode.Web;
  };

  e.prototype.init = function () {
    var t = new URLSearchParams(location.search);
    var e = {};
    t.forEach(function (t, o) {
      e[o] = t;
    });

    _uData["default"].ins.syncLaunchOption({
      query: e
    });

    this.initListener();
  };

  e.prototype.initListener = function () {
    var t = this;
    cc.game.on(cc.game.EVENT_SHOW, function () {
      Math.abs(Date.now() / 1e3 - t.onHideT) > 300 ? t.syncTime().then(function (t) {
        t && _time["default"].ins.sync(t), _evts["default"].plE.emit({
          onShow: !0
        });
      }) : _evts["default"].plE.emit({
        onShow: !0
      });
    });
    cc.game.on(cc.game.EVENT_HIDE, function () {
      t.onHideT = _time["default"].ins.serverTime;

      _evts["default"].plE.emit({
        onHide: !0
      });
    });
  };

  e.prototype.isSwitchedInitd = function () {
    return !0;
  };

  e.prototype.login = function () {
    return Promise.resolve({
      code: "dev_ceshi"
    });
  };

  e.prototype.getUserInfo = function () {};

  e.prototype.getStorage = function (t) {
    var e = localStorage.getItem(t);
    return null == e || "" == e ? null : JSON.parse(e);
  };

  e.prototype.setStorage = function (t, e) {
    localStorage.setItem(t, JSON.stringify(e));
  };

  e.prototype.clearStorage = function () {
    localStorage.clear();
  };

  e.prototype.removeStorage = function (t) {
    localStorage.removeItem(t);
  };

  e.prototype.trackLogin = function () {};

  e.prototype.trackUserSet = function () {};

  e.prototype.trackUserSetOnce = function () {};

  e.prototype.getSeq = function () {
    return {
      type: Math.random() < 0.5 ? _pConst.STDSeqType.VIDEO : _pConst.STDSeqType.SHARE,
      modelId: "",
      shareGuid: "",
      forceResult: ""
    };
  };

  e.prototype.consumeSeq = function () {
    return new Promise(function (t) {
      t(1);
    });
  };

  e.prototype.doWatchAD = function () {
    return new Promise(function (t) {
      t(1);
    });
  };

  e.prototype.doShare = function () {
    return new Promise(function (t) {
      t(1);
    });
  };

  e.prototype.getSystemData = function () {
    return _pConst.DefaultSystemInfo;
  };

  e.prototype.getSwitches = function () {
    return _pConst.DefaultSDKSwitch;
  };

  e.prototype.vibrate = function () {};

  e.prototype.preloadVideo = function () {
    return !0;
  };

  e.prototype.showModal = function () {};

  e.prototype.refreshGame = function () {
    location.reload();
  };

  e.prototype.showLoading = function () {};

  e.prototype.hideLoading = function () {};

  e.prototype.log = function () {};

  e.prototype.getMenuBounding = function () {
    null == this.menuBounding && (this.menuBounding = new cc.Rect(650, 0, 100, 50));
    return this.menuBounding;
  };

  e.prototype.createShareImage = function () {
    return new Promise(function (t) {
      return t("");
    });
  };

  e.prototype.preloadInterstitialAD = function () {};

  e.prototype.showInterstitialAD = function () {
    return new Promise(function (t) {
      return t(1);
    });
  };

  e.prototype.canShowBanner = function () {
    return !1;
  };

  e.prototype.getBannerSize = function () {
    return new cc.Size(0, 0);
  };

  e.prototype.showBanner = function () {};

  e.prototype.hideBanner = function () {};

  e.prototype.getSubscribeCnt = function () {
    return new Promise(function (t) {
      return t(0);
    });
  };

  e.prototype.startVideoRecord = function () {};

  e.prototype.pauseVideoRecord = function () {};

  e.prototype.resumeVideoRecord = function () {};

  e.prototype.stopVideoRecord = function () {};

  e.prototype.hasVideoRecord = function () {
    return !1;
  };

  e.prototype.shareVideoRecord = function () {
    return Promise.resolve(1);
  };

  e.prototype.uploadAdEvent = function () {};

  e.prototype.addShortcut = function () {};

  e.prototype.PostMessage = function () {};

  e.prototype.SetUserCloudStorage = function () {};

  e.prototype.GetOpenDataContext = function () {};

  e.prototype.reportEvent = function () {};

  e.prototype.share = function () {
    return new Promise(function (t) {
      t(1);
    });
  };

  e.prototype.getUserProfile = function () {};

  e.prototype.subScriptionUpdate = function () {};

  e.prototype.getLaunchOptionsSync = function () {
    return _pConst.DefaultLaunchOptions;
  };

  e.prototype.payment = function () {
    return new Promise(function (t) {
      return t(1);
    });
  };

  return e;
}(require("pf")["default"]);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/item1.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '271daYGFwxILLSIwdBLS+j9', 'item1');
// scripts/item1.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _numberUtils = require("NumberUtils");

var _res = require("res");

var _mailMgr = require("mailMgr");

var l = cc._decorator;
var u = l.ccclass;
var p = l.property;

var d = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.icon = null;
    e.numLbl = null;
    e.awardedNode = null;
    e.key = "";
    e.countStr = "";
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t, e, o) {
    this.key = t;

    _res["default"].ins.lSF("item/" + t, this.icon);

    var n = _numberUtils["default"].FormatCurrency(e);

    this.countStr = n;
    this.numLbl.string = "x" + e;
    this.awardedNode.active = o == _mailMgr.mailState.award;
  };

  __decorate([p(cc.Sprite)], e.prototype, "icon", void 0);

  __decorate([p(cc.Label)], e.prototype, "numLbl", void 0);

  __decorate([p(cc.Node)], e.prototype, "awardedNode", void 0);

  return __decorate([u], e);
}(cc.Component);

exports["default"] = d;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcaXRlbTEuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX251bWJlclV0aWxzIiwicmVxdWlyZSIsIl9yZXMiLCJfbWFpbE1nciIsImwiLCJjYyIsIl9kZWNvcmF0b3IiLCJ1IiwiY2NjbGFzcyIsInAiLCJwcm9wZXJ0eSIsImQiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwiaWNvbiIsIm51bUxibCIsImF3YXJkZWROb2RlIiwia2V5IiwiY291bnRTdHIiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJpbml0IiwibyIsImlucyIsImxTRiIsIkZvcm1hdEN1cnJlbmN5Iiwic3RyaW5nIiwiYWN0aXZlIiwibWFpbFN0YXRlIiwiYXdhcmQiLCJfX2RlY29yYXRlIiwiU3ByaXRlIiwiTGFiZWwiLCJOb2RlIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLFlBQVksR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsS0FBRCxDQUFsQjs7QUFDQSxJQUFJRSxRQUFRLEdBQUdGLE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQUlHLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csSUFBRixHQUFTLElBQVQ7SUFDQUgsQ0FBQyxDQUFDSSxNQUFGLEdBQVcsSUFBWDtJQUNBSixDQUFDLENBQUNLLFdBQUYsR0FBZ0IsSUFBaEI7SUFDQUwsQ0FBQyxDQUFDTSxHQUFGLEdBQVEsRUFBUjtJQUNBTixDQUFDLENBQUNPLFFBQUYsR0FBYSxFQUFiO0lBQ0EsT0FBT1AsQ0FBUDtFQUNIOztFQUNEUSxTQUFTLENBQUNSLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNTLFNBQUYsQ0FBWUMsSUFBWixHQUFtQixVQUFVWCxDQUFWLEVBQWFDLENBQWIsRUFBZ0JXLENBQWhCLEVBQW1CO0lBQ2xDLEtBQUtMLEdBQUwsR0FBV1AsQ0FBWDs7SUFDQVYsSUFBSSxXQUFKLENBQWF1QixHQUFiLENBQWlCQyxHQUFqQixDQUFxQixVQUFVZCxDQUEvQixFQUFrQyxLQUFLSSxJQUF2Qzs7SUFDQSxJQUFJckIsQ0FBQyxHQUFHSyxZQUFZLFdBQVosQ0FBcUIyQixjQUFyQixDQUFvQ2QsQ0FBcEMsQ0FBUjs7SUFDQSxLQUFLTyxRQUFMLEdBQWdCekIsQ0FBaEI7SUFDQSxLQUFLc0IsTUFBTCxDQUFZVyxNQUFaLEdBQXFCLE1BQU1mLENBQTNCO0lBQ0EsS0FBS0ssV0FBTCxDQUFpQlcsTUFBakIsR0FBMEJMLENBQUMsSUFBSXJCLFFBQVEsQ0FBQzJCLFNBQVQsQ0FBbUJDLEtBQWxEO0VBQ0gsQ0FQRDs7RUFRQUMsVUFBVSxDQUFDLENBQUN2QixDQUFDLENBQUNKLEVBQUUsQ0FBQzRCLE1BQUosQ0FBRixDQUFELEVBQWlCcEIsQ0FBQyxDQUFDUyxTQUFuQixFQUE4QixNQUE5QixFQUFzQyxLQUFLLENBQTNDLENBQVY7O0VBQ0FVLFVBQVUsQ0FBQyxDQUFDdkIsQ0FBQyxDQUFDSixFQUFFLENBQUM2QixLQUFKLENBQUYsQ0FBRCxFQUFnQnJCLENBQUMsQ0FBQ1MsU0FBbEIsRUFBNkIsUUFBN0IsRUFBdUMsS0FBSyxDQUE1QyxDQUFWOztFQUNBVSxVQUFVLENBQUMsQ0FBQ3ZCLENBQUMsQ0FBQ0osRUFBRSxDQUFDOEIsSUFBSixDQUFGLENBQUQsRUFBZXRCLENBQUMsQ0FBQ1MsU0FBakIsRUFBNEIsYUFBNUIsRUFBMkMsS0FBSyxDQUFoRCxDQUFWOztFQUNBLE9BQU9VLFVBQVUsQ0FBQyxDQUFDekIsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBakI7QUFDSCxDQXZCTyxDQXVCTFIsRUFBRSxDQUFDK0IsU0F2QkUsQ0FBUjs7QUF3QkF0QyxPQUFPLFdBQVAsR0FBa0JhLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9udW1iZXJVdGlscyA9IHJlcXVpcmUoXCJOdW1iZXJVdGlsc1wiKTtcbnZhciBfcmVzID0gcmVxdWlyZShcInJlc1wiKTtcbnZhciBfbWFpbE1nciA9IHJlcXVpcmUoXCJtYWlsTWdyXCIpO1xudmFyIGwgPSBjYy5fZGVjb3JhdG9yO1xudmFyIHUgPSBsLmNjY2xhc3M7XG52YXIgcCA9IGwucHJvcGVydHk7XG52YXIgZCA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLmljb24gPSBudWxsO1xuICAgICAgICBlLm51bUxibCA9IG51bGw7XG4gICAgICAgIGUuYXdhcmRlZE5vZGUgPSBudWxsO1xuICAgICAgICBlLmtleSA9IFwiXCI7XG4gICAgICAgIGUuY291bnRTdHIgPSBcIlwiO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAodCwgZSwgbykge1xuICAgICAgICB0aGlzLmtleSA9IHQ7XG4gICAgICAgIF9yZXMuZGVmYXVsdC5pbnMubFNGKFwiaXRlbS9cIiArIHQsIHRoaXMuaWNvbik7XG4gICAgICAgIHZhciBuID0gX251bWJlclV0aWxzLmRlZmF1bHQuRm9ybWF0Q3VycmVuY3koZSk7XG4gICAgICAgIHRoaXMuY291bnRTdHIgPSBuO1xuICAgICAgICB0aGlzLm51bUxibC5zdHJpbmcgPSBcInhcIiArIGU7XG4gICAgICAgIHRoaXMuYXdhcmRlZE5vZGUuYWN0aXZlID0gbyA9PSBfbWFpbE1nci5tYWlsU3RhdGUuYXdhcmQ7XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtwKGNjLlNwcml0ZSldLCBlLnByb3RvdHlwZSwgXCJpY29uXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbcChjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJudW1MYmxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtwKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiYXdhcmRlZE5vZGVcIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gX19kZWNvcmF0ZShbdV0sIGUpO1xufSkoY2MuQ29tcG9uZW50KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGQ7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/iosP.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b63a8c4FAtD1LUSpIutFX8H', 'iosP');
// scripts/iosP.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var r;

var _com = require("com");

var _pConst = require("pConst");

var c = function (t) {
  function e() {
    var e = t.call(this) || this;
    r = jsb.reflection.callStaticMethod;
    return e;
  }

  __extends(e, t);

  Object.defineProperty(e.prototype, "appId", {
    get: function get() {
      return "6478914767";
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.string = function () {
    return _pConst.PFCode.Ios;
  };

  e.prototype.vibrate = function () {
    r("AppController", "vibrate:", null);
  };

  e.prototype.showLogin = function (e) {
    t.prototype.showLogin.call(this, e);
    r("AppController", "showLogin:", null);
  };

  Object.defineProperty(e.prototype, "isLogin", {
    get: function get() {
      return r("AppController", "getOpenId:", null);
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.login = function () {
    return Promise.resolve({
      code: Date.now() + _com["default"].ins.rad(1, 1e5),
      openid: r("AppController", "getOpenId:", null)
    });
  };

  e.prototype.setCloudData = function () {};

  e.prototype.doWatchAD = function () {
    return Promise.resolve();
  };

  e.prototype.showLoading = function () {
    this.isShowLoading || (this.isShowLoading = !0, r("AppController", "showLoading:", null));
  };

  e.prototype.hideLoading = function () {
    this.isShowLoading = !1;
    r("AppController", "hideLoading:", null);
  };

  e.prototype.showTip = function (t) {
    r("AppController", "showTip:", t);
  };

  return e;
}(require("nativeP")["default"]);

exports["default"] = c;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcaW9zUC5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJyIiwiX2NvbSIsInJlcXVpcmUiLCJfcENvbnN0IiwiYyIsInQiLCJlIiwiY2FsbCIsImpzYiIsInJlZmxlY3Rpb24iLCJjYWxsU3RhdGljTWV0aG9kIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwiZ2V0IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsInN0cmluZyIsIlBGQ29kZSIsIklvcyIsInZpYnJhdGUiLCJzaG93TG9naW4iLCJsb2dpbiIsIlByb21pc2UiLCJyZXNvbHZlIiwiY29kZSIsIkRhdGUiLCJub3ciLCJpbnMiLCJyYWQiLCJvcGVuaWQiLCJzZXRDbG91ZERhdGEiLCJkb1dhdGNoQUQiLCJzaG93TG9hZGluZyIsImlzU2hvd0xvYWRpbmciLCJoaWRlTG9hZGluZyIsInNob3dUaXAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQSxJQUFJQyxDQUFKOztBQUNBLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJRSxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBR0QsQ0FBQyxDQUFDRSxJQUFGLENBQU8sSUFBUCxLQUFnQixJQUF4QjtJQUNBUCxDQUFDLEdBQUdRLEdBQUcsQ0FBQ0MsVUFBSixDQUFlQyxnQkFBbkI7SUFDQSxPQUFPSixDQUFQO0VBQ0g7O0VBQ0RLLFNBQVMsQ0FBQ0wsQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FULE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQlMsQ0FBQyxDQUFDTSxTQUF4QixFQUFtQyxPQUFuQyxFQUE0QztJQUN4Q0MsR0FBRyxFQUFFLGVBQVk7TUFDYixPQUFPLFlBQVA7SUFDSCxDQUh1QztJQUl4Q0MsVUFBVSxFQUFFLENBQUMsQ0FKMkI7SUFLeENDLFlBQVksRUFBRSxDQUFDO0VBTHlCLENBQTVDOztFQU9BVCxDQUFDLENBQUNNLFNBQUYsQ0FBWUksTUFBWixHQUFxQixZQUFZO0lBQzdCLE9BQU9iLE9BQU8sQ0FBQ2MsTUFBUixDQUFlQyxHQUF0QjtFQUNILENBRkQ7O0VBR0FaLENBQUMsQ0FBQ00sU0FBRixDQUFZTyxPQUFaLEdBQXNCLFlBQVk7SUFDOUJuQixDQUFDLENBQUMsZUFBRCxFQUFrQixVQUFsQixFQUE4QixJQUE5QixDQUFEO0VBQ0gsQ0FGRDs7RUFHQU0sQ0FBQyxDQUFDTSxTQUFGLENBQVlRLFNBQVosR0FBd0IsVUFBVWQsQ0FBVixFQUFhO0lBQ2pDRCxDQUFDLENBQUNPLFNBQUYsQ0FBWVEsU0FBWixDQUFzQmIsSUFBdEIsQ0FBMkIsSUFBM0IsRUFBaUNELENBQWpDO0lBQ0FOLENBQUMsQ0FBQyxlQUFELEVBQWtCLFlBQWxCLEVBQWdDLElBQWhDLENBQUQ7RUFDSCxDQUhEOztFQUlBSixNQUFNLENBQUNDLGNBQVAsQ0FBc0JTLENBQUMsQ0FBQ00sU0FBeEIsRUFBbUMsU0FBbkMsRUFBOEM7SUFDMUNDLEdBQUcsRUFBRSxlQUFZO01BQ2IsT0FBT2IsQ0FBQyxDQUFDLGVBQUQsRUFBa0IsWUFBbEIsRUFBZ0MsSUFBaEMsQ0FBUjtJQUNILENBSHlDO0lBSTFDYyxVQUFVLEVBQUUsQ0FBQyxDQUo2QjtJQUsxQ0MsWUFBWSxFQUFFLENBQUM7RUFMMkIsQ0FBOUM7O0VBT0FULENBQUMsQ0FBQ00sU0FBRixDQUFZUyxLQUFaLEdBQW9CLFlBQVk7SUFDNUIsT0FBT0MsT0FBTyxDQUFDQyxPQUFSLENBQWdCO01BQ25CQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsR0FBTCxLQUFhekIsSUFBSSxXQUFKLENBQWEwQixHQUFiLENBQWlCQyxHQUFqQixDQUFxQixDQUFyQixFQUF3QixHQUF4QixDQURBO01BRW5CQyxNQUFNLEVBQUU3QixDQUFDLENBQUMsZUFBRCxFQUFrQixZQUFsQixFQUFnQyxJQUFoQztJQUZVLENBQWhCLENBQVA7RUFJSCxDQUxEOztFQU1BTSxDQUFDLENBQUNNLFNBQUYsQ0FBWWtCLFlBQVosR0FBMkIsWUFBWSxDQUFFLENBQXpDOztFQUNBeEIsQ0FBQyxDQUFDTSxTQUFGLENBQVltQixTQUFaLEdBQXdCLFlBQVk7SUFDaEMsT0FBT1QsT0FBTyxDQUFDQyxPQUFSLEVBQVA7RUFDSCxDQUZEOztFQUdBakIsQ0FBQyxDQUFDTSxTQUFGLENBQVlvQixXQUFaLEdBQTBCLFlBQVk7SUFDbEMsS0FBS0MsYUFBTCxLQUF3QixLQUFLQSxhQUFMLEdBQXFCLENBQUMsQ0FBdkIsRUFBMkJqQyxDQUFDLENBQUMsZUFBRCxFQUFrQixjQUFsQixFQUFrQyxJQUFsQyxDQUFuRDtFQUNILENBRkQ7O0VBR0FNLENBQUMsQ0FBQ00sU0FBRixDQUFZc0IsV0FBWixHQUEwQixZQUFZO0lBQ2xDLEtBQUtELGFBQUwsR0FBcUIsQ0FBQyxDQUF0QjtJQUNBakMsQ0FBQyxDQUFDLGVBQUQsRUFBa0IsY0FBbEIsRUFBa0MsSUFBbEMsQ0FBRDtFQUNILENBSEQ7O0VBSUFNLENBQUMsQ0FBQ00sU0FBRixDQUFZdUIsT0FBWixHQUFzQixVQUFVOUIsQ0FBVixFQUFhO0lBQy9CTCxDQUFDLENBQUMsZUFBRCxFQUFrQixVQUFsQixFQUE4QkssQ0FBOUIsQ0FBRDtFQUNILENBRkQ7O0VBR0EsT0FBT0MsQ0FBUDtBQUNILENBcERPLENBb0RMSixPQUFPLENBQUMsU0FBRCxDQUFQLFdBcERLLENBQVI7O0FBcURBSixPQUFPLFdBQVAsR0FBa0JNLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIHI7XG52YXIgX2NvbSA9IHJlcXVpcmUoXCJjb21cIik7XG52YXIgX3BDb25zdCA9IHJlcXVpcmUoXCJwQ29uc3RcIik7XG52YXIgYyA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gdC5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIHIgPSBqc2IucmVmbGVjdGlvbi5jYWxsU3RhdGljTWV0aG9kO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSwgXCJhcHBJZFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIFwiNjQ3ODkxNDc2N1wiO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiAhMSxcbiAgICAgICAgY29uZmlndXJhYmxlOiAhMFxuICAgIH0pO1xuICAgIGUucHJvdG90eXBlLnN0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9wQ29uc3QuUEZDb2RlLklvcztcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnZpYnJhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHIoXCJBcHBDb250cm9sbGVyXCIsIFwidmlicmF0ZTpcIiwgbnVsbCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5zaG93TG9naW4gPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICB0LnByb3RvdHlwZS5zaG93TG9naW4uY2FsbCh0aGlzLCBlKTtcbiAgICAgICAgcihcIkFwcENvbnRyb2xsZXJcIiwgXCJzaG93TG9naW46XCIsIG51bGwpO1xuICAgIH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLCBcImlzTG9naW5cIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiByKFwiQXBwQ29udHJvbGxlclwiLCBcImdldE9wZW5JZDpcIiwgbnVsbCk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6ICExLFxuICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgfSk7XG4gICAgZS5wcm90b3R5cGUubG9naW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoe1xuICAgICAgICAgICAgY29kZTogRGF0ZS5ub3coKSArIF9jb20uZGVmYXVsdC5pbnMucmFkKDEsIDFlNSksXG4gICAgICAgICAgICBvcGVuaWQ6IHIoXCJBcHBDb250cm9sbGVyXCIsIFwiZ2V0T3BlbklkOlwiLCBudWxsKVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnNldENsb3VkRGF0YSA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIGUucHJvdG90eXBlLmRvV2F0Y2hBRCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuc2hvd0xvYWRpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaXNTaG93TG9hZGluZyB8fCAoKHRoaXMuaXNTaG93TG9hZGluZyA9ICEwKSwgcihcIkFwcENvbnRyb2xsZXJcIiwgXCJzaG93TG9hZGluZzpcIiwgbnVsbCkpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuaGlkZUxvYWRpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaXNTaG93TG9hZGluZyA9ICExO1xuICAgICAgICByKFwiQXBwQ29udHJvbGxlclwiLCBcImhpZGVMb2FkaW5nOlwiLCBudWxsKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnNob3dUaXAgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICByKFwiQXBwQ29udHJvbGxlclwiLCBcInNob3dUaXA6XCIsIHQpO1xuICAgIH07XG4gICAgcmV0dXJuIGU7XG59KShyZXF1aXJlKFwibmF0aXZlUFwiKS5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGM7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/errorCode.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '12906Gi7KRMjKBS+7tO7/q6', 'errorCode');
// scripts/errorCode.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.errorCode = void 0;

(function (t) {
  t[t.LOGIN_ERR = 1] = "LOGIN_ERR", t[t.PF_LOGIN_ERR = 2] = "PF_LOGIN_ERR", t[t.PF_CLOUD_ERR = 3] = "PF_CLOUD_ERR", t[t.LOGIN_STATE_ERR = 4] = "LOGIN_STATE_ERR", t[t.PARSE_JSON_ERR = 5] = "PARSE_JSON_ERR", t[t.PARSE_JSON_ERR2 = 6] = "PARSE_JSON_ERR2", t[t.CANGET_DATE_ERR = 7] = "CANGET_DATE_ERR", t[t.HTTP_ERR = 8] = "HTTP_ERR";
})(exports.errorCode || (exports.errorCode = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZXJyb3JDb2RlLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZXJyb3JDb2RlIiwidCIsIkxPR0lOX0VSUiIsIlBGX0xPR0lOX0VSUiIsIlBGX0NMT1VEX0VSUiIsIkxPR0lOX1NUQVRFX0VSUiIsIlBBUlNFX0pTT05fRVJSIiwiUEFSU0VfSlNPTl9FUlIyIiwiQ0FOR0VUX0RBVEVfRVJSIiwiSFRUUF9FUlIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3QztBQUNBRCxPQUFPLENBQUNFLFNBQVIsR0FBb0IsS0FBSyxDQUF6Qjs7QUFDQSxDQUFDLFVBQVVDLENBQVYsRUFBYTtFQUNUQSxDQUFDLENBQUVBLENBQUMsQ0FBQ0MsU0FBRixHQUFjLENBQWhCLENBQUQsR0FBdUIsV0FBeEIsRUFDS0QsQ0FBQyxDQUFFQSxDQUFDLENBQUNFLFlBQUYsR0FBaUIsQ0FBbkIsQ0FBRCxHQUEwQixjQUQvQixFQUVLRixDQUFDLENBQUVBLENBQUMsQ0FBQ0csWUFBRixHQUFpQixDQUFuQixDQUFELEdBQTBCLGNBRi9CLEVBR0tILENBQUMsQ0FBRUEsQ0FBQyxDQUFDSSxlQUFGLEdBQW9CLENBQXRCLENBQUQsR0FBNkIsaUJBSGxDLEVBSUtKLENBQUMsQ0FBRUEsQ0FBQyxDQUFDSyxjQUFGLEdBQW1CLENBQXJCLENBQUQsR0FBNEIsZ0JBSmpDLEVBS0tMLENBQUMsQ0FBRUEsQ0FBQyxDQUFDTSxlQUFGLEdBQW9CLENBQXRCLENBQUQsR0FBNkIsaUJBTGxDLEVBTUtOLENBQUMsQ0FBRUEsQ0FBQyxDQUFDTyxlQUFGLEdBQW9CLENBQXRCLENBQUQsR0FBNkIsaUJBTmxDLEVBT0tQLENBQUMsQ0FBRUEsQ0FBQyxDQUFDUSxRQUFGLEdBQWEsQ0FBZixDQUFELEdBQXNCLFVBUDNCO0FBUUgsQ0FURCxFQVNHWCxPQUFPLENBQUNFLFNBQVIsS0FBc0JGLE9BQU8sQ0FBQ0UsU0FBUixHQUFvQixFQUExQyxDQVRIIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbmV4cG9ydHMuZXJyb3JDb2RlID0gdm9pZCAwO1xuKGZ1bmN0aW9uICh0KSB7XG4gICAgKHRbKHQuTE9HSU5fRVJSID0gMSldID0gXCJMT0dJTl9FUlJcIiksXG4gICAgICAgICh0Wyh0LlBGX0xPR0lOX0VSUiA9IDIpXSA9IFwiUEZfTE9HSU5fRVJSXCIpLFxuICAgICAgICAodFsodC5QRl9DTE9VRF9FUlIgPSAzKV0gPSBcIlBGX0NMT1VEX0VSUlwiKSxcbiAgICAgICAgKHRbKHQuTE9HSU5fU1RBVEVfRVJSID0gNCldID0gXCJMT0dJTl9TVEFURV9FUlJcIiksXG4gICAgICAgICh0Wyh0LlBBUlNFX0pTT05fRVJSID0gNSldID0gXCJQQVJTRV9KU09OX0VSUlwiKSxcbiAgICAgICAgKHRbKHQuUEFSU0VfSlNPTl9FUlIyID0gNildID0gXCJQQVJTRV9KU09OX0VSUjJcIiksXG4gICAgICAgICh0Wyh0LkNBTkdFVF9EQVRFX0VSUiA9IDcpXSA9IFwiQ0FOR0VUX0RBVEVfRVJSXCIpLFxuICAgICAgICAodFsodC5IVFRQX0VSUiA9IDgpXSA9IFwiSFRUUF9FUlJcIik7XG59KShleHBvcnRzLmVycm9yQ29kZSB8fCAoZXhwb3J0cy5lcnJvckNvZGUgPSB7fSkpO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ice.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bc1c1x9AEFHuo0WacUaPgZF', 'ice');
// scripts/ice.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.sps = [];
    e.sp = null;
    e.ani = null;
    e.count = 4;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.ani = this.getComponent(cc.Animation);
    this.ani.on(cc.Animation.EventType.FINISHED, this.playDone, this);
  };

  e.prototype.playDone = function () {
    0 == this.count && this.node.destroy();
  };

  e.prototype.drop = function () {
    var t = this.count;
    if (!(t < 1)) return this.ani.play(), t = this.count = t - 1, this.sp.spriteFrame = t > 0 ? this.sps[t - 1] : null, t;
  };

  __decorate([c([cc.SpriteFrame])], e.prototype, "sps", void 0);

  __decorate([c(cc.Sprite)], e.prototype, "sp", void 0);

  return __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcaWNlLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImEiLCJjYyIsIl9kZWNvcmF0b3IiLCJzIiwiY2NjbGFzcyIsImMiLCJwcm9wZXJ0eSIsImwiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwic3BzIiwic3AiLCJhbmkiLCJjb3VudCIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsIm9uTG9hZCIsImdldENvbXBvbmVudCIsIkFuaW1hdGlvbiIsIm9uIiwiRXZlbnRUeXBlIiwiRklOSVNIRUQiLCJwbGF5RG9uZSIsIm5vZGUiLCJkZXN0cm95IiwiZHJvcCIsInBsYXkiLCJzcHJpdGVGcmFtZSIsIl9fZGVjb3JhdGUiLCJTcHJpdGVGcmFtZSIsIlNwcml0ZSIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3QztBQUNBLElBQUlDLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csR0FBRixHQUFRLEVBQVI7SUFDQUgsQ0FBQyxDQUFDSSxFQUFGLEdBQU8sSUFBUDtJQUNBSixDQUFDLENBQUNLLEdBQUYsR0FBUSxJQUFSO0lBQ0FMLENBQUMsQ0FBQ00sS0FBRixHQUFVLENBQVY7SUFDQSxPQUFPTixDQUFQO0VBQ0g7O0VBQ0RPLFNBQVMsQ0FBQ1AsQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FDLENBQUMsQ0FBQ1EsU0FBRixDQUFZQyxNQUFaLEdBQXFCLFlBQVk7SUFDN0IsS0FBS0osR0FBTCxHQUFXLEtBQUtLLFlBQUwsQ0FBa0JsQixFQUFFLENBQUNtQixTQUFyQixDQUFYO0lBQ0EsS0FBS04sR0FBTCxDQUFTTyxFQUFULENBQVlwQixFQUFFLENBQUNtQixTQUFILENBQWFFLFNBQWIsQ0FBdUJDLFFBQW5DLEVBQTZDLEtBQUtDLFFBQWxELEVBQTRELElBQTVEO0VBQ0gsQ0FIRDs7RUFJQWYsQ0FBQyxDQUFDUSxTQUFGLENBQVlPLFFBQVosR0FBdUIsWUFBWTtJQUMvQixLQUFLLEtBQUtULEtBQVYsSUFBbUIsS0FBS1UsSUFBTCxDQUFVQyxPQUFWLEVBQW5CO0VBQ0gsQ0FGRDs7RUFHQWpCLENBQUMsQ0FBQ1EsU0FBRixDQUFZVSxJQUFaLEdBQW1CLFlBQVk7SUFDM0IsSUFBSW5CLENBQUMsR0FBRyxLQUFLTyxLQUFiO0lBQ0EsSUFBSSxFQUFFUCxDQUFDLEdBQUcsQ0FBTixDQUFKLEVBQ0ksT0FBTyxLQUFLTSxHQUFMLENBQVNjLElBQVQsSUFBa0JwQixDQUFDLEdBQUcsS0FBS08sS0FBTCxHQUFhUCxDQUFDLEdBQUcsQ0FBdkMsRUFBNEMsS0FBS0ssRUFBTCxDQUFRZ0IsV0FBUixHQUFzQnJCLENBQUMsR0FBRyxDQUFKLEdBQVEsS0FBS0ksR0FBTCxDQUFTSixDQUFDLEdBQUcsQ0FBYixDQUFSLEdBQTBCLElBQTVGLEVBQW1HQSxDQUExRztFQUNQLENBSkQ7O0VBS0FzQixVQUFVLENBQUMsQ0FBQ3pCLENBQUMsQ0FBQyxDQUFDSixFQUFFLENBQUM4QixXQUFKLENBQUQsQ0FBRixDQUFELEVBQXdCdEIsQ0FBQyxDQUFDUSxTQUExQixFQUFxQyxLQUFyQyxFQUE0QyxLQUFLLENBQWpELENBQVY7O0VBQ0FhLFVBQVUsQ0FBQyxDQUFDekIsQ0FBQyxDQUFDSixFQUFFLENBQUMrQixNQUFKLENBQUYsQ0FBRCxFQUFpQnZCLENBQUMsQ0FBQ1EsU0FBbkIsRUFBOEIsSUFBOUIsRUFBb0MsS0FBSyxDQUF6QyxDQUFWOztFQUNBLE9BQU9hLFVBQVUsQ0FBQyxDQUFDM0IsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBakI7QUFDSCxDQXpCTyxDQXlCTFIsRUFBRSxDQUFDZ0MsU0F6QkUsQ0FBUjs7QUEwQkFuQyxPQUFPLFdBQVAsR0FBa0JTLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIGEgPSBjYy5fZGVjb3JhdG9yO1xudmFyIHMgPSBhLmNjY2xhc3M7XG52YXIgYyA9IGEucHJvcGVydHk7XG52YXIgbCA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLnNwcyA9IFtdO1xuICAgICAgICBlLnNwID0gbnVsbDtcbiAgICAgICAgZS5hbmkgPSBudWxsO1xuICAgICAgICBlLmNvdW50ID0gNDtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgfVxuICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICBlLnByb3RvdHlwZS5vbkxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuYW5pID0gdGhpcy5nZXRDb21wb25lbnQoY2MuQW5pbWF0aW9uKTtcbiAgICAgICAgdGhpcy5hbmkub24oY2MuQW5pbWF0aW9uLkV2ZW50VHlwZS5GSU5JU0hFRCwgdGhpcy5wbGF5RG9uZSwgdGhpcyk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5wbGF5RG9uZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgMCA9PSB0aGlzLmNvdW50ICYmIHRoaXMubm9kZS5kZXN0cm95KCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5kcm9wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IHRoaXMuY291bnQ7XG4gICAgICAgIGlmICghKHQgPCAxKSlcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFuaS5wbGF5KCksICh0ID0gdGhpcy5jb3VudCA9IHQgLSAxKSwgKHRoaXMuc3Auc3ByaXRlRnJhbWUgPSB0ID4gMCA/IHRoaXMuc3BzW3QgLSAxXSA6IG51bGwpLCB0O1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbYyhbY2MuU3ByaXRlRnJhbWVdKV0sIGUucHJvdG90eXBlLCBcInNwc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2MoY2MuU3ByaXRlKV0sIGUucHJvdG90eXBlLCBcInNwXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW3NdLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSBsO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/jigsawMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2f97e8To3BGBasqLgXvs1PD', 'jigsawMgr');
// scripts/jigsawMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _global = require("global");

var _pInfo = require("pInfo");

var _bagMgr = require("bagMgr");

var s = function () {
  function t() {
    this.jigsawTileTotal = 105;
    this.localData = null;
    this.seed = 5;
    this.saveStr = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*()_+?><{}|[]. 亿'\"一二三四五六七八九十东西南北中百千万";
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      return this._ins || (this._ins = new t());
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.getJigsawTilesByIdx = function (t) {
    var e = this.getJigsawTiles()[t] || [];

    var o = _bagMgr["default"].ins.getItemCount("puzzle_pieces");

    var n = t + 1;
    var i = this.getTicketPoolByIdx(t);

    if (e.length < this.jigsawTileTotal) {
      var r = e.length;
      var s = this.jigsawTileTotal - e.length;
      var c = o - ((n - 1) * this.jigsawTileTotal + r);
      if (c > 0) for (var l = Math.min(s, c), u = 0; u < l; u++) {
        var p = i[r + u];
        e.push([p, -1]);
      }
    }

    this.setJigsawTilesByIdx(t, e, !1);
    return e;
  };

  t.prototype.getTicketPoolByIdx = function (t) {
    var e = t + 1;
    this.seed = 22 + e;
    var o = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 33, 44, 55, 66, 77, 88, 99, 89, 100, 91, 101, 93, 102, 95, 103, 97, 104, 98, 87, 76, 65, 54, 43, 32, 21];
    this.shuffleArray(o);
    o.length = 10;

    for (var n = [], i = 0; i < 105; i++) {
      -1 == o.indexOf(i) && n.push(i);
    }

    this.shuffleArray(n);
    return o.concat(n);
  };

  t.prototype.setJigsawTilesByIdx = function (t, e, o) {
    void 0 === o && (o = !0);

    for (var n = this.saveStr, i = "", a = 0, s = e.length; a < s; a++) {
      var c = e[a][1];
      var l = "-";
      -1 != c && (l = n[c]);
      i += l;
    }

    var u = this.getNewSaveTiles();

    if (u[t] = i, this.setNewSaveTiles(u), o) {
      var p = [t, i];

      _pInfo["default"].ins.setJigTiles(p);
    }
  };

  t.prototype.isItemUnlock = function (t) {
    var e = t * this.jigsawTileTotal;

    var o = _bagMgr["default"].ins.getItemCount("puzzle_pieces");

    var n = _pInfo["default"].ins.isJigsawLocked();

    return (0 == t || !n) && o > e;
  };

  t.prototype.isPieceEnough = function (t) {
    var e = t * this.jigsawTileTotal;
    return _bagMgr["default"].ins.getItemCount("puzzle_pieces") > e;
  };

  t.prototype.getNowJigsawLv = function () {
    for (var t = 0, e = this.getJigsawTiles().length; t < e; t++) {
      if (!this.IsJigsawCompletedByIdx(t)) return t + 1;
    }
  };

  t.prototype.IsJigsawCompletedByIdx = function (t) {
    var e = this.getJigsawTiles()[t];

    if (105 == e.length) {
      for (var o = 0, n = e; o < n.length; o++) {
        var i = n[o];
        if (i[0] != i[1]) return !1;
      }

      return !0;
    }

    return !1;
  };

  t.prototype.getAllTiles = function () {
    for (var t = 0, e = _global["default"].jisawCount; t < e; t++) {
      this.getJigsawTilesByIdx(t);
    }
  };

  t.prototype.getUnPlacedNum = function () {
    this.getAllTiles();

    for (var t = this.getJigsawTiles(), e = 0, o = 0, n = t.length; o < n; o++) {
      var i = t[o];
      if (!this.checkHasFin(o)) for (var r = 0, a = i.length; r < a; r++) {
        var s = i[r];
        s[1] != s[0] && e++;
      }
    }

    return e;
  };

  t.prototype.seedRandom = function () {
    this.seed = (9301 * this.seed + 49297) % 233280;
    return this.seed / 233280;
  };

  t.prototype.shuffleArray = function (t) {
    for (var e, o = t.length - 1; o > 0; o--) {
      var n = Math.floor(this.seedRandom() * (o + 1));
      e = [t[n], t[o]];
      t[o] = e[0];
      t[n] = e[1];
    }
  };

  t.prototype.getJigsawTiles = function () {
    var t = this.saveStr;

    var e = _pInfo["default"].ins.getJigTiles();

    var o = this.getNewSaveTiles();
    var n = [];
    var i = o.length;

    if (i) {
      -1 != e[0] && (o[e[0]] = e[1]);

      for (var a = 0; a < i; a++) {
        var s = o[a];

        if (s) {
          for (var c = this.getTicketPoolByIdx(a), l = [], u = 0, p = s.length; u < p; u++) {
            var d = c[u];
            var h = s[u];
            var f = [d, t.indexOf(h)];
            l.push(f);
          }

          n.push(l);
        }
      }
    } else for (var g = [], y = (a = 0, (n = this.getOldSaveTiles()).length); a < y; a++) {
      for (var m = n[a], v = "", _ = (u = 0, m.length); u < _; u++) {
        var b = m[u][1];
        var w = "-";
        -1 != b && (w = t[b]);
        v += w;
      }

      g.push(v);
      this.setNewSaveTiles(g);
      this.setOldSaveTiles([]);
    }

    return n;
  };

  t.prototype.getNewSaveTiles = function () {
    var t = this.getLocalJigData().jigTils;
    return null == t ? [] : t;
  };

  t.prototype.setNewSaveTiles = function (t) {
    this.setLocalJigData({
      jigTils: t
    });
  };

  t.prototype.getOldSaveTiles = function () {
    var t = this.getLocalJigData().tiles;
    return null == t ? [] : t;
  };

  t.prototype.setOldSaveTiles = function (t) {
    this.setLocalJigData({
      tiles: t
    });
  };

  t.prototype.setLocalJigData = function (t) {
    var e = this.getLocalJigData();
    this.localData = Object.assign(Object.assign({}, e), t);

    _idx.platform.setStorage("jigsawData", this.localData);
  };

  t.prototype.getLocalJigData = function () {
    null == this.localData && (this.localData = _idx.platform.getStorage("jigsawData") || {});
    return this.localData;
  };

  t.prototype.checkClearData = function () {
    _pInfo["default"].ins.getIsClearJigsawData() && (_pInfo["default"].ins.setIsClearJigsawData(!1), this.clearJigsawData());
  };

  t.prototype.clearJigsawData = function () {
    this.localData = {};

    _idx.platform.setStorage("jigsawData", this.localData);
  };

  t.prototype.checkSetFin = function (t) {
    this.checkHasFin(t) || this.setFinfishJigsaw(t);
  };

  t.prototype.checkHasFin = function (t) {
    return _pInfo["default"].ins.getHasFinJig()[t] || !1;
  };

  t.prototype.setFinfishJigsaw = function (t) {
    var e = _pInfo["default"].ins.getHasFinJig();

    e[t] = !0;

    _pInfo["default"].ins.setHasFinJig(e);
  };

  t.prototype.clearFinJig = function (t) {
    var e = _pInfo["default"].ins.getHasFinJig();

    e[t] = !1;

    _pInfo["default"].ins.setHasFinJig(e);
  };

  t.prototype.resetJigByIdx = function (t) {
    for (var e = this.getJigsawTilesByIdx(t), o = [], n = 0, i = e.length; n < i; n++) {
      var r = e[n];
      r[1] = -1;
      o.push(r);
    }

    this.setJigsawTilesByIdx(t, o, !1);
    this.clearFinJig(t);
  };

  return t;
}();

exports["default"] = s;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/levelItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2980049qItDablK/zeCxVwI', 'levelItem');
// scripts/levelItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.sp = null;
    e.lvlLbl = null;
    return e;
  }

  __extends(e, t);

  e.prototype.setLvlLbl = function (t) {
    var e = 0;
    if (1 == t.length) -1 != t.indexOf("1") && (e = -2);else for (var o = 0, n = t; o < n.length; o++) {
      "1" == n[o] && e--;
    }
    this.lvlLbl.string = t;
    this.lvlLbl.node.x = e;
  };

  __decorate([c(cc.Sprite)], e.prototype, "sp", void 0);

  __decorate([c(cc.Label)], e.prototype, "lvlLbl", void 0);

  return __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcbGV2ZWxJdGVtLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImEiLCJjYyIsIl9kZWNvcmF0b3IiLCJzIiwiY2NjbGFzcyIsImMiLCJwcm9wZXJ0eSIsImwiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwic3AiLCJsdmxMYmwiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJzZXRMdmxMYmwiLCJsZW5ndGgiLCJpbmRleE9mIiwibyIsInN0cmluZyIsIm5vZGUiLCJ4IiwiX19kZWNvcmF0ZSIsIlNwcml0ZSIsIkxhYmVsIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLElBQUlDLENBQUMsR0FBSSxVQUFVQyxDQUFWLEVBQWE7RUFDbEIsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxFQUFGLEdBQU8sSUFBUDtJQUNBSCxDQUFDLENBQUNJLE1BQUYsR0FBVyxJQUFYO0lBQ0EsT0FBT0osQ0FBUDtFQUNIOztFQUNESyxTQUFTLENBQUNMLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNNLFNBQUYsQ0FBWUMsU0FBWixHQUF3QixVQUFVUixDQUFWLEVBQWE7SUFDakMsSUFBSUMsQ0FBQyxHQUFHLENBQVI7SUFDQSxJQUFJLEtBQUtELENBQUMsQ0FBQ1MsTUFBWCxFQUFtQixDQUFDLENBQUQsSUFBTVQsQ0FBQyxDQUFDVSxPQUFGLENBQVUsR0FBVixDQUFOLEtBQXlCVCxDQUFDLEdBQUcsQ0FBQyxDQUE5QixFQUFuQixLQUNLLEtBQUssSUFBSVUsQ0FBQyxHQUFHLENBQVIsRUFBV3hCLENBQUMsR0FBR2EsQ0FBcEIsRUFBdUJXLENBQUMsR0FBR3hCLENBQUMsQ0FBQ3NCLE1BQTdCLEVBQXFDRSxDQUFDLEVBQXRDO01BQTBDLE9BQU94QixDQUFDLENBQUN3QixDQUFELENBQVIsSUFBZVYsQ0FBQyxFQUFoQjtJQUExQztJQUNMLEtBQUtJLE1BQUwsQ0FBWU8sTUFBWixHQUFxQlosQ0FBckI7SUFDQSxLQUFLSyxNQUFMLENBQVlRLElBQVosQ0FBaUJDLENBQWpCLEdBQXFCYixDQUFyQjtFQUNILENBTkQ7O0VBT0FjLFVBQVUsQ0FBQyxDQUFDbEIsQ0FBQyxDQUFDSixFQUFFLENBQUN1QixNQUFKLENBQUYsQ0FBRCxFQUFpQmYsQ0FBQyxDQUFDTSxTQUFuQixFQUE4QixJQUE5QixFQUFvQyxLQUFLLENBQXpDLENBQVY7O0VBQ0FRLFVBQVUsQ0FBQyxDQUFDbEIsQ0FBQyxDQUFDSixFQUFFLENBQUN3QixLQUFKLENBQUYsQ0FBRCxFQUFnQmhCLENBQUMsQ0FBQ00sU0FBbEIsRUFBNkIsUUFBN0IsRUFBdUMsS0FBSyxDQUE1QyxDQUFWOztFQUNBLE9BQU9RLFVBQVUsQ0FBQyxDQUFDcEIsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBakI7QUFDSCxDQWxCTyxDQWtCTFIsRUFBRSxDQUFDeUIsU0FsQkUsQ0FBUjs7QUFtQkE1QixPQUFPLFdBQVAsR0FBa0JTLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIGEgPSBjYy5fZGVjb3JhdG9yO1xudmFyIHMgPSBhLmNjY2xhc3M7XG52YXIgYyA9IGEucHJvcGVydHk7XG52YXIgbCA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLnNwID0gbnVsbDtcbiAgICAgICAgZS5sdmxMYmwgPSBudWxsO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLnNldEx2bExibCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZhciBlID0gMDtcbiAgICAgICAgaWYgKDEgPT0gdC5sZW5ndGgpIC0xICE9IHQuaW5kZXhPZihcIjFcIikgJiYgKGUgPSAtMik7XG4gICAgICAgIGVsc2UgZm9yICh2YXIgbyA9IDAsIG4gPSB0OyBvIDwgbi5sZW5ndGg7IG8rKykgXCIxXCIgPT0gbltvXSAmJiBlLS07XG4gICAgICAgIHRoaXMubHZsTGJsLnN0cmluZyA9IHQ7XG4gICAgICAgIHRoaXMubHZsTGJsLm5vZGUueCA9IGU7XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtjKGNjLlNwcml0ZSldLCBlLnByb3RvdHlwZSwgXCJzcFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2MoY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwibHZsTGJsXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW3NdLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSBsO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/mailItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'df858t+SihDvZmIzPrVMWvv', 'mailItem');
// scripts/mailItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _time = require("time");

var _mailMgr = require("mailMgr");

var _panelMgr = require("panelMgr");

var l = cc._decorator;
var u = l.ccclass;
var p = l.property;

var d = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.title = null;
    e.content = null;
    e.leftT = null;
    e.goNode = null;
    e.mailSpf = [];
    e.newNode = null;
    e.qNode = null;
    e.rewardedNode = null;
    e.icon = null;
    e.timeBg = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t, e) {
    this.id = t;
    var o = _mailMgr["default"].ins.serverMail[t];

    if (o) {
      var n = o.title;
      n.length > 8 && (n = n.substring(0, 7) + "...");
      this.title.string = n;
      var i = o.msg;
      i.length > 9 && (i = i.substring(0, 8) + "...");
      this.content.string = i;
      this.temple = o;
      this.updateState(e);
      this.undateTime();
      this.schedule(this.undateTime, 1, cc.macro.REPEAT_FOREVER);
    }
  };

  e.prototype.updateState = function (t) {
    this.state = t;
    t == _mailMgr.mailState.award ? this.icon.spriteFrame = this.mailSpf[1] : this.icon.spriteFrame = this.mailSpf[0];
    this.rewardedNode.active = t == _mailMgr.mailState.award;
    this.newNode.active = t == _mailMgr.mailState.noRead;
  };

  e.prototype.onOperTap = function (t) {
    null == t || t.action;
  };

  e.prototype.undateTime = function () {
    if (this.temple.end_time) {
      var t = this.temple.end_time / 1e3 - _time["default"].ins.serverTime;
      t < 0 ? this.unschedule(this.undateTime) : (this.leftT.string = "剩余" + _time["default"].formatDate2Str(t), this.leftT._forceUpdateRenderData(!0), this.timeBg.node.width = this.leftT.node.width + 20);
    }
  };

  e.prototype.onEnable = function () {
    this.goNode.on("click", this.showMailInfo, this);
  };

  e.prototype.onDisable = function () {
    this.goNode.off("click", this.showMailInfo, this);
    this.unschedule(this.undateTime);
  };

  e.prototype.showMailInfo = function () {
    _mailMgr["default"].ins.serverMail[this.id] && _panelMgr["default"].ins.open("ui/ui_mailInfo", {
      id: this.id
    });
  };

  __decorate([p(cc.Label)], e.prototype, "title", void 0);

  __decorate([p(cc.Label)], e.prototype, "content", void 0);

  __decorate([p(cc.Label)], e.prototype, "leftT", void 0);

  __decorate([p(cc.Node)], e.prototype, "goNode", void 0);

  __decorate([p(cc.SpriteFrame)], e.prototype, "mailSpf", void 0);

  __decorate([p(cc.Node)], e.prototype, "newNode", void 0);

  __decorate([p(cc.Node)], e.prototype, "qNode", void 0);

  __decorate([p(cc.Node)], e.prototype, "rewardedNode", void 0);

  __decorate([p(cc.Sprite)], e.prototype, "icon", void 0);

  __decorate([p(cc.Sprite)], e.prototype, "timeBg", void 0);

  return __decorate([u], e);
}(cc.Component);

exports["default"] = d;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/game.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a1e2eOdqJJNRYqNOnj+M+iI', 'game');
// scripts/game.js

"use strict";

//电子邮件puhalskijsemen@gmail.com
//源码网站 开vpn全局模式打开 http://web3incubators.com/
//电报https://t.me/gamecode999
//网页客服 http://web3incubators.com/kefu.html
var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.grilAni = void 0;
var c;
var l;
var u;
var p;
var d;
var h;
var f;
var g;

var _com = require("com");

var _evts = require("evts");

var _idx = require("idx");

var _mySafeArea = require("mySafeArea");

var _pConst = require("pConst");

var _res = require("res");

var _sound = require("sound");

var _uData = require("uData");

var _vb = require("vb");

var _uvAni = require("uvAni");

var _cfgMgr = require("cfgMgr");

var _grid = require("grid");

var _heart = require("heart");

var _item = require("item");

var _random_notice = require("random_notice");

var _creator = require("Creator");

var _global = require("global");

var _bagMgr = require("bagMgr");

var _challengeMgr = require("challengeMgr");

var _festivalMgr = require("festivalMgr");

var _levelMgr = require("levelMgr");

var _panelMgr = require("panelMgr");

var _taskMgr = require("taskMgr");

var _pInfo = require("pInfo");

var _tipMgr = require("tipMgr");

var _banner = require("banner");

var _rewardMgr = require("rewardMgr");

var z = cc._decorator;
var H = z.ccclass;
var G = z.property;
var J = Math.floor;
var W = (cc.color(230, 234, 247), cc.color(252, 254, 94));
var q = cc.color(181, 142, 34, 255);
(d = c || (c = {}))[d.X = 0] = "X";
d[d.O = 1] = "O";
d[d.Empty = 3] = "Empty";

(function (t) {
  t[t.None = 0] = "None", t[t.HeadRow = 1] = "HeadRow", t[t.HeadCol = 2] = "HeadCol", t[t.Grid = 3] = "Grid";
})(l || (l = {}));

(function (t) {
  t[t.None = 0] = "None", t[t.Vertical = 1] = "Vertical", t[t.Horizontal = 2] = "Horizontal";
})(u || (u = {}));

(function (t) {
  t[t.None = 0] = "None", t[t.Set = 1] = "Set", t[t.Clean = 2] = "Clean";
})(p || (p = {}));

(function (t) {
  t.run = "run", t.idle = "idle", t.happy = "happy", t.sad = "sad";
})(h = exports.grilAni || (exports.grilAni = {}));

(function (t) {
  t.showBtns = "showBtns", t.hideBtns = "hideBtns", t.gameLose = "gameLose", t.gameRelife = "gameRelife", t.gameWin = "gameWin", t.gameWinFailSf = "gameWinFailSf", t.openItemSelect = "openItemSelect", t.closeItemSelect = "closeItemSelect";
})(f || (f = {}));

(function (t) {
  t.tipIn = "tipIn";
  t.tipOut = "tipOut";
})(g || (g = {}));

var K = {
  2e4: "点击显示格子内容",
  20001: "点击随机显示\n3个格子内容",
  20002: "点击显示一行\n或是一列格子内容"
};

var Y = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.topSp = null;
    e.topGirlSk = null;
    e.topGooseSk = null;
    e.downSp = null;
    e.gridBgSp = null;
    e.topNode = null;
    e.downNode = null;
    e.downBeginY = 0;
    e.font4 = null;
    e.camera = null;
    e.panelAni = null;
    e.uHintSf = null;
    e.lHintSf = null;
    e.gridPrefab = null;
    e.map_node_ = null;
    e.tilesParent = null;
    e.selectMask = null;
    e.selectMaskBg = null;
    e.rowHintsParent = null;
    e.colHintsParent = null;
    e.scoreLbl = null;
    e.score = 0;
    e.useTimeLbl = null;
    e.consLbl = null;
    e.cons2Lbl = null;
    e.consBestLbl = null;
    e.rew1Lbl = null;
    e.rew2Lbl = null;
    e.threeNode = null;
    e.tenNode = null;
    e.oxTagAni = null;
    e.fadePrefab = null;
    e.patices = null;
    e.heartsPatic = null;
    e.hearts = [];
    e.heartInfinity = null;
    e.tipNode = null;
    e.tipLabel = null;
    e.tipAni = null;
    e.winAniNode = null;
    e.winCircleMask = null;
    e.winSpParent = null;
    e.winSps = null;
    e.winLight = null;
    e.singleSf = null;
    e.levelLbl = null;
    e.clockWarn = null;
    e.norClock = null;
    e.speClock = null;
    e.clockLbl = null;
    e.clockLbl2 = null;
    e.tipActNode = null;
    e.tipUnActNode = null;
    e.shareBtn = null;
    e.shareIcon = null;
    e.shareLbl = null;
    e.noticeLbl = null;
    e.noticeAni = null;
    e.random_noticeLbl = null;
    e.random_noticeAni = null;
    e.full_row_colLbl = null;
    e.full_row_colAni = null;
    e.itemSelectEff = null;
    e.itemSelectIcon = null;
    e.itemSelectLbl = null;
    e.adGetBtn = null;
    e.getBtnsp = null;
    e.rewItems = null;
    e.rewItemPre = null;
    e.stopPraNode = null;
    e.heartBgNode = null;
    e.noticePrefab = null;
    e.random_noticePrefab = null;
    e.full_row_colPrefab = null;
    e.lineW = 2;
    e.relifeTime = 3;
    e.isAllRight = !1;
    e.rows_ = 15;
    e.cols_ = 15;
    e.grid_count = 0;
    e.grids = [];
    e.baseData = null;
    e.workData = null;
    e.baseOTotal = -1;
    e.gridHeadRowVec = [];
    e.gridHeadColVec = [];
    e.rowHeadNums = [];
    e.rowHeadBegins = [];
    e.colHeadNums = [];
    e.colHeadBegins = [];
    e.fontSize = 36;
    e.gridSize = 40;
    e.gridsStartX = 0;
    e.gridTouchStart = null;
    e.touchDir = u.None;
    e.fillMode = p.None;
    e.pen = c.O;
    e.lastTouchRow = -1;
    e.lastTouchCol = -1;
    e.click_touch_ = !1;
    e.colAutoXCols = new Map();
    e.colAutoXRows = new Map();
    e.opStep = null;
    e._showResultTime = 0;
    e.heartsNum = 3;
    e.soundIdx = 1;
    e.items = [{
      icon: "notice",
      tip: K[2e4],
      count: 0,
      itemMax: -1,
      itemCur: 0
    }, {
      icon: "random_notice",
      tip: K[20001],
      count: 0,
      itemMax: -1,
      itemCur: 0
    }, {
      icon: "full_row_col",
      tip: K[20002],
      count: 0,
      itemMax: -1,
      itemCur: 0
    }];
    e.eventFunc = null;
    e.raceRefreshPop = [];
    e.selectData = {
      row: -1,
      col: -1
    };
    return e;
  }

  var o;

  __extends(e, t);

  o = e;
  Object.defineProperty(e.prototype, "canTouch", {
    get: function get() {
      return this._canTouch;
    },
    set: function set(t) {
      this._canTouch = t;
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.onLoad = function () {
    var t = this;

    if (this.byGuide = _global["default"].byGuide, delete _global["default"].byGuide, _global["default"].padScale) {
      cc.view.setDesignResolutionSize(720, 1280, cc.ResolutionPolicy.FIXED_HEIGHT);
      var e = this.topSp.node;
      var o = (cc.view.getVisibleSize().width - 720) / 2;

      if (this.heartInfinity.x -= o, this.norClock.parent.x -= o, this.clockWarn.width += 2 * o, this.hearts.forEach(function (t) {
        t.node.x -= o;
      }), this.heartBgNode.x -= o, e.removeComponent(cc.Widget), this.topNode.removeComponent(cc.Widget), this.scheduleOnce(function () {
        e.y = 220;
        t.topNode.y = 0;
      }), !this.byGuide) {
        var n = this.downNode.children;
        n[0].setPosition(-252, -570);

        for (var i = 1; i < 4; i++) {
          n[i].x += 30;
        }

        n[4].children[1].active = !0;
        n[5].active = !1;
      }
    }

    _idx.platform.string() == _pConst.PFCode.Alipay && this.scheduleOnce(function () {
      t.heartInfinity.parent.y -= _mySafeArea.getSafeAreaRect().yMin, t.topSp.node.y -= _mySafeArea.getSafeAreaRect().yMin;
    });

    _sound["default"].ins.playBGM();

    this.opStep = {
      grids: [],
      row_autox_cols: new Map(),
      col_autox_rows: new Map(),
      hint_rows: [],
      hint_cols: [],
      is_row_autox_changed: !1,
      is_col_autox_changed: !1,
      is_hint_rows_changed: !1,
      is_hint_cols_changed: !1
    };
    this.panelAni.on(cc.Animation.EventType.FINISHED, this.playAniDone, this);
    this.oxTagAni.on(cc.Animation.EventType.FINISHED, this.oxAniDone, this);
    this.tipAni.on(cc.Animation.EventType.FINISHED, this.tipAniDone, this);
    this.eventFunc = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eventFunc);
  };

  e.prototype.checkLocalData = function () {
    var t;
    o.type;
    (t = new Array(this.grid_count)).fill(c.Empty);
    this.workData = t;
  };

  e.prototype.checkGuide = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      var e;
      var o;
      var n;
      var i;
      var r;
      var a;
      var c;
      var l;
      var u;
      var p;
      var d;
      var f;
      var g;
      var y;
      var m;
      var v = this;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            return this.byGuide ? (this.clockWarn.destroy(), this.stopPraNode.x = 0, t = this.node, e = new cc.Node("guideOthers"), this.guideSteps = [{
              yIdx: 3,
              glows: [[0, 5]],
              finger: 1,
              content: "让我们从最简单的步骤开始，找刚好可以填满的一行。填满这5格吧！"
            }, {
              none: 1,
              content: "太棒啦！"
            }, {
              xIdx: 0,
              finger: 2,
              content: "让我们先看这一列，数字与色块数目一样。我们先切换到打叉模式！"
            }, {
              xIdx: 0,
              glows: [[2, 1], [4, 1]],
              content: "现在可以把我们肯定是空格的格子打上X！"
            }, {
              xIdx: 4,
              glows: [[2, 1], [4, 1]],
              content: "太棒啦！同理，可以在这列标上两个X。"
            }, {
              yIdx: 2,
              glows: [[1, 3]],
              finger: 3,
              content: "现在我们可以很容易的确定这行的3个色块啦。快给他们上色吧！"
            }, {
              yIdx: 2,
              glows: [[1, 3]]
            }, {
              yIdx: 1,
              glows: [[0, 1], [2, 1], [4, 1]],
              content: "这行有3个1，那么在它们的中间必须有2个空白块的。\n       1+1+1+2=5。刚好占满整行啦。给他们上色吧。"
            }, {
              yIdx: 0,
              glows: [[1, 3]],
              content: "又找到3个连续的涂色块！"
            }, {
              yIdx: 4,
              glows: [[1, 1], [3, 1]],
              content: "快要完成了，把最后的格子都上色吧！"
            }], this.guideCurStep = -1, this.guideMaxStep = this.guideSteps.length - 1, [4, _res["default"].ins.lPre("prefab/game/gridGlow")]) : [3, 4];

          case 1:
            for (o = s.sent(), n = this.guideGlows = [], i = 0; i < 3; i++) {
              (r = cc.instantiate(o)).setAnchorPoint(0, 0.5), n.push(r), e.addChild(r);
            }

            return c = this, u = (l = cc).instantiate, [4, _res["default"].ins.lPre("prefab/game/npc")];

          case 2:
            return (a = c.guideNpc = u.apply(l, [s.sent()])).setPosition(380, 610), _res["default"].ins.getBundleByString("resSps").then(function (t) {
              t.load("game/girl", cc.Prefab, function (t, e) {
                if (!t && v.node && v.node.isValid) {
                  var o = cc.instantiate(e);
                  a.addChild(o);
                  o.setPosition(250, -251);
                  o.setSiblingIndex(0);
                  var n = v.topGirlSk = o.getComponent(sp.Skeleton);
                  n.animation = h.idle;
                  n.setEndListener(v.playGirlEnd.bind(v));
                }
              });
            }), p = a.getChildByName("dialog"), this.guideNpcAni = p.getComponent(cc.Animation), this.guideNpcLbl = p.getChildByName("content").getComponent(cc.Label), (d = this.guideFinger = new cc.Node("guideFinger")).setAnchorPoint(0.1, 0.91), _res["default"].ins.lSF("common/shouzhi", d.addComponent(cc.Sprite)), e.addChild(d), e.addChild(a), e.setPosition(this.map_node_.position), e.setAnchorPoint(0, 0), t.getChildByName("up").active = !1, (f = t.getChildByName("down")).children.forEach(function (t) {
              t.active = !1;
            }), this.guideFingerTogY = this.oxTagAni.node.y + f.y - this.map_node_.y, t.getChildByName("bg").getChildByName("winBg").active = !0, (g = this.guideMask = new cc.Node("guideMask")).addComponent(cc.Mask).inverted = !0, y = this.guideMaskBg = new cc.Node("mask"), m = y.addComponent(cc.Sprite), [4, _res["default"].ins.lSF("common/default_sprite_splash")];

          case 3:
            m.spriteFrame = s.sent(), y.addComponent(cc.BlockInputEvents), y.color = cc.Color.BLACK, y.opacity = 100, this.scheduleOnce(function () {
              y.setContentSize(cc.view.getVisibleSize());
            }), g.addChild(y), t.addChild(g), t.addChild(e), g.setSiblingIndex(3), this.guideCheckGrid = [], this.updateGuideStep(), s.label = 4;

          case 4:
            return [2];
        }
      });
    });
  };

  e.prototype.updateGuideStep = function () {
    var t = this;
    this.unschedule(this.updateGuideStep);
    var e = this.guideCurStep = this.guideCurStep + 1;
    var o = this.guideMask;
    var n = this.guideSteps[e];
    var i = this.guideFinger;
    var r = this.guideGlows;

    if (!n) {
      _idx.platform.reportEvent(_idx.ERepEvt.finshGuide);

      o.active = !1;
      r.forEach(function (t) {
        t.active = !1;
      });
      var a = this.guideNpc;
      a.y = a.opacity = 0;
      this.guideNpcLbl.string = "       太棒了！我们收集到了一朵美丽的花，现在前往主线继续收集其他图画吧。";
      return void this.playGirlAni(h.happy);
    }

    var s = n.content;
    var c = n.xIdx;
    var l = n.yIdx;
    var u = n.glows;
    var p = n.finger;
    var d = n.none;
    var f = this.guideMaskBg;
    if (this.oxTagAni.node.active = 2 == e || 5 == e, d) r[0].active = !1, i.active = !1, cc.Tween.stopAllByTarget(i), this.scheduleOnce(function () {
      return t.updateGuideStep();
    }, 1);else {
      var g = this.map_node_;
      var y = this.gridSize;
      var m = this.gridsStartX;
      var _ = this.guideCheckGrid;
      var b = 548;
      var w = b;
      var S = -68;
      var T = -48;
      var I = void 0 !== c;
      var D = void 0 !== l;
      if (I ? (S = m + c * y + y / 2 + g.x, b = y) : D && (T = l * y + y / 2 + g.y, w = y), o.setPosition(S, T), o.setContentSize(b, w), f.setPosition(-S, -T), u) for (var P = 0, k = u.length; P < 3; P++) {
        var R = r[P];

        if (R.active = P < k) {
          var N = u[P];
          var C = N[0];
          var O = N[1];
          var M = void 0;
          var L = void 0;
          var A = void 0;
          var E = void 0;
          I ? (M = 110, L = O * y + 30, A = m + c * y - 15, E = C * y + y / 2) : D && (L = 110, M = O * y + 30, A = m + C * y - 15, E = l * y + y / 2);
          R.setContentSize(M, L);
          R.setPosition(A, E);

          for (var x = 0; x < O; x++) {
            D ? _.push(l + "_" + (C + x)) : I && _.push(C + x + "_" + c);
          }
        }
      }

      if (p) {
        if (1 == p) {
          var B;
          E = 268;
          B = Math.abs(311) / 200;
          cc.tween(i).set({
            active: !0,
            opacity: 0,
            x: 212,
            y: E,
            scale: 1
          }).to(17 / 30, {
            opacity: 255
          }).to(B, {
            x: 523
          }).to(17 / 30, {
            opacity: 0
          }).union().repeatForever().start();
        } else E = this.guideFingerTogY, A = 2 == p ? 400 : 330, A += this.oxTagAni.node.x, cc.tween(i).set({
          active: !0,
          x: A,
          y: E,
          scale: 1,
          opacity: 255
        }).to(0.5, {
          scale: 1.2
        }).to(0.5, {
          scale: 1
        }, {
          easing: "cubicOut"
        }).union().repeatForever().start();
      } else cc.Tween.stopAllByTarget(i), i.active = !1;

      5 == e && (_.length = 0);
    }
    s && (this.guideNpcLbl.string = "       " + s, this.guideNpcAni.play());
  };

  e.prototype.onDestroy = function () {
    _idx.platform.stopVideoRecord();
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].PURCHASED:
        this.onPurchased();
        break;

      case _evts["default"].LOSEHEART:
        this.loseHeart(t.data);
        break;

      case _evts["default"].UPDATESCORE:
        this.updateScore();
        break;

      case _evts["default"].SHOWVIDEOSHARE:
        o.type == _pInfo.gameType.normal && this.shareBtn && (this.shareBtn.active = !0);
    }
  };

  e.prototype.start = function () {
    var t = this;
    this.node.on(cc.Node.EventType.TOUCH_START, this.OnTouchBegan, this);
    this.node.on(cc.Node.EventType.TOUCH_MOVE, this.OnTouchMoved, this);
    this.node.on(cc.Node.EventType.TOUCH_END, this.OnTouchEnded, this);
    this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.OnTouchCancelled, this);

    var e = _uData["default"].ins.getSetting();

    this.tipTog = e.tip;
    this.updateTip();
    this.downBeginY = 640 - cc.view.getVisibleSize().height / 2;
    var n;
    var i = _pInfo["default"].ins;
    var r = i.getRecordData();
    var a = o.type;

    switch (a) {
      case _pInfo.gameType.race:
        n = r.race;
        break;

      case _pInfo.gameType.challenge:
        n = r.daily;
        break;

      default:
        n = r.main;
    }

    this.recData = n;
    this.consLbl.string = "连胜: " + i.getConsWinTimes();
    this.consBestLbl.string = n.heWins + "";
    i.recordGameTimes(a);
    cc.assetManager.loadBundle("resSps", function () {
      t.initGame(); // 💝 现金奖励和菌子支持消息已集成完成
    });
  };

  e.prototype.onPurchased = function () {}; // 💝 获取关卡难度


  e.prototype.getLevelDifficulty = function (levelNumber) {
    // 根据关卡数量判断难度
    if (levelNumber <= 10) return 'beginner'; // 入门：1-10关

    if (levelNumber <= 25) return 'easy'; // 简单：11-25关  

    if (levelNumber <= 40) return 'medium'; // 中等：26-40关

    if (levelNumber <= 50) return 'hard'; // 困难：41-50关

    return 'expert'; // 专家：51关以上
  }; // 💝 强制触发现金奖励测试（调试用）


  e.prototype.forceCashReward = function () {
    try {
      console.log("🚀 强制触发现金奖励测试...");

      var currentLevel = _pInfo["default"].ins.getPuzzleLvl();

      var difficulty = this.getLevelDifficulty(currentLevel);
      console.log("当前关卡:", currentLevel, "难度:", difficulty);
      console.log("奖励前余额:", _rewardMgr["default"].getCashDisplay()); // 强制触发奖励（绕过随机概率）

      _rewardMgr["default"].addCash(Math.floor(Math.random() * 468) + 52); // 52-520分


      console.log("奖励后余额:", _rewardMgr["default"].getCashDisplay());
      console.log("✅ 强制奖励测试完成！");
    } catch (error) {
      console.log("❌ 强制奖励测试失败:", error);
    }
  }; // 💝 一键通关（调试用）


  e.prototype.oneClickWin = function () {
    try {
      console.log("🎯 一键通关开始..."); // 方法1：尝试自动填充格子

      if (this.cells && this.cells.length > 0) {
        console.log("📝 自动填充答案...");

        for (var i = 0; i < this.cells.length; i++) {
          var cell = this.cells[i];

          if (cell && cell.solution !== undefined) {
            // 设置为正确答案
            cell.userSolution = cell.solution;
            cell.state = cell.solution === 1 ? 1 : 0; // 1为填充，0为空白
            // 更新UI显示

            if (cell.node && cell.node.isValid) {
              var gridComp = cell.node.getComponent('grid');

              if (gridComp) {
                gridComp.setState(cell.state);
              }
            }
          }
        }

        console.log("✅ 答案填充完成，触发游戏胜利..."); // 手动触发胜利检测

        this.scheduleOnce(function () {
          this.IsAllRight() && this.gameWin();
        }.bind(this), 0.1);
      } else {
        console.log("❌ 未找到游戏格子数据，尝试直接触发胜利"); // 方法2：直接调用gameWin

        this.gameWin();
      }
    } catch (error) {
      console.log("❌ 一键通关失败:", error);
      console.error(error);
    }
  }; // 💝 简单的直接胜利（调试用）


  e.prototype.directWin = function () {
    console.log("🚀 直接触发游戏胜利...");

    try {
      this.gameWin();
    } catch (error) {
      console.log("❌ 直接胜利失败:", error);
    }
  }; // 💝 调试功能（供控制台或UI按钮调用）


  e.prototype.testCashReward = function () {
    console.log("💰 测试现金奖励");

    try {
      _rewardMgr["default"].onPuzzleComplete('expert', true, true);
    } catch (e) {
      console.log("现金测试失败:", e);
    }
  };

  e.prototype.testLoveMessage = function () {
    console.log("💕 测试菌子支持消息");

    _rewardMgr["default"].showLoveSupportMessage();
  };

  e.prototype.initGame = function () {
    var t;
    var e;
    var n;
    var i;
    var r;
    var c;
    return __awaiter(this, void 0, void 0, function () {
      var a;
      var l;
      var u;
      var p;
      var d;
      var f;
      var g;
      var m;

      var _;

      var b;
      var S;
      var T;
      var I;
      var k;
      var R;
      var N;
      var C;
      var L;
      var A;
      var B;
      var F;
      var V;
      var U;
      var z;
      var H;
      var G;
      var J;
      var W;
      var q;
      var K;
      var Y;
      var X;
      var Z;
      var Q;
      var $;
      var tt;
      var et;
      var ot;
      var nt;
      var it;
      var rt;
      var at;
      var st;
      var ct;
      var lt;
      var ut;
      var pt;
      var dt;
      var ht;
      var ft;
      var gt;
      var yt;
      var mt;
      var vt;

      var _t;

      var bt;
      var wt;
      var St;
      var Tt;
      var It;
      var Dt;
      var Pt;
      var kt = this;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            switch (u = "normal", d = cc.assetManager.getBundle("resSps") || cc.assetManager.getBundle("chapter"), f = o.type) {
              case _pInfo.gameType.normal:
                return [3, 1];

              case _pInfo.gameType.race:
                return [3, 2];

              case _pInfo.gameType.freedom:
                return [3, 3];

              case _pInfo.gameType.practice:
                return [3, 4];

              case _pInfo.gameType.festival:
                return [3, 5];

              case _pInfo.gameType.challenge:
                return [3, 6];
            }

            return [3, 12];

          case 1:
            return T = _levelMgr["default"].ins, (R = T.getPuzzleInfo()) && (a = R.size, l = T.getPuzzleData()), g = _pInfo["default"].ins.getPuzzleLvl(), m = (null === (n = null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.more_set) || void 0 === e ? void 0 : e.protect_times) || void 0 === n ? void 0 : n.val) || 10, _ = (null === (c = null === (r = null === (i = _cfgMgr["default"].serverCfg) || void 0 === i ? void 0 : i.more_set) || void 0 === r ? void 0 : r.protect_charter) || void 0 === c ? void 0 : c.val) || 30, g <= m ? this.infinityLife = !0 : g < _ && (this.relifeTime = -1), this.getBtnsp.string = "下一关", [3, 12];

          case 2:
            p = 1, u = "normal", this.norClock.parent.active = !0, this.heartsNum = 1, this.raceTime = 31, this.raceMaxDenstiy = 0.85, this.raceMinDenstiy = 0.7, this.raceDensity = this.raceMaxDenstiy, this.raceRefeshTime = -1, this.raceFromX = 180, this.raceAllX = this.raceFromX - 70, a = 10, l = new _creator["default"]().getRandomData(a, this.raceMaxDenstiy), _festivalMgr["default"].ins.updPro(_festivalMgr.fesTaskKey.raceTimes, 1), b = this.items;

            try {
              S = _cfgMgr["default"].serverCfg.qw_line_rules.rules;
              this.relifeTime = S.relive.limit || 3;
              b[0].itemMax = S.limit.notice || 1;
              b[1].itemMax = S.limit.random_notice || 1;
              b[2].itemMax = S.limit.full_row_col || 1;
            } catch (Rt) {
              this.relifeTime = 3;
              b[0].itemMax = b[1].itemMax = b[2].itemMax = 1;
            }

            return this.clockWarn.height = cc.view.getVisibleSize().height, [3, 12];

          case 3:
            return a = _global["default"].freedomSize, l = new _creator["default"]().getRandomData(a, this.raceMaxDenstiy, 5), [3, 12];

          case 4:
            return _idx.platform.reportEvent(_idx.ERepEvt.beginPractice), this.infinityLife = !0, T = _levelMgr["default"].ins, I = this.byGuide ? 1 : T.getPracticeId(), this.practiceId = I, (R = T.getPuzzleInfo(!0, I)) && (a = R.size, l = T.getPuzzleData(!0, I)), this.getBtnsp.node.parent.active = !1, this.stopPraNode.active = !0, [3, 12];

          case 5:
            return k = _festivalMgr["default"].ins, (R = k.getFesPuzzleInfo()) && (a = R.size, l = k.getFesPuzzleData()), this.getBtnsp.string = "返回主页", k.isJigsawMax(), [3, 12];

          case 6:
            try {
              N = _cfgMgr["default"].serverCfg.daily_challenge;
              this.relifeTime = N.revive || 3;
              C = N.limit;
              (L = this.items)[0].itemMax = C.notice || 1;
              L[1].itemMax = C.random_notice || 1;
              L[2].itemMax = C.full_row_col || 1;
            } catch (Nt) {
              this.relifeTime = 3;
              b[0].itemMax = b[1].itemMax = b[2].itemMax = 1;
            }

            switch (A = this.cons2Lbl.node.parent, B = A.parent.getChildByName("top"), F = B.getChildByName("cha"), A.getChildByName("midLblL").getComponent(cc.Label).string = "通关时间", A.getChildByName("midLblR").getComponent(cc.Label).string = "通关人数", A.getChildByName("nor").active = B.getChildByName("nor").active = this.consLbl.node.parent.active = !1, A.getChildByName("cha").active = F.active = this.useTimeLbl.node.active = !0, _res["default"].ins.lSF("game/chaTitle", F.getComponent(cc.Sprite)), this.rewItems.node.parent.y = -325, this.chaTime = 0, V = o.challageData, U = V.date, z = U.year, H = U.month, G = U.day, J = 1e4 * z + 100 * H + G, W = f in _pInfo.challengeType && V.type ? V.type : _pInfo.challengeType.tree, q = void 0, W != _pInfo.challengeType.worm && (a = 10 != (a = V.size) || 15 != a ? 15 : a, K = V.denstiy < 0.2 || !V.denstiy ? null : V.denstiy, q = new _creator["default"](J), l = q.getRandomData(a, K || 0.75, 5)), Y = q ? q.getRandomIntBetween.bind(q) : _com["default"].ins.rad, X = void 0, W) {
              case _pInfo.challengeType.worm:
                return [3, 7];

              case _pInfo.challengeType.tree:
                return [3, 9];

              case _pInfo.challengeType.ice:
                return [3, 10];
            }

            return [3, 11];

          case 7:
            return Z = V.data, Q = Z.size, $ = Z.data, a = Q, (l = new Array(Math.pow(a, 2))).fill(0), tt = this.wormData = {
              counts: [],
              sps: []
            }, et = function et(t, e) {
              var o = t - e;
              return o < 0 ? -1 == o ? 1 : 0 : 1 == o ? 3 : 2;
            }, ot = 0, [4, _res["default"].ins.lPre("prefab/game/wormSp")];

          case 8:
            return (nt = s.sent()) && ((it = new cc.Node("wormSps")).width = 500, it.height = 200, it.x = 100, (rt = it.addComponent(cc.Layout)).type = cc.Layout.Type.HORIZONTAL, rt.resizeMode = cc.Layout.ResizeMode.CHILDREN, this.topSp.node.addChild(it)), $.forEach(function (t) {
              var e;
              var o;
              var n;
              var i;
              var r;
              var a;
              var s;
              var c;
              var u;
              var p;
              var d = 0;
              var h = [0, 0, 0, 0];
              var f = t.length;

              if (tt.counts.push(f), nt) {
                var g = cc.instantiate(nt);
                it.addChild(g);
                var y = g.getComponent("wormSp");
                y.init(f);
                tt.sps.push(y);
              }

              t.forEach(function (f) {
                e = t[d - 1], o = t[d + 1], h[0] = h[1] = h[2] = h[3] = 0, p = void 0 !== o, (u = void 0 !== e) && (n = et(e, f), h[n] = 1), p && (n = et(o, f), h[n] = 1), i = h[0], r = h[1], a = h[2], s = h[3], u && p ? i && a || r && s ? (n = i && a ? 90 : 0, c = 2) : (n = i && r ? 0 : i && s ? 270 : s && a ? 180 : 90, c = 3) : (c = p ? 0 : 1, n = r ? 0 : a ? 90 : s ? 180 : 270), tt[f] = {
                  i: ot,
                  tex: c,
                  dir: n
                }, l[f] = 1, d++;
              });
              ot++;
            }), [3, 11];

          case 9:
            return X = V.count || 10, at = this.treeData = {}, st = Math.ceil(X / 2), ct = X - st, at.minRow = Y(0, a - st - 1), at.minCol = Y(0, a - ct - 1), at.maxRow = at.minRow + st + 1, at.maxCol = at.minCol + ct + 1, d.preload("game/hedge/mask", cc.SpriteFrame), cc.assetManager.loadBundle("prefab", function (t, e) {
              t || e.preload("prefab/game/hedge", cc.Prefab);
            }), [3, 11];

          case 10:
            for (X = V.count || 3, lt = this.iceData = {}, ut = lt.rHints = [], pt = lt.cHints = [], dt = []; X;) {
              ht = Y(1, a - 2), ft = Y(1, a - 2), gt = (a - ht - 1) * a + ft, -1 == dt.indexOf(gt) && (dt.push(gt, gt - 1, gt + 1, gt + a, gt - a), lt[gt] = 1, ut[ht] = (ut[ht] || 0) + 1, pt[ft] = (pt[ft] || 0) + 1, X--);
            }

            return dt = null, d.preload("game/ice/mask", cc.SpriteFrame), d.preload("game/ice/pit", cc.SpriteFrame), cc.assetManager.loadBundle("prefab", function (t, e) {
              t || e.preload("prefab/game/ice", cc.Prefab);
            }), [3, 11];

          case 11:
            return [3, 12];

          case 12:
            if (1 == this.heartsNum || this.infinityLife) {
              for (yt = 0, mt = this.hearts; yt < 3; yt++) {
                vt = mt[yt].node, this.infinityLife ? (2 == yt && (vt.active = !0, vt.setPosition(mt[0].node.position)), vt.active = 2 == yt) : vt.active = 0 == yt;
              }

              this.infinityLife && (this.heartInfinity.active = !0);
              this.heartBgNode.width = 70;
            }

            if (u = "game/" + u + "/", _t = _pInfo["default"].ins.getUsingSkin().bg, bt = p ? 1 : _t, d.loadDir(u, cc.SpriteFrame, function (t) {
              if (!t && kt.node && kt.node.isValid) {
                var e = kt.topSp;
                e.spriteFrame = d.get(u + "top" + bt, cc.SpriteFrame);
                var o = _global["default"].padScale;
                o && (e.node.width *= o, e.node.height *= o);
              }

              kt._initGame(a, l);
            }), 1 != _t) {
              switch (wt = this.downSp.node, St = new cc.Color(), Tt = new cc.Color(), It = "game/skin/" + _t + "/", _t) {
                case 2:
                  St.r = 222, St.g = 146, St.b = 52, Tt.r = 248, Tt.g = 221, Tt.b = 82;
              }

              wt.color = St;
              wt.parent.getChildByName("bg").color = Tt;
              Dt = wt.parent.getChildByName("winBg");

              _res["default"].ins.lSF(It + "sky", Dt.getComponent(cc.Sprite));

              _res["default"].ins.lSF(It + "cloud", Dt.children[0].getComponent(cc.Sprite));

              _res["default"].ins.lSF(It + "cloud", Dt.children[1].getComponent(cc.Sprite));
            }

            return this.byGuide ? [2] : (Pt = _pInfo["default"].ins.getUsingSkin().role, cc.assetManager.loadBundle("prefab", function (t, e) {
              t || e.load("skin/girl" + Pt, cc.Prefab, function (t, n) {
                if (!t && kt.node && kt.node.isValid) {
                  var i = cc.instantiate(n);
                  var r = kt.topGirlSk = i.getComponent(sp.Skeleton);
                  if (p) e.load("prefab/game/goose", cc.Prefab, function (t, e) {
                    if (!t && kt.node && kt.node.isValid) {
                      var o = kt.topSp;
                      kt.downSp;
                      o.addComponent(_uvAni["default"]).speed = 0.1;
                      var n = cc.instantiate(e);
                      kt.topGooseSk = n.getComponent(sp.Skeleton);
                      r.animation = h.run;
                      n.x = kt.raceFromX;
                      i.x = -n.x;
                      i.y = n.y = 0;
                      o.node.addChild(n);
                      o.node.addChild(i);
                    }
                  });else {
                    var a = kt.topSp.node.children.length ? -225 : 0;

                    if (i.setPosition(a, -20), kt.topSp.node.addChild(i), f === _pInfo.gameType.challenge) {
                      var s = o.challageData;
                      (f in _pInfo.challengeType && s.type ? s.type : _pInfo.challengeType.tree) === _pInfo.challengeType.worm && (i.scaleX = -i.scaleX);
                    }

                    r.animation = h.idle;
                    r.setEndListener(kt.playGirlEnd.bind(kt));
                  }
                }
              });
            }), [2]);
        }
      });
    });
  };

  e.prototype._initGame = function (t, e) {
    this.rows_ = this.cols_ = t;
    this.grid_count = this.rows_ * this.cols_;
    this.baseData = e;
    this.checkLocalData();
    this.initView();
  };

  e.prototype.initView = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      var e;
      var n;
      var i;
      var r;
      var a;
      var c;
      var l;
      var u;
      var p;
      var d;
      var h;
      var f;
      var g;
      var y;
      var m;

      var _;

      var b;
      var w;
      var S;
      var T;
      var I;
      var D;
      var P;
      var k = this;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            for (t = o.type, e = t == _pInfo.gameType.race, n = t == _pInfo.gameType.practice, i = 67, this.fontSize = 36, r = 0; r < this.rows_; r++) {
              for (a = this.GetBaseRowHeadNums(r), c = 2, l = 0, u = a; l < u.length; l++) {
                p = u[l], c += 21.39 * (p + "").length;
              }

              c > i && (i = c);
            }

            switch (e && (i = 90), d = this.rows_, h = -528 + i, f = -403, g = 0, y = 5, m = 1, (_ = 1 - 0.07 / 45 * (i - 67.5)) < 0.93 ? _ = 0.93 : _ > 1 && (_ = 1), b = 1, S = 172, d) {
              case 5:
                w = 384, _ = 0.608, S = 175, h = -360, f = -319, b = 1.78, i = 86, g = -72, y = -17, m = 0.78;
                break;

              case 10:
                w = 640 * (_ -= 0.09), h += 45, f = -429, b = 1.5, y = -21;
                break;

              case 15:
                w = 640 * (_ -= 0.02);
            }

            return _global["default"].padScale && !this.byGuide && (f -= 50, y -= 50), this.map_node_.setPosition(h, f), this.gridBgSp.node.scale = _, this.selectMaskBg.scale = _, y -= this.downNode.y, (T = this.itemSelectEff.parent.children[0]).setPosition(g, y), T.setScale(m), T.children[0].y += this.downNode.y, this.gridSize = w / this.rows_, this.gridsStartX = S, this.hintScale = b, this.hintWidth = i, [4, this.addHeads()];

          case 1:
            return s.sent(), [4, this.SetWorkGridTagWithInit()];

          case 2:
            for (s.sent(), I = 0; I < 3; I++) {
              this.updateItemNum(I);
            }

            return [4, this.checkGuide()];

          case 3:
            return s.sent(), !n && _idx.platform.startVideoRecord(), D = _pInfo["default"].ins, P = D.getIsFirstRaceTip(), e && !P ? (D.setFirstRaceTip(!0), this.canTouch = !1, _panelMgr["default"].ins.open("ui/ui_raceTip", {
              pageIdx: 2,
              closeCb: function closeCb() {
                k.canTouch = !0;
              }
            })) : this.canTouch = !0, [2];
        }
      });
    });
  };

  e.prototype.addHeads = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      var e;
      var n;
      var i;
      var r;
      var a;
      var c;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            for (this.rowHeadNums.length = this.colHeadNums.length = 0, this.rowHeadBegins.length = this.colHeadBegins.length = 0, this.gridHeadColVec.length = this.gridHeadRowVec.length = 0, this.rowHintsParent.removeAllChildren(), this.colHintsParent.removeAllChildren(), t = 1, a = 0; a < this.rows_; a++) {
              (e = this.GetBaseColHeadNums(a).length) > t && (t = e);
            }

            if (o.type == _pInfo.gameType.race && t < 3 && (t = 3), this.byGuide ? this.hintHeight = 85 : this.hintHeight = 5 == this.rows_ ? 105 : 70 + 30 * (t - 2), !(r = o.challageData)) return [3, 5];

            switch (r.type) {
              case _pInfo.challengeType.tree:
                return [3, 1];

              case _pInfo.challengeType.ice:
                return [3, 3];
            }

            return [3, 5];

          case 1:
            return [4, _res["default"].ins.lSF("game/hedge/mask")];

          case 2:
            return n = s.sent(), [3, 5];

          case 3:
            return [4, _res["default"].ins.lSF("game/ice/mask")];

          case 4:
            return i = s.sent(), [3, 5];

          case 5:
            for (a = 0; a < this.rows_; a++) {
              this.AddRowHead(a, n, i);
            }

            for (c = 0; c < this.cols_; c++) {
              this.AddColHead(c, n, i);
            }

            return this.beginAni(), [2];
        }
      });
    });
  };

  e.prototype.beginAni = function (t, e) {
    void 0 === t && (t = this.hintWidth);
    void 0 === e && (e = this.hintHeight);
    cc.tween(this.tilesParent).to(0.2, {
      opacity: 255
    }).start();
    cc.tween(this.colHintsParent).set({
      y: -e
    }).to(0.2, {
      y: 0
    }).start();
    cc.tween(this.rowHintsParent).set({
      x: t
    }).to(0.2, {
      x: 0
    }).start();
    var n = o.type;
    n == _pInfo.gameType.race ? this.raceCountDown() : n == _pInfo.gameType.challenge ? this.chaCD() : this.commonCD();
  };

  e.prototype.commonCD = function () {
    this.schedule(this._commonCD, 1, cc.macro.REPEAT_FOREVER);
  };

  e.prototype._commonCD = function () {
    if (this.canTouch) {
      if (this.touchTime++, this.touchTime > 5 && null == this.curItemAni) {
        for (var t = 0, e = this.items, o = e.length; t < o; t++) {
          var n = e[t];
          var i = n.count;
          var r = n.icon;

          if (0 != i) {
            (this.curItemAni = this[r + "Ani"]).play();
            break;
          }
        }

        this.curItemAni || (this.touchTime = 0);
      }
    } else this.resetCD();
  };

  e.prototype.resetCD = function () {
    this.touchTime = 0;
    var t = this.curItemAni;

    if (t) {
      t.stop();
      var e = t.node;
      cc.tween(e).to(0.2, {
        y: 5,
        angle: 0
      }).start();
      this.curItemAni = null;
    }
  };

  e.prototype.raceCountDown = function () {
    this.hasCountDown ? this.raceTime = 31 : (this.hasCountDown = !0, this.schedule(this._raceCoundDown, 1, cc.macro.REPEAT_FOREVER));

    this._raceCoundDown(void 0, !0);
  };

  e.prototype._raceCoundDown = function (t, e) {
    if (this.canTouch) {
      var o = this.raceTime = this.raceTime - 1;
      this.updateRaceNpcs(o, e);
      o < 10 && 0 != o ? (this.norClock.active = !1, this.speClock.active = this.clockWarn.active = !0, this.clockLbl2.string = o + "", this.clockLbl2.node.x = 1 != o ? 0 : -6, _sound["default"].ins.play(_sound["default"].TIME), _vb["default"].p(_vb.VEnum3.DOUBLE)) : (this.norClock.active = !0, this.speClock.active = this.clockWarn.active = !1, this.clockLbl.string = o + "");
      0 == o && this.loseHeart(this.grids[90].node.position);
    }
  };

  e.prototype.chaCD = function () {
    this.schedule(this._chaCD, 1, cc.macro.REPEAT_FOREVER);
  };

  e.prototype._chaCD = function () {
    var t = this.chaTime = this.chaTime + 1;
    var e = J(t / 86400);
    var o = J((t -= 86400 * e) / 3600);
    var n = J((t -= 3600 * o) / 60);
    var i = (n < 10 ? "0" : "") + n + ":" + ((t -= 60 * n) < 10 ? "0" : "") + t;
    var r = "";
    o && (r = (o < 10 ? "0" : "") + o + ":");
    this.useTimeLbl.string = r + i;
  };

  e.prototype.updateRaceNpcs = function (t, e) {
    var o = this.topGirlSk;
    var n = this.topGooseSk;

    if (n) {
      var i = this.raceFromX;
      var r = (1 - t / 30) * this.raceAllX - i;
      var a = -r;
      var s = e ? 0.5 : 1;
      o.timeScale = e ? 1.7 : 1;
      cc.tween(o.node).to(s, {
        x: r
      }).call(function () {
        o.timeScale = 1;
      }).start();
      cc.tween(n.node).to(s, {
        x: a
      }).start();
    }
  };

  e.prototype.loseHeart = function (t) {
    var e = this;
    var o = this.heartsNum;

    if (!(o < 1)) {
      this.showOrHideSelectMask();
      var n = !this.infinityLife;
      var i = this.hearts[o - 1];
      var r = this.patices;
      n && this.heartsNum--;
      this.playGirlAni(h.sad);
      var a = i.node.convertToWorldSpaceAR(cc.Vec2.ZERO);
      r.convertToNodeSpaceAR(a, a);
      var s = cc.instantiate(this.heartsPatic);
      s.setPosition(t);
      s.setParent(r);
      s.scale = 1 / this.gridBgSp.node.scale;
      this.canTouch = !1;
      cc.tween(s).to(0.8, {
        x: a.x,
        y: a.y
      }).call(function () {
        s.destroy();
        n ? (i.playLose(), 0 == e.heartsNum ? (_sound["default"].ins.play(_sound["default"].LOSE), e.playAni(f.gameLose), e.eventDot(!1)) : e.canTouch = !0) : e.canTouch = !0;
      }).start();
    }
  };

  e.prototype.updateItemNum = function (t, e) {
    var n = this;
    void 0 === t && (t = this.curItemIdx);
    var i = this.items[t];
    var r = i.icon;
    var a = o.type == _pInfo.gameType.practice;
    var s = this[r + "Lbl"];

    if (e) {
      a || _bagMgr["default"].ins.useItem(r, 1, o.type);
      this.OnBtnHideItem();
      var c = i.itemMax;

      if (c > 0 && c == (i.itemCur = i.itemCur + 1)) {
        var l = s.node.parent.parent.getChildByName("canUse");
        l && (l.active = !0);
      }
    } else _res["default"].ins.getBundleByString("prefab").then(function (t) {
      t.load("prefab/game/" + r, cc.Prefab, function (t, e) {
        n.node && cc.isValid(n.node) && !t && (n[r + "Prefab"] = e);
      });
    });

    if (a) {
      var u = s.node;
      u.active = !1;
      u.parent.getChildByName("wuxian").active = !0;
      i.count = 1;
    } else {
      var p = i.count = _bagMgr["default"].ins.getItemCount(r);

      s.string = 0 == p ? "+" : "x" + p;
    }
  };

  e.prototype.useItem = function (t, e, o) {
    return __awaiter(this, void 0, void 0, function () {
      var n;
      var i;
      var r;
      var a;
      var c;
      var l;
      var u;
      var p;
      var d;
      var h;
      var f;
      var g;
      var m;
      var v;

      var _;

      var b;
      var T;
      var I;
      var D;
      var P;
      var k;
      var R;
      var N;
      var O;
      var M;
      var L;
      var A;
      var E;
      var x;
      var B;
      var F;
      var j;
      var V = this;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            return this.canTouch = !1, n = this.curItemIdx, i = this.items[n], r = i.icon, (a = this[r + "Prefab"]) ? [3, 2] : [4, _res["default"].ins.lPre("prefab/game/" + r)];

          case 1:
            a = s.sent(), s.label = 2;

          case 2:
            switch (c = this.patices, this.curItemIdx) {
              case 0:
                if (l = function l() {
                  V.OnClickGrid(e, o, !0);
                  V.canTouch = !0;
                }, !a) return l(), [2];
                (u = cc.instantiate(a)).setPosition(t.node.position), u.setParent(c), u.scale = 1 / this.gridBgSp.node.scale, _sound["default"].ins.play(_sound["default"].SHOVEL), (p = u.getComponent(cc.Animation)).play(), p.on(cc.Animation.EventType.FINISHED, function () {
                  u.destroy();
                  l();
                }, this);
                break;

              case 1:
                for (d = this.random_noticeLbl.node.parent.convertToWorldSpaceAR(cc.Vec2.ZERO), c.convertToNodeSpaceAR(d, d), h = _com["default"].ins.rad, f = this.grids, g = [], m = this.rows_, v = this.cols_, _ = this.treeData, F = 0, b = void 0; F < m; F++) {
                  for (T = 0; T < v && (I = f[b = F * v + T], _ && _[b] || !I.isEmpty || (g.push({
                    t: m - F - 1,
                    e: T,
                    data: I
                  }), 3 != g.length)); T++) {
                    ;
                  }
                }

                for (_com["default"].ins.randSort(g), D = Math.min(g.length, 3), P = function P(t) {
                  var e = g[t];
                  var o = e.t;
                  var n = e.e;
                  var i = e.data;
                  if (!i) return "break";

                  var r = function r() {
                    V.OnClickGrid(o, n, !0);
                    t == D - 1 && (V.canTouch = !0);
                  };

                  if (a) {
                    var s = cc.instantiate(a);
                    s.setParent(c);
                    s.setPosition(d);
                    s.getComponent(_random_notice["default"]).init();
                    s.scale = 1 / k.gridBgSp.node.scale;
                    var l = i.node.position;
                    var u = new cc.Vec2(l.x, l.y);
                    var p = new cc.Vec2();
                    1 == h(1, 2) ? (p.x = (d.x + d.y + u.x - u.y) / 2, p.y = (d.y + u.x + u.y - d.x) / 2) : (p.x = (u.x + u.y + d.x - d.y) / 2, p.y = (u.y + d.x + d.y - u.x) / 2);
                    cc.tween(s).delay(0.2 * t).call(function () {
                      _sound["default"].ins.play(_sound["default"].ROCKETLAUNCH);
                    }).bezierTo(1, d, p, u).call(function () {
                      _sound["default"].ins.play(_sound["default"].ROCKETATTACK);

                      s.destroy();
                      r();
                    }).start();
                  } else r();
                }, k = this, F = 0; F < D && "break" !== P(F); F++) {
                  ;
                }

                break;

              case 2:
                if (R = void 0, N = void 0, O = this.grids, M = this.cols_, L = this.rows_, null != e) for (A = function A(t) {
                  var o = O[(L - e - 1) * M + t];
                  0 == t && (R = o.node.position);
                  t == M - 1 && (N = o.node.position);
                  E.scheduleOnce(function () {
                    V.OnClickGrid(e, t, !0);
                  }, t / M * 1);
                }, E = this, F = 0; F < M; F++) {
                  A(F);
                } else if (null != o) for (x = function x(t) {
                  var e = O[(L - t - 1) * M + o];
                  0 == t && (N = e.node.position);
                  t == L - 1 && (R = e.node.position);
                  B.scheduleOnce(function () {
                    V.OnClickGrid(t, o, !0);
                  }, (L - t) / L * 1);
                }, B = this, F = 0; F < L; F++) {
                  x(F);
                }
                a ? ((j = cc.instantiate(a)).setParent(c), j.angle = null != o ? -90 : 0, j.scale = 1 / this.gridBgSp.node.scale, cc.tween(j).set({
                  position: R
                }).to(1, {
                  position: N
                }).call(function () {
                  j.destroy();
                  V.canTouch = !0;
                }).start()) : this.scheduleOnce(function () {
                  V.canTouch = !0;
                }, 1);
            }

            return [2];
        }
      });
    });
  };

  e.prototype.playAni = function (t) {
    if (!this.curAni) switch (this.curAni = t, this.panelAni.play(t), t) {
      case f.gameLose:
        this.playDownAni(!0);
        break;

      case f.gameRelife:
        this.playDownAni(!1);
        break;

      case f.gameWinFailSf:
        this.tilesWinAni();
    }
  };

  e.prototype.playAniDone = function () {
    switch (this.curAni) {
      case f.gameWin:
        this.playWinDone();
        break;

      case f.gameRelife:
        this.reLife();
        break;

      case f.openItemSelect:
        this.canTouch = !0;
        break;

      case f.closeItemSelect:
        this.curItemBtn.setSiblingIndex(this.curItemIdx + 1), this.curItemBtn = this.curItemIdx = null;
    }

    this.curAni = null;
  };

  e.prototype.playWinDone = function () {
    var t;
    var e;
    var n = this;
    if (this.byGuide) cc.tween(this.guideNpc).to(0.2, {
      opacity: 255
    }).call(function () {
      var t = n.shareBtn.parent.getChildByName("getBtn");
      var e = n.guideFinger;
      e.setParent(t);
      n.guideNpcAni.play();
      cc.tween(t).to(0.2, {
        opacity: 255
      }).start();
      cc.tween(e).set({
        active: !0,
        x: 80,
        y: 0,
        scale: 1,
        opacity: 255
      }).to(0.5, {
        scale: 1.2
      }).to(0.5, {
        scale: 1
      }, {
        easing: "cubicOut"
      }).union().repeatForever().start();
    }).start();else if (o.type != _pInfo.gameType.practice && _idx.platform.stopVideoRecord(), o.type === _pInfo.gameType.normal) {
      var i = _pInfo["default"].ins.getPuzzleLvl() - 1;
      var r = (null === (e = null === (t = _cfgMgr["default"].serverCfg.add_desktop) || void 0 === t ? void 0 : t.rules) || void 0 === e ? void 0 : e.nums) || 7;

      var a = _pInfo["default"].ins.getAddDesk();

      _idx.platform.string() != _pConst.PFCode.Bytedance || i != r || a || _panelMgr["default"].ins.open("ui/ui_deskReward", null);
    }
  };

  e.prototype.playDownAni = function (t) {
    var e = t ? -360 : this.downBeginY;
    var o = t ? 0 : 1.1;
    cc.tween(this.downNode).delay(o).to(10 / 30, {
      y: e,
      opacity: t ? 0 : 255
    }).start();
  };

  e.prototype.reLife = function () {
    this.heartsNum = 1;
    this.hearts[0].getHeart();
    this.canTouch = !0;
    o.type == _pInfo.gameType.race && this.raceCountDown();
  };

  e.prototype.GetBaseRowHeadNums = function (t) {
    if (0 == this.rowHeadNums.length) for (var e = this.baseData, o = this.rows_ - 1; o >= 0; o--) {
      for (var n = o * this.cols_, i = [], r = [], a = 0, s = n; s < n + this.cols_; s++) {
        e[s] == c.O ? 1 == ++a && r.push(s) : a > 0 && (i.push(a), a = 0);
      }

      a > 0 && i.push(a);
      0 == i.length && i.push(0);
      this.rowHeadNums.push(i);
      this.rowHeadBegins.push(r);
    }
    return this.rowHeadNums[t];
  };

  e.prototype.GetBaseColHeadNums = function (t) {
    if (0 == this.colHeadNums.length) for (var e = this.baseData, o = 0; o < this.cols_; o++) {
      for (var n = [], i = 0, r = 0, a = []; r < this.rows_; r++) {
        var s = o + r * this.rows_;
        e[s] == c.O ? 1 == ++i && a.push(s) : i > 0 && (n.push(i), i = 0);
      }

      i > 0 && n.push(i);
      0 == n.length && n.push(0);
      this.colHeadNums.push(n);
      this.colHeadBegins.push(a);
    }
    return this.colHeadNums[t];
  };

  e.prototype.GetBaseRowBeginNums = function (t) {
    0 == this.rowHeadBegins.length && this.GetBaseRowHeadNums(t);
    return this.rowHeadBegins[t];
  };

  e.prototype.GetBaseColBeginNums = function (t) {
    0 == this.colHeadBegins.length && this.GetBaseColHeadNums(t);
    return this.colHeadBegins[t];
  };

  e.prototype.GetWorkRowHeadNums = function (t) {
    for (var e = (this.rows_ - t - 1) * this.cols_, o = [], n = 0, i = e; i < e + this.cols_; i++) {
      this.workData[i] == c.O ? n++ : n > 0 && (o.push(n), n = 0);
    }

    n > 0 && o.push(n);
    0 == o.length && o.push(0);
    return o;
  };

  e.prototype.GetWorkColHeadNums = function (t) {
    for (var e = [], o = 0, n = 0; n < this.rows_; n++) {
      var i = t + n * this.rows_;
      this.workData[i] == c.O ? o++ : o > 0 && (e.push(o), o = 0);
    }

    o > 0 && e.push(o);
    0 == e.length && e.push(0);
    return e;
  };

  e.prototype.AddRowHead = function (t, e, o) {
    var n = {
      shineBg: null,
      labels: [],
      allRight: !1
    };
    var i = this.hintScale;
    var r = this.hintWidth;
    var a = new cc.Node("rowHint");
    var s = new cc.Node("bg");
    var c = new cc.Node("shineBg");
    var l = s.addComponent(cc.Sprite);
    var u = c.addComponent(cc.Sprite);
    l.spriteFrame = u.spriteFrame = this.lHintSf;
    l.sizeMode = u.sizeMode = cc.Sprite.SizeMode.CUSTOM;
    l.type = u.type = cc.Sprite.Type.SLICED;
    s.setAnchorPoint(1, 0.5);
    c.setAnchorPoint(1, 0.5);
    s.width = c.width = r;
    c.parent = s.parent = a;
    u.dstBlendFactor = cc.macro.BlendFactor.ONE;
    c.opacity = 100;
    c.active = !1;

    for (var p = this.lineW, d = this.font4, h = this.fontSize, f = 5 == this.rows_, g = new cc.Node("lbls"), y = this.GetBaseRowHeadNums(t), m = f ? 5 : 2, v = y.length, _ = 1 - 0.04 * (v - 2), b = v - 1; b >= 0; b--) {
      var w = new cc.Node("lbl");
      var S = w.addComponent(cc.Label);
      S.font = d;
      S.fontSize = h;
      var T = y[b];
      var I = S.string = T + "";
      S.spacingX = -6;
      w.color = W;
      w.setAnchorPoint(1, 0.5);
      w.position = cc.v3(-m, -6);
      w.parent = g;
      m = m + (h - 13) * _ + 13 * (I.length - 1);
      n.labels[b] = w;
    }

    if (g.parent = a, a.position = cc.v3(this.gridsStartX - 2, t * this.gridSize + this.gridSize / 2 + Math.floor(t / 5) * p - 1), a.parent = this.rowHintsParent, n.shineBg = c, this.gridHeadRowVec.push(n), a.scale = i, e && t > this.treeData.minRow && t < this.treeData.maxRow || o && this.iceData && this.iceData.rHints[t]) {
      var D = e ? "treeMask" : "iceMask";
      var P = new cc.Node(D);
      P.setAnchorPoint(1, 0.5);
      var k = P.addComponent(cc.Sprite);
      k.spriteFrame = e || o;
      k.sizeMode = cc.Sprite.SizeMode.CUSTOM;
      k.type = e ? cc.Sprite.Type.TILED : cc.Sprite.Type.SLICED;
      P.width = r;
      a.addChild(P);
      n[D] = P;
    }
  };

  e.prototype.AddColHead = function (t, e, o) {
    var n = {
      shineBg: null,
      labels: [],
      allRight: !1
    };
    var i = this.hintScale;
    var r = this.hintHeight;
    var a = new cc.Node("colHint");
    var s = new cc.Node("bg");
    var c = new cc.Node("shineBg");
    var l = s.addComponent(cc.Sprite);
    var u = c.addComponent(cc.Sprite);
    l.spriteFrame = u.spriteFrame = this.uHintSf;
    l.sizeMode = u.sizeMode = cc.Sprite.SizeMode.CUSTOM;
    l.type = u.type = cc.Sprite.Type.SLICED;
    s.setAnchorPoint(0.5, 0);
    c.setAnchorPoint(0.5, 0);
    s.height = c.height = r;
    c.parent = s.parent = a;
    u.dstBlendFactor = cc.macro.BlendFactor.ONE;
    c.opacity = 100;
    c.active = !1;

    for (var p = this.font4, d = this.fontSize, h = this.lineW, f = new cc.Node("lbls"), g = this.GetBaseColHeadNums(t), y = 0, m = g.length - 1; m >= 0; m--) {
      var v = new cc.Node("lbl");

      var _ = v.addComponent(cc.Label);

      _.font = p;
      _.fontSize = d;
      var b = g[m];
      var w = 0;
      b > 11 && (w = -2);
      _.string = b;
      _.spacingX = -6;
      v.color = W;
      v.setAnchorPoint(0.5, 0);
      v.position = cc.v3(w - 1, y - 10);
      v.parent = f;
      y = y + d - 6;
      n.labels[m] = v;
    }

    if (f.parent = a, a.position = cc.v3(this.gridsStartX + t * this.gridSize + this.gridSize / 2 + Math.floor(t / 5) * h + 1, this.rows_ * this.gridSize + 5), a.parent = this.colHintsParent, n.shineBg = c, this.gridHeadColVec.push(n), a.scale = i, e && t > this.treeData.minCol && t < this.treeData.maxCol || o && this.iceData && this.iceData.cHints[t]) {
      var S = e ? "treeMask" : "iceMask";
      var T = new cc.Node(S);
      T.setAnchorPoint(0.5, 0);
      var I = T.addComponent(cc.Sprite);
      I.spriteFrame = e || o;
      I.sizeMode = cc.Sprite.SizeMode.CUSTOM;
      I.type = e ? cc.Sprite.Type.TILED : cc.Sprite.Type.SLICED;
      T.height = r;
      a.addChild(T);
      n[S] = T;
    }
  };

  e.prototype.getWorldPointByTouch = function (t) {
    var e = cc.Vec2.ZERO;
    this.camera.getScreenToWorldPoint(t.getLocation(), e);
    return e;
  };

  e.prototype.TestTouch = function (t, e) {
    void 0 === e && (e = !1);
    var o = this.getWorldPointByTouch(t.touch);
    var n = this.map_node_.convertToNodeSpaceAR(o);
    var i = n.x;
    var r = n.y;
    var a = {
      area: l.None,
      row: -1,
      col: -1
    };

    if (this.touchDir != u.None && e) {
      var s = Math.floor(r / this.gridSize);
      var c = Math.floor((i - this.gridsStartX) / this.gridSize);
      a.area = l.Grid;
      a.row = s;
      a.col = c;
      return a;
    }

    var p = this.map_node_.getContentSize();
    return i < 0 || r < 0 || r > p.height || i > p.width ? a : (i < this.gridsStartX - 15 ? (s = Math.floor(r / this.gridSize)) >= 0 && s < this.rows_ && (a.area = l.HeadRow, a.row = s) : r > this.rows_ * this.gridSize + 15 ? (c = Math.floor((i - this.gridsStartX) / this.gridSize)) >= 0 && c < this.cols_ && (a.area = l.HeadCol, a.col = c) : (s = Math.floor(r / this.gridSize), c = Math.floor((i - this.gridsStartX) / this.gridSize), s >= 0 && s < this.rows_ && c >= 0 && c < this.cols_ && (a.area = l.Grid, a.row = s, a.col = c)), a);
  };

  e.prototype.OnTouchBegan = function (t) {
    if (this.resetCD(), this.canTouch) return !this.click_touch_ && (this.click_touch_ = !0, this.gridTouchStart = null, void (this.isAllRight || (this.gridTouchStart = this.TestTouch(t), this.gridTouchStart.area == l.Grid && this.OperationStepBegin(), this.gridTouchStart.area == l.Grid && (this.touchDir = u.None, this.fillMode = p.None, this.OnClickGrid(this.gridTouchStart.row, this.gridTouchStart.col)))));
  };

  e.prototype.OnTouchMoved = function (t) {
    if (this.canTouch && !this.isAllRight && this.gridTouchStart && this.gridTouchStart.area != l.None) do {
      if (this.gridTouchStart.area != l.Grid) break;
      var e = this.TestTouch(t, !0);
      if (e.area != l.Grid) break;
      if (this.touchDir == u.Horizontal ? e.row = this.lastTouchRow : this.touchDir == u.Vertical && (e.col = this.lastTouchCol), e.row == this.lastTouchRow && e.col == this.lastTouchCol) break;
      this.touchDir == u.None && (e.row == this.lastTouchRow ? this.touchDir = u.Horizontal : e.col == this.lastTouchCol && (this.touchDir = u.Vertical));
      var o = e.row;
      var n = e.col;
      this.OnClickGrid(o, n);
    } while (0);
  };

  e.prototype.OnTouchEnded = function (t) {
    do {
      if (!this.gridTouchStart) break;
      if (this.gridTouchStart.area != l.HeadRow && this.gridTouchStart.area != l.HeadCol) break;
      var e = this.TestTouch(t);

      if (e.area == l.HeadRow && this.gridTouchStart.area == l.HeadRow) {
        this.OnClickRowHead(e.row);
        break;
      }

      e.area == l.HeadCol && this.gridTouchStart.area == l.HeadCol && this.OnClickColHead(e.col);
    } while (0);

    this.CancelGridTouch();
  };

  e.prototype.OnTouchCancelled = function () {
    this.CancelGridTouch();
  };

  e.prototype.GetWorkGridTag = function (t, e) {
    var o = (this.rows_ - t - 1) * this.cols_ + e;
    return o < 0 || o >= this.workData.length ? c.Empty : this.workData[o];
  };

  e.prototype.SetWorkGridTag = function (t, e, n, i) {
    var r;
    var a = this.rows_;
    var s = this.cols_;
    var l = (a - e - 1) * s + n;
    if ((r = this.grids[l]) && !r.isEmpty) return !0;
    var u = this.soundIdx;

    if (u = this.soundIdx > 15 ? 15 : this.soundIdx, !(l < 0 || l >= this.workData.length) && this.workData[l] != t && (this.OperationStepBySetWorkTag(this.workData[l], t, e * s + n), t == c.O || t == c.X)) {
      var p = this.treeData;
      var d = this.wormData;
      var h = this.iceData;
      if (this.curItemBtn && !i) return 2 == this.curItemIdx || !(!p || !p[l]) || !(!h || !h[l]) || (this.updateItemNum(this.curItemIdx, !0), this.useItem(r, e, n), _vb["default"].p(_vb.VEnum3.SHORT), !0);

      if (r.isEmpty) {
        var f = this.guideCheckGrid;

        if (f) {
          var y = e + "_" + n;
          if (-1 == (b = f.indexOf(y))) return !0;
          f.splice(b, 1);
          0 == f.length && this.scheduleOnce(this.updateGuideStep, 0.5);
        }

        if (i && (t = r.isRight), p) {
          if (p[l]) return !0;
          this.treeCheck(e, n);
        }

        if (h) {
          if ((m = h[l]) && m.drop) return !0;
          this.iceCheck(e, n);
        }

        if (r.select(t), _vb["default"].p(_vb.VEnum3.SHORT), r.isRight && (this.workData[l] = c.O, t == c.O)) {
          if (d) {
            var m = d[l];
            var v = d.counts;
            var _ = d.sps;

            if (m && v) {
              var b;
              var w = v[b = m.i] = v[b] - 1;
              var T = _[b];

              if (T && T.addCount(), 0 == w) {
                var D = this.tilesParent.getChildByName("wormParent");
                var P = o.challageData.data.data;

                if (D && D.children[b] && P && P[b]) {
                  D.children[b].active = !0;
                  var k = this.grids;
                  var R = 0;
                  P[b].forEach(function (t) {
                    k[t].playWormAni(0.06 * R);
                    R++;
                  });
                }
              }
            }
          }

          _sound["default"].ins.play("tile_note_" + u);

          this.soundIdx++;
        }

        this.tipTog && !i && (this.tipLabel.string = u + "", 1 == u ? this.tipNode.setPosition(r.node.position) : 2 == u ? (this.tipNode.active = !0, this.tipAni.play(g.tipIn)) : (this.tipLabel.node.x = u > 9 ? -14 : -13, cc.tween(this.tipNode).to(0.1, {
          scale: 1.1
        }).to(0.1, {
          scale: 1
        }).start()));
      }
    }
  };

  e.prototype.treeCheck = function (t, e) {
    var o = this.treeData;

    if (void 0 !== o && void 0 !== t && void 0 !== e) {
      var n = this.rows_;
      var i = this.cols_;
      var r = this.gridHeadRowVec;
      var a = this.gridHeadColVec;
      var s = o.tmp || (o.tmp = []);
      var c = o.minRow;
      var l = o.maxRow;
      var u = o.minCol;
      var p = o.maxCol;
      s.push(t > 0 && {
        r: t - 1,
        c: e
      }, t < n - 1 && {
        r: t + 1,
        c: e
      }, e > 0 && {
        r: t,
        c: e - 1
      }, e < i - 1 && {
        r: t,
        c: e + 1
      });
      s.forEach(function (t) {
        if (t) {
          var e = t.r;
          var s = t.c;
          var d = (n - e - 1) * i + s;
          var h = o[d];

          if (h) {
            h.play(), delete o[d];
            var f = a[s].treeMask;

            if (f) {
              for (var g = 1, y = c + 1; y < l && 1 == g; y++) {
                o[(n - y - 1) * i + s] && (g = 0);
              }

              g && (delete a[s].treeMask, cc.tween(f).to(0.5, {
                height: 0
              }).call(function () {
                f.destroy();
              }).start());
            }

            var m = r[e].treeMask;

            if (m) {
              g = 1;

              for (var v = u + 1; v < p && 1 == g; v++) {
                o[(n - e - 1) * i + v] && (g = 0);
              }

              g && (delete r[e].treeMask, cc.tween(m).to(0.5, {
                width: 0
              }).call(function () {
                m.destroy();
              }).start());
            }
          }
        }
      });
      s.length = 0;
    }
  };

  e.prototype.iceCheck = function (t, e) {
    var o = this;
    var n = this.iceData;

    if (void 0 !== n && void 0 !== t && void 0 !== e) {
      var i = this.rows_;
      var r = this.cols_;
      var a = this.gridHeadRowVec;
      var s = this.gridHeadColVec;
      var c = n.rHints;
      var l = n.cHints;
      var u = n.tmp || (n.tmp = []);
      u.push(t > 0 && {
        r: t - 1,
        c: e
      }, t < i - 1 && {
        r: t + 1,
        c: e
      }, e > 0 && {
        r: t,
        c: e - 1
      }, e < r - 1 && {
        r: t,
        c: e + 1
      });
      u.forEach(function (t) {
        if (t) {
          var e = t.r;
          var u = t.c;
          var p = (i - e - 1) * r + u;
          var d = n[p];

          if (d && d.drop) {
            if (0 == d.drop()) {
              delete n[p];
              var h = c[e] = c[e] - 1;
              var f = l[u] = l[u] - 1;
              var g = s[u].iceMask;
              g && 0 == f && (delete s[u].iceMask, cc.tween(g).to(0.5, {
                height: 0
              }).call(function () {
                g.destroy();
              }).start());
              var y = a[e].iceMask;
              y && 0 == h && (delete a[e].iceMask, cc.tween(y).to(0.5, {
                width: 0
              }).call(function () {
                y.destroy();
              }).start());
            }

            var m = new cc.Node("icePit");
            var v = d.node;
            m.scale = v.scale, m.setPosition(v.x, v.y), v.parent.addChild(m), _res["default"].ins.lSF("game/ice/pit", m.addComponent(cc.Sprite));
            var _ = o.gridSize;
            var b = cc.v2(v.x, v.y);
            var S = cc.v2(b.x + _, b.y + 3 * _);
            var T = cc.v2(b.x + 1.5 * _, b.y - 3 * _);
            cc.tween(m).bezierTo(1, b, S, T).start(), cc.tween(m).delay(0.2).by(20 / 30, {
              scale: -0.3
            }).to(4 / 30, {
              opacity: 0
            }).call(function () {
              m.destroy();
            }).start();
          }
        }
      });
      u.length = 0;
    }
  };

  e.prototype.tipAniDone = function (t, e) {
    e.name == g.tipOut && (this.tipNode.active = !1);
  };

  e.prototype.SetWorkGridTagWithInit = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      var e;
      var n;
      var i;
      var r;
      var a;
      var c;
      var l;
      var u;
      var p;
      var d;
      var h;
      var f;
      var g;
      var y;
      var m;
      var v;

      var _;

      var b;
      var S;
      var T;
      var I;
      var D;
      var P;
      var R;
      var N;
      var C;
      var O;
      var M;
      var L;
      var A;
      var E;
      var x;
      var B;
      var F;
      var V;
      var U;
      var z;
      var H;
      var G;
      var J;
      var W;
      var q;
      var K;
      var Y;
      var X;
      var Z;
      var Q = this;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            if (e = (t = this).rows_, n = t.cols_, i = t.gridPrefab, r = t.gridsStartX, a = t.gridSize, c = t.grids, l = t.tilesParent, u = t.baseData, p = t.treeData, d = t.wormData, h = t.iceData, !(b = o.challageData)) return [3, 7];

            switch (b.type) {
              case _pInfo.challengeType.tree:
                return [3, 1];

              case _pInfo.challengeType.worm:
                return [3, 3];

              case _pInfo.challengeType.ice:
                return [3, 5];
            }

            return [3, 7];

          case 1:
            return [4, _res["default"].ins.lPre("prefab/game/hedge")];

          case 2:
            return f = s.sent(), g = new cc.Node("treeMasks"), l.addChild(g), [3, 7];

          case 3:
            return [4, _res["default"].ins.lPre("prefab/game/worm")];

          case 4:
            for (y = s.sent(), m = new cc.Node("wormParent"), M = b.data.data.length, L = 0; L < M; L++) {
              Y = new cc.Node("worms"), m.addChild(Y), Y.active = !1;
            }

            return l.addChild(m), [3, 7];

          case 5:
            return [4, _res["default"].ins.lPre("prefab/game/ice")];

          case 6:
            return v = s.sent(), _ = new cc.Node("iceParent"), l.addChild(_), [3, 7];

          case 7:
            return S = a / 44, T = Math.floor, I = this.lineW, 1 == (R = _pInfo["default"].ins.getUsingSkin().bg) ? [3, 10] : (N = "game/skin/" + R + "/", [4, _res["default"].ins.lSF(N + "grid")]);

          case 8:
            return D = s.sent(), [4, _res["default"].ins.lSF(N + "gridTip")];

          case 9:
            P = s.sent(), s.label = 10;

          case 10:
            for (C = 0, O = this.workData, M = O.length; C < M; C++) {
              L = e - Math.floor(C / n) - 1, E = T((A = C % n) / 5), x = T(L / 5), B = r + A * a + 0.5 * a + E * I, F = L * a + 0.5 * a + x * I, (V = cc.instantiate(i)).setPosition(B, F), V.setScale(S, S, 1), U = c[C] = V.getComponent(_grid["default"]), z = u[C], U.init(z), U.initType(D, P), l.addChild(V), f && L > p.minRow && L < p.maxRow && A > p.minCol && A < p.maxCol && ((H = cc.instantiate(f)).setPosition(B, F), H.setScale(S, S, 1), g.addChild(H), p[C] = H.getComponent(cc.Animation)), y && z && (G = d[C], J = G.i, W = G.tex, q = G.dir, (K = cc.instantiate(y)).angle = q, K.setPosition(B, F), K.setScale(S, S, 1), K.getComponent("worm").init(W), (Y = m.children[J]).addChild(K)), v && h && h[C] && ((X = cc.instantiate(v)).setPosition(B, F), X.setScale(S, S, 1), (Z = X.getComponent("ice")).r = L, Z.c = A, h[C] = Z, _.addChild(X));
            }

            return g && g.setSiblingIndex(l.childrenCount - 1), m && m.setSiblingIndex(0), _ && _.setSiblingIndex(l.childrenCount - 1), this.schedule(function () {
              Q.playHightLight(1, 1);
            }, 30), [2];
        }
      });
    });
  };

  e.prototype.GetBaseGridTag = function (t, e) {
    var o = (this.rows_ - t - 1) * this.cols_ + e;
    return o < 0 || o >= this.grid_count ? c.Empty : this.baseData[o];
  };

  e.prototype.IsRowLogicRight = function (t) {
    var e = this.GetBaseRowHeadNums(t);
    var o = this.GetWorkRowHeadNums(t);
    if (e.length != o.length) return !1;

    for (var n = 0; n < e.length; n++) {
      if (e[n] != o[n]) return !1;
    }

    return !0;
  };

  e.prototype.IsColLogicRight = function (t) {
    var e = this.GetBaseColHeadNums(t);
    var o = this.GetWorkColHeadNums(t);
    if (e.length != o.length) return !1;

    for (var n = 0; n < e.length; n++) {
      if (e[n] != o[n]) return !1;
    }

    return !0;
  };

  e.prototype.IsRowFillRight = function (t) {
    for (var e = 0; e < this.cols_; e++) {
      var o = this.GetBaseGridTag(t, e);
      var n = this.GetWorkGridTag(t, e);
      if (o == c.O && n != c.O) return !1;
      if (o == c.X && n == c.O) return !1;
    }

    return !0;
  };

  e.prototype.IsColFillRight = function (t) {
    for (var e = 0; e < this.rows_; e++) {
      var o = this.GetBaseGridTag(e, t);
      var n = this.GetWorkGridTag(e, t);
      if (o == c.O && n != c.O) return !1;
      if (o == c.X && n == c.O) return !1;
    }

    return !0;
  };

  e.prototype.RefreshRowHeadState = function (t) {
    var e = o.type != _pInfo.gameType.race;
    var n = this.gridHeadRowVec[t];
    var i = n.labels;

    if (this.IsRowLogicRight(t)) {
      for (var r = 0; r < i.length; r++) {
        e && (i[r].color = q), this.playHightLight(t);
      }

      this.raceRefresh(t);
      n.allRight = !0;
      this.selectData.row == t && this.showOrHideSelectMask();
      !this.byGuide && this.playGirlAni(h.happy);
    } else if (e) for (var a = this.GetBaseRowHeadNums(t), s = this.GetBaseRowBeginNums(t), l = this.workData, u = 0, p = a.length; u < p; u++) {
      if (!q.equals(i[u].color)) {
        for (var d = !0, f = s[u], g = s[u] + a[u]; f < g; f++) {
          if (l[f] != c.O) {
            d = !1;
            break;
          }
        }

        d && (i[u].color = q);
      }
    }
  };

  e.prototype.RefreshColHeadState = function (t) {
    var e = o.type != _pInfo.gameType.race;
    var n = this.gridHeadColVec[t];
    var i = n.labels;

    if (this.IsColLogicRight(t)) {
      for (var r = 0; r < i.length; r++) {
        e && (i[r].color = q), this.playHightLight(void 0, t);
      }

      this.raceRefresh(void 0, t);
      n.allRight = !0;
      this.selectData.col == t && this.showOrHideSelectMask();
    } else if (e) for (var a = this.GetBaseColHeadNums(t), s = this.GetBaseColBeginNums(t), l = this.workData, u = this.rows_, p = 0, d = a.length; p < d; p++) {
      if (!q.equals(i[p].color)) {
        for (var h = !0, f = s[p], g = s[p] + a[p] * u; f < g; f += u) {
          if (l[f] != c.O) {
            h = !1;
            break;
          }
        }

        h && (i[p].color = q);
      }
    }
  };

  e.prototype.playHightLight = function (t, e) {
    var o;
    var n = this.grids;
    var i = this.rows_;
    var r = this.cols_;

    if (void 0 === e) {
      for (var a = void 0, s = void 0, l = 0; l < r; l++) {
        (o = n[l + (i - t - 1) * i]).isEmpty && (o.select(c.X, !0), this.treeCheck(t, l), this.iceCheck(t, l)), o.playHL(0.02 * l), 0 == l ? a = o.node.position : l == r - 1 && (s = o.node.position);
      }

      if (a) {
        var u = cc.instantiate(this.fadePrefab);
        u.setPosition(a.x - this.gridSize / 2, a.y);
        u.angle = 90;
        u.scale = 1 / this.gridBgSp.node.scale;
        this.patices.addChild(u);
        cc.tween(u).to(0.02 * (r - 1), {
          position: s
        }).delay(0.2).call(function () {
          u.destroy();
        }).start();
      }
    } else if (void 0 === t) {
      for (a = void 0, s = void 0, l = 0; l < i; l++) {
        (o = n[e + l * i]).isEmpty && (o.select(c.X, !0), this.treeCheck(i - 1 - l, e), this.iceCheck(i - 1 - l, e)), o.playHL(0.02 * l), 0 == l ? a = o.node.position : l == r - 1 && (s = o.node.position);
      }

      if (a) {
        var p = cc.instantiate(this.fadePrefab);
        p.setPosition(a.x - this.gridSize / 2, a.y);
        p.scale = 1 / this.gridBgSp.node.scale;
        this.patices.addChild(p);
        cc.tween(p).to(0.02 * (r - 1), {
          position: s
        }).delay(0.2).call(function () {
          p.destroy();
        }).start();
      }
    } else {
      var d = void 0;

      for (l = 0; l < i; l++) {
        for (var h = 0; h < r; h++) {
          d = 0.02 * (i - l - 1 + h), (o = n[l + h * i]).playHL(d);
        }
      }
    }
  };

  e.prototype.raceRefresh = function (t, e) {
    if (o.type == _pInfo.gameType.race) {
      var n = this.raceRefreshPop;
      n.push({
        r: t,
        c: e
      });
      1 == n.length && (this.canTouch = !1, this.scheduleOnce(this.checkRaceFresh));
    }
  };

  e.prototype._raceRefresh = function (t, e) {
    if (this.isRefreshing) this.raceRefreshPop.push({
      r: t,
      c: e
    });else {
      this.isRefreshing = !0;
      var n = this.raceDensity;
      (this.raceRefeshTime = this.raceRefeshTime + 1) % 2 == 0 && ((n = this.raceDensity - 0.05) < this.raceMinDenstiy && (n = this.raceMinDenstiy), this.raceDensity = n);
      var i = this.baseData;
      var r = this.workData;
      var a = this.grids;
      var s = this.gridPrefab;
      var l = this.tilesParent;
      var u = cc.instantiate;
      var p = null != e;
      var d = null != t;
      d && (t = 9 - t);
      o.type;

      for (var h, f = p && e < 5, g = f ? -1 : 1, y = d && t < 5, m = y ? -10 : 10, v = 0, _ = 1, b = 0, w = 1, S = 0, T = void 0; S < 10; S++) {
        T = y ? S : 9 - S;

        for (var I = 0, D = void 0; I < 10; I++) {
          var P = a[x = (D = f ? I : 9 - I) + 10 * T];
          var k = i[x];
          var R = r[x];
          if (p && (0 == k && 1 == w && b++, w = k), p && D == e || d && T == t) P.playFallDown();else if (p ? (f && D > e || !f && D < e) && (P.playWalk(a[x + g].node.position), a[x + g] = P, i[x + g] = k, r[x + g] = R) : d && (y && T > t || !y && T < t) && (P.playWalk(a[x + m].node.position), a[x + m] = P, i[x + m] = k, r[x + m] = R), p && 9 == I || d && 9 == S) {
            0 == (h = Math.random() < n ? 1 : 0) && 1 == _ && v++;
            (v > 2 || b > 2) && (h = 1, v--);
            _ = h;
            b = 0;
            w = 0;
            var N = P.node;
            var C = u(s);
            C.setPosition(N.position);
            C.setParent(l);
            C.setScale(0);
            var O = C.getComponent("grid");
            O.init(h);
            O.initType();
            O.playShow(N.scale);
            a[x] = O;
            i[x] = h;
            r[x] = c.Empty;
          }
        }
      }

      if (d) {
        t = y ? 9 : 0;
        var M = [];
        var L = 0;
        var A = void 0;

        for (I = 0; I < 10; I++) {
          var E = a[I + 10 * t].isRight;
          M[M.length - 1] != E && (E && L++, M.push(E));
        }

        if (L > 4) for (_ = 1, I = 0; I < 10; I++) {
          var x;
          var B = a[x = I + 10 * t];
          if (1 == _ && 0 == B.isRight) B.isRight = 1, i[x] = 1, A = !0;else if (A) break;
          _ = B.isRight;
        }
      }

      this.addHeads();
      this.scheduleOnce(this.checkRaceFresh.bind(this), 0.5);
    }
  };

  e.prototype.checkRaceFresh = function () {
    var t = this.raceRefreshPop;

    if (this.isRefreshing = !1, t.length) {
      var e = t.pop();
      var o = e.r;
      var n = e.c;

      this._raceRefresh(o, n);
    } else this.canTouch = !0;
  };

  e.prototype.OnClickGrid = function (t, e, o) {
    if (!(t < 0 || e < 0 || t >= this.rows_ || e >= this.cols_)) {
      var n = this.GetWorkGridTag(t, e);
      var i = -1;
      n == c.Empty ? i = this.pen : n == c.O && this.pen == c.O ? i = c.Empty : n == c.X && this.pen == c.X && (i = c.Empty);
      this.fillMode == p.Set && n != c.Empty || this.fillMode == p.Clean && n == c.Empty || (-1 != i && (this.fillMode == p.None && (this.fillMode = n == c.Empty ? p.Set : p.Clean), !this.SetWorkGridTag(i, t, e, o) && (this.RefreshRowHeadState(t), this.RefreshColHeadState(e), this.CheckAllRight())), this.lastTouchRow = t, this.lastTouchCol = e);
    }
  };

  e.prototype.OnClickRowHead = function (t) {
    if (!this.byGuide && !this.IsRowLogicRight(t)) {
      var e = this.gridHeadRowVec[t];
      e.treeMask || e.iceMask || (this.curItemBtn && 2 == this.curItemIdx ? (this.updateItemNum(this.curItemIdx, !0), this.useItem(null, t, null)) : this.showOrHideSelectMask(t), _vb["default"].p(_vb.VEnum3.SHORT));
    }
  };

  e.prototype.OnClickColHead = function (t) {
    if (!this.byGuide && !this.IsColLogicRight(t)) {
      var e = this.gridHeadColVec[t];
      e.treeMask || e.iceMask || (this.curItemBtn && 2 == this.curItemIdx ? (this.updateItemNum(this.curItemIdx, !0), this.useItem(null, null, t)) : this.showOrHideSelectMask(void 0, t), _vb["default"].p(_vb.VEnum3.SHORT));
    }
  };

  e.prototype.showOrHideSelectMask = function (t, e) {
    var o = this.selectMask;
    var n = this.selectData;
    if (void 0 === t && void 0 === e) o.active = !1, -1 != n.row && ((m = this.gridHeadRowVec[n.row].shineBg).active = !1, cc.Tween.stopAllByTarget(m), n.row = -1), -1 != n.col && ((m = this.gridHeadColVec[n.col].shineBg).active = !1, cc.Tween.stopAllByTarget(m), n.col = -1);else {
      var i = o.active;
      var r = this.selectMaskBg;
      var a = this.gridBgSp.node;
      var s = this.gridSize;
      var c = this.cols_;
      var l = this.lineW;
      var u = c * s + this.gridsStartX + l * (c / 5 - 1);
      var p = u / 2;
      var d = p;

      if (i || (o.active = !0, o.width = o.height = u, o.setPosition(p, d), cc.tween(r).set({
        opacity: 0
      }).to(0.2, {
        opacity: 128
      }).start()), void 0 !== t) {
        var h = this.gridHeadRowVec;
        var f = n.row;
        var g = n.col;

        if (-1 != f && ((m = h[f].shineBg).active = !1, cc.Tween.stopAllByTarget(m)), f == t) {
          if (n.row = -1, -1 == g) return void (o.active = !1);
          o.y = d;
          o.height = u;
        } else o.height = s, n.row = t, o.y = t * s + s / 2 + Math.floor(t / 5) * l - 1, (m = h[t].shineBg).active = !0, cc.tween(m).to(0.8, {
          opacity: 0
        }).to(0.8, {
          opacity: 100
        }).union().repeatForever().start();
      } else {
        var y = this.gridHeadColVec;

        if (f = n.row, -1 != (g = n.col) && ((m = y[g].shineBg).active = !1, cc.Tween.stopAllByTarget(m)), g == e) {
          if (n.col = -1, -1 == f) return void (o.active = !1);
          o.x = p;
          o.width = u;
        } else {
          var m;
          o.width = s;
          n.col = e;
          o.x = e * s + s / 2 + this.gridsStartX + Math.floor(e / 5) * l - 1;
          (m = y[e].shineBg).active = !0;
          cc.tween(m).to(0.8, {
            opacity: 0
          }).to(0.8, {
            opacity: 100
          }).union().repeatForever().start();
        }
      }

      r.setPosition(a.x - o.x, a.y - o.y + 8);
    }
  };

  e.prototype.CancelGridTouch = function () {
    this.soundIdx = 1;
    this.tipNode.active && this.tipAni.play(g.tipOut);
    this.click_touch_ = !1;
    this.gridTouchStart && this.gridTouchStart.area != l.None && (this.gridTouchStart.area = l.None, this.OperationStepEnd());
  };

  e.prototype.IsAllRight = function () {
    if (this.baseOTotal < 0) {
      this.baseOTotal = 0;

      for (var t = 0; t < this.grid_count; t++) {
        this.baseData[t] == c.O && (this.baseOTotal += 1);
      }
    }

    var e = this.baseOTotal;
    var o = 0;

    for (t = 0; t < this.workData.length; t++) {
      this.workData[t] == c.O && (o += 1);
    }

    if (e != o) return !1;

    for (var n = 0; n < this.rows_; n++) {
      if (!this.IsRowLogicRight(n)) return !1;
    }

    for (var i = 0; i < this.cols_; i++) {
      if (!this.IsColLogicRight(i)) return !1;
    }

    return !0;
  };

  e.prototype.CheckAllRight = function () {
    !this.isAllRight && this.IsAllRight() && (this.isAllRight = !0, this.showOrHideSelectMask(), this.gameWin());
  };

  e.prototype.winSpScaleAni = function () {
    var t = this.winSpParent;
    var e = this.winAniNode.parent;
    var o = new cc.Vec3();
    t.parent.convertToWorldSpaceAR(t.position, o);
    e.convertToNodeSpaceAR(o, o);
    t.setParent(e);
    t.setSiblingIndex(3);
    t.setScale(this.gridBgSp.node.scale);
    t.setPosition(o);
    cc.tween(t).to(0.5, {
      scale: 1.2
    }).delay(5 / 30).to(1, {
      scale: 0.5,
      x: 0,
      y: _global["default"].padScale ? 75 : 175
    }, {
      easing: "cubicIn"
    }).call(this.PlayFireworks.bind(this)).by(5 / 30, {
      scale: 0.05
    }, {
      easing: "cubicOut"
    }).by(5 / 30, {
      scale: -0.05
    }, {
      easing: "cubicIn"
    }).start();
  };

  e.prototype.tilesWinAni = function () {
    var t = this.map_node_;
    cc.tween(t).delay(20 / 30).to(1, {
      scale: 0.606,
      x: -288,
      y: 100
    }, {
      easing: "cubicIn"
    }).call(this.PlayFireworks.bind(this)).start();
  };

  e.prototype.gameWin = function () {
    var t;
    var e;
    var n = this;
    this.canTouch = !1;

    _sound["default"].ins.play(_sound["default"].WIN); // 💝 卷宝专属现金奖励系统 - 游戏完成后的处理


    var self = this; // 立即获取当前游戏状态，避免作用域问题

    var currentGameType = o.type;

    var currentLevel = _pInfo["default"].ins.getPuzzleLvl();

    console.log('🎮 游戏完成检测 - 类型:', currentGameType, '关卡:', currentLevel);
    console.log('🎮 游戏完成检测 - o对象:', o);
    console.log('🎮 游戏完成检测 - _pInfo.gameType:', _pInfo.gameType);
    this.scheduleOnce(function () {
      try {
        // 恢复原始关卡进度（如果是手动选择的关卡）
        if (_global["default"].originalLevel) {
          console.log('🔄 恢复原始关卡进度:', _global["default"].originalLevel);

          _pInfo["default"].ins.setPuzzleLvl(_global["default"].originalLevel);

          _global["default"].originalLevel = null;
        }

        var isNormalGame = currentGameType == _pInfo.gameType.normal;
        console.log('🔍 游戏类型检查 - 是否普通游戏:', isNormalGame, '游戏类型值:', currentGameType, '普通类型值:', _pInfo.gameType.normal);

        if (isNormalGame) {
          var difficulty = self.getLevelDifficulty(currentLevel);
          console.log('🎯 关卡' + currentLevel + '完成，难度:', difficulty); // 触发现金奖励检查

          var hasReward = _rewardMgr["default"].onPuzzleComplete(difficulty, true);

          if (hasReward) {
            console.log("🎉 现金奖励已立即添加到余额并更新UI！");
          } else {
            console.log("⭕ 本次没有获得现金奖励（随机概率40%不触发）");
          }
        } else {
          console.log('ℹ️ 非普通游戏模式，跳过现金奖励');
        }
      } catch (rewardError) {
        console.log("现金奖励系统错误:", rewardError);
        console.error(rewardError);
      }
    }, 1.0); // 减少延迟到1秒

    var i;
    var r;
    var a = _pInfo["default"].ins;
    var s = o.type;
    var c = s == _pInfo.gameType.normal;
    var l = s == _pInfo.gameType.practice;
    var u = s == _pInfo.gameType.festival;
    var p = s == _pInfo.gameType.freedom;
    var d = s == _pInfo.gameType.challenge;

    _taskMgr["default"].taskCheck(s);

    (c || u || p) && _festivalMgr["default"].ins.updPro(_festivalMgr.fesTaskKey.throughMain, 1);
    this.eventDot(!0);
    u ? r = _festivalMgr["default"].ins.getFesPuzzleSprFrame() : p || d || (r = c ? _levelMgr["default"].ins.getPuzzleSprFrame(_pInfo["default"].ins.getPuzzleLvl()) : _levelMgr["default"].ins.getPracitceSprfFrame(this.practiceId));
    var h = this.node.getChildByName("win");
    var g = h.getChildByName("top");
    var y = h.getChildByName("mid");

    if (l) {
      g.active = !1;
      y.active = !1;
      var m = h.getChildByName("down");

      if (m.getChildByName("adGetBtn").active = !1, m.getChildByName("nextPraBtn").active = !this.byGuide, this.byGuide) {
        var v = m.getChildByName("getBtn");
        v.x = 0;
        v.opacity = 0;
      }
    } else {
      var _ = void 0;

      d ? (this.unschedule(this._chaCD), _challengeMgr["default"].ins.winChallenge(o.challageData.date), _global["default"].loadToRace = 3) : p ? (this.levelLbl.node.parent.active = !1, g.scaleX = 0, _ = 15 == this.rows_) : (i = c ? a.getPuzzleLvl() : _festivalMgr["default"].ins.getFesPuzzleLv(), this.levelLbl.string = "" + i, _ = i % 3 == 0, c ? a.finishPuzzleLvl() : _festivalMgr["default"].ins.finishFesPuzzleLv());
      a.recordGameResult(s, !0, this.score, void 0, i);
      var b = {};

      if (b[s !== _pInfo.gameType.festival || _festivalMgr["default"].ins.isJigsawMax() ? "puzzle_pieces" : "newYear_pieces"] = 1, d) {
        this.cons2Lbl.string = this.useTimeLbl.string;
        this.mult = 3;
        this.adGetBtn.node.adDotData = "每日挑战三倍奖励";
        var T = o.challageData.date.num || 1;
        this.consBestLbl.string = T + "";
        b = (null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.daily_challenge) || void 0 === e ? void 0 : e.reward) || {
          times: 50,
          coin: 100,
          puzzle_pieces: 10
        };
        o.challageData.date.isFin && (b = {});
      } else {
        var I = a.getConsWinTimes();
        this.cons2Lbl.string = I + "";
        this.consBestLbl.string = this.recData.heWins;
        var D = this.baseReward = 2;
        var k = this.reward = Math.min(D * I, 20);
        this.mult = _ ? 10 : 3;
        this.adGetBtn.node.adDotData = _ ? "主线十倍奖励" : "主线三倍奖励";
        this.tenNode.active = _;
        this.threeNode.active = !_;
        this.rew1Lbl.string = D + "";
        this.rew2Lbl.string = k + "";
      }

      for (var R in b) {
        var C = b[R];
        var O = cc.instantiate(this.rewItemPre);
        O.scale = 1.3;
        O.getComponent(_item["default"]).initByData(R, C);
        this.rewItems.content.addChild(O);
      }

      if (!d || !o.challageData.date.isFin) {
        var L = this.rewItems.content.children[0].width * this.rewItems.content.childrenCount;
        this.rewItems.node.x = L > this.rewItems.node.width ? -180 : (this.rewItems.node.width - L) / 2 - 180;
        L = Math.min(L, 360);
        this.rewItems.node.width = L;
        this.rewItems.scrollToLeft();
      }

      var B = _cfgMgr["default"].serverCfg.share_rules.rules.main_line;
      var V = a.getNormalShareTime();
      this.shareIcon.spriteFrame = cc.assetManager.getBundle("resSps").get("item/" + B.props, cc.SpriteFrame);
      this.shareLbl.string = "+" + B.val;
      this.shareIcon.node.active = V < B.daily_limit_reward_times;

      _res["default"].ins.getBundleByString("prefab").then(function (t) {
        t.preload("prefab/game/banner", cc.Prefab);
      });
    }

    r ? r.then(function (t) {
      var e = n.cols_;
      var o = n.rows_;
      var i = n.gridSize;
      var r = n.map_node_;
      var a = n.gridBgSp.node;
      var s = a.scale;
      var c = a.x + a.width * s / 2 + r.x;
      var l = a.y + a.height * s / 2 + r.y;
      _global["default"].padScale && (l -= 150, g.isValid && (g.removeComponent(cc.Widget), n.scheduleOnce(function () {
        g.y = -100;
      })), h.getChildByName("mid").y = -100);
      n.winAniNode.setPosition(c, l);
      n.winAniNode.setScale(s);
      var u = n.lastTouchRow - o / 2;
      var p = (n.lastTouchCol - e / 2) * i + i / 2;
      var d = u * i + i / 2;
      n.winCircleMask.setPosition(p, d);
      n.winSpParent.setPosition(-p, -d);
      n.winLight.setPosition(p, d);
      var y = new cc.Node();
      y.addComponent(cc.Sprite).spriteFrame = t;
      y.parent = n.node;
      var m = y.width;
      var v = y.height;

      var _ = new cc.RenderTexture();

      _.initWithSize(y.width, y.height);

      var b = new cc.Node();
      b.setParent(y);
      var w = b.addComponent(cc.Camera);
      w.clearFlags |= cc.Camera.ClearFlags.COLOR;
      w.backgroundColor = cc.color(0, 0, 0, 0);
      w.zoomRatio = cc.winSize.height / v;
      w.targetTexture = _;
      w.render(y);
      b.destroy();
      y.destroy();
      n.scheduleOnce(function () {
        var t = _.readPixels();

        _.destroy();

        var r = n.winSps;
        var a = J(m / e);
        var c = J(v / o);
        var l = n.singleSf;
        i /= s;

        for (var u = 0; u < e; u++) {
          for (var p = 0; p < o; p++) {
            var d = p * c * m + u * a;
            var h = t[d *= 4];
            var g = t[d + 1];
            var y = t[d + 2];
            var b = (t[d + 3], new cc.Node());
            var w = b.addComponent(cc.Sprite);
            w.spriteFrame = l;
            w.sizeMode = cc.Sprite.SizeMode.CUSTOM;
            b.parent = r;
            b.color = new cc.Color(h, g, y);
            b.setContentSize(i, i);
            b.setPosition(u * i + i / 2, p * i + i / 2);
          }
        }

        n.scheduleOnce(function () {
          n.playAni(f.gameWin);
        }, 0.5);
      });
    })["catch"](function () {
      n.scheduleOnce(function () {
        n.playAni(f.gameWinFailSf);
      }, 0.5);
    }) : this.scheduleOnce(function () {
      n.playAni(f.gameWinFailSf);
    }, 0.5);
  };

  e.prototype.PlayFireworks = function () {
    if (!this.byGuide) {
      var t = this.consBestLbl.node.parent.parent;
      var e = this.levelLbl.node.parent.parent;

      _res["default"].ins.getBundleByString("prefab").then(function (o) {
        t.isValid && o.load("prefab/game/banner", cc.Prefab, function (o, n) {
          if (!o && t.isValid) {
            var i = cc.instantiate(n);
            var r = e.getChildByName("img_gk_ss");
            var a = e.convertToWorldSpaceAR(r.getPosition());
            var s = t.convertToNodeSpaceAR(a);
            i.setParent(t);
            i.y = s.y - 100;
            i.getComponent(_banner["default"]).play();
          }
        });
      })["catch"](function () {});
    }
  };

  e.prototype.OperationStepBegin = function () {
    var t = this.opStep;
    t.grids = [];
    t.row_autox_cols.clear();
    t.col_autox_rows.clear();
    Object.assign(t.row_autox_cols, this.colAutoXCols);
    Object.assign(t.col_autox_rows, this.colAutoXRows);
    t.hint_rows = [];
    t.hint_cols = [];
    t.is_row_autox_changed = !1;
    t.is_col_autox_changed = !1;
    t.is_hint_rows_changed = !1;
    t.is_hint_cols_changed = !1;
  };

  e.prototype.OperationStepEnd = function () {
    this.isAllRight || (this.opStep.is_row_autox_changed || this.opStep.is_col_autox_changed || this.opStep.is_hint_rows_changed || this.opStep.is_hint_cols_changed || 0 != this.opStep.grids.length) && (this.opStep.is_row_autox_changed || this.opStep.row_autox_cols.clear(), this.opStep.is_col_autox_changed || this.opStep.col_autox_rows.clear());
  };

  e.prototype.OperationStepBySetWorkTag = function (t, e, o) {
    this.opStep.grids.push({
      tag_undo: t,
      tag_redo: e,
      grid: o
    });
  };

  e.prototype.OnBtnOX = function () {
    if (!this.oxAning && (this.resetCD(), this.canTouch)) {
      var t = this.pen;
      var e = (t = this.pen = t == c.X ? c.O : c.X) == c.X;
      this.oxAning = !0;
      this.oxTagAni.play(e ? "togToX" : "togToO");
      this.playShine();

      _vb["default"].p(_vb.VEnum3.SHORT);
    }
  };

  e.prototype.oxAniDone = function () {
    var t = this;
    this.byGuide ? this.scheduleOnce(function () {
      t.updateGuideStep();
      t.oxAning = !1;
    }, 0.2) : this.oxAning = !1;
  };

  e.prototype.playShine = function () {
    this.grids.forEach(function (t) {
      t.shine();
    });
  };

  e.prototype.OnBtnSet = function () {
    if (!this.curAni) {
      this.showOrHideSelectMask();
      this.resetCD();
      var t = this.isShowBtn = !this.isShowBtn;
      this.playAni(t ? f.showBtns : f.hideBtns);
      this.canTouch = !t;
      this.raceChgVis();

      _vb["default"].p(_vb.VEnum3.SHORT);
    }
  };

  e.prototype.OnBtnHelp = function () {
    this.resetCD();

    _panelMgr["default"].ins.open("ui/ui_raceTip", {
      pageIdx: o.type == _pInfo.gameType.race ? 2 : 0
    });

    _vb["default"].p(_vb.VEnum3.SHORT);
  };

  e.prototype.OnBtnMusic = function () {
    this.resetCD();

    _panelMgr["default"].ins.open("ui/ui_set", null);

    _vb["default"].p(_vb.VEnum3.SHORT);
  };

  e.prototype.OnBtnTip = function () {
    this.resetCD();
    this.tipTog = !this.tipTog;

    _uData["default"].ins.setSetting({
      tip: this.tipTog
    });

    this.updateTip();

    _vb["default"].p(_vb.VEnum3.SHORT);
  };

  e.prototype.updateTip = function () {
    this.tipActNode.active = this.tipTog;
    this.tipUnActNode.active = !this.tipTog;
  };

  e.prototype.OnBtnHome = function () {
    this.resetCD();

    _panelMgr["default"].ins.open("ui/ui_rePlay", {
      curScore: this.score,
      continueCb: this.continueCb.bind(this)
    }, {
      MaskNoHide: !0
    });

    _vb["default"].p(_vb.VEnum3.SHORT);
  };

  e.prototype.OnBtnShare = function () {
    var t = this;
    this.resetCD();

    _idx.platform.shareVideoRecord().then(function (e) {
      var o = t.shareIcon;

      if (1 == e && o && o.isValid && o.node.active) {
        var n = _pInfo["default"].ins;
        var i = _cfgMgr["default"].serverCfg.share_rules.rules.main_line;
        var r = i.props;
        var a = i.val;
        o.spriteFrame = cc.assetManager.getBundle("resSps").get("item/" + r, cc.SpriteFrame);
        var s = n.getNormalShareTime();
        n.setNormalShareTime(s + 1);
        var c = void 0;

        switch (r) {
          case "coin":
            c = n.getCoin(), n.addCoin(a);
            break;

          case "times":
            n.addPower(a);
            break;

          default:
            _bagMgr["default"].ins.addItem(r, a);

        }

        var l = o.node.parent.convertToWorldSpaceAR(o.node.position);

        _panelMgr["default"].ins.open("ui/ui_flyAni", {
          itemDatas: [{
            itemId: r,
            worldPos: l,
            value: a
          }],
          showCoin: c
        });

        t.shareBtn.active = !1;
      }
    });
  };

  e.prototype.continueCb = function () {
    this.canTouch = !0;
    this.raceChgVis();
    this.OnBtnSet();
  };

  e.prototype.raceChgVis = function () {
    if (o.type == _pInfo.gameType.race) {
      var t = this.canTouch;
      this.tilesParent.active = t;
      this.gridHeadColVec.forEach(function (e) {
        e.labels.forEach(function (e) {
          e.active = t;
        });
      });
      this.gridHeadRowVec.forEach(function (e) {
        e.labels.forEach(function (e) {
          e.active = t;
        });
      });
    }
  };

  e.prototype.OnBtnItem = function (t, e) {
    var n = this;
    if (this.showOrHideSelectMask(), this.resetCD(), this.canTouch) if (this.curItemBtn) this.OnBtnHideItem();else {
      this.curItemIdx = Number(e);
      var i = this.items[e];

      if (i.itemMax != i.itemCur) {
        if (0 == i.count) return this.canTouch = !1, this.raceChgVis(), void _panelMgr["default"].ins.open("ui/ui_getItem", {
          itemId: i.icon,
          cb: this.updateItemNum.bind(this),
          closeCb: function closeCb() {
            n.canTouch = !0;
            n.raceChgVis();
          },
          gType: o.type
        });
        var r = this.curItemBtn = t.currentTarget;
        r.setSiblingIndex(7);

        _res["default"].ins.lSF("item/" + i.icon, this.itemSelectIcon);

        this.itemSelectLbl.string = i.tip;
        this.itemSelectEff.setPosition(r.position);
        this.canTouch = !1;
        this.playAni(f.openItemSelect);
        this.chgGridItemShine(!0);

        _vb["default"].p(_vb.VEnum3.SHORT);
      } else _tipMgr["default"].ins.showTip("每关只能使用" + i.itemMax + "次");
    }
  };

  e.prototype.OnBtnHideItem = function () {
    this.resetCD();
    this.canTouch && (this.playAni(f.closeItemSelect), this.chgGridItemShine(!1), _vb["default"].p(_vb.VEnum3.SHORT));
  };

  e.prototype.tmpGet = function (t) {
    var e;
    var n;
    var i;

    switch (this.resetCD(), o.type) {
      case _pInfo.gameType.normal:
      case _pInfo.gameType.freedom:
        i = _levelMgr["default"].ins.updJigAndPop;
        break;

      case _pInfo.gameType.festival:
        i = _levelMgr["default"].ins.popFestival;
    }

    if (o.type == _pInfo.gameType.challenge) {
      h = t ? this.mult : 1;
      var r = (null === (n = null === (e = _cfgMgr["default"].serverCfg) || void 0 === e ? void 0 : e.daily_challenge) || void 0 === n ? void 0 : n.reward) || {
        times: 50,
        coin: 100,
        puzzle_pieces: 10
      };
      o.challageData.date.isFin && (r = {});
      var a = [];
      var s = 0;

      for (var c in r) {
        var l = r[c] * h;
        var u = this.rewItems.content.children[s];
        var p = u.parent.convertToWorldSpaceAR(u.position);
        var d = {};
        d.itemId = c;
        d.worldPos = p;
        d.value = Number(l);
        a.push(d);

        _bagMgr["default"].ins.addItem(c, l);

        s++;
      }

      a.length ? _panelMgr["default"].ins.open("ui/ui_flyAni", {
        itemDatas: a,
        hideCb: function hideCb() {
          _pInfo.chgScene(_pInfo.sceneType.main, {
            cb: i
          });
        }
      }) : _pInfo.chgScene(_pInfo.sceneType.main, {
        cb: i
      });
    } else if (this.reward) {
      // 💝 优先检查现金奖励，如果有就完全跳过游戏道具奖励
      if (_rewardMgr["default"].hasPendingCashReward()) {
        console.log("🎯 检测到现金奖励待处理，完全跳过游戏道具奖励逻辑，直接返回主界面");
        return void _pInfo.chgScene(_pInfo.sceneType.main, {
          cb: i
        });
      } // 💝 无现金奖励时，执行原有游戏道具奖励逻辑


      if (!t && 10 == this.mult) {
        return void _panelMgr["default"].ins.open("ui/ui_getReward", {
          gold: this.reward + this.baseReward
        }, {
          MaskNoHide: !0
        });
      }

      var h = t ? this.mult : 1;

      var f = _pInfo["default"].ins.getCoin();

      _pInfo["default"].ins.addCoin((this.reward + this.baseReward) * h);

      var g;
      g = o.type !== _pInfo.gameType.festival || _festivalMgr["default"].ins.isJigsawMax() ? "puzzle_pieces" : "newYear_pieces";

      _bagMgr["default"].ins.addItem(g, h);

      var y = this.baseReward * h;
      var m = this.reward * h;
      var v = h;
      var _ = this.rew1Lbl.node;
      var b = this.rew2Lbl.node;
      var w = _.parent;
      var S = this.rewItems.content.children[0];
      var T = w.convertToWorldSpaceAR(_.position);
      var I = w.convertToWorldSpaceAR(b.position);
      var D = S.parent.convertToWorldSpaceAR(S.position);

      _panelMgr["default"].ins.open("ui/ui_flyAni", {
        itemDatas: [{
          itemId: "coin",
          worldPos: T,
          value: y
        }, {
          itemId: "coin",
          worldPos: I,
          value: m
        }, {
          itemId: g,
          worldPos: D,
          value: v
        }],
        hideCb: function hideCb() {
          _pInfo.chgScene(_pInfo.sceneType.main, {
            cb: i
          });
        },
        showCoin: f
      });
    } else _pInfo.chgScene(_pInfo.sceneType.main, {
      cb: i
    });
  };

  e.prototype.OnGet = function () {
    this.tmpGet(!1);
  };

  e.prototype.OnAdGet = function () {
    this.tmpGet(!0);
  };

  e.prototype.OnNextPracice = function () {
    _pInfo.chgScene(_pInfo.sceneType.game, {
      gameType: _pInfo.gameType.practice
    });
  };

  e.prototype.chgGridItemShine = function (t) {
    if (2 == this.curItemIdx) {
      var e = o.type == _pInfo.gameType.race;
      this.gridHeadColVec.forEach(function (o) {
        if (!o.allRight || e) {
          var n = o.shineBg;
          n.active = t, t ? cc.tween(n).to(0.8, {
            opacity: 0
          }).to(0.8, {
            opacity: 100
          }).union().repeatForever().start() : cc.Tween.stopAllByTarget(n);
        }
      });
      this.gridHeadRowVec.forEach(function (o) {
        if (!o.allRight || e) {
          var n = o.shineBg;
          n.active = t;
          t ? cc.tween(n).to(0.8, {
            opacity: 0
          }).to(0.8, {
            opacity: 100
          }).union().repeatForever().start() : cc.Tween.stopAllByTarget(n);
        }
      });
    } else this.grids.forEach(function (e) {
      e.playItemTip(t);
    });
  };

  e.prototype.openLose = function () {
    0 != this.relifeTime ? _panelMgr["default"].ins.open("ui/ui_getHeart", {
      time: this.relifeTime,
      cb: this.getHeartCb.bind(this),
      closeCb: this.getHeartCloseCb.bind(this),
      gType: o.type
    }, {
      MaskNoHide: !0
    }) : this.getHeartCloseCb();
  };

  e.prototype.getHeartCb = function () {
    this.relifeTime > 0 && this.relifeTime--;
    this.playAni(f.gameRelife);
  };

  e.prototype.getHeartCloseCb = function () {
    var t = this;
    this.scheduleOnce(function () {
      var e = o.type === _pInfo.gameType.race ? "ui/ui_rePlayRace" : "ui/ui_rePlay";

      _panelMgr["default"].ins.open(e, {
        curScore: t.score
      }, {
        MaskNoHide: !0
      });
    }, 0.5);
  };

  e.prototype.onAppHide = function () {};

  e.prototype.updateScore = function (t) {
    void 0 === t && (t = 1);
    var e = this.score = this.score + t;
    this.scoreLbl.string = e + "";
  };

  e.prototype.playGirlAni = function (t) {
    t != this.curGirlAni && o.type != _pInfo.gameType.race && this.topGirlSk && (this.curGirlAni = t, this.topGirlSk.animation = t, (this.topGirlSk.loop = t == h.idle) && (this.curGirlAni = null));
  };

  e.prototype.playGirlEnd = function () {
    this.curGirlAni != h.idle && (this.curGirlAni = null, this.playGirlAni && this.playGirlAni(h.idle));
  };

  e.prototype.eventDot = function (t) {
    if (o.type == _pInfo.gameType.normal) {
      var e = _pInfo["default"].ins.getPuzzleLvl() + "";

      _idx.platform.reportEvent(_idx.ERepEvt.maindungeon, {
        iswin: t ? "胜利" : "失败",
        level: e
      });
    } else if (o.type == _pInfo.gameType.race) _idx.platform.reportEvent(_idx.ERepEvt.raceEnd, {
      score: this.score
    });else if (o.type == _pInfo.gameType.festival) {
      var n = Number(_festivalMgr["default"].ins.getFesPuzzleLv());

      _idx.platform.reportEvent(_idx.ERepEvt.fesMainPuzzle, {
        iswin: t ? "胜利" : "失败",
        id: n
      });
    } else if (o.type == _pInfo.gameType.challenge) {
      var i = o.challageData.date;
      var r = 1e4 * i.year + 100 * i.month + i.day;

      _idx.platform.reportEvent(_idx.ERepEvt.dailyChallenge, {
        iswin: t ? "胜利" : "失败",
        time: r
      });
    }
  };

  e.prototype.onDestory = function () {
    var t = cc.assetManager.getBundle("resSps");
    t.release("game/normal/top", cc.SpriteFrame);
    t.release("game/race/top", cc.SpriteFrame);
    t.release("game/race/girl", cc.Prefab);
    t.release("game/race/goose", cc.Prefab);
  };

  __decorate([G(cc.Sprite)], e.prototype, "topSp", void 0);

  __decorate([G(cc.Sprite)], e.prototype, "downSp", void 0);

  __decorate([G(cc.Sprite)], e.prototype, "gridBgSp", void 0);

  __decorate([G(cc.Node)], e.prototype, "topNode", void 0);

  __decorate([G(cc.Node)], e.prototype, "downNode", void 0);

  __decorate([G(cc.BitmapFont)], e.prototype, "font4", void 0);

  __decorate([G(cc.Camera)], e.prototype, "camera", void 0);

  __decorate([G(cc.Animation)], e.prototype, "panelAni", void 0);

  __decorate([G(cc.SpriteFrame)], e.prototype, "uHintSf", void 0);

  __decorate([G(cc.SpriteFrame)], e.prototype, "lHintSf", void 0);

  __decorate([G(cc.Prefab)], e.prototype, "gridPrefab", void 0);

  __decorate([G(cc.Node)], e.prototype, "map_node_", void 0);

  __decorate([G(cc.Node)], e.prototype, "tilesParent", void 0);

  __decorate([G(cc.Node)], e.prototype, "selectMask", void 0);

  __decorate([G(cc.Node)], e.prototype, "selectMaskBg", void 0);

  __decorate([G(cc.Node)], e.prototype, "rowHintsParent", void 0);

  __decorate([G(cc.Node)], e.prototype, "colHintsParent", void 0);

  __decorate([G(cc.Label)], e.prototype, "scoreLbl", void 0);

  __decorate([G(cc.Label)], e.prototype, "useTimeLbl", void 0);

  __decorate([G(cc.Label)], e.prototype, "consLbl", void 0);

  __decorate([G(cc.Label)], e.prototype, "cons2Lbl", void 0);

  __decorate([G(cc.Label)], e.prototype, "consBestLbl", void 0);

  __decorate([G(cc.Label)], e.prototype, "rew1Lbl", void 0);

  __decorate([G(cc.Label)], e.prototype, "rew2Lbl", void 0);

  __decorate([G(cc.Node)], e.prototype, "threeNode", void 0);

  __decorate([G(cc.Node)], e.prototype, "tenNode", void 0);

  __decorate([G(cc.Animation)], e.prototype, "oxTagAni", void 0);

  __decorate([G(cc.Prefab)], e.prototype, "fadePrefab", void 0);

  __decorate([G(cc.Node)], e.prototype, "patices", void 0);

  __decorate([G(cc.Prefab)], e.prototype, "heartsPatic", void 0);

  __decorate([G([_heart["default"]])], e.prototype, "hearts", void 0);

  __decorate([G(cc.Node)], e.prototype, "heartInfinity", void 0);

  __decorate([G(cc.Node)], e.prototype, "tipNode", void 0);

  __decorate([G(cc.Label)], e.prototype, "tipLabel", void 0);

  __decorate([G(cc.Animation)], e.prototype, "tipAni", void 0);

  __decorate([G(cc.Node)], e.prototype, "winAniNode", void 0);

  __decorate([G(cc.Node)], e.prototype, "winCircleMask", void 0);

  __decorate([G(cc.Node)], e.prototype, "winSpParent", void 0);

  __decorate([G(cc.Node)], e.prototype, "winSps", void 0);

  __decorate([G(cc.Node)], e.prototype, "winLight", void 0);

  __decorate([G(cc.SpriteFrame)], e.prototype, "singleSf", void 0);

  __decorate([G(cc.Label)], e.prototype, "levelLbl", void 0);

  __decorate([G(cc.Node)], e.prototype, "clockWarn", void 0);

  __decorate([G(cc.Node)], e.prototype, "norClock", void 0);

  __decorate([G(cc.Node)], e.prototype, "speClock", void 0);

  __decorate([G(cc.Label)], e.prototype, "clockLbl", void 0);

  __decorate([G(cc.Label)], e.prototype, "clockLbl2", void 0);

  __decorate([G(cc.Node)], e.prototype, "tipActNode", void 0);

  __decorate([G(cc.Node)], e.prototype, "tipUnActNode", void 0);

  __decorate([G(cc.Node)], e.prototype, "shareBtn", void 0);

  __decorate([G(cc.Sprite)], e.prototype, "shareIcon", void 0);

  __decorate([G(cc.Label)], e.prototype, "shareLbl", void 0);

  __decorate([G(cc.Label)], e.prototype, "noticeLbl", void 0);

  __decorate([G(cc.Animation)], e.prototype, "noticeAni", void 0);

  __decorate([G(cc.Label)], e.prototype, "random_noticeLbl", void 0);

  __decorate([G(cc.Animation)], e.prototype, "random_noticeAni", void 0);

  __decorate([G(cc.Label)], e.prototype, "full_row_colLbl", void 0);

  __decorate([G(cc.Animation)], e.prototype, "full_row_colAni", void 0);

  __decorate([G(cc.Node)], e.prototype, "itemSelectEff", void 0);

  __decorate([G(cc.Sprite)], e.prototype, "itemSelectIcon", void 0);

  __decorate([G(cc.Label)], e.prototype, "itemSelectLbl", void 0);

  __decorate([G(cc.Button)], e.prototype, "adGetBtn", void 0);

  __decorate([G(cc.Label)], e.prototype, "getBtnsp", void 0);

  __decorate([G(cc.ScrollView)], e.prototype, "rewItems", void 0);

  __decorate([G(cc.Prefab)], e.prototype, "rewItemPre", void 0);

  __decorate([G(cc.Node)], e.prototype, "stopPraNode", void 0);

  __decorate([G(cc.Node)], e.prototype, "heartBgNode", void 0);

  return o = __decorate([H], e);
}(cc.Component);

exports["default"] = Y;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/jigMenu.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e8351dgsMZDVIb8DD1BgeAK', 'jigMenu');
// scripts/jigMenu.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _res = require("res");

var _cfgMgr = require("cfgMgr");

var _lang = require("lang");

var _global = require("global");

var _jigsawMgr = require("jigsawMgr");

var _newJigMgr = require("newJigMgr");

var _panelMgr = require("panelMgr");

var _tipMgr = require("tipMgr");

var g = cc._decorator;
var y = g.ccclass;
var m = g.property;

var v = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.icons = [];
    e.idxLbls = [];
    e.pieceLbs = [];
    e.unlockNode = null;
    e.lockNode = null;
    e.finishNode = null;
    e.unPlacedLb = null;
    e.theme_id = 0;
    e.themeType = 1;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    _evts["default"].opE.on(this.onOperTap.bind(this));
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].UPDJIGSAWGAME:
        this.updateView();
    }
  };

  e.prototype.init = function (t, e) {
    var o = this;
    this.theme_id = t;
    this.themeType = e;
    this.idxLbls.forEach(function (e) {
      e.string = t + 1 + "";
    });
    var n = this.getFinAndAllNum();
    var i = n[0];
    n[1];
    this.pieceLbs.forEach(function (t) {
      t.string = i + "/105";
    });
    var r;
    var a = t + 1;
    var c = "pintu_" + a + "_1";
    var l = "pintu_" + a;
    1 === e ? r = _jigsawMgr["default"].ins : 2 === e && (r = _newJigMgr["default"].ins, c = "fes_" + a + "_1", l = "fes_" + a);
    r.isItemUnlock(t) ? this.initUnLock() : this.initLocked();
    this.IsJigsawCompleted(this.theme_id) && (c = l);
    1 === e ? a < 61 ? _res["default"].ins.getBundleByString("jigsaw").then(function (t) {
      t.load(c, cc.SpriteFrame, function (t, e) {
        !t && o.node && o.node.isValid && o.icons.forEach(function (t) {
          t.spriteFrame = e;
        });
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('jigsaw')", t);
    }) : cc.assetManager.loadRemote(_global.OssConfig.jigswawUrl + c + ".jpg", {
      ext: _global.headImgExt
    }, function (t, e) {
      if (!t && o.node && o.node.isValid) {
        var n = new cc.SpriteFrame(e);
        o.icons.forEach(function (t) {
          t.spriteFrame = n;
        });
      }
    }) : _res["default"].ins.getBundleByString("jigsaw").then(function (t) {
      t.load(c, cc.SpriteFrame, function (t, e) {
        !t && o.node && o.node.isValid && o.icons.forEach(function (t) {
          t.spriteFrame = e;
        });
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('jigsaw')", t);
    });
    this.checkUnPlacedNum();
  };

  e.prototype.updateView = function () {
    this.init(this.theme_id, this.themeType);
  };

  e.prototype.initLocked = function () {
    this.lockNode.active = !0;
    this.unlockNode.active = !1;
    this.finishNode.active = !1;
  };

  e.prototype.initUnLock = function () {
    this.lockNode.active = !1;
    this.IsJigsawCompleted(this.theme_id) ? this.initComplete() : this.initUnComplete();
  };

  e.prototype.initComplete = function () {
    this.unlockNode.active = !1;
    this.finishNode.active = !0;
  };

  e.prototype.initUnComplete = function () {
    this.unlockNode.active = !0;
    this.finishNode.active = !1;
  };

  e.prototype.IsJigsawCompleted = function (t) {
    var e;
    1 === this.themeType ? e = _jigsawMgr["default"].ins : 2 === this.themeType && (e = _newJigMgr["default"].ins);
    var o = e.checkHasFin(t);
    if (o) return o;
    var n = e.getJigsawTilesByIdx(t);

    if (105 == n.length) {
      for (var i = 0, r = n; i < r.length; i++) {
        var a = r[i];
        if (a[0] != a[1]) return !1;
      }

      return !0;
    }

    return !1;
  };

  e.prototype.getFinAndAllNum = function () {
    var t;
    1 === this.themeType ? t = _jigsawMgr["default"].ins : 2 === this.themeType && (t = _newJigMgr["default"].ins);

    for (var e = t.getJigsawTilesByIdx(this.theme_id), o = e.length, n = 0, i = 0; i < o; i++) {
      var r = e[i];
      r[0] == r[1] && n++;
    }

    t.checkHasFin(this.theme_id) && (n = 105);
    return [n, o];
  };

  e.prototype.checkUnPlacedNum = function () {
    var t;
    1 === this.themeType ? t = _jigsawMgr["default"].ins : 2 === this.themeType && (t = _newJigMgr["default"].ins);

    for (var e = t.getJigsawTilesByIdx(this.theme_id), o = e.length, n = 0, i = 0; i < o; i++) {
      var r = e[i];
      r[1] != r[0] && n++;
    }

    t.checkHasFin(this.theme_id) && (n = 0);
    var a = this.unPlacedLb;
    n > 0 ? (a.node.parent.active = !0, a.string = n + "") : a.node.parent.active = !1;
  };

  e.prototype.onBtnClick = function () {
    var t;
    var e;
    var o;
    var n = this.themeType;
    if (1 === n ? o = _jigsawMgr["default"].ins : 2 === n && (o = _newJigMgr["default"].ins), o.isItemUnlock(this.theme_id)) _panelMgr["default"].ins.open("ui/ui_jigsaw", {
      theme_id: this.theme_id,
      themeType: this.themeType
    });else {
      var i = _cfgMgr["default"].serverCfg;
      var r = (null === (e = null === (t = null == i ? void 0 : i.lock_rules) || void 0 === t ? void 0 : t.main_line_lock) || void 0 === e ? void 0 : e.puzzle_line_val) || 0;
      var a = o.isPieceEnough(this.theme_id) ? _lang.lang[30001].format(r) : "拼图未解锁";

      _tipMgr["default"].ins.showTip(a);
    }
  };

  __decorate([m([cc.Sprite])], e.prototype, "icons", void 0);

  __decorate([m([cc.Label])], e.prototype, "idxLbls", void 0);

  __decorate([m([cc.Label])], e.prototype, "pieceLbs", void 0);

  __decorate([m(cc.Node)], e.prototype, "unlockNode", void 0);

  __decorate([m(cc.Node)], e.prototype, "lockNode", void 0);

  __decorate([m(cc.Node)], e.prototype, "finishNode", void 0);

  __decorate([m(cc.Label)], e.prototype, "unPlacedLb", void 0);

  return __decorate([y], e);
}(cc.Component);

exports["default"] = v;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/global.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c75109C1jBJX7wBq6ETFM3I', 'global');
// scripts/global.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.OssConfig = exports.headImgExt = void 0;

var _sound = require("sound");

cc.Button.prototype.tE = cc.Button.prototype._onTouchEnded;
cc.Button.prototype.cS = !0;

cc.Button.prototype._onTouchEnded = function (t) {
  this.interactable && this.enabledInHierarchy && this._pressed && this.cS && _sound["default"].ins.play(_sound["default"].CLICK), this.tE(t);
};

cc.macro.ENABLE_MULTI_TOUCH = !0;
cc.macro.ENABLE_WEBGL_ANTIALIAS = !0;
exports.headImgExt = ".head";
cc.assetManager.downloader.register(exports.headImgExt, function (t, e, o) {
  o(null, t);
});
cc.assetManager.parser.register(exports.headImgExt, function (t, e, o) {
  var n = new Image();

  function i() {
    n.removeEventListener("load", i), n.removeEventListener("error", r), o && o(null, n);
  }

  function r() {
    n.removeEventListener("load", i), n.removeEventListener("error", r), o && o(new Error(t));
  }

  "file:" !== window.location.protocol && (n.crossOrigin = "anonymous");
  n.addEventListener("load", i);
  n.addEventListener("error", r);
  n.src = t;
  return n;
});
cc.assetManager.factory.register(exports.headImgExt, function (t, e, o, n) {
  var i = null;
  var r = null;

  try {
    (i = new cc.Texture2D())._uuid = t;
    i._nativeUrl = t;
    i._nativeAsset = e;
  } catch (a) {
    r = a;
  }

  n && n(r, i);
});

var i = function () {
  function t() {}

  t._baseUrl = "https://tjkj300.oss-cn-shenzhen.aliyuncs.com/web/sudoku/";
  t.configUrl = t._baseUrl + "config.json";
  t.configDevUrl = t._baseUrl + "config-dev.json";
  t.levelUrl = t._baseUrl + "level/";
  t.chapterUrl = t._baseUrl + "chapter/";
  t.jigswawUrl = t._baseUrl + "jigsaw/";
  t.challengeUrl = t._baseUrl + "challenge/";
  t.challengeWormUrl = t._baseUrl + "challenge/worm/";
  t.skinUrl = t._baseUrl + "skin/";
  t.skinConfigUrl = t._baseUrl + "skin/cfg/config.json";
  return t;
}();

exports.OssConfig = i;

var r = function () {
  function t() {}

  t.getCharXOffset = function () {
    return 0;
  };

  t.chapterCount = 18;
  t.jisawCount = 40;
  t.loadToRace = 0;
  t.challengeLv = 0;
  t.isPopNewGift = !1;
  t.twoDaysLeft = !1;
  t.loadCb = !1;
  return t;
}();

exports["default"] = r;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/jigsaw.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1e254roCXNBXbdO0aWr4kpu', 'jigsaw');
// scripts/jigsaw.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _res = require("res");

var _sound = require("sound");

var _time = require("time");

var _vb = require("vb");

var _cfgMgr = require("cfgMgr");

var _lang = require("lang");

var _global = require("global");

var _bagMgr = require("bagMgr");

var _festivalMgr = require("festivalMgr");

var _jigsawMgr = require("jigsawMgr");

var _newJigMgr = require("newJigMgr");

var _panelMgr = require("panelMgr");

var _pInfo = require("pInfo");

var _loading = require("loading");

var _main = require("main");

var T = cc._decorator;
var I = T.ccclass;
var D = T.property;
var P = 79 - 34.5 * Math.tan(Math.PI / 180 * 30) + 0.4;

var k = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.ringNode = null;
    e.tilePre = null;
    e.shadow0 = null;
    e.tilesNode = null;
    e.menuNode = null;
    e.scrollView = null;
    e.finImg = null;
    e.dragTag = null;
    e.lockNode = null;
    e.timeLb = null;
    e.bgBtn = null;
    e.getLb = null;
    e.timeAd = null;
    e.lockImg = null;
    e.tileLbNode = null;
    e.cellNode = null;
    e.cellSpr = null;
    e.hintNum = null;
    e.bgNum = null;
    e.bgNode = null;
    e.tipLb = null;
    e.bgBtnNode = null;
    e.getPieceSp = null;
    e.btnReset = null;
    e.jig_2d = null;
    e.tile_a = null;
    e.tile_p = [];
    e.tiles = {};
    e.tiles_idle = [];
    e.isAllRight = !1;
    e.is_hinting = !1;
    e.idle_tile_select = null;
    e.tileSelect = null;
    e.tilePosId = -1;
    e.scroll_dir = 0;
    e.drag_tile = null;
    e.dragPutPosId = -1;
    e.guideF = null;
    e.isUnlock = !1;
    e.theme_id = -1;
    e.is_init = !1;
    e.jigTiles = [];
    e.defaultShowTime = 30;
    e.showBgEndTime = 0;
    e.adMaxTime = 5;
    e.adMaxTime2 = 5;
    e.themeType = 1;
    e.eventFunc = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t;
    var e;
    var o = _cfgMgr["default"].serverCfg;
    var n = (null === (e = null === (t = null == o ? void 0 : o.lock_rules) || void 0 === t ? void 0 : t.main_line_lock) || void 0 === e ? void 0 : e.puzzle_line_val) || 0;
    this.tipLb.string = _lang.lang[30001].format(n);

    for (var i = 0, r = o.props.set; i < r.length; i++) {
      var s = r[i];
      "puzzle_background" == s.key ? s.limit_time && (this.defaultShowTime = s.limit_time, this.timeLb.node.active = !1, this.timeAd.active = !0) : "puzzle_pieces" == s.key ? s.daily_limit_times && (this.adMaxTime = Number(s.daily_limit_times) || 5) : "newYear_pieces" == s.key && s.daily_limit_times && (this.adMaxTime2 = Number(s.daily_limit_times) || 5);
    }

    this.eventFunc = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eventFunc);

    this.scrollView._registerEvent = function () {};

    this.scrollView._unregisterEvent = function () {};

    this.tile_a = this.tilesNode;
    this.scrollView.node.on("scrolling", this.chgVisItems, this);
    this.tileLbNode.active = !1;
    this.btnReset.active = !1;
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].UPDJIGSAWGAME:
        this.updateView();
        break;

      case _evts["default"].UPD_PANEL:
      case _evts["default"].UPD_MAIN_RED:
        this.upItemNum();
    }
  };

  e.prototype.start = function () {
    this.dragTag.zIndex = -1e3;
    this.dragTag.active = !1;
  };

  e.prototype.onEnable = function () {};

  e.prototype.onDisable = function () {};

  e.prototype.upItemNum = function () {
    1 === this.themeType ? this.initGetTime() : 2 === this.themeType && this.initGetTime2();
    this.hintNum.string = _bagMgr["default"].ins.getItemCount("puzzle_notice") + "";
    this.bgNum.string = _bagMgr["default"].ins.getItemCount("puzzle_background") + "";
  };

  e.prototype.updateView = function () {
    var t;
    1 === this.themeType ? t = _jigsawMgr["default"].ins : 2 === this.themeType && (t = _newJigMgr["default"].ins);
    this.jigTiles = t.getJigsawTilesByIdx(this.theme_id);
    this.scrollView.content.removeAllChildren();
    this.tiles_idle = [];
    this.RefreshIdleItems(!0);
    this.isUnlock = t.isItemUnlock(this.theme_id);
    this.isUnlock ? this.initUnLock() : this.initLocked();
    this.upItemNum();
  };

  e.prototype.getIsUnlock = function () {
    return this.isUnlock;
  };

  e.prototype.initItem = function (t, e) {
    var o = this;
    this.themeType = e;
    this.theme_id = t;
    var n;
    var i = t + 1;
    var r = "puzzle_pieces";
    var a = "pintu_" + i + "_1";
    1 === e ? (n = _jigsawMgr["default"].ins, this.showBgEndTime = _pInfo["default"].ins.getJigsawBgEndTimesByIdx(t), this.bgBtnNode.active = !0) : 2 === e && (n = _newJigMgr["default"].ins, this.showBgEndTime = _pInfo["default"].ins.getNewJigBgEndTimesByIdx(t), r = "newYear_pieces", a = "fes_" + i + "_1", this.bgBtnNode.active = !1);
    this.jigTiles = n.getJigsawTilesByIdx(t);
    this.isUnlock = n.isItemUnlock(t);
    this.isUnlock ? this.initUnLock() : this.initLocked();
    !this.isUnlock && n.isPieceEnough(t) ? this.tipLb.node.active = !0 : this.tipLb.node.active = !1;
    this.upItemNum();
    1 === e && (i < 61 ? _res["default"].ins.getBundleByString("jigsaw").then(function (t) {
      t.load(a, cc.SpriteFrame, function (t, e) {
        !t && o.node && o.node.isValid && (o.lockImg.spriteFrame = e);
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('jigsaw')", t);
    }) : cc.assetManager.loadRemote(_global.OssConfig.jigswawUrl + "pintu_" + i + "_1.jpg", {
      ext: _global.headImgExt
    }, function (t, e) {
      !t && o.node && o.node.isValid && (o.lockImg.spriteFrame = new cc.SpriteFrame(e));
    }));

    _res["default"].ins.getBundleByString("resSps").then(function (t) {
      t.load("item/" + r, cc.SpriteFrame, function (t, e) {
        !t && o.node && o.node.isValid && (o.getPieceSp.spriteFrame = e);
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });
  };

  e.prototype.initGetTime = function () {
    var t = _pInfo["default"].ins.getJigsawAdTimes();

    var e = this.adMaxTime - t;
    this.getLb.string = e + "";
  };

  e.prototype.initGetTime2 = function () {
    var t = _pInfo["default"].ins.getNewJigAdTimes();

    var e = this.adMaxTime2 - t;
    this.getLb.string = e + "";
  };

  e.prototype.initLocked = function () {
    this.finImg.node.active = !0;
    this.menuNode.active = !1;
    this.lockNode.active = !0;
    this.lockImg.node.active = !0;
    this.bgNode.y = 326;
    this.bgNode.height = 790;
  };

  e.prototype.initUnLock = function () {
    var t = this;
    var e = this.theme_id + 1;
    var o = "pintu_" + e;
    1 === this.themeType ? e < 61 ? _res["default"].ins.getBundleByString("jigsaw").then(function (e) {
      e.load(o, cc.Texture2D, function (e, o) {
        !e && t.node && t.node.isValid && t.initUnlockWithImg(o);
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('jigsaw')", t);
    }) : cc.assetManager.loadRemote(_global.OssConfig.jigswawUrl + "pintu_" + e + ".jpg", {
      ext: _global.headImgExt
    }, function (e, o) {
      !e && t.node && t.node.isValid && t.initUnlockWithImg(o);
    }) : 2 === this.themeType && (o = "fes_" + e, _res["default"].ins.getBundleByString("jigsaw").then(function (e) {
      e.load(o, cc.Texture2D, function (e, o) {
        !e && t.node && t.node.isValid && t.initUnlockWithImg(o);
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('jigsaw')", t);
    }));
  };

  e.prototype.initUnlockWithImg = function (t) {
    this.jig_2d = t;
    this.finImg.spriteFrame = new cc.SpriteFrame(t);
    this.lockNode.active = !1;
    this.menuNode.active = !0;
    this.lockImg.node.active = !1;
    this.isAllRight = this.IsJigsawCompleted(this.theme_id);
    this.isAllRight ? this.initComplete() : this.initUnComplete();
  };

  e.prototype.initComplete = function () {
    var t;
    this.lockImg.node.active = !1;
    this.finImg.node.active = !0;
    this.scrollView.node.parent.active = !1;
    this.menuNode.active = !1;
    this.lockNode.active = !1;
    this.btnReset.active = !0;
    this.bgNode.y = 326;
    this.bgNode.height = 790;
    1 === this.themeType ? t = _jigsawMgr["default"].ins : 2 === this.themeType && (t = _newJigMgr["default"].ins);
    t.checkSetFin(this.theme_id);
  };

  e.prototype.initUnComplete = function () {
    this.is_init || (this.lockImg.node.active = !1, this.scrollView.node.parent.active = !0, this.menuNode.active = !0, this.lockNode.active = !1, this.initTilePos(), this.initAroundTiles(), this.InitTiles(), this.RefreshIdleItems(!0), this.isShowBging(), this.is_init = !0, this.bgNode.y = 396, this.bgNode.height = 960);
    var t = this.showBgEndTime - _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);
    this.lockNode.active = !(t < 0);
  };

  e.prototype.isShowBging = function () {
    (this.showBgEndTime - _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3)) < 0 ? (this.finImg.node.active = !1, this.lockNode.active = !1, this.bgBtn.enabled = !0, this.timeLb.string = this.defaultShowTime + "s", this.timeLb.node.active = !1, this.timeAd.active = !0, this.unschedule(this.beginShow)) : (this.bgBtn.enabled = !1, this.finImg.node.active = !0, this.lockNode.active = !0, this.timeAd.active = !1, this.timeLb.node.active = !0, this.schedule(this.beginShow, 1), this.beginShow());
  };

  e.prototype.lockedToUnlock = function () {
    this.isUnlock || (this.isUnlock = !0, this.lockNode.active = !1, this.initUnLock());
  };

  e.prototype.InitTiles = function () {
    for (var t = 0, e = this.jigTiles; t < e.length; t++) {
      var o = e[t];
      var n = o[0];
      var i = o[1];
      -1 != i && this.cTile(n, i, !1);
    }
  };

  e.prototype.addAroundTiles = function (t, e, o, n) {
    var i = new cc.Node();
    i.addComponent(cc.Sprite).spriteFrame = this.shadow0;
    i.position = cc.v3(t + -4, e + -9);
    i.zIndex = -1;
    i.parent = this.tile_a;
    var r = this.cTileSprite(o, n);
    r.position = cc.v3(t, e);
    r.scale = 1.02;
    r.zIndex = 1;
    r.parent = this.tile_a;
  };

  e.prototype.initAroundTiles = function () {
    for (var t = 0; t < 11; t++) {
      var e = this.getTilePos(t);
      this.addAroundTiles(e.x + 49.5, -e.y - 44.5 + 69, e.x, e.y - 69);
    }

    for (var o = [99, 89, 100, 91, 101, 93, 102, 95, 103, 97, 104], n = 0; n < 11; n++) {
      t = o[n], e = this.getTilePos(t), this.addAroundTiles(e.x + 49.5, -e.y - 44.5 - 69, e.x, e.y + 69);
    }

    var i = [0, 11, 22, 33, 44, 55, 66, 77, 88, 99, 99];

    for (n = 0; n < 11; n++) {
      t = i[n], e = this.getTilePos(t), 10 == n ? this.addAroundTiles(e.x + 49.5 - P, -e.y - 44.5 - 34.5, e.x - P, e.y + 34.5) : this.addAroundTiles(e.x + 49.5 - P, -e.y - 44.5 + 34.5, e.x - P, e.y - 34.5);
    }

    var r = [10, 21, 32, 43, 54, 65, 76, 87, 98, 104, 104];

    for (n = 0; n < 11; n++) {
      t = r[n], e = this.getTilePos(t), 10 == n ? this.addAroundTiles(e.x + 49.5 + P, -e.y - 44.5 - 34.5, e.x + P, e.y + 34.5) : this.addAroundTiles(e.x + 49.5 + P, -e.y - 44.5 + 34.5, e.x + P, e.y - 34.5);
    }
  };

  e.prototype.cIdleTile = function (t) {
    var e = new cc.Node(t.toString());
    e.scale = 1.01;
    e.setContentSize(cc.size(79, 69));
    this.addTileShadow(e);
    var o = this.getTilePos(t);
    this.cTileSprite(o.x, o.y).parent = e;
    return e;
  };

  e.prototype.RefreshIdleItems = function (t, e) {
    if (void 0 === e && (e = !1), !this.isAllRight && this.jig_2d) {
      for (var o = this.jigTiles, n = {}, i = 0, r = this.tiles_idle; i < r.length; i++) {
        n[(g = r[i]).name] = g;
      }

      this.tiles_idle = [];

      for (var a = 0, s = 0, c = o; s < c.length; s++) {
        var l = c[s];
        var u = l[0];

        if (-1 == l[1]) {
          var p = n[f = u.toString()];
          var d = null;
          p ? (d = p, n[f] = void 0) : (d = this.cIdleTile(u), t || (d.opacity = 0, cc.tween(d).to(0.5, {
            opacity: 255
          }).start()), d.parent = this.scrollView.content);
          d.setPosition(50 + 100 * a++, 0);
          this.tiles_idle.push(d);
        }
      }

      var h = Math.max(100 * this.tiles_idle.length, this.scrollView.node.getContentSize().width + 1);

      for (var f in this.scrollView.content.setContentSize(cc.size(h, 110)), n) {
        var g;
        (g = n[f]) && g.destroy();
      }

      this.chgVisItems();
    }
  };

  e.prototype.chgVisItems = function () {
    var t = this.scrollView.content;
    var e = t.children;
    if (0 != e.length) for (var o = t.parent.getContentSize(), n = -o.width / 2 - 50, i = o.width / 2 + 50, r = t.x, a = 0, s = e; a < s.length; a++) {
      var c = s[a];
      var l = c.x + r;
      var u = l >= n && l <= i;
      c.active = u;
    }
  };

  e.prototype.ttIdleTile = function (t) {
    if (this.tiles_idle.length <= 0) return null;

    var e = _main["default"].ins.getWorldPointByTouch(t);

    var o = this.scrollView.content.convertToNodeSpaceAR(e);
    if (o.y < -45 || o.y > 45) return null;

    for (var n = 0, i = this.tiles_idle; n < i.length; n++) {
      var r = i[n];
      var a = r.position;
      if (o.x > a.x - 45 && o.x < a.x + 45) return r;
    }

    return null;
  };

  e.prototype.tileFlyView = function (t, e) {
    var o = this.cDragTile(e);
    o.position = t;
    o.parent = this.node;
    var n = this.scrollView.node.parent.position;
    cc.tween(o).to(0.5, {
      position: n
    }).to(0.15, {
      opacity: 0
    }).start();
  };

  e.prototype.cDragTile = function (t) {
    _vb["default"].p(_vb.VEnum3.SHORT);

    var e = new cc.Node(t.toString());
    e.scale = 1.01;
    e.setContentSize(cc.size(79, 69));
    this.addTileShadow(e);
    var o = this.getTilePos(t);
    this.cTileSprite(o.x, o.y).parent = e;
    return e;
  };

  e.prototype.setTileVis = function (t, e) {
    t.di.active = e;
    t.img.active = e;
  };

  e.prototype.cTile = function (t, e, o) {
    if (void 0 === o && (o = !0), !this.getTileByPos(e)) {
      var n = this.tile_p[e];
      var i = new cc.Node();
      i.addComponent(cc.Sprite).spriteFrame = this.shadow0;
      i.position = cc.v3(n.x, n.y - 7);
      i.parent = this.tile_a;
      var r = this.getTilePos(t);
      var a = this.cTileSprite(r.x, r.y);
      a.position = cc.v3(n.x, n.y);
      a.scale = 1.02;
      a.zIndex = 1;
      a.parent = this.tile_a;
      this.tiles[e] = {
        di: i,
        img: a,
        tile_id: t
      };
      o && e == t && (this.playTrueAni(n), _vb["default"].p(_vb.VEnum3.SHORT));
      this.reGuide();
    }
  };

  e.prototype.delTile = function (t) {
    var e = this.tiles[t];
    e && (e.di.destroy(), e.img.destroy(), this.tiles[t] = null);
  };

  e.prototype.moveTile = function (t, e, o) {
    var n = this.tiles[t];

    if (n && n.tile_id == o) {
      var i = this.tile_p[e];
      n.di.position = cc.v3(i.x, i.y - 7);
      n.img.position = cc.v3(i.x, i.y);
      this.tiles[e] = n;
      this.tiles[t] = null;
      e == o && (this.playTrueAni(i), _vb["default"].p(_vb.VEnum3.SHORT));
    }
  };

  e.prototype.getTileByPos = function (t) {
    return this.tiles[t];
  };

  e.prototype.cTileSprite = function (t, e) {
    var o = this.jig_2d.width;
    var n = this.jig_2d.height;
    var i = t + 10;
    var r = e + 10;
    var a = cc.instantiate(this.tilePre);
    a.getComponent(cc.Sprite).getMaterial(0).setProperty("texture2", this.jig_2d);
    var s = i / o * 255;
    var c = r / n * 255;
    var l = cc.color();
    l.r = s > 0 ? s : 0;
    l.g = c > 0 ? c : 0;
    var u = 0;
    s > 0 && c <= -21 ? u = 51 : s > 0 && c <= -8 ? u = 102 : s <= -18 && c <= -8 ? u = 153 : s <= -18 && c > 0 && (u = 204);
    l.b = u + 5;
    a.color = l;
    return a;
  };

  e.prototype.getTilePos = function (t) {
    var e = Math.floor(t / 11);
    var o = t % 11;
    t > 99 && (o += t - 99);
    var n = P * o;
    var i = 69 * e;
    o % 2 == 1 && (i += 34.5);
    return cc.v2(n, i);
  };

  e.prototype.initTilePos = function () {
    if (!(this.tile_p.length > 0)) for (var t = 0; t < 105; t++) {
      var e = this.getTilePos(t);
      var o = e.x + 49.5;
      var n = -e.y - 44.5;
      var i = new cc.Node();
      i.color = cc.color(52, 156, 193);
      var r = i.addComponent(cc.Label);
      r.string = t + "";
      r.font = _loading.DEFAULTFONT;
      i.parent = this.tileLbNode;
      i.position = cc.v3(o, n + 3);
      var a = new cc.Node();
      a.addComponent(cc.Sprite).spriteFrame = this.cellSpr;
      a.scale = 0.93;
      a.parent = this.cellNode;
      a.position = cc.v3(o, n, 0);
      this.tile_p.push(cc.v2(o, n));
    }
  };

  e.prototype.tTilePosID = function (t) {
    var e = _main["default"].ins.getWorldPointByTouch(t);

    var o = this.tilesNode.convertToNodeSpaceAR(e);
    if (o.x <= 0 || o.x >= 694 || o.y >= 0 || o.y <= -711) return -1;

    for (var n = 0; n < this.tile_p.length; n++) {
      if (cc.Vec2.distance(o, this.tile_p[n]) <= 34.5) return n;
    }

    return -1;
  };

  e.prototype.onTBe = function (t) {
    if (this.isAllRight || this.is_hinting) return !0;
    this.tileSelect = null;
    this.tilePosId = -1;
    this.idle_tile_select = null;
    this.drag_tile = null;
    this.scroll_dir = 0;
    var e = this.tTilePosID(t.touch);

    if (-1 != e) {
      var o = this.getTileByPos(e);
      if (o && o.tile_id != e) return this.tileSelect = o, this.tilePosId = e, !1;
    }

    if (this.tiles_idle.length > 0) {
      var n = _main["default"].ins.getWorldPointByTouch(t.touch);

      var i = this.scrollView.node.parent.convertToNodeSpaceAR(n);
      if (this.scrollView.node.getBoundingBox().contains(i)) return this.scrollView._onTouchBegan(t), this.idle_tile_select = this.ttIdleTile(t.touch), this.idle_tile_select && (this.idle_tile_select.scale = 1.01 * 1.1), !1;
    }

    return !0;
  };

  e.prototype.onTM = function (t) {
    if (this.isAllRight || this.is_hinting) return !0;

    if (0 == this.scroll_dir) {
      var e = t.touch;
      var o = e.getStartLocationInView();
      var n = e.getLocationInView();

      if (cc.Vec2.distance(o, n) > 5) {
        var i = n.sub(o);
        var r = 57.2957 * Math.atan2(i.y, i.x);
        r > 30 && r < 150 ? this.scroll_dir = 2 : r < -30 && r > -150 ? this.scroll_dir = 2 : r >= -30 && r <= 30 ? this.scroll_dir = 1 : (r <= -150 || r >= 150) && (this.scroll_dir = 1);
        this.tileSelect ? this.drag_tile || 0 == this.scroll_dir || (this.drag_tile = this.cDragTile(this.tileSelect.tile_id), this.drag_tile.scale = 0.88, this.drag_tile.parent = this.node, this.setTileVis(this.tileSelect, !1)) : 1 == this.scroll_dir ? this.idle_tile_select && (this.idle_tile_select.scale = 1.01) : 2 == this.scroll_dir && this.idle_tile_select && !this.drag_tile && (this.drag_tile = this.cDragTile(Number(this.idle_tile_select.name)), this.drag_tile.parent = this.node, this.idle_tile_select.active = !1);
      }
    }

    var a = _main["default"].ins.getWorldPointByTouch(t.touch);

    var s = this.scrollView.node.parent.convertToNodeSpaceAR(a);
    var c = this.scrollView.node.getBoundingBox().contains(s);

    if (this.tileSelect || 1 != this.scroll_dir || !c || this.scrollView._onTouchMoved(t), this.drag_tile) {
      var l = _main["default"].ins.getWorldPointByTouch(t.touch);

      var u = this.node.convertToNodeSpaceAR(l);
      this.drag_tile.position = cc.v3(u.x, u.y + 195);
      var p = this.node.convertToWorldSpaceAR(this.drag_tile.position);
      var d = (o = this.tilesNode.convertToNodeSpaceAR(p), 0);
      var h = -1;
      var f = cc.v3();

      if (o.x > 0 && o.x < 694 && o.y < 0 && o.y > -711) {
        for (var g = this.tile_p.length - 1; g >= 0; g--) {
          if (f.x = this.tile_p[g].x, f.y = this.tile_p[g].y, -1 == h) h = g, d = cc.Vec2.distance(o, f);else {
            var y = cc.Vec2.distance(o, f);
            y < d && (d = y, h = g);
          }
        }

        -1 != h && d > 50 && (h = -1);
      }

      this.dragPutPosId = h;
      -1 == h ? this.dragTag.active = !1 : (this.dragTag.active = !0, this.dragTag.position = cc.v3(this.tile_p[h].x, this.tile_p[h].y));
    }
  };

  e.prototype.onTE = function (t) {
    if (this.isAllRight || this.is_hinting) return !0;
    this.tileSelect || 1 != this.scroll_dir || this.scrollView._onTouchEnded(t);
    this.putDragTile();
    this.idle_tile_select && (this.idle_tile_select.scale = 1.01, this.idle_tile_select = null);
  };

  e.prototype.onTC = function (t) {
    if (this.isAllRight || this.is_hinting) return !0;
    this.tileSelect || 1 != this.scroll_dir || this.scrollView._onTouchCancelled(t);
    this.putDragTile();
    this.idle_tile_select && (this.idle_tile_select.scale = 1.01, this.idle_tile_select = null);
  };

  e.prototype.putDragTile = function () {
    if (this.drag_tile) {
      var t = Number(this.drag_tile.name);
      this.dragTag.active = !1;
      var e = this.drag_tile;

      if (cc.tween(this.drag_tile).to(0.15, {
        opacity: 0
      }).call(function () {
        e.destroy();
      }).start(), this.drag_tile = null, this.is_hinting = !1, this.idle_tile_select) {
        if (this.idle_tile_select.scale = 1.01, this.idle_tile_select.active = !0, this.idle_tile_select.opacity = 0, cc.tween(this.idle_tile_select).to(0.3, {
          opacity: 255
        }).start(), this.idle_tile_select = null, -1 == this.dragPutPosId) return;
        var o = this.getTileByPos(this.dragPutPosId);
        return o ? void (o.tile_id == this.dragPutPosId || (this.modJigTile(this.theme_id, o.tile_id, -1, !1), this.delTile(this.dragPutPosId), this.modJigTile(this.theme_id, t, this.dragPutPosId), this.cTile(t, this.dragPutPosId), this.RefreshIdleItems(!1, !0))) : (this.modJigTile(this.theme_id, t, this.dragPutPosId), this.cTile(t, this.dragPutPosId), this.RefreshIdleItems(!1), void (t == this.dragPutPosId && this.checkAllR()));
      }

      if (this.tileSelect && (this.setTileVis(this.tileSelect, !0), this.tileSelect = null, this.tilePosId != this.dragPutPosId)) {
        var n = this.getTileByPos(this.dragPutPosId);
        if (-1 == this.dragPutPosId || n && n.tile_id == this.dragPutPosId) return this.modJigTile(this.theme_id, t, -1), this.delTile(this.tilePosId), void this.RefreshIdleItems(!1);

        if (n && n.tile_id != this.dragPutPosId) {
          var i = n.tile_id;
          this.modJigTile(this.theme_id, n.tile_id, -1, !1);
          this.delTile(this.dragPutPosId);
          this.modJigTile(this.theme_id, t, this.dragPutPosId, !1);
          this.moveTile(this.tilePosId, this.dragPutPosId, t);
          this.modJigTile(this.theme_id, i, this.tilePosId);
          this.cTile(i, this.tilePosId);
          return void this.checkAllR();
        }

        -1 != this.tilePosId && this.tilePosId != this.dragPutPosId && (this.modJigTile(this.theme_id, t, this.dragPutPosId), this.moveTile(this.tilePosId, this.dragPutPosId, t), t == this.dragPutPosId && this.checkAllR());
      }
    }
  };

  e.prototype.OnBtnHint = function () {
    if (!(this.is_hinting || this.isAllRight || this.tileSelect || this.idle_tile_select)) {
      var t = this.tiles_idle.length > 0;
      if (!t) for (var e in this.tiles) {
        var o = this.tiles[e];

        if (o && Number(e) != o.tile_id) {
          t = !0;
          break;
        }
      }
      t ? _bagMgr["default"].ins.getItemCount("puzzle_notice") > 0 ? (_bagMgr["default"].ins.useItem("puzzle_notice"), this._doHint()) : _panelMgr["default"].ins.open("ui/ui_getItem", {
        itemId: "puzzle_notice"
      }) : this.onBtnGet();
    }
  };

  e.prototype._doHint = function () {
    var t = this;

    for (var e in this.is_hinting = !1, this.tiles) {
      if (l = this.tiles[e]) {
        var o = Number(e);

        if (o != l.tile_id) {
          this.tilePosId = o;
          this.tileSelect = l;
          this.dragPutPosId = l.tile_id;
          break;
        }
      }
    }

    if (this.tileSelect) {
      this.drag_tile = this.cDragTile(this.tileSelect.tile_id);
      this.drag_tile.parent = this.node;
      this.setTileVis(this.tileSelect, !1);
      var n = this.tilesNode.convertToWorldSpaceAR(this.tile_p[this.tilePosId]);
      var i = this.node.convertToNodeSpaceAR(n);
      var r = this.tilesNode.convertToWorldSpaceAR(this.tile_p[this.dragPutPosId]);
      var a = this.node.convertToNodeSpaceAR(r);
      this.drag_tile.position = cc.v3(i.x, i.y);
      cc.tween(this.drag_tile).to(0.5, {
        x: a.x,
        y: a.y
      }).call(function () {
        t.putDragTile();
      }).start();
      return void (this.is_hinting = !0);
    }

    for (var s = 0, c = this.tiles_idle; s < c.length; s++) {
      var l = c[s];
      this.idle_tile_select = l;
      var u = Number(l.name);
      this.dragPutPosId = u;
      this.drag_tile = this.cDragTile(u);
      this.drag_tile.parent = this.node;
      i = this.node.convertToNodeSpaceAR(l.convertToWorldSpaceAR(cc.Vec2.ZERO));
      l.active || (i.x = this.scrollView.node.parent.x, i.y = this.scrollView.node.parent.y);
      a = this.node.convertToNodeSpaceAR(this.tilesNode.convertToWorldSpaceAR(this.tile_p[this.dragPutPosId]));
      this.drag_tile.setPosition(i.x, i.y);
      cc.tween(this.drag_tile).to(0.5, {
        x: a.x,
        y: a.y
      }).call(function () {
        t.putDragTile();
      }).start();
      this.is_hinting = !0;
      l.active = !1;
      break;
    }
  };

  e.prototype.getCanHint = function () {
    for (var t in this.tiles) {
      var e = this.tiles[t];
      if (e && Number(t) != e.tile_id) break;
    }
  };

  e.prototype.addTileShadow = function (t) {
    var e = new cc.Node();
    e.addComponent(cc.Sprite).spriteFrame = this.shadow0;
    e.position = cc.v3(0, -5);
    e.parent = t;
  };

  e.prototype.playTrueAni = function (t) {
    _festivalMgr["default"].ins.updPro(_festivalMgr.fesTaskKey.finishPuzzle, 1);

    _sound["default"].ins.play(_sound["default"].FINISH_PUZZLE);

    1 === this.themeType ? _idx.platform.reportEvent(_idx.ERepEvt.partJigsaw) : 2 === this.themeType && _idx.platform.reportEvent(_idx.ERepEvt.fesJigNum);
    var e = this.ringNode;
    var o = this.tilesNode.convertToWorldSpaceAR(t);
    var n = this.node.convertToNodeSpaceAR(o);
    e.active = !0;
    e.setPosition(n);
    e.parent = this.node;
    cc.tween(e).set({
      scale: 0.88,
      opacity: 255
    }).to(0.2, {
      scale: 1.2,
      opacity: 0
    }).call(function () {
      e.active = !1;
    }).start();
  };

  e.prototype.checkAllR = function () {
    if (!this.isAllRight && (this.isAllRight = this.IsJigsawCompleted(this.theme_id), this.isAllRight)) {
      this.tilesNode.active = !1;
      this.finImg.node.active = !0;
      this.finImg.node.opacity = 0;
      cc.tween(this.finImg.node).to(1, {
        opacity: 255
      }).start();
      this.scrollView.node.active = !1;
      this.menuNode.active = !1;
      this.lockNode.active = !1;
      this.btnReset.active = !0;
      this.bgNode.y = 326;
      this.bgNode.height = 790;
      var t = this.theme_id + "";

      _idx.platform.reportEvent(_idx.ERepEvt.finishHoleJigsaw, {
        idx: t
      });

      var e = void 0;
      1 === this.themeType ? e = _jigsawMgr["default"].ins : 2 === this.themeType && (e = _newJigMgr["default"].ins);
      e.setFinfishJigsaw(this.theme_id);

      _panelMgr["default"].ins.open("ui/ui_jigFinish", {
        themeId: this.theme_id,
        themeType: this.themeType
      });
    }
  };

  e.prototype.IsJigsawCompleted = function (t) {
    var e;
    1 === this.themeType ? e = _jigsawMgr["default"].ins : 2 === this.themeType && (e = _newJigMgr["default"].ins);
    var o = e.checkHasFin(t);
    if (o) return o;
    var n = e.getJigsawTilesByIdx(t);

    if (105 == n.length) {
      for (var i = 0, r = n; i < r.length; i++) {
        var a = r[i];
        if (a[0] != a[1]) return !1;
      }

      return !0;
    }

    return !1;
  };

  e.prototype.ShowGuide = function () {};

  e.prototype.reGuide = function () {
    this.guideF && (this.guideF.destroy(), this.guideF = null);
  };

  e.prototype.onBtnBg = function () {
    if (_bagMgr["default"].ins.getItemCount("puzzle_background") > 0) {
      _bagMgr["default"].ins.useItem("puzzle_background");

      var t = _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);
      this.showBgEndTime = this.defaultShowTime + t;
      1 === this.themeType ? _pInfo["default"].ins.setJigsawBgEndTimesByIdx(this.theme_id, this.showBgEndTime) : 2 === this.themeType && _pInfo["default"].ins.setNewJigBgEndTimesByIdx(this.theme_id, this.showBgEndTime);
      this.bgBtn.enabled = !1;
      this.finImg.node.active = !0;
      this.lockNode.active = !0;
      this.timeAd.active = !1;
      this.timeLb.node.active = !0;
      this.schedule(this.beginShow, 1);
    } else _panelMgr["default"].ins.open("ui/ui_getItem", {
      itemId: "puzzle_background"
    });
  };

  e.prototype.beginShow = function () {
    var t = _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);
    var e = this.showBgEndTime - t;
    if (e < 0) return this.finImg.node.active = !1, this.lockNode.active = !1, e = 30, this.bgBtn.enabled = !0, this.timeLb.string = this.defaultShowTime + "s", this.timeLb.node.active = !1, this.timeAd.active = !0, void this.unschedule(this.beginShow);
    this.timeLb.string = e + "s";
  };

  e.prototype.onBtnGet = function () {
    1 === this.themeType ? _panelMgr["default"].ins.open("ui/ui_getItem", {
      itemId: "puzzle_pieces"
    }) : 2 === this.themeType && _panelMgr["default"].ins.open("ui/ui_getItem", {
      itemId: "newYear_pieces"
    });
  };

  e.prototype.onBtnLb = function () {
    this.tileLbNode.active = !this.tileLbNode.active;
  };

  e.prototype.onBtnReset = function () {
    _panelMgr["default"].ins.open("ui/ui_jigTip", {
      okCb: this.resetItem.bind(this)
    });
  };

  e.prototype.resetItem = function () {
    var t;
    1 === this.themeType ? t = _jigsawMgr["default"].ins : 2 === this.themeType && (t = _newJigMgr["default"].ins);
    t.resetJigByIdx(this.theme_id);
    this.is_init || (this.initTilePos(), this.initAroundTiles(), this.is_init = !0);
    this.clearTiles();
    this.isAllRight = !1;
    this.tilesNode.active = !0;
    this.jigTiles = t.getJigsawTilesByIdx(this.theme_id);
    this.scrollView.content.removeAllChildren();
    this.tiles_idle.length = 0;
    this.RefreshIdleItems(!0);
    this.lockImg.node.active = !1;
    this.scrollView.node.active = !0;
    this.scrollView.node.parent.active = !0;
    this.menuNode.active = !0;
    this.lockNode.active = !1;
    this.btnReset.active = !1;
    this.finImg.node.active = !1;
    this.bgNode.y = 396;
    this.bgNode.height = 960;
    this.upItemNum();
  };

  e.prototype.clearTiles = function () {
    for (var t in this.tiles) {
      this.delTile(t);
    }
  };

  e.prototype.modJigTile = function (t, e, o, n) {
    if (void 0 === n && (n = !0), void 0 === n && (n = !0), !(e < 0 || e >= 105 || o < -1 || o >= 105)) {
      for (var i = this.jigTiles, r = 0, s = i; r < s.length; r++) {
        if ((u = s[r])[1] == o && -1 != o) {
          o = -1;
          break;
        }
      }

      for (var c = 0, l = i; c < l.length; c++) {
        var u;

        if ((u = l[c])[0] == e) {
          u[1] = o;
          break;
        }
      }

      if (n) {
        _evts["default"].opE.emit({
          action: _evts["default"].UPD_MAIN_RED
        });

        var p = void 0;
        1 === this.themeType ? p = _jigsawMgr["default"].ins : 2 === this.themeType && (p = _newJigMgr["default"].ins);
        p.setJigsawTilesByIdx(this.theme_id, this.jigTiles);
      }
    }
  };

  e.prototype.onDestroy = function () {
    _evts["default"].opE.off(this.eventFunc);

    this.eventFunc = null;
  };

  __decorate([D(cc.Node)], e.prototype, "ringNode", void 0);

  __decorate([D(cc.Prefab)], e.prototype, "tilePre", void 0);

  __decorate([D(cc.SpriteFrame)], e.prototype, "shadow0", void 0);

  __decorate([D(cc.Node)], e.prototype, "tilesNode", void 0);

  __decorate([D(cc.Node)], e.prototype, "menuNode", void 0);

  __decorate([D(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([D(cc.Sprite)], e.prototype, "finImg", void 0);

  __decorate([D(cc.Node)], e.prototype, "dragTag", void 0);

  __decorate([D(cc.Node)], e.prototype, "lockNode", void 0);

  __decorate([D(cc.Label)], e.prototype, "timeLb", void 0);

  __decorate([D(cc.Button)], e.prototype, "bgBtn", void 0);

  __decorate([D(cc.Label)], e.prototype, "getLb", void 0);

  __decorate([D(cc.Node)], e.prototype, "timeAd", void 0);

  __decorate([D(cc.Sprite)], e.prototype, "lockImg", void 0);

  __decorate([D(cc.Node)], e.prototype, "tileLbNode", void 0);

  __decorate([D(cc.Node)], e.prototype, "cellNode", void 0);

  __decorate([D(cc.SpriteFrame)], e.prototype, "cellSpr", void 0);

  __decorate([D(cc.Label)], e.prototype, "hintNum", void 0);

  __decorate([D(cc.Label)], e.prototype, "bgNum", void 0);

  __decorate([D(cc.Node)], e.prototype, "bgNode", void 0);

  __decorate([D(cc.Label)], e.prototype, "tipLb", void 0);

  __decorate([D(cc.Node)], e.prototype, "bgBtnNode", void 0);

  __decorate([D(cc.Sprite)], e.prototype, "getPieceSp", void 0);

  __decorate([D(cc.Node)], e.prototype, "btnReset", void 0);

  return __decorate([I], e);
}(cc.Component);

exports["default"] = k;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/heart.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3b20bSJnh5P8p51eQRE+xVD', 'heart');
// scripts/heart.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = (a.property, function (t) {
  function e() {
    return null !== t && t.apply(this, arguments) || this;
  }

  __extends(e, t);

  e.prototype.playLose = function () {
    this.getComponent(cc.Animation).play();
  };

  e.prototype.getHeart = function () {
    var t = this.node;
    t.getChildByName("noHas").active = !1;
    t.getChildByName("has").active = !0;
  };

  return __decorate([s], e);
}(cc.Component));
exports["default"] = c;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcaGVhcnQuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYSIsImNjIiwiX2RlY29yYXRvciIsInMiLCJjY2NsYXNzIiwiYyIsInByb3BlcnR5IiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsInBsYXlMb3NlIiwiZ2V0Q29tcG9uZW50IiwiQW5pbWF0aW9uIiwicGxheSIsImdldEhlYXJ0Iiwibm9kZSIsImdldENoaWxkQnlOYW1lIiwiYWN0aXZlIiwiX19kZWNvcmF0ZSIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3QztBQUNBLElBQUlDLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLElBQ0FMLENBQUMsQ0FBQ00sUUFBRixFQUNBLFVBQVVDLENBQVYsRUFBYTtFQUNWLFNBQVNDLENBQVQsR0FBYTtJQUNULE9BQVEsU0FBU0QsQ0FBVCxJQUFjQSxDQUFDLENBQUNFLEtBQUYsQ0FBUSxJQUFSLEVBQWNDLFNBQWQsQ0FBZixJQUE0QyxJQUFuRDtFQUNIOztFQUNEQyxTQUFTLENBQUNILENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNJLFNBQUYsQ0FBWUMsUUFBWixHQUF1QixZQUFZO0lBQy9CLEtBQUtDLFlBQUwsQ0FBa0JiLEVBQUUsQ0FBQ2MsU0FBckIsRUFBZ0NDLElBQWhDO0VBQ0gsQ0FGRDs7RUFHQVIsQ0FBQyxDQUFDSSxTQUFGLENBQVlLLFFBQVosR0FBdUIsWUFBWTtJQUMvQixJQUFJVixDQUFDLEdBQUcsS0FBS1csSUFBYjtJQUNBWCxDQUFDLENBQUNZLGNBQUYsQ0FBaUIsT0FBakIsRUFBMEJDLE1BQTFCLEdBQW1DLENBQUMsQ0FBcEM7SUFDQWIsQ0FBQyxDQUFDWSxjQUFGLENBQWlCLEtBQWpCLEVBQXdCQyxNQUF4QixHQUFpQyxDQUFDLENBQWxDO0VBQ0gsQ0FKRDs7RUFLQSxPQUFPQyxVQUFVLENBQUMsQ0FBQ2xCLENBQUQsQ0FBRCxFQUFNSyxDQUFOLENBQWpCO0FBQ0gsQ0FkRCxDQWNHUCxFQUFFLENBQUNxQixTQWROLENBRkMsQ0FBTDtBQWlCQXhCLE9BQU8sV0FBUCxHQUFrQk8sQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgYSA9IGNjLl9kZWNvcmF0b3I7XG52YXIgcyA9IGEuY2NjbGFzcztcbnZhciBjID1cbiAgICAoYS5wcm9wZXJ0eSxcbiAgICAoZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgICAgIHJldHVybiAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgX19leHRlbmRzKGUsIHQpO1xuICAgICAgICBlLnByb3RvdHlwZS5wbGF5TG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuZ2V0Q29tcG9uZW50KGNjLkFuaW1hdGlvbikucGxheSgpO1xuICAgICAgICB9O1xuICAgICAgICBlLnByb3RvdHlwZS5nZXRIZWFydCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB0ID0gdGhpcy5ub2RlO1xuICAgICAgICAgICAgdC5nZXRDaGlsZEJ5TmFtZShcIm5vSGFzXCIpLmFjdGl2ZSA9ICExO1xuICAgICAgICAgICAgdC5nZXRDaGlsZEJ5TmFtZShcImhhc1wiKS5hY3RpdmUgPSAhMDtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF9fZGVjb3JhdGUoW3NdLCBlKTtcbiAgICB9KShjYy5Db21wb25lbnQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IGM7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/lang.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5ed20QixH9CRaDPmF/iPEsw', 'lang');
// scripts/lang.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.getCoinFor = exports.gemeTypeKey = exports.reportKey = exports.lang = void 0;
exports.lang = {
  1e4: "暂无视频",
  10001: "元宝不足",
  10002: "体力不足",
  10003: "入场券不足",
  10004: "暂未开放",
  10005: "没有可删除的邮件",
  10006: "没有可领取的奖励",
  10007: "感谢您的反馈",
  10008: "请输入反馈内容",
  10009: "今日已达上限,请注意休息",
  task_1: "道具礼包",
  task_2: "元宝礼包",
  task_3: "完成1关积分赛关卡",
  task_4: "再完成10关积分赛关卡",
  task_5: "通关每日挑战",
  task_6: "完成5局趣味赛",
  task_7: "分享2位好友,获取趣味赛入场券",
  30001: "趣味赛积分最高达{0}解锁",
  40001: "通关速度超过全国{0}%的人！",
  40002: "您的连胜次数已达{0}次",
  40003: "本组排名"
};
exports.reportKey = {
  qw_line_ticket: "趣味赛挑战券",
  notice: "铲子",
  random_notice: "烟花",
  full_row_col: "钉耙",
  puzzle_pieces: "拼图碎片",
  newYear_pieces: "新年拼图碎片",
  puzzle_notice: "拼图提示",
  puzzle_background: "拼图背景"
};
exports.gemeTypeKey = {
  0: "主线",
  1: "拓展玩法-虫子",
  2: "趣味赛",
  3: "每日挑战",
  4: "练习模式",
  5: "拼图",
  6: "活动"
};

(function (t) {
  t.Main = "首页", t.Item = "道具", t.Rebirth = "复活";
})(exports.getCoinFor || (exports.getCoinFor = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcbGFuZy5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldENvaW5Gb3IiLCJnZW1lVHlwZUtleSIsInJlcG9ydEtleSIsImxhbmciLCJ0YXNrXzEiLCJ0YXNrXzIiLCJ0YXNrXzMiLCJ0YXNrXzQiLCJ0YXNrXzUiLCJ0YXNrXzYiLCJ0YXNrXzciLCJxd19saW5lX3RpY2tldCIsIm5vdGljZSIsInJhbmRvbV9ub3RpY2UiLCJmdWxsX3Jvd19jb2wiLCJwdXp6bGVfcGllY2VzIiwibmV3WWVhcl9waWVjZXMiLCJwdXp6bGVfbm90aWNlIiwicHV6emxlX2JhY2tncm91bmQiLCJ0IiwiTWFpbiIsIkl0ZW0iLCJSZWJpcnRoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQUQsT0FBTyxDQUFDRSxVQUFSLEdBQXFCRixPQUFPLENBQUNHLFdBQVIsR0FBc0JILE9BQU8sQ0FBQ0ksU0FBUixHQUFvQkosT0FBTyxDQUFDSyxJQUFSLEdBQWUsS0FBSyxDQUFuRjtBQUNBTCxPQUFPLENBQUNLLElBQVIsR0FBZTtFQUNYLEtBQUssTUFETTtFQUVYLE9BQU8sTUFGSTtFQUdYLE9BQU8sTUFISTtFQUlYLE9BQU8sT0FKSTtFQUtYLE9BQU8sTUFMSTtFQU1YLE9BQU8sVUFOSTtFQU9YLE9BQU8sVUFQSTtFQVFYLE9BQU8sUUFSSTtFQVNYLE9BQU8sU0FUSTtFQVVYLE9BQU8sY0FWSTtFQVdYQyxNQUFNLEVBQUUsTUFYRztFQVlYQyxNQUFNLEVBQUUsTUFaRztFQWFYQyxNQUFNLEVBQUUsV0FiRztFQWNYQyxNQUFNLEVBQUUsYUFkRztFQWVYQyxNQUFNLEVBQUUsUUFmRztFQWdCWEMsTUFBTSxFQUFFLFNBaEJHO0VBaUJYQyxNQUFNLEVBQUUsaUJBakJHO0VBa0JYLE9BQU8sZUFsQkk7RUFtQlgsT0FBTyxpQkFuQkk7RUFvQlgsT0FBTyxjQXBCSTtFQXFCWCxPQUFPO0FBckJJLENBQWY7QUF1QkFaLE9BQU8sQ0FBQ0ksU0FBUixHQUFvQjtFQUNoQlMsY0FBYyxFQUFFLFFBREE7RUFFaEJDLE1BQU0sRUFBRSxJQUZRO0VBR2hCQyxhQUFhLEVBQUUsSUFIQztFQUloQkMsWUFBWSxFQUFFLElBSkU7RUFLaEJDLGFBQWEsRUFBRSxNQUxDO0VBTWhCQyxjQUFjLEVBQUUsUUFOQTtFQU9oQkMsYUFBYSxFQUFFLE1BUEM7RUFRaEJDLGlCQUFpQixFQUFFO0FBUkgsQ0FBcEI7QUFVQXBCLE9BQU8sQ0FBQ0csV0FBUixHQUFzQjtFQUFDLEdBQUcsSUFBSjtFQUFVLEdBQUcsU0FBYjtFQUF3QixHQUFHLEtBQTNCO0VBQWtDLEdBQUcsTUFBckM7RUFBNkMsR0FBRyxNQUFoRDtFQUF3RCxHQUFHLElBQTNEO0VBQWlFLEdBQUc7QUFBcEUsQ0FBdEI7O0FBQ0EsQ0FBQyxVQUFVa0IsQ0FBVixFQUFhO0VBQ1RBLENBQUMsQ0FBQ0MsSUFBRixHQUFTLElBQVYsRUFBa0JELENBQUMsQ0FBQ0UsSUFBRixHQUFTLElBQTNCLEVBQW1DRixDQUFDLENBQUNHLE9BQUYsR0FBWSxJQUEvQztBQUNILENBRkQsRUFFR3hCLE9BQU8sQ0FBQ0UsVUFBUixLQUF1QkYsT0FBTyxDQUFDRSxVQUFSLEdBQXFCLEVBQTVDLENBRkgiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xuZXhwb3J0cy5nZXRDb2luRm9yID0gZXhwb3J0cy5nZW1lVHlwZUtleSA9IGV4cG9ydHMucmVwb3J0S2V5ID0gZXhwb3J0cy5sYW5nID0gdm9pZCAwO1xuZXhwb3J0cy5sYW5nID0ge1xuICAgIDFlNDogXCLmmoLml6Dop4bpopFcIixcbiAgICAxMDAwMTogXCLlhYPlrp3kuI3otrNcIixcbiAgICAxMDAwMjogXCLkvZPlipvkuI3otrNcIixcbiAgICAxMDAwMzogXCLlhaXlnLrliLjkuI3otrNcIixcbiAgICAxMDAwNDogXCLmmoLmnKrlvIDmlL5cIixcbiAgICAxMDAwNTogXCLmsqHmnInlj6/liKDpmaTnmoTpgq7ku7ZcIixcbiAgICAxMDAwNjogXCLmsqHmnInlj6/pooblj5bnmoTlpZblirFcIixcbiAgICAxMDAwNzogXCLmhJ/osKLmgqjnmoTlj43ppohcIixcbiAgICAxMDAwODogXCLor7fovpPlhaXlj43ppojlhoXlrrlcIixcbiAgICAxMDAwOTogXCLku4rml6Xlt7Lovr7kuIrpmZAs6K+35rOo5oSP5LyR5oGvXCIsXG4gICAgdGFza18xOiBcIumBk+WFt+ekvOWMhVwiLFxuICAgIHRhc2tfMjogXCLlhYPlrp3npLzljIVcIixcbiAgICB0YXNrXzM6IFwi5a6M5oiQMeWFs+enr+WIhui1m+WFs+WNoVwiLFxuICAgIHRhc2tfNDogXCLlho3lrozmiJAxMOWFs+enr+WIhui1m+WFs+WNoVwiLFxuICAgIHRhc2tfNTogXCLpgJrlhbPmr4/ml6XmjJHmiJhcIixcbiAgICB0YXNrXzY6IFwi5a6M5oiQNeWxgOi2o+WRs+i1m1wiLFxuICAgIHRhc2tfNzogXCLliIbkuqsy5L2N5aW95Y+LLOiOt+WPlui2o+WRs+i1m+WFpeWcuuWIuFwiLFxuICAgIDMwMDAxOiBcIui2o+WRs+i1m+enr+WIhuacgOmrmOi+vnswfeino+mUgVwiLFxuICAgIDQwMDAxOiBcIumAmuWFs+mAn+W6pui2hei/h+WFqOWbvXswfSXnmoTkurrvvIFcIixcbiAgICA0MDAwMjogXCLmgqjnmoTov57og5zmrKHmlbDlt7Lovr57MH3mrKFcIixcbiAgICA0MDAwMzogXCLmnKznu4TmjpLlkI1cIlxufTtcbmV4cG9ydHMucmVwb3J0S2V5ID0ge1xuICAgIHF3X2xpbmVfdGlja2V0OiBcIui2o+WRs+i1m+aMkeaImOWIuFwiLFxuICAgIG5vdGljZTogXCLpk7LlrZBcIixcbiAgICByYW5kb21fbm90aWNlOiBcIueDn+iKsVwiLFxuICAgIGZ1bGxfcm93X2NvbDogXCLpkonogJlcIixcbiAgICBwdXp6bGVfcGllY2VzOiBcIuaLvOWbvueijueJh1wiLFxuICAgIG5ld1llYXJfcGllY2VzOiBcIuaWsOW5tOaLvOWbvueijueJh1wiLFxuICAgIHB1enpsZV9ub3RpY2U6IFwi5ou85Zu+5o+Q56S6XCIsXG4gICAgcHV6emxlX2JhY2tncm91bmQ6IFwi5ou85Zu+6IOM5pmvXCJcbn07XG5leHBvcnRzLmdlbWVUeXBlS2V5ID0gezA6IFwi5Li757q/XCIsIDE6IFwi5ouT5bGV546p5rOVLeiZq+WtkFwiLCAyOiBcIui2o+WRs+i1m1wiLCAzOiBcIuavj+aXpeaMkeaImFwiLCA0OiBcIue7g+S5oOaooeW8j1wiLCA1OiBcIuaLvOWbvlwiLCA2OiBcIua0u+WKqFwifTtcbihmdW5jdGlvbiAodCkge1xuICAgICh0Lk1haW4gPSBcIummlumhtVwiKSwgKHQuSXRlbSA9IFwi6YGT5YW3XCIpLCAodC5SZWJpcnRoID0gXCLlpI3mtLtcIik7XG59KShleHBvcnRzLmdldENvaW5Gb3IgfHwgKGV4cG9ydHMuZ2V0Q29pbkZvciA9IHt9KSk7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/nativeP.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3eb69/8EbJE/rYyIHzTmHB4', 'nativeP');
// scripts/nativeP.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _pConst = require("pConst");

var a = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.isNative = !0;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function () {
    this.initListener();
  };

  Object.defineProperty(e.prototype, "isLogin", {
    get: function get() {
      return !1;
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.showLogin = function (t) {
    t && (this.loginResolve = t);
  };

  e.prototype.loginSuceess = function () {
    this.loginResolve();
  };

  e.prototype.videoError = function (t) {
    this.reject(t);
  };

  e.prototype.videoEnd = function (t) {
    t == _pConst.VideoFailCode.CANCELED ? this.reject(t) : this.resolve();
  };

  return e;
}(require("h5")["default"]);

exports["default"] = a;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcbmF0aXZlUC5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfcENvbnN0IiwicmVxdWlyZSIsImEiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwiaXNOYXRpdmUiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJpbml0IiwiaW5pdExpc3RlbmVyIiwiZ2V0IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsInNob3dMb2dpbiIsImxvZ2luUmVzb2x2ZSIsImxvZ2luU3VjZWVzcyIsInZpZGVvRXJyb3IiLCJyZWplY3QiLCJ2aWRlb0VuZCIsIlZpZGVvRmFpbENvZGUiLCJDQU5DRUxFRCIsInJlc29sdmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csUUFBRixHQUFhLENBQUMsQ0FBZDtJQUNBLE9BQU9ILENBQVA7RUFDSDs7RUFDREksU0FBUyxDQUFDSixDQUFELEVBQUlELENBQUosQ0FBVDs7RUFDQUMsQ0FBQyxDQUFDSyxTQUFGLENBQVlDLElBQVosR0FBbUIsWUFBWTtJQUMzQixLQUFLQyxZQUFMO0VBQ0gsQ0FGRDs7RUFHQWYsTUFBTSxDQUFDQyxjQUFQLENBQXNCTyxDQUFDLENBQUNLLFNBQXhCLEVBQW1DLFNBQW5DLEVBQThDO0lBQzFDRyxHQUFHLEVBQUUsZUFBWTtNQUNiLE9BQU8sQ0FBQyxDQUFSO0lBQ0gsQ0FIeUM7SUFJMUNDLFVBQVUsRUFBRSxDQUFDLENBSjZCO0lBSzFDQyxZQUFZLEVBQUUsQ0FBQztFQUwyQixDQUE5Qzs7RUFPQVYsQ0FBQyxDQUFDSyxTQUFGLENBQVlNLFNBQVosR0FBd0IsVUFBVVosQ0FBVixFQUFhO0lBQ2pDQSxDQUFDLEtBQUssS0FBS2EsWUFBTCxHQUFvQmIsQ0FBekIsQ0FBRDtFQUNILENBRkQ7O0VBR0FDLENBQUMsQ0FBQ0ssU0FBRixDQUFZUSxZQUFaLEdBQTJCLFlBQVk7SUFDbkMsS0FBS0QsWUFBTDtFQUNILENBRkQ7O0VBR0FaLENBQUMsQ0FBQ0ssU0FBRixDQUFZUyxVQUFaLEdBQXlCLFVBQVVmLENBQVYsRUFBYTtJQUNsQyxLQUFLZ0IsTUFBTCxDQUFZaEIsQ0FBWjtFQUNILENBRkQ7O0VBR0FDLENBQUMsQ0FBQ0ssU0FBRixDQUFZVyxRQUFaLEdBQXVCLFVBQVVqQixDQUFWLEVBQWE7SUFDaENBLENBQUMsSUFBSUgsT0FBTyxDQUFDcUIsYUFBUixDQUFzQkMsUUFBM0IsR0FBc0MsS0FBS0gsTUFBTCxDQUFZaEIsQ0FBWixDQUF0QyxHQUF1RCxLQUFLb0IsT0FBTCxFQUF2RDtFQUNILENBRkQ7O0VBR0EsT0FBT25CLENBQVA7QUFDSCxDQTlCTyxDQThCTEgsT0FBTyxDQUFDLElBQUQsQ0FBUCxXQTlCSyxDQUFSOztBQStCQUgsT0FBTyxXQUFQLEdBQWtCSSxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfcENvbnN0ID0gcmVxdWlyZShcInBDb25zdFwiKTtcbnZhciBhID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuaXNOYXRpdmUgPSAhMDtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgfVxuICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICBlLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmluaXRMaXN0ZW5lcigpO1xuICAgIH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLCBcImlzTG9naW5cIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAhMTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogITEsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogITBcbiAgICB9KTtcbiAgICBlLnByb3RvdHlwZS5zaG93TG9naW4gPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0ICYmICh0aGlzLmxvZ2luUmVzb2x2ZSA9IHQpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUubG9naW5TdWNlZXNzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmxvZ2luUmVzb2x2ZSgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUudmlkZW9FcnJvciA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHRoaXMucmVqZWN0KHQpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUudmlkZW9FbmQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0ID09IF9wQ29uc3QuVmlkZW9GYWlsQ29kZS5DQU5DRUxFRCA/IHRoaXMucmVqZWN0KHQpIDogdGhpcy5yZXNvbHZlKCk7XG4gICAgfTtcbiAgICByZXR1cm4gZTtcbn0pKHJlcXVpcmUoXCJoNVwiKS5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGE7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/newJigMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '76747ryvSJFDajgaJVMHyti', 'newJigMgr');
// scripts/newJigMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _pInfo = require("pInfo");

var _bagMgr = require("bagMgr");

var _festivalMgr = require("festivalMgr");

var s = function () {
  function t() {
    this.jigsawTileTotal = 105;
    this.jigsawThemeNum = _festivalMgr["default"].ins.getJigsawNum();
    this.localData = null;
    this.seed = 5;
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      return this._ins || (this._ins = new t());
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.getJigsawTilesByIdx = function (t) {
    var e = this.getJigsawTiles()[t] || [];

    var o = _bagMgr["default"].ins.getItemCount("newYear_pieces");

    var n = t + 1;
    this.seed = 21 + n;
    var i = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 33, 44, 55, 66, 77, 88, 99, 89, 100, 91, 101, 93, 102, 95, 103, 97, 104, 98, 87, 76, 65, 54, 43, 32, 21];
    this.shuffleArray(i);
    i.length = 10;

    for (var a = [], s = 0; s < 105; s++) {
      -1 == i.indexOf(s) && a.push(s);
    }

    this.shuffleArray(a);
    var c = i.concat(a);

    if (e.length < this.jigsawTileTotal) {
      var l = e.length;
      var u = this.jigsawTileTotal - e.length;
      var p = o - ((n - 1) * this.jigsawTileTotal + l);

      if (p > 0) {
        var d = Math.min(u, p);

        for (s = 0; s < d; s++) {
          var h = c[l + s];
          e.push([h, -1]);
        }
      }
    }

    this.setJigsawTilesByIdx(t, e);
    return e;
  };

  t.prototype.setJigsawTilesByIdx = function (t, e) {
    var o = this.getJigsawTiles();
    o[t] = e;
    this.setJigsawTiles(o);
  };

  t.prototype.isItemUnlock = function () {
    return !0;
  };

  t.prototype.isPieceEnough = function (t) {
    var e = t * this.jigsawTileTotal;
    return _bagMgr["default"].ins.getItemCount("newYear_pieces") > e;
  };

  t.prototype.getNowJigsawLv = function () {
    for (var t = 0, e = this.getJigsawTiles().length; t < e; t++) {
      if (!this.IsJigsawCompletedByIdx(t)) return t + 1;
    }
  };

  t.prototype.IsJigsawCompletedByIdx = function (t) {
    var e = this.getJigsawTiles()[t];

    if (105 == e.length) {
      for (var o = 0, n = e; o < n.length; o++) {
        var i = n[o];
        if (i[0] != i[1]) return !1;
      }

      return !0;
    }

    return !1;
  };

  t.prototype.getAllTiles = function () {
    for (var t = 0, e = this.jigsawThemeNum; t < e; t++) {
      this.getJigsawTilesByIdx(t);
    }
  };

  t.prototype.getUnPlacedNum = function () {
    this.getAllTiles();

    for (var t = this.getJigsawTiles(), e = 0, o = 0, n = t.length; o < n; o++) {
      var i = t[o];
      if (!this.checkHasFin(o)) for (var r = 0, a = i.length; r < a; r++) {
        var s = i[r];
        s[1] != s[0] && e++;
      }
    }

    return e;
  };

  t.prototype.seedRandom = function () {
    this.seed = (9301 * this.seed + 49297) % 233280;
    return this.seed / 233280;
  };

  t.prototype.shuffleArray = function (t) {
    for (var e, o = t.length - 1; o > 0; o--) {
      var n = Math.floor(this.seedRandom() * (o + 1));
      e = [t[n], t[o]];
      t[o] = e[0];
      t[n] = e[1];
    }
  };

  t.prototype.getJigsawTiles = function () {
    var t = this.getLocalJigData().tiles;
    return null == t ? [] : t;
  };

  t.prototype.setJigsawTiles = function (t) {
    this.setLocalJigData({
      tiles: t
    });
  };

  t.prototype.setLocalJigData = function (t) {
    var e = this.getLocalJigData();
    this.localData = Object.assign(Object.assign({}, e), t);

    _idx.platform.setStorage("newJigsaw", this.localData);
  };

  t.prototype.getLocalJigData = function () {
    null == this.localData && (this.localData = _idx.platform.getStorage("newJigsaw") || {});
    return this.localData;
  };

  t.prototype.checkClearData = function () {
    _pInfo["default"].ins.getIsClearJigsawData() && (_pInfo["default"].ins.setIsClearJigsawData(!1), this.clearJigsawData());
  };

  t.prototype.clearJigsawData = function () {
    this.localData = {};

    _idx.platform.setStorage("newJigsaw", this.localData);
  };

  t.prototype.checkSetFin = function (t) {
    this.checkHasFin(t) || this.setFinfishJigsaw(t);
  };

  t.prototype.checkHasFin = function (t) {
    return _pInfo["default"].ins.getHasFinFesJig()[t] || !1;
  };

  t.prototype.setFinfishJigsaw = function (t) {
    var e = _pInfo["default"].ins.getHasFinFesJig();

    e[t] = !0;

    _pInfo["default"].ins.setHasFinFesJig(e);
  };

  t.prototype.clearFinJig = function (t) {
    var e = _pInfo["default"].ins.getHasFinFesJig();

    e[t] = !1;

    _pInfo["default"].ins.setHasFinFesJig(e);
  };

  t.prototype.resetJigByIdx = function (t) {
    for (var e = this.getJigsawTilesByIdx(t), o = [], n = 0, i = e.length; n < i; n++) {
      var r = e[n];
      r[1] = -1;
      o.push(r);
    }

    this.setJigsawTilesByIdx(t, o);
    this.clearFinJig(t);
  };

  return t;
}();

exports["default"] = s;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/pConst.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5027cy3DgNHsIzfr0s9Lkfg', 'pConst');
// scripts/pConst.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.ShareResult = exports.VEnum4 = exports.VIDEO_RECORD_LIMIT = exports.SHARE_FAIL_MAX_CNT = exports.DefaultSDKSwitch = exports.DefaultLaunchOptions = exports.DefaultSystemInfo = exports.SDKConfig = exports.VideoFailCode = exports.STDSeqType = exports.PFCode = void 0;
exports.PFCode = {
  QQ: "qq",
  Wechat: "wechat",
  Bytedance: "DY",
  Web: "H5",
  Vivo: "vivo",
  Alipay: "Alipay",
  TaoBao: "TaoBao",
  Ios: "Ios",
  Android: "Android"
};
exports.STDSeqType = {
  VIDEO: "VIDEO",
  SHARE: "SHARE"
};
exports.VideoFailCode = {
  NO_AD: "NO_AD",
  IS_AUDIT: "IS_AUDIT",
  LOW_SDK_VERSION: "LOW_SDK_VERSION",
  CANCELED: "CANCELED"
};
exports.SDKConfig = {
  comQuery: "",
  _shareData: {
    title: "太难了",
    imageUrlId: "",
    imageUrl: "subpackages/resSps/native/72/7233d4b3-7dea-4bdd-9fa3-3874c53e29a0.954ee.jpg",
    query: ""
  },
  shareData: function shareData() {
    var t = exports.SDKConfig._shareData;
    t.query = exports.SDKConfig.comQuery + Date.now();
    return t;
  },
  ttZoneId: {
    race: "race",
    normal: "normal"
  },
  videoCoolTime: 18e4
};
exports.DefaultSDKSwitch = {
  isAudit: !0,
  closeAD: !1
};
exports.SHARE_FAIL_MAX_CNT = 3;
exports.VIDEO_RECORD_LIMIT = 3e5;

(function (t) {
  t[t.SHORT = 0] = "SHORT", t[t.LONG = 1] = "LONG";
})(exports.VEnum4 || (exports.VEnum4 = {}));

exports.ShareResult = {
  SUCCESS: 0,
  FAILED: 1,
  ERROR: 2
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xccENvbnN0LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiU2hhcmVSZXN1bHQiLCJWRW51bTQiLCJWSURFT19SRUNPUkRfTElNSVQiLCJTSEFSRV9GQUlMX01BWF9DTlQiLCJEZWZhdWx0U0RLU3dpdGNoIiwiRGVmYXVsdExhdW5jaE9wdGlvbnMiLCJEZWZhdWx0U3lzdGVtSW5mbyIsIlNES0NvbmZpZyIsIlZpZGVvRmFpbENvZGUiLCJTVERTZXFUeXBlIiwiUEZDb2RlIiwiUVEiLCJXZWNoYXQiLCJCeXRlZGFuY2UiLCJXZWIiLCJWaXZvIiwiQWxpcGF5IiwiVGFvQmFvIiwiSW9zIiwiQW5kcm9pZCIsIlZJREVPIiwiU0hBUkUiLCJOT19BRCIsIklTX0FVRElUIiwiTE9XX1NES19WRVJTSU9OIiwiQ0FOQ0VMRUQiLCJjb21RdWVyeSIsIl9zaGFyZURhdGEiLCJ0aXRsZSIsImltYWdlVXJsSWQiLCJpbWFnZVVybCIsInF1ZXJ5Iiwic2hhcmVEYXRhIiwidCIsIkRhdGUiLCJub3ciLCJ0dFpvbmVJZCIsInJhY2UiLCJub3JtYWwiLCJ2aWRlb0Nvb2xUaW1lIiwiaXNBdWRpdCIsImNsb3NlQUQiLCJTSE9SVCIsIkxPTkciLCJTVUNDRVNTIiwiRkFJTEVEIiwiRVJST1IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3QztBQUNBRCxPQUFPLENBQUNFLFdBQVIsR0FDSUYsT0FBTyxDQUFDRyxNQUFSLEdBQ0FILE9BQU8sQ0FBQ0ksa0JBQVIsR0FDQUosT0FBTyxDQUFDSyxrQkFBUixHQUNBTCxPQUFPLENBQUNNLGdCQUFSLEdBQ0FOLE9BQU8sQ0FBQ08sb0JBQVIsR0FDQVAsT0FBTyxDQUFDUSxpQkFBUixHQUNBUixPQUFPLENBQUNTLFNBQVIsR0FDQVQsT0FBTyxDQUFDVSxhQUFSLEdBQ0FWLE9BQU8sQ0FBQ1csVUFBUixHQUNBWCxPQUFPLENBQUNZLE1BQVIsR0FDSSxLQUFLLENBWGI7QUFZQVosT0FBTyxDQUFDWSxNQUFSLEdBQWlCO0VBQ2JDLEVBQUUsRUFBRSxJQURTO0VBRWJDLE1BQU0sRUFBRSxRQUZLO0VBR2JDLFNBQVMsRUFBRSxJQUhFO0VBSWJDLEdBQUcsRUFBRSxJQUpRO0VBS2JDLElBQUksRUFBRSxNQUxPO0VBTWJDLE1BQU0sRUFBRSxRQU5LO0VBT2JDLE1BQU0sRUFBRSxRQVBLO0VBUWJDLEdBQUcsRUFBRSxLQVJRO0VBU2JDLE9BQU8sRUFBRTtBQVRJLENBQWpCO0FBV0FyQixPQUFPLENBQUNXLFVBQVIsR0FBcUI7RUFBQ1csS0FBSyxFQUFFLE9BQVI7RUFBaUJDLEtBQUssRUFBRTtBQUF4QixDQUFyQjtBQUNBdkIsT0FBTyxDQUFDVSxhQUFSLEdBQXdCO0VBQ3BCYyxLQUFLLEVBQUUsT0FEYTtFQUVwQkMsUUFBUSxFQUFFLFVBRlU7RUFHcEJDLGVBQWUsRUFBRSxpQkFIRztFQUlwQkMsUUFBUSxFQUFFO0FBSlUsQ0FBeEI7QUFNQTNCLE9BQU8sQ0FBQ1MsU0FBUixHQUFvQjtFQUNoQm1CLFFBQVEsRUFBRSxFQURNO0VBRWhCQyxVQUFVLEVBQUU7SUFDUkMsS0FBSyxFQUFFLEtBREM7SUFFUkMsVUFBVSxFQUFFLEVBRko7SUFHUkMsUUFBUSxFQUFFLDZFQUhGO0lBSVJDLEtBQUssRUFBRTtFQUpDLENBRkk7RUFRaEJDLFNBQVMsRUFBRSxxQkFBWTtJQUNuQixJQUFJQyxDQUFDLEdBQUduQyxPQUFPLENBQUNTLFNBQVIsQ0FBa0JvQixVQUExQjtJQUNBTSxDQUFDLENBQUNGLEtBQUYsR0FBVWpDLE9BQU8sQ0FBQ1MsU0FBUixDQUFrQm1CLFFBQWxCLEdBQTZCUSxJQUFJLENBQUNDLEdBQUwsRUFBdkM7SUFDQSxPQUFPRixDQUFQO0VBQ0gsQ0FaZTtFQWFoQkcsUUFBUSxFQUFFO0lBQUNDLElBQUksRUFBRSxNQUFQO0lBQWVDLE1BQU0sRUFBRTtFQUF2QixDQWJNO0VBY2hCQyxhQUFhLEVBQUU7QUFkQyxDQUFwQjtBQWdCQXpDLE9BQU8sQ0FBQ00sZ0JBQVIsR0FBMkI7RUFBQ29DLE9BQU8sRUFBRSxDQUFDLENBQVg7RUFBY0MsT0FBTyxFQUFFLENBQUM7QUFBeEIsQ0FBM0I7QUFDQTNDLE9BQU8sQ0FBQ0ssa0JBQVIsR0FBNkIsQ0FBN0I7QUFDQUwsT0FBTyxDQUFDSSxrQkFBUixHQUE2QixHQUE3Qjs7QUFDQSxDQUFDLFVBQVUrQixDQUFWLEVBQWE7RUFDVEEsQ0FBQyxDQUFFQSxDQUFDLENBQUNTLEtBQUYsR0FBVSxDQUFaLENBQUQsR0FBbUIsT0FBcEIsRUFBK0JULENBQUMsQ0FBRUEsQ0FBQyxDQUFDVSxJQUFGLEdBQVMsQ0FBWCxDQUFELEdBQWtCLE1BQWpEO0FBQ0gsQ0FGRCxFQUVHN0MsT0FBTyxDQUFDRyxNQUFSLEtBQW1CSCxPQUFPLENBQUNHLE1BQVIsR0FBaUIsRUFBcEMsQ0FGSDs7QUFHQUgsT0FBTyxDQUFDRSxXQUFSLEdBQXNCO0VBQUM0QyxPQUFPLEVBQUUsQ0FBVjtFQUFhQyxNQUFNLEVBQUUsQ0FBckI7RUFBd0JDLEtBQUssRUFBRTtBQUEvQixDQUF0QiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG5leHBvcnRzLlNoYXJlUmVzdWx0ID1cbiAgICBleHBvcnRzLlZFbnVtNCA9XG4gICAgZXhwb3J0cy5WSURFT19SRUNPUkRfTElNSVQgPVxuICAgIGV4cG9ydHMuU0hBUkVfRkFJTF9NQVhfQ05UID1cbiAgICBleHBvcnRzLkRlZmF1bHRTREtTd2l0Y2ggPVxuICAgIGV4cG9ydHMuRGVmYXVsdExhdW5jaE9wdGlvbnMgPVxuICAgIGV4cG9ydHMuRGVmYXVsdFN5c3RlbUluZm8gPVxuICAgIGV4cG9ydHMuU0RLQ29uZmlnID1cbiAgICBleHBvcnRzLlZpZGVvRmFpbENvZGUgPVxuICAgIGV4cG9ydHMuU1REU2VxVHlwZSA9XG4gICAgZXhwb3J0cy5QRkNvZGUgPVxuICAgICAgICB2b2lkIDA7XG5leHBvcnRzLlBGQ29kZSA9IHtcbiAgICBRUTogXCJxcVwiLFxuICAgIFdlY2hhdDogXCJ3ZWNoYXRcIixcbiAgICBCeXRlZGFuY2U6IFwiRFlcIixcbiAgICBXZWI6IFwiSDVcIixcbiAgICBWaXZvOiBcInZpdm9cIixcbiAgICBBbGlwYXk6IFwiQWxpcGF5XCIsXG4gICAgVGFvQmFvOiBcIlRhb0Jhb1wiLFxuICAgIElvczogXCJJb3NcIixcbiAgICBBbmRyb2lkOiBcIkFuZHJvaWRcIlxufTtcbmV4cG9ydHMuU1REU2VxVHlwZSA9IHtWSURFTzogXCJWSURFT1wiLCBTSEFSRTogXCJTSEFSRVwifTtcbmV4cG9ydHMuVmlkZW9GYWlsQ29kZSA9IHtcbiAgICBOT19BRDogXCJOT19BRFwiLFxuICAgIElTX0FVRElUOiBcIklTX0FVRElUXCIsXG4gICAgTE9XX1NES19WRVJTSU9OOiBcIkxPV19TREtfVkVSU0lPTlwiLFxuICAgIENBTkNFTEVEOiBcIkNBTkNFTEVEXCJcbn07XG5leHBvcnRzLlNES0NvbmZpZyA9IHtcbiAgICBjb21RdWVyeTogXCJcIixcbiAgICBfc2hhcmVEYXRhOiB7XG4gICAgICAgIHRpdGxlOiBcIuWkqumavuS6hlwiLFxuICAgICAgICBpbWFnZVVybElkOiBcIlwiLFxuICAgICAgICBpbWFnZVVybDogXCJzdWJwYWNrYWdlcy9yZXNTcHMvbmF0aXZlLzcyLzcyMzNkNGIzLTdkZWEtNGJkZC05ZmEzLTM4NzRjNTNlMjlhMC45NTRlZS5qcGdcIixcbiAgICAgICAgcXVlcnk6IFwiXCJcbiAgICB9LFxuICAgIHNoYXJlRGF0YTogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IGV4cG9ydHMuU0RLQ29uZmlnLl9zaGFyZURhdGE7XG4gICAgICAgIHQucXVlcnkgPSBleHBvcnRzLlNES0NvbmZpZy5jb21RdWVyeSArIERhdGUubm93KCk7XG4gICAgICAgIHJldHVybiB0O1xuICAgIH0sXG4gICAgdHRab25lSWQ6IHtyYWNlOiBcInJhY2VcIiwgbm9ybWFsOiBcIm5vcm1hbFwifSxcbiAgICB2aWRlb0Nvb2xUaW1lOiAxOGU0XG59O1xuZXhwb3J0cy5EZWZhdWx0U0RLU3dpdGNoID0ge2lzQXVkaXQ6ICEwLCBjbG9zZUFEOiAhMX07XG5leHBvcnRzLlNIQVJFX0ZBSUxfTUFYX0NOVCA9IDM7XG5leHBvcnRzLlZJREVPX1JFQ09SRF9MSU1JVCA9IDNlNTtcbihmdW5jdGlvbiAodCkge1xuICAgICh0Wyh0LlNIT1JUID0gMCldID0gXCJTSE9SVFwiKSwgKHRbKHQuTE9ORyA9IDEpXSA9IFwiTE9OR1wiKTtcbn0pKGV4cG9ydHMuVkVudW00IHx8IChleHBvcnRzLlZFbnVtNCA9IHt9KSk7XG5leHBvcnRzLlNoYXJlUmVzdWx0ID0ge1NVQ0NFU1M6IDAsIEZBSUxFRDogMSwgRVJST1I6IDJ9O1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/mailMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '77a46/RNnRPC5N1AjkZjR9U', 'mailMgr');
// scripts/mailMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.mailState = void 0;
var n;

var _numberUtils = require("NumberUtils");

var _evts = require("evts");

var _request = require("request");

var _time = require("time");

var _pInfo = require("pInfo");

var _bagMgr = require("bagMgr");

var u = function () {
  function t() {
    if (this._mailInfo = {}, this._serverMail = {}, this.isGetting = !1, this.getCb = [], t._ins) throw new Error("mailMgr can only be one！");
    t._ins = this;
    this.initMail();
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      t._ins || new t();
      return t._ins;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.initMail = function () {
    this._mailInfo = _pInfo["default"].ins.Mail;
    this._mailInfo.mail || (this._mailInfo.mail = {});
    this._mailInfo.outMail || (this._mailInfo.outMail = []);
  };

  t.prototype.saveMail = function () {
    _pInfo["default"].ins.Mail = this._mailInfo;
  };

  Object.defineProperty(t.prototype, "mailInfo", {
    get: function get() {
      return this._mailInfo;
    },
    enumerable: !1,
    configurable: !0
  });
  Object.defineProperty(t.prototype, "serverMail", {
    get: function get() {
      return this._serverMail;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.getMail = function (t) {
    if (t && this.getCb.push(t), !this.isGetting) {
      var e = this;

      var o = function o(t) {
        e.getCb.length > 0 && e.getCb.forEach(function (e) {
          return e && e(t);
        });
        e.getCb = [];
        e.isGetting = !1;
      };

      e.isGetting = !0;
      var t = {
        "status": 0,
        "msg": "无邮件信息",
        "code": 0,
        "server_time": Date.now()
      }; // _request.default.ins
      //     .getMailData(void 0, this._mailInfo.outMail)
      //     .then(function (t) {

      if (t && t.code && t.data) {
        var i;
        if (e.mailInfo.mail instanceof Array) i = e.mailInfo.mail, e.mailInfo.mail = {};else if (Object.keys(e._mailInfo.mail).length !== t.data.length) {
          var r = new Set();
          var a = JSON.parse(JSON.stringify(e._mailInfo.mail));

          for (var c in JSON.parse(JSON.stringify(t.data)).forEach(function (t) {
            r.add(t.id);
          }), a) {
            r.has(Number(c)) || delete e._mailInfo.mail[c];
          }
        }
        t.data.forEach(function (t) {
          e._serverMail[t.id] = t;
          t.end_time < 1e3 * _time["default"].ins.serverTime ? e._mailInfo.outMail.indexOf(t.id) < 0 && e._mailInfo.outMail.push(t.id) : e.mailInfo.mail[t.id] || (i && i.indexOf(t.id) > -1 ? e.mailInfo.mail[t.id] = i[t.id] : e.mailInfo.mail[t.id] = n.noRead);
        });
      } else t && 0 === t.code && (e.mailInfo.mail = {});

      e.saveMail();
      o(e._serverMail); // })
      // .catch(function (t) {
      //     console.error("getMailDataErr", t);
      //     o({errMsg: "error"});
      // });
    }
  };

  t.prototype.deleteMail = function (t) {
    if (void 0 === t && (t = null), t = _numberUtils["default"].parseNum(t)) return this._mailInfo.mail[t] && delete this._mailInfo.mail[t], -1 == this._mailInfo.outMail.indexOf(t) && this._mailInfo.outMail.push(t), this.saveMail(), !0;

    for (var e in this._mailInfo.mail) {
      if (this._mailInfo.mail[e] === n.award) {
        var o = _numberUtils["default"].parseNum(e);

        -1 == this._mailInfo.outMail.indexOf(o) && this._mailInfo.outMail.push(o);
        this._mailInfo.mail[e] && delete this._mailInfo.mail[e];
      }
    }

    this.saveMail();

    _evts["default"].opE.emit({
      action: _evts["default"].UPDMAIL,
      data: {
        type: "keyDelete"
      }
    });

    return !0;
  };

  t.prototype.getAward = function (t) {
    if (void 0 === t && (t = null), t) return this._mailInfo.mail[t] != n.award && (this._mailInfo.mail[t] = n.award, this.addItem(t), this.saveMail(), !0);
    var e = !1;

    for (var o in this._mailInfo.mail) {
      this._mailInfo.mail[o] !== n.award && (e || (e = !0), this._mailInfo.mail[o] = n.award, this.addItem(o));
    }

    e && this.saveMail();

    _evts["default"].opE.emit({
      action: _evts["default"].UPDMAIL,
      data: {
        type: "keyAward"
      }
    });

    return e;
  };

  t.prototype.readMail = function (t) {
    void 0 === t && (t = null);
    return !(!t || !this._mailInfo.mail[t] || this._mailInfo.mail[t] != n.award && (this._mailInfo.mail[t] != n.noRead || (this._mailInfo.mail[t] = n.read, this.saveMail(), 0)));
  };

  t.prototype.addItem = function (t) {
    var e = this.serverMail;

    if (t) {
      if (!e[t]) return;

      for (var o = JSON.parse(e[t].props), n = Object.keys(o), i = 0; i < n.length; i++) {
        var r = n[i];

        if (o.hasOwnProperty(r)) {
          var a = i === n.length - 1;

          _bagMgr["default"].ins.addItem(r, o[r], !0, a);
        }
      }
    }
  };

  return t;
}();

exports["default"] = u;

(function (t) {
  t[t.none = 0] = "none", t[t.noRead = 1] = "noRead", t[t.read = 2] = "read", t[t.award = 3] = "award";
})(n = exports.mailState || (exports.mailState = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/main.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'eeafcEk481Ax46HoxkVC6Oy', 'main');
// scripts/main.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a;

var _evts = require("evts");

var _idx = require("idx");

var _pConst = require("pConst");

var _request = require("request");

var _res = require("res");

var _sound = require("sound");

var _time = require("time");

var _uData = require("uData");

var _cfgMgr = require("cfgMgr");

var _page_jigsaw = require("page_jigsaw");

var _top = require("top");

var _global = require("global");

var _bagMgr = require("bagMgr");

var _challengeMgr = require("challengeMgr");

var _jigsawMgr = require("jigsawMgr");

var _newJigMgr = require("newJigMgr");

var _panelMgr = require("panelMgr");

var _shopMgr = require("shopMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var k = cc._decorator;
var R = k.ccclass;
var N = k.property;

(function (t) {
  t.bottomShowBtns = "bottomShowBtns";
  t.bottomHideBtns = "bottomHideBtns";
})(a || (a = {}));

var C = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.blockComp = null;
    e.pages = null;
    e.downNode = null;
    e.downAnis = [];
    e.top = null;
    e.lPfb = null;
    e.powerSp = null;
    e.camera = null;
    e.rankBtn1 = null;
    e.btnBgNode = null;
    e.curPageIdx = 2;
    e.viewPage = {};
    e.viewLPage = {};
    e.viewPageInd = ["page_shop", "page_jigsaw", "page_level", "page_challenge", "page_race"];
    e.canUseL = [];
    e.isAni = !1;
    e.redLbs = [];
    e.authorized = !1;
    e.isWx = !1;
    return e;
  }

  var o;

  __extends(e, t);

  o = e;

  e.prototype.onLoad = function () {
    _global["default"].padScale && (cc.view.setDesignResolutionSize(720, 1280, cc.ResolutionPolicy.FIXED_HEIGHT), this.btnBgNode.scaleX = _global["default"].padScale);

    _sound["default"].ins.playBGM();

    this.viewPage.page_level = this.pages.getChildByName("page_level");
    (_pInfo["default"].ins.isMianLocked() || _global["default"].loadToRace) && (_pInfo["default"].ins.isMianLocked() && (_global["default"].loadToRace = 4), this.viewPage.page_level.active = !1, this.chgPage(_global["default"].loadToRace));
    this.loadDown();

    _evts["default"].opE.on(this.onOperTap.bind(this));

    o.ins = this;
    this.upMainRed();
    this.isWx = _idx.platform.string() == _pConst.PFCode.Wechat;
    this.checkPopNewGift();
    this.checkPopPrivacy();
    _global["default"].loadCb || (this.checkSerPack(), _global["default"].loadCb = !0);
  };

  e.prototype.onDestroy = function () {
    this.hideWxBtns();
    o.ins = null;
    delete o.ins;
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].MAINJUMP:
        this.jumpToPage(t.data, t.param);
        break;

      case _evts["default"].UPD_MAIN_RED:
        this.upMainRed();
        break;

      case _evts["default"].CHECK_WX_BTNS:
        this.checkGetUserInfo();
        break;

      case _evts["default"].HIDE_WX_BTNS:
        this.hideWxBtns();
    }
  };

  e.prototype.onEnable = function () {};

  e.prototype.onDisable = function () {};

  e.prototype.jumpToPage = function (t, e) {
    var o = this;

    if (!this.isAni) {
      var n = this.curPageIdx;

      if (n != t) {
        if (3 == t) return void _tipMgr["default"].ins.showTip("暂未开放");
        var i = this.downAnis;
        i[n].play(a.bottomHideBtns);
        i[t].play(a.bottomShowBtns);
        this.curPageIdx = t;
        cc.Tween.stopAllByTarget(this.pages);
        var r = t > n ? -1 : 1;
        var s = this.pages.x + cc.view.getVisibleSize().width * r;
        if (this.viewPage[this.viewPageInd[t]] || this.viewLPage[this.viewPageInd[t]]) this.viewPage[this.viewPageInd[t]].x = -s, this.viewPage[this.viewPageInd[t]] && (this.viewPage[this.viewPageInd[t]].active = !0);else {
          var c = this.canUseL.shift();
          c || (c = cc.instantiate(this.lPfb));
          c.setPosition(-s, 0);
          this.pages.addChild(c, 100);
          this.loadPage(this.viewPageInd[t], function (e) {
            var n = cc.instantiate(e);
            o.viewPage[o.viewPageInd[t]] = n;
            !n.active && (n.active = !0);
            n.setPosition(-s, 0);
            o.pages.addChild(n);
            c.removeFromParent();
            o.canUseL.push(c);
          });
        }
        e && "festival" === e && this.viewPage[this.viewPageInd[t]] && this.viewPage[this.viewPageInd[t]].getComponent(_page_jigsaw["default"]).chgToFes();
        this.isAni = !0;
        cc.tween(this.pages).to(0.5, {
          x: s
        }, {
          easing: this.customEaseInOut
        }).call(function () {
          o.viewPage[o.viewPageInd[n]] && (o.viewPage[o.viewPageInd[n]].active = !1);
          o.isAni = !1;
        }).start();
        var l = this.checkGetUserInfo();
        "page_level" == this.viewPageInd[t] ? l && this.setWxBtnShow1(!0) : "page_level" == this.viewPageInd[n] && (this.setWxBtnShow1(!1), this.isAni = !0);
      }
    }
  };

  e.prototype.chgPage = function (t) {
    var e = this;

    if (!this.isAni) {
      var o = this.curPageIdx;

      if (o != t) {
        if (3 == t) return void _tipMgr["default"].ins.showTip("暂未开放");
        this.curPageIdx = t;
        var n = t > o ? -1 : 1;
        var i = this.pages.x + cc.view.getVisibleSize().width * n;
        if (this.viewPage[this.viewPageInd[t]] || this.viewLPage[this.viewPageInd[t]]) this.viewPage[this.viewPageInd[t]].x = -i, this.viewPage[this.viewPageInd[t]] && (this.viewPage[this.viewPageInd[t]].active = !0);else {
          var r = this.canUseL.shift();
          r || (r = cc.instantiate(this.lPfb));
          r.setPosition(-i, 0);
          this.pages.addChild(r, 100);
          this.loadPage(this.viewPageInd[t], function (o) {
            var n = cc.instantiate(o);
            e.viewPage[e.viewPageInd[t]] = n;
            !n.active && (n.active = !0);
            n.setPosition(-i, 0);
            e.pages.addChild(n);
            r.removeFromParent();
            e.canUseL.push(r);
          });
        }
        this.pages.x = i;
        this.viewPage[this.viewPageInd[o]] && (this.viewPage[this.viewPageInd[o]].active = !1);
      }
    }
  };

  e.prototype.lockBtnState = function (t) {
    var e = this.downAnis;
    e[2].play(a.bottomHideBtns, 0.05);
    e[t].play(a.bottomShowBtns, 0.2);
  };

  e.prototype.customEaseInOut = function (t) {
    return t < 0.5 ? 8 * t * t * t * t : 1 - Math.pow(-2 * t + 2, 4) / 2;
  };

  e.prototype.loadDown = function () {
    var t = this;

    _res["default"].ins.getBundleByString("prefab").then(function (e) {
      var o = "prefab/down/";
      var n = ["btn_quest", "btn_jigsaw", "btn_puzzle", "btn_chanllage", "btn_race"];
      e.loadDir(o, cc.Prefab, function (i) {
        if (!i && t.node && t.node.isValid) {
          var r = cc.view.getVisibleSize().width / 5;
          var a = 2 * -r;
          var s = t.downNode;
          n.forEach(function (n, i) {
            var c = cc.instantiate(e.get(o + n, cc.Prefab));
            var l = cc.find("img/tip/num", c);
            t.redLbs.push(l.getComponent(cc.Label)), c.setPosition(a, 18), c.setParent(s), c.width = r, a += r, t.downAnis.push(c.getComponent(cc.Animation)), c.on("click", function () {
              t.jumpToPage(i);
            }, t), "btn_race" == n && (t.rankBtn2 = c);
          });
          t.createBtns();
          (_pInfo["default"].ins.isMianLocked() || _global["default"].loadToRace) && (_pInfo["default"].ins.isMianLocked() && (_global["default"].loadToRace = 4), t.lockBtnState(_global["default"].loadToRace), _global["default"].loadToRace = 0);
          t.upMainRed();
        }
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });
  };

  e.prototype.loadPage = function (t, e) {
    this.viewLPage[t] || (this.viewLPage[t] = !0, _res["default"].ins.lPre("prefab/" + t).then(function (t) {
      e && e(t);
    })["catch"](function () {
      console.error("getPrefabErr");
    }));
  };

  e.prototype.usePower = function (t, e, o) {
    if (!(t > 0)) {
      _pInfo["default"].ins.addPower(t);

      var n = this.powerSp;
      var i = n.node;
      var r = i.parent.convertToWorldSpaceAR(i.position);
      this.node.convertToNodeSpaceAR(r, r);
      var a = new cc.Node("flyPower");
      a.addComponent(cc.Sprite).spriteFrame = n.spriteFrame;
      a.setParent(this.node);
      this.node.convertToNodeSpaceAR(e, e);
      e.add(cc.v3(cc.winSize.width / 2, cc.winSize.height / 2));
      cc.tween(a).set({
        position: r,
        scale: 0.8
      }).parallel(cc.tween(a).by(0.2, {
        scale: 0.2
      }).delay(0.1).by(0.2, {
        scale: -0.2
      }), cc.tween(a).to(0.5, {
        position: e
      })).call(function () {
        a.destroy();
        _global["default"].levelDone ? _pInfo.chgScene(_pInfo.sceneType.game, {
          gameType: _pInfo.gameType.freedom,
          freedomSize: o
        }) : _pInfo.chgScene(_pInfo.sceneType.game);
      }).start();
    }
  };

  e.prototype.getWorldPointByTouch = function (t) {
    var e = cc.Vec2.ZERO;
    this.camera.getScreenToWorldPoint(t.getLocation(), e);
    return e;
  };

  e.prototype.upMainRed = function () {
    var t;
    var e;

    var o = _jigsawMgr["default"].ins.getUnPlacedNum() + _newJigMgr["default"].ins.getUnPlacedNum();

    var n = this.redLbs[1];
    if (n) if (o > 0) {
      var i = o > 99 ? "99+" : o + "";
      n.node.parent.active = !0;
      n.string = i + "";
      n.node.x = _global["default"].getCharXOffset(n.string);
    } else n.node.parent.active = !1;

    var r = _bagMgr["default"].ins.getItemCount("qw_line_ticket");

    var a = this.redLbs[4];
    a && (r > 0 ? (a.node.parent.active = !0, a.string = r + "", a.node.x = _global["default"].getCharXOffset(a.string)) : a.node.parent.active = !1);
    var s = (null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.daily_challenge) || void 0 === e ? void 0 : e.open) || 50;
    _pInfo["default"].ins.getPuzzleLvl() > s && (_challengeMgr["default"].ins.getTodayIsFin(), _challengeMgr["default"].ins.getAllMonthRed());

    var c = _shopMgr["default"].ins.getAllRed();

    var l = this.redLbs[0];
    l && (c > 0 ? (l.node.parent.active = !0, l.string = c + "") : l.node.parent.active = !1);
  };

  e.prototype.checkPopNewGift = function () {
    _global["default"].twoDaysLeft && (_global["default"].twoDaysLeft = !1, _panelMgr["default"].ins.open("ui/ui_backReward", null).then(function () {
      _global["default"].isPopNewGift = !0;
    }));
  };

  e.prototype.checkPopPrivacy = function () {
    _idx.platform.isQQ && _uData["default"].ins.getIsNewUser() && _panelMgr["default"].ins.open("ui/ui_privacy", {}, {
      MaskNoHide: !0
    });
  };

  e.prototype.checkSerPack = function () {// _request.default.ins
    //     .getUnshippedOrders()
    //     .then(function (t) {
    //         t &&
    //             t.status &&
    //             t.data &&
    //             t.data.length &&
    //             _panelMgr.default.ins.open("ui/ui_reiGift", {serPacks: t.data});
    //     })
    //     .catch(function () {});
  };

  e.prototype.createBtns = function () {
    this.isWx && (this.createUserInfoButton1(), this.createUserInfoButton2());
  };

  e.prototype.checkGetUserInfo = function () {
    if (this.isWx) {
      var t = !1;
      (_time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3)) - _pInfo["default"].ins.getRankLastTimeData() >= 3600 && !this.authorized && !_panelMgr["default"].ins.hasPop() ? (this.showWxBtns(), t = !0) : (this.hideWxBtns(), t = !1);
      return t;
    }
  };

  e.prototype.showWxBtns = function () {
    this.isWx && (this.setWxBtnShow1(!0), this.setWxBtnShow2(!0));
  };

  e.prototype.hideWxBtns = function () {
    this.isWx && (this.setWxBtnShow1(!1), this.setWxBtnShow2(!1));
  };

  e.prototype.setWxBtnShow1 = function (t) {
    this.isWx && null != this.wxBtn1 && (t ? this.wxBtn1.show() : this.wxBtn1.hide());
  };

  e.prototype.setWxBtnShow2 = function (t) {
    this.isWx && null != this.wxBtn2 && (t ? this.wxBtn2.show() : this.wxBtn2.hide());
  };

  e.prototype.createUserInfoButton1 = function () {
    var t = this;
    wx.getSetting({
      success: function success(e) {
        e.authSetting["scope.userInfo"] ? (t.authorized = !0, t.updateUserInfo()) : (t.wxBtn1 = t.authUersInfo(t.rankBtn1), t.wxBtn1.onTap(function (e) {
          var o;
          var n;
          console.log(JSON.stringify(e));
          "getUserInfo:ok" == e.errMsg ? (t.setUserInfo1(e.userInfo), null === (o = t.wxBtn2) || void 0 === o || o.destroy(), t.wxBtn2 = null, null === (n = t.wxBtn1) || void 0 === n || n.destroy(), t.wxBtn1 = null) : (console.log("授权失败"), t.getFail1());
        }), t.checkGetUserInfo());
      }
    });
  };

  e.prototype.createUserInfoButton2 = function () {
    var t = this;
    wx.getSetting({
      success: function success(e) {
        e.authSetting["scope.userInfo"] ? (t.authorized = !0, t.updateUserInfo()) : (t.wxBtn2 = t.authUersInfo(t.rankBtn2), t.wxBtn2.onTap(function (e) {
          var o;
          var n;
          console.log(JSON.stringify(e));
          "getUserInfo:ok" == e.errMsg ? (t.setUserInfo2(e.userInfo), null === (o = t.wxBtn2) || void 0 === o || o.destroy(), t.wxBtn2 = null, null === (n = t.wxBtn1) || void 0 === n || n.destroy(), t.wxBtn1 = null) : (console.log("授权失败"), t.getFail2());
        }), t.checkGetUserInfo());
      }
    });
  };

  e.prototype.authUersInfo = function (t) {
    var e = wx.getSystemInfoSync();
    var o = e.screenWidth;
    var n = e.screenHeight;
    var i = 0;
    var r = 0;

    if (t && cc.isValid(t)) {
      var a = e.screenWidth / cc.winSize.width;
      var s = t.convertToWorldSpaceAR(cc.Vec2.ZERO);
      var c = 0.5 * (cc.view.getVisibleSize().height - cc.winSize.height);
      r = n - (s.y + 0.5 * t.height + c) * a;
      i = (s.x - 0.5 * t.width) * a;
      o = t.width * a;
      n = t.height * a;
    }

    return wx.createUserInfoButton({
      type: "text",
      text: "",
      style: {
        left: i,
        top: r,
        width: o,
        height: n,
        lineHeight: 40,
        backgroundColor: "#00000000",
        color: "#ffffff",
        textAlign: "center",
        fontSize: 16,
        borderRadius: 4,
        borderColor: "#ffffff",
        borderWidth: 0
      }
    });
  };

  e.prototype.updateUserInfo = function () {
    wx.getUserInfo({
      success: function success(t) {
        _request["default"].ins.updateUserInfo(t.userInfo);
      }
    });
  };

  e.prototype.setUserInfo1 = function () {
    this.authorized = !0;
    this.checkGetUserInfo();

    _panelMgr["default"].ins.open("ui/ui_rank", null);
  };

  e.prototype.setUserInfo2 = function () {
    this.authorized = !0;
    this.jumpToPage(4);
  };

  e.prototype.getFail1 = function () {
    var t = _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);

    _pInfo["default"].ins.setRankLastTimeData(t);

    this.checkGetUserInfo();

    _panelMgr["default"].ins.open("ui/ui_rank", null);
  };

  e.prototype.getFail2 = function () {
    var t = _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);

    _pInfo["default"].ins.setRankLastTimeData(t);

    this.jumpToPage(4);
  };

  __decorate([N(cc.BlockInputEvents)], e.prototype, "blockComp", void 0);

  __decorate([N(cc.Node)], e.prototype, "pages", void 0);

  __decorate([N(cc.Node)], e.prototype, "downNode", void 0);

  __decorate([N(_top["default"])], e.prototype, "top", void 0);

  __decorate([N(cc.Prefab)], e.prototype, "lPfb", void 0);

  __decorate([N(cc.Sprite)], e.prototype, "powerSp", void 0);

  __decorate([N(cc.Camera)], e.prototype, "camera", void 0);

  __decorate([N(cc.Node)], e.prototype, "rankBtn1", void 0);

  __decorate([N(cc.Node)], e.prototype, "btnBgNode", void 0);

  return o = __decorate([R], e);
}(cc.Component);

exports["default"] = C;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/packItem1.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '55c3ekMcB9Er61q37vHGQCP', 'packItem1');
// scripts/packItem1.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _item = require("item");

var _bagMgr = require("bagMgr");

var _panelMgr = require("panelMgr");

var _shopMgr = require("shopMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var h = cc._decorator;
var f = h.ccclass;
var g = h.property;

var y = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.packName = null;
    e.scrollView = null;
    e.priceLb = null;
    e.rewardItem = null;
    e.finNode = null;
    e.btnNode = null;
    e.adNode = null;
    e.buyNumLb = null;
    e.redNode = null;
    e.discountLb = null;
    e.shopData = null;
    e.isFree = !1;
    e._rewardItems = [];
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {};

  e.prototype.initItem = function (t) {
    this.shopData = t;
    this.packName.string = (null == t ? void 0 : t.title) || "礼包";
    var e = t.price || 0;
    this.priceLb.string = "¥" + t.price;
    this.isFree = 0 == e;

    var o = _shopMgr["default"].ins.getPackRed();

    o[t.key] ? this.redNode.active = !1 : (this.redNode.active = !0, o[t.key] = 1, _shopMgr["default"].ins.setPackRed(o));
    t.discount ? (this.discountLb.string = t.discount + "折", this.discountLb.node.parent.active = !0) : this.discountLb.node.parent.active = !1;
    this.initReward(t.props);
    this.checkData();
  };

  e.prototype.initReward = function (t) {
    var e = this;

    if (t) {
      var o = 0;
      var n = this.scrollView.content;

      for (var i in n.children.forEach(function (t) {
        e._rewardItems.push(t);
      }), n.removeAllChildren(), t) {
        var r = t[i];

        var a = this._rewardItems.shift();

        a || (a = cc.instantiate(this.rewardItem));
        a.parent = n;
        a.active = !0;
        var c = a.getComponent(_item["default"]);
        c && c.initByData(i, r);
        o++;
      }

      n.setContentSize(93 * o, 100);
    }
  };

  e.prototype.checkData = function () {
    if (this.shopData) {
      var t = this.shopData.key;

      var e = _pInfo["default"].ins.getShopRecord();

      var o = this.shopData.daily_limit_nums || 0;
      var n = e[t] || 0;
      this.btnNode.active = !this.isFree;
      this.adNode.active = this.isFree;
      var i = this.isFree ? this.adNode : this.btnNode;
      var r = n >= o;
      this.finNode.active = r;
      i.active = !r;
      this.buyNumLb.node.active = !r;
      this.buyNumLb.string = "限购:" + n + "/" + o;
    }
  };

  e.prototype.onBtnBuy = function () {
    var t = this;

    if (this.shopData) {
      var e = JSON.stringify(this.shopData.props);

      _idx.platform.payment(this.shopData.key, this.shopData.price, 0, e).then(function () {
        t.getReward();
      })["catch"](function (t) {
        _tipMgr["default"].ins.showTip(t, !0);
      });
    }
  };

  e.prototype.onBtnAd = function () {
    this.shopData && this.getReward();
  };

  e.prototype.getReward = function () {
    var t = this.shopData.props;

    for (var e in t) {
      var o = t[e];

      _bagMgr["default"].ins.addItem(e, o);
    }

    for (var n = this.scrollView.content.children, i = [], r = 0, a = n.length; r < a; r++) {
      var u = n[r];
      var p = u.getComponent(_item["default"]);
      var h = {};
      h.itemId = p.key;
      h.worldPos = u.parent.convertToWorldSpaceAR(u.position);
      h.value = Number(p.count);
      i.push(h);
    }

    _panelMgr["default"].ins.open("ui/ui_flyAni", {
      itemDatas: i
    });

    _pInfo["default"].ins.addShopRecord(this.shopData.key);

    this.checkData();
  };

  __decorate([g(cc.Label)], e.prototype, "packName", void 0);

  __decorate([g(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([g(cc.Label)], e.prototype, "priceLb", void 0);

  __decorate([g(cc.Node)], e.prototype, "rewardItem", void 0);

  __decorate([g(cc.Node)], e.prototype, "finNode", void 0);

  __decorate([g(cc.Node)], e.prototype, "btnNode", void 0);

  __decorate([g(cc.Node)], e.prototype, "adNode", void 0);

  __decorate([g(cc.Label)], e.prototype, "buyNumLb", void 0);

  __decorate([g(cc.Node)], e.prototype, "redNode", void 0);

  __decorate([g(cc.Label)], e.prototype, "discountLb", void 0);

  return __decorate([f], e);
}(cc.Component);

exports["default"] = y;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/loadingAni.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3d72c1FxE5EP6uGCDaZ+H5L', 'loadingAni');
// scripts/loadingAni.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a;
var s = cc._decorator;
var c = s.ccclass;
var l = s.property;

(function (t) {
  t.to = "loadingTo";
  t.back = "loadingBack";
})(a || (a = {}));

var u = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bg = null;
    e.ani = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.ani.on(cc.Animation.EventType.FINISHED, this.playEnd, this);
  };

  e.prototype.playEnd = function (t, e) {
    var o = this;
    if (e.name == a.to) cc.director.loadScene(this.newRoot, function () {
      o.playBack();
      o.cb && o.cb();
    });else {
      var n = this.node;
      cc.game.removePersistRootNode(n);
      n.destroy();
    }
  };

  e.prototype.playTo = function (t, e, o, n) {
    this.bg.setContentSize(t, e);
    this.newRoot = o;
    this.cb = n;
    this.ani.play(a.to);
  };

  e.prototype.playBack = function () {
    this.ani.play(a.back);
  };

  __decorate([l(cc.Node)], e.prototype, "bg", void 0);

  __decorate([l(cc.Animation)], e.prototype, "ani", void 0);

  return __decorate([c], e);
}(cc.Component);

exports["default"] = u;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcbG9hZGluZ0FuaS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJhIiwicyIsImNjIiwiX2RlY29yYXRvciIsImMiLCJjY2NsYXNzIiwibCIsInByb3BlcnR5IiwidCIsInRvIiwiYmFjayIsInUiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJiZyIsImFuaSIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsIm9uTG9hZCIsIm9uIiwiQW5pbWF0aW9uIiwiRXZlbnRUeXBlIiwiRklOSVNIRUQiLCJwbGF5RW5kIiwibyIsIm5hbWUiLCJkaXJlY3RvciIsImxvYWRTY2VuZSIsIm5ld1Jvb3QiLCJwbGF5QmFjayIsImNiIiwibm9kZSIsImdhbWUiLCJyZW1vdmVQZXJzaXN0Um9vdE5vZGUiLCJkZXN0cm95IiwicGxheVRvIiwic2V0Q29udGVudFNpemUiLCJwbGF5IiwiX19kZWNvcmF0ZSIsIk5vZGUiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQSxJQUFJQyxDQUFKO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLENBQUMsVUFBVUMsQ0FBVixFQUFhO0VBQ1ZBLENBQUMsQ0FBQ0MsRUFBRixHQUFPLFdBQVA7RUFDQUQsQ0FBQyxDQUFDRSxJQUFGLEdBQVMsYUFBVDtBQUNILENBSEQsRUFHR1YsQ0FBQyxLQUFLQSxDQUFDLEdBQUcsRUFBVCxDQUhKOztBQUlBLElBQUlXLENBQUMsR0FBSSxVQUFVSCxDQUFWLEVBQWE7RUFDbEIsU0FBU0ksQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNKLENBQVQsSUFBY0EsQ0FBQyxDQUFDSyxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxFQUFGLEdBQU8sSUFBUDtJQUNBSCxDQUFDLENBQUNJLEdBQUYsR0FBUSxJQUFSO0lBQ0EsT0FBT0osQ0FBUDtFQUNIOztFQUNESyxTQUFTLENBQUNMLENBQUQsRUFBSUosQ0FBSixDQUFUOztFQUNBSSxDQUFDLENBQUNNLFNBQUYsQ0FBWUMsTUFBWixHQUFxQixZQUFZO0lBQzdCLEtBQUtILEdBQUwsQ0FBU0ksRUFBVCxDQUFZbEIsRUFBRSxDQUFDbUIsU0FBSCxDQUFhQyxTQUFiLENBQXVCQyxRQUFuQyxFQUE2QyxLQUFLQyxPQUFsRCxFQUEyRCxJQUEzRDtFQUNILENBRkQ7O0VBR0FaLENBQUMsQ0FBQ00sU0FBRixDQUFZTSxPQUFaLEdBQXNCLFVBQVVoQixDQUFWLEVBQWFJLENBQWIsRUFBZ0I7SUFDbEMsSUFBSWEsQ0FBQyxHQUFHLElBQVI7SUFDQSxJQUFJYixDQUFDLENBQUNjLElBQUYsSUFBVTFCLENBQUMsQ0FBQ1MsRUFBaEIsRUFDSVAsRUFBRSxDQUFDeUIsUUFBSCxDQUFZQyxTQUFaLENBQXNCLEtBQUtDLE9BQTNCLEVBQW9DLFlBQVk7TUFDNUNKLENBQUMsQ0FBQ0ssUUFBRjtNQUNBTCxDQUFDLENBQUNNLEVBQUYsSUFBUU4sQ0FBQyxDQUFDTSxFQUFGLEVBQVI7SUFDSCxDQUhELEVBREosS0FLSztNQUNELElBQUlwQyxDQUFDLEdBQUcsS0FBS3FDLElBQWI7TUFDQTlCLEVBQUUsQ0FBQytCLElBQUgsQ0FBUUMscUJBQVIsQ0FBOEJ2QyxDQUE5QjtNQUNBQSxDQUFDLENBQUN3QyxPQUFGO0lBQ0g7RUFDSixDQVpEOztFQWFBdkIsQ0FBQyxDQUFDTSxTQUFGLENBQVlrQixNQUFaLEdBQXFCLFVBQVU1QixDQUFWLEVBQWFJLENBQWIsRUFBZ0JhLENBQWhCLEVBQW1COUIsQ0FBbkIsRUFBc0I7SUFDdkMsS0FBS29CLEVBQUwsQ0FBUXNCLGNBQVIsQ0FBdUI3QixDQUF2QixFQUEwQkksQ0FBMUI7SUFDQSxLQUFLaUIsT0FBTCxHQUFlSixDQUFmO0lBQ0EsS0FBS00sRUFBTCxHQUFVcEMsQ0FBVjtJQUNBLEtBQUtxQixHQUFMLENBQVNzQixJQUFULENBQWN0QyxDQUFDLENBQUNTLEVBQWhCO0VBQ0gsQ0FMRDs7RUFNQUcsQ0FBQyxDQUFDTSxTQUFGLENBQVlZLFFBQVosR0FBdUIsWUFBWTtJQUMvQixLQUFLZCxHQUFMLENBQVNzQixJQUFULENBQWN0QyxDQUFDLENBQUNVLElBQWhCO0VBQ0gsQ0FGRDs7RUFHQTZCLFVBQVUsQ0FBQyxDQUFDakMsQ0FBQyxDQUFDSixFQUFFLENBQUNzQyxJQUFKLENBQUYsQ0FBRCxFQUFlNUIsQ0FBQyxDQUFDTSxTQUFqQixFQUE0QixJQUE1QixFQUFrQyxLQUFLLENBQXZDLENBQVY7O0VBQ0FxQixVQUFVLENBQUMsQ0FBQ2pDLENBQUMsQ0FBQ0osRUFBRSxDQUFDbUIsU0FBSixDQUFGLENBQUQsRUFBb0JULENBQUMsQ0FBQ00sU0FBdEIsRUFBaUMsS0FBakMsRUFBd0MsS0FBSyxDQUE3QyxDQUFWOztFQUNBLE9BQU9xQixVQUFVLENBQUMsQ0FBQ25DLENBQUQsQ0FBRCxFQUFNUSxDQUFOLENBQWpCO0FBQ0gsQ0FwQ08sQ0FvQ0xWLEVBQUUsQ0FBQ3VDLFNBcENFLENBQVI7O0FBcUNBM0MsT0FBTyxXQUFQLEdBQWtCYSxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBhO1xudmFyIHMgPSBjYy5fZGVjb3JhdG9yO1xudmFyIGMgPSBzLmNjY2xhc3M7XG52YXIgbCA9IHMucHJvcGVydHk7XG4oZnVuY3Rpb24gKHQpIHtcbiAgICB0LnRvID0gXCJsb2FkaW5nVG9cIjtcbiAgICB0LmJhY2sgPSBcImxvYWRpbmdCYWNrXCI7XG59KShhIHx8IChhID0ge30pKTtcbnZhciB1ID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuYmcgPSBudWxsO1xuICAgICAgICBlLmFuaSA9IG51bGw7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUub25Mb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmFuaS5vbihjYy5BbmltYXRpb24uRXZlbnRUeXBlLkZJTklTSEVELCB0aGlzLnBsYXlFbmQsIHRoaXMpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUucGxheUVuZCA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIHZhciBvID0gdGhpcztcbiAgICAgICAgaWYgKGUubmFtZSA9PSBhLnRvKVxuICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKHRoaXMubmV3Um9vdCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIG8ucGxheUJhY2soKTtcbiAgICAgICAgICAgICAgICBvLmNiICYmIG8uY2IoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBuID0gdGhpcy5ub2RlO1xuICAgICAgICAgICAgY2MuZ2FtZS5yZW1vdmVQZXJzaXN0Um9vdE5vZGUobik7XG4gICAgICAgICAgICBuLmRlc3Ryb3koKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgZS5wcm90b3R5cGUucGxheVRvID0gZnVuY3Rpb24gKHQsIGUsIG8sIG4pIHtcbiAgICAgICAgdGhpcy5iZy5zZXRDb250ZW50U2l6ZSh0LCBlKTtcbiAgICAgICAgdGhpcy5uZXdSb290ID0gbztcbiAgICAgICAgdGhpcy5jYiA9IG47XG4gICAgICAgIHRoaXMuYW5pLnBsYXkoYS50byk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5wbGF5QmFjayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5hbmkucGxheShhLmJhY2spO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbbChjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcImJnXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbbChjYy5BbmltYXRpb24pXSwgZS5wcm90b3R5cGUsIFwiYW5pXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW2NdLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSB1O1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/mySafeArea.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '92030QpL0pPP4FHS+/UWwhC', 'mySafeArea');
// scripts/mySafeArea.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.getSafeAreaRect = void 0;

var _global = require("global");

var s = cc._decorator;
var c = s.ccclass;
var l = (s.property, null);

exports.getSafeAreaRect = function () {
  if (!l) {
    var t = cc.sys;
    if (_global["default"].padScale) l = new cc.Rect(0, 0, 720, 1560);else if (t.platform == t.ALIPAY_GAME) l = new cc.Rect(0, 62, 720, 1560);else {
      var e = cc.sys.getSafeAreaRect();
      var o = e.y;
      t.platform == t.WECHAT_GAME && o < 62 && (o = 62);
      l = new cc.Rect(e.x, o, e.width, e.height);
    }
  }

  return l;
};

var u = function (t) {
  function e() {
    return null !== t && t.apply(this, arguments) || this;
  }

  __extends(e, t);

  e.prototype.updateArea = function () {
    if (cc.sys.platform != cc.sys.ALIPAY_GAME) {
      var t = this.node.getComponent(cc.Widget);

      if (t) {
        t.updateAlignment();
        var e = this.node.position;
        var n = this.node.getAnchorPoint();
        t.isAlignTop = t.isAlignBottom = t.isAlignLeft = t.isAlignRight = !0;
        var i = cc.winSize.width;
        var r = cc.winSize.height;
        var a = exports.getSafeAreaRect();
        t.top = r - a.y - a.height;
        t.bottom = a.y;
        t.left = a.x;
        t.right = i - a.x - a.width;
        t.updateAlignment();
        var s = this.node.position;
        var c = n.x - (s.x - e.x) / this.node.width;
        var l = n.y - (s.y - e.y) / this.node.height;
        this.node.setAnchorPoint(c, l);

        cc._widgetManager.add(t);
      }
    }
  };

  return __decorate([c], e);
}(cc.SafeArea);

exports["default"] = u;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcbXlTYWZlQXJlYS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRTYWZlQXJlYVJlY3QiLCJfZ2xvYmFsIiwicmVxdWlyZSIsInMiLCJjYyIsIl9kZWNvcmF0b3IiLCJjIiwiY2NjbGFzcyIsImwiLCJwcm9wZXJ0eSIsInQiLCJzeXMiLCJwYWRTY2FsZSIsIlJlY3QiLCJwbGF0Zm9ybSIsIkFMSVBBWV9HQU1FIiwiZSIsIm8iLCJ5IiwiV0VDSEFUX0dBTUUiLCJ4Iiwid2lkdGgiLCJoZWlnaHQiLCJ1IiwiYXBwbHkiLCJhcmd1bWVudHMiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJ1cGRhdGVBcmVhIiwibm9kZSIsImdldENvbXBvbmVudCIsIldpZGdldCIsInVwZGF0ZUFsaWdubWVudCIsInBvc2l0aW9uIiwiZ2V0QW5jaG9yUG9pbnQiLCJpc0FsaWduVG9wIiwiaXNBbGlnbkJvdHRvbSIsImlzQWxpZ25MZWZ0IiwiaXNBbGlnblJpZ2h0IiwiaSIsIndpblNpemUiLCJyIiwiYSIsInRvcCIsImJvdHRvbSIsImxlZnQiLCJyaWdodCIsInNldEFuY2hvclBvaW50IiwiX3dpZGdldE1hbmFnZXIiLCJhZGQiLCJfX2RlY29yYXRlIiwiU2FmZUFyZWEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQUQsT0FBTyxDQUFDRSxlQUFSLEdBQTBCLEtBQUssQ0FBL0I7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJQyxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFD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QUN0QixDQUFOLEdBQVVzQixDQUFDLENBQUNyQixLQUF0QjtRQUNBWCxDQUFDLENBQUNzQixlQUFGO1FBQ0EsSUFBSTdCLENBQUMsR0FBRyxLQUFLMEIsSUFBTCxDQUFVSSxRQUFsQjtRQUNBLElBQUkzQixDQUFDLEdBQUdYLENBQUMsQ0FBQ3lCLENBQUYsR0FBTSxDQUFDakIsQ0FBQyxDQUFDaUIsQ0FBRixHQUFNSixDQUFDLENBQUNJLENBQVQsSUFBYyxLQUFLUyxJQUFMLENBQVVSLEtBQXRDO1FBQ0EsSUFBSWIsQ0FBQyxHQUFHYixDQUFDLENBQUN1QixDQUFGLEdBQU0sQ0FBQ2YsQ0FBQyxDQUFDZSxDQUFGLEdBQU1GLENBQUMsQ0FBQ0UsQ0FBVCxJQUFjLEtBQUtXLElBQUwsQ0FBVVAsTUFBdEM7UUFDQSxLQUFLTyxJQUFMLENBQVVrQixjQUFWLENBQXlCekMsQ0FBekIsRUFBNEJFLENBQTVCOztRQUNBSixFQUFFLENBQUM0QyxjQUFILENBQWtCQyxHQUFsQixDQUFzQnZDLENBQXRCO01BQ0g7SUFDSjtFQUNKLENBdkJEOztFQXdCQSxPQUFPd0MsVUFBVSxDQUFDLENBQUM1QyxDQUFELENBQUQsRUFBTVUsQ0FBTixDQUFqQjtBQUNILENBOUJPLENBOEJMWixFQUFFLENBQUMrQyxRQTlCRSxDQUFSOztBQStCQXJELE9BQU8sV0FBUCxHQUFrQnlCLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xuZXhwb3J0cy5nZXRTYWZlQXJlYVJlY3QgPSB2b2lkIDA7XG52YXIgX2dsb2JhbCA9IHJlcXVpcmUoXCJnbG9iYWxcIik7XG52YXIgcyA9IGNjLl9kZWNvcmF0b3I7XG52YXIgYyA9IHMuY2NjbGFzcztcbnZhciBsID0gKHMucHJvcGVydHksIG51bGwpO1xuZXhwb3J0cy5nZXRTYWZlQXJlYVJlY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCFsKSB7XG4gICAgICAgIHZhciB0ID0gY2Muc3lzO1xuICAgICAgICBpZiAoX2dsb2JhbC5kZWZhdWx0LnBhZFNjYWxlKSBsID0gbmV3IGNjLlJlY3QoMCwgMCwgNzIwLCAxNTYwKTtcbiAgICAgICAgZWxzZSBpZiAodC5wbGF0Zm9ybSA9PSB0LkFMSVBBWV9HQU1FKSBsID0gbmV3IGNjLlJlY3QoMCwgNjIsIDcyMCwgMTU2MCk7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIGUgPSBjYy5zeXMuZ2V0U2FmZUFyZWFSZWN0KCk7XG4gICAgICAgICAgICB2YXIgbyA9IGUueTtcbiAgICAgICAgICAgIHQucGxhdGZvcm0gPT0gdC5XRUNIQVRfR0FNRSAmJiBvIDwgNjIgJiYgKG8gPSA2Mik7XG4gICAgICAgICAgICBsID0gbmV3IGNjLlJlY3QoZS54LCBvLCBlLndpZHRoLCBlLmhlaWdodCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGw7XG59O1xudmFyIHUgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICByZXR1cm4gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUudXBkYXRlQXJlYSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGNjLnN5cy5wbGF0Zm9ybSAhPSBjYy5zeXMuQUxJUEFZX0dBTUUpIHtcbiAgICAgICAgICAgIHZhciB0ID0gdGhpcy5ub2RlLmdldENvbXBvbmVudChjYy5XaWRnZXQpO1xuICAgICAgICAgICAgaWYgKHQpIHtcbiAgICAgICAgICAgICAgICB0LnVwZGF0ZUFsaWdubWVudCgpO1xuICAgICAgICAgICAgICAgIHZhciBlID0gdGhpcy5ub2RlLnBvc2l0aW9uO1xuICAgICAgICAgICAgICAgIHZhciBuID0gdGhpcy5ub2RlLmdldEFuY2hvclBvaW50KCk7XG4gICAgICAgICAgICAgICAgdC5pc0FsaWduVG9wID0gdC5pc0FsaWduQm90dG9tID0gdC5pc0FsaWduTGVmdCA9IHQuaXNBbGlnblJpZ2h0ID0gITA7XG4gICAgICAgICAgICAgICAgdmFyIGkgPSBjYy53aW5TaXplLndpZHRoO1xuICAgICAgICAgICAgICAgIHZhciByID0gY2Mud2luU2l6ZS5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgdmFyIGEgPSBleHBvcnRzLmdldFNhZmVBcmVhUmVjdCgpO1xuICAgICAgICAgICAgICAgIHQudG9wID0gciAtIGEueSAtIGEuaGVpZ2h0O1xuICAgICAgICAgICAgICAgIHQuYm90dG9tID0gYS55O1xuICAgICAgICAgICAgICAgIHQubGVmdCA9IGEueDtcbiAgICAgICAgICAgICAgICB0LnJpZ2h0ID0gaSAtIGEueCAtIGEud2lkdGg7XG4gICAgICAgICAgICAgICAgdC51cGRhdGVBbGlnbm1lbnQoKTtcbiAgICAgICAgICAgICAgICB2YXIgcyA9IHRoaXMubm9kZS5wb3NpdGlvbjtcbiAgICAgICAgICAgICAgICB2YXIgYyA9IG4ueCAtIChzLnggLSBlLngpIC8gdGhpcy5ub2RlLndpZHRoO1xuICAgICAgICAgICAgICAgIHZhciBsID0gbi55IC0gKHMueSAtIGUueSkgLyB0aGlzLm5vZGUuaGVpZ2h0O1xuICAgICAgICAgICAgICAgIHRoaXMubm9kZS5zZXRBbmNob3JQb2ludChjLCBsKTtcbiAgICAgICAgICAgICAgICBjYy5fd2lkZ2V0TWFuYWdlci5hZGQodCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtjXSwgZSk7XG59KShjYy5TYWZlQXJlYSk7XG5leHBvcnRzLmRlZmF1bHQgPSB1O1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/pInfo.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ed1e6oh4MhAKYXj2NqhTJgo', 'pInfo');
// scripts/pInfo.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.chgScene = exports.challengeType = exports.gameType = exports.sceneType = exports.ROOT = void 0;
var r;

var _evts = require("evts");

var _idx = require("idx");

var _pConst = require("pConst");

var _time = require("time");

var _uData = require("uData");

var _cfgMgr = require("cfgMgr");

var _loadingAni = require("loadingAni");

var _global = require("global");

var _bagMgr = require("bagMgr");

var _jigsawMgr = require("jigsawMgr");

var _levelMgr = require("levelMgr");

var _rankMgr = require("rankMgr");

var _shopMgr = require("shopMgr");

var _ = (require("skinMgr"), require("game"));

exports.sceneType = {
  loading: "loading",
  main: "main",
  game: "game",
  guide: "guide"
};

(function (t) {
  t[t.normal = 0] = "normal", t[t.race = 1] = "race", t[t.challenge = 2] = "challenge", t[t.practice = 3] = "practice", t[t.festival = 4] = "festival", t[t.freedom = 5] = "freedom";
})(r = exports.gameType || (exports.gameType = {}));

(function (t) {
  t[t.worm = 1] = "worm", t[t.tree = 2] = "tree", t[t.ice = 3] = "ice";
})(exports.challengeType || (exports.challengeType = {}));

exports.chgScene = function (t, e) {
  var n;
  var i;
  var s;
  e && (n = e.cb, i = e.noAni, s = e.gameType);

  _evts["default"].opE.clear();

  var c = cc.director;
  exports.ROOT = t;
  t == exports.sceneType.game ? (s = _["default"].type = s || r.normal) == r.challenge && (_["default"].challageData = e.challengeData || {}) : (delete _["default"].type, delete _["default"].challageData, _levelMgr["default"].ins.clearPrcitceId());
  s == r.freedom && (_global["default"].freedomSize = e.freedomSize || 10);

  var l = function l() {
    null == n || n();
  };

  if (i) c.loadScene(t, l);else {
    var u = cc.assetManager.getBundle("prefab");
    u || c.loadScene(t, l);
    u.load("prefab/loadingAni", cc.Prefab, function (e, o) {
      var i;

      if (!e) {
        var r = cc.find("Canvas");

        if (r) {
          var a = cc.view.getVisibleSize();
          var s = a.width;
          var u = a.height;
          var p = new cc.Node("mask");
          p.setContentSize(s, u);
          p.addComponent(cc.BlockInputEvents);
          r.addChild(p);
          (i = cc.instantiate(o)).setPosition(s / 2, u / 2);
          r.parent.addChild(i);
          i.getComponent(_loadingAni["default"]).playTo(s, u, t, n);
          cc.game.addPersistRootNode(i);
        }
      }

      i ? c.preloadScene(t) : c.loadScene(t, l);
    });
  }
};

var b = function () {
  function t() {
    this.gameType = {
      nomal: "nomal"
    };
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      return this._ins || (this._ins = new w());
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.saveCoinData = function () {};

  return t;
}();

exports["default"] = b;

var w = function () {
  function t() {
    this.isOpenLock = !0;
    this.recordData = {
      main: {
        gTimes: 0,
        wTimes: 0,
        heWins: 0,
        tPoints: 0,
        hePoints: 0
      },
      daily: {
        gTimes: 0,
        wTimes: 0,
        heWins: 0,
        tPoints: 0,
        hePoints: 0,
        feTime: 0
      },
      race: {
        gTimes: 0,
        tPoints: 0,
        hePoints: 0,
        feTime: 0
      }
    };
    this.uploadData = {
      ttMScore: 0,
      ttDScore: 0,
      ttMWin: 0,
      ttDWin: 0,
      tdMScore: 0,
      tdDScore: 0,
      tdMWin: 0,
      tdDWin: 0,
      tdRScore: 0
    };
    this.usingSkin = {
      bg: 1,
      role: 1,
      headFrame: 1,
      nameFrame: 1
    };
  }

  t.prototype.getPerPowerNeedTime = function () {
    var t = _cfgMgr["default"].serverCfg.times.forUser;
    return (_uData["default"].ins.getIsNewUser() ? t.new_user.rules.one_time.val : t.all.rules.one_time.val) || 180;
  };

  t.prototype.getInitPower = function () {
    var t = _cfgMgr["default"].serverCfg.times.forUser;
    return (_uData["default"].ins.getIsNewUser() ? t.new_user.rules.int_times.val : t.all.rules.int_times.val) || 100;
  };

  t.prototype.getLevel = function () {
    var t = _uData["default"].ins.getLocalData().lvl;

    return null == t ? 1 : Number(t);
  };

  t.prototype.setLevel = function (t) {
    _uData["default"].ins.setLocalData({
      lvl: t
    });
  };

  t.prototype.finishLvl = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2, {
          data: {
            lvl: this.getLevel() + 1
          }
        }];
      });
    });
  };

  t.prototype.getGuideDone = function () {
    return _uData["default"].ins.getLocalData().guideDone;
  };

  t.prototype.setGuideDone = function () {
    _uData["default"].ins.setLocalData({
      guideDone: 1
    });
  };

  t.prototype.getPuzzleLvl = function () {
    var t = _uData["default"].ins.getLocalData().puzzleLvl;

    var e = _global["default"].chapterCount;
    t > 54 * e && (t = 54 * e, _global["default"].levelDone = !0);
    return null == t ? 1 : Number(t);
  };

  t.prototype.setPuzzleLvl = function (t) {
    _uData["default"].ins.setLocalData({
      puzzleLvl: t
    });

    return _levelMgr["default"].ins.updateData();
  };

  t.prototype.finishPuzzleLvl = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      return __generator(this, function (e) {
        switch (e.label) {
          case 0:
            return t = this.getPuzzleLvl(), [4, this.setPuzzleLvl(t + 1)];

          case 1:
            return e.sent(), [2];
        }
      });
    });
  };

  t.prototype.getJisawLvl = function () {
    var t = _uData["default"].ins.getLocalData().jisawLvl;

    return null == t ? 1 : Number(t);
  };

  t.prototype.setJisawLvl = function (t) {
    _uData["default"].ins.setLocalData({
      jisawLvl: t
    });
  };

  t.prototype.finishJisawLvl = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2, {
          data: {
            lvl: this.getJisawLvl() + 1
          }
        }];
      });
    });
  };

  t.prototype.getCoin = function () {
    var t = _uData["default"].ins.getLocalData().coin;

    return null == t ? 0 : Number(t);
  };

  t.prototype.addCoin = function (t, e) {
    if (void 0 === e && (e = !0), !isNaN(t)) {
      var o = this.getCoin() + t;
      o < 0 && (o = 0);
      this.setCoin(o);
      e && _evts["default"].opE.emit({
        action: _evts["default"].COIN_CHG
      });
    }
  };

  t.prototype.setCoin = function (t) {
    _uData["default"].ins.setLocalData({
      coin: t
    });
  };

  t.prototype.getlevel = function () {
    var t = _uData["default"].ins.getLocalData().level;

    return null == t ? 0 : Number(t);
  };

  t.prototype.addLevel = function (t) {
    if (void 0 === t && (t = 1), !isNaN(t)) {
      var e = this.getlevel() + t;
      e < 0 && (e = 0);

      _uData["default"].ins.setLocalData({
        level: e
      });

      _evts["default"].opE.emit({
        action: _evts["default"].LEV_CHG
      });
    }
  };

  t.prototype.addExp = function (t) {
    if (!isNaN(t)) {
      var e = this.getExp() + t;
      e < 0 && (e = 0);
      var o = this.getlevel();

      if (o * o * 20 < e) {
        for (var n = 0, i = 8; o * o * 20 < e && i > 0;) {
          n += 1, o += 1, i--;
        }

        this.addLevel(n);
      }

      _uData["default"].ins.setLocalData({
        exp: e
      });

      _evts["default"].opE.emit({
        action: _evts["default"].EXP_CHG
      });
    }
  };

  t.prototype.getExp = function () {
    var t = _uData["default"].ins.getLocalData().exp;

    return null == t ? 0 : Number(t);
  };

  t.prototype.getPower = function () {
    var t = _uData["default"].ins.getLocalData().power;

    return null == t ? this.getInitPower() : Number(t);
  };

  t.prototype.addPower = function (t, e) {
    if (void 0 === e && (e = !0), !isNaN(t)) {
      var o = this.getPower();
      var n = o + t;
      n < 0 && (n = 0);
      this.setPower(n);
      var i = this.getInitPower();

      if (n <= i) {
        var r = o - n;
        o >= i && (this.setPowerFullTime(0), r = i - n);
        this.updatePowerFullTime(r);
      } else o < i && this.updatePowerFullTime(o - i);

      e && _evts["default"].opE.emit({
        action: _evts["default"].POWER_CHG
      });
    }
  };

  t.prototype.setPower = function (t) {
    t != this.getPower() && (t < 0 && (t = 0), _uData["default"].ins.setLocalData({
      power: t
    }));
  };

  t.prototype.getPowerFullTime = function () {
    var t = _uData["default"].ins.getLocalData().powerFullTime;

    return null == t ? 0 : Number(t);
  };

  t.prototype.updatePowerFullTime = function (t) {
    var e = this.getPowerFullTime() || _time["default"].ins.serverTime;

    e += t * this.getPerPowerNeedTime();
    this.setPowerFullTime(e);
  };

  t.prototype.setPowerFullTime = function (t) {
    _uData["default"].ins.setLocalData({
      powerFullTime: t
    });
  };

  t.prototype.getTask = function (t) {
    var e = _uData["default"].ins.getLocalData()[t];

    null == e && (e = {});
    return e;
  };

  t.prototype.setTask = function (t, e) {
    var o;
    e && _uData["default"].ins.setLocalData(((o = {})[t] = e, o));
  };

  t.prototype.getItem = function () {
    var t = _uData["default"].ins.getLocalData().item;

    null == t && (t = {});
    return t;
  };

  t.prototype.recordGameResult = function (t, e, o, n, i) {
    var a;
    var l;

    if (t === r.normal) {
      var u = this.getRecordMainData();
      e ? (u.wTimes = Number(u.wTimes) + 1, this.winMainLevel(), u.heWins = u.heWins > this.getConsWinTimes() ? u.heWins : this.getConsWinTimes(), this.getLuckyState() || 0 == Number(u.wTimes) % 2 && this.setLuckState(!0)) : this.setConsWinTimes(0);
      u.tPoints = Number(u.tPoints) + o;
      u.hePoints = u.hePoints > o ? u.hePoints : o;
      this.setTodayMainScore(this.getTodayMainScore() + o);
      null != i && (null === (a = _idx.platform.setFriendRankData) || void 0 === a || a.call(_idx.platform, i, _pConst.SDKConfig.ttZoneId.normal));
    } else if (t === r.challenge) {
      var p = this.getRecordDailyData();
      e ? (p.wTimes = Number(p.wTimes) + 1, this.winDailyLevel(), p.heWins = p.heWins > this.getDailyWinTimes() ? p.heWins : this.getDailyWinTimes()) : this.setDailyWinTimes(0);
      p.tPoints = Number(p.tPoints) + o;
      p.hePoints = p.hePoints > o ? p.hePoints : o;
      n && (p.feTime = p.feTime < n ? p.feTime : n);
      this.setTodayDailyScore(this.getTodayDailyScore() + o);
    } else if (t === r.race) {
      var d = this.getRecordRaceData();
      d.tPoints = Number(d.tPoints) + o;
      d.hePoints = d.hePoints > o ? d.hePoints : o;
      null === (l = _idx.platform.setFriendRankData) || void 0 === l || l.call(_idx.platform, d.hePoints, _pConst.SDKConfig.ttZoneId.race);
      n && (d.feTime = d.feTime < n ? d.feTime : n);
      this.setTodayRaceScore(o);
    }

    this.setRecordData(this.getRecordData());
  };

  t.prototype.recordGameTimes = function (t) {
    var e;

    switch (t) {
      case r.normal:
        e = this.getRecordMainData();
        break;

      case r.challenge:
        e = this.getRecordDailyData();
        break;

      case r.race:
        e = this.getRecordRaceData();
    }

    e && (e.gTimes = Number(e.gTimes) + 1, this.setRecordData(this.getRecordData()));
  };

  t.prototype.getRecordData = function () {
    var t = _uData["default"].ins.getLocalData().recordData;

    return null == t ? this.recordData : t;
  };

  t.prototype.setRecordData = function (t) {
    _uData["default"].ins.setLocalData({
      recordData: t
    });
  };

  t.prototype.getRecordMainData = function () {
    return this.getRecordData().main;
  };

  t.prototype.getRecordDailyData = function () {
    return this.getRecordData().daily;
  };

  t.prototype.getRecordRaceData = function () {
    return this.getRecordData().race;
  };

  t.prototype.getConsWinTimes = function () {
    var t = _uData["default"].ins.getLocalData().mConsWTimes;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setConsWinTimes = function (t) {
    _uData["default"].ins.setLocalData({
      mConsWTimes: t
    });
  };

  t.prototype.winMainLevel = function () {
    var t = this.getConsWinTimes();
    this.setConsWinTimes(t + 1);
    var e = this.getTodayMainWin();
    this.setTodayMainWin(e + 1);
  };

  t.prototype.getDailyWinTimes = function () {
    var t = _uData["default"].ins.getLocalData().dConsWTimes;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setDailyWinTimes = function (t) {
    _uData["default"].ins.setLocalData({
      dConsWTimes: t
    });
  };

  t.prototype.winDailyLevel = function () {
    var t = this.getDailyWinTimes();
    this.setDailyWinTimes(t + 1);
    var e = this.getTodayDailyWin();
    this.setTodayDailyWin(e + 1);
  };

  t.prototype.getTodayMainScore = function () {
    var t = _uData["default"].ins.getLocalData().tdMScore;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setTodayMainScore = function (t) {
    _uData["default"].ins.setLocalData({
      tdMScore: t
    });
  };

  t.prototype.getTodayMainWin = function () {
    var t = _uData["default"].ins.getLocalData().tdMWin;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setTodayMainWin = function (t) {
    _uData["default"].ins.setLocalData({
      tdMWin: t
    });
  };

  t.prototype.getTodayDailyScore = function () {
    var t = _uData["default"].ins.getLocalData().tdDScore;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setTodayDailyScore = function (t) {
    _uData["default"].ins.setLocalData({
      tdDScore: t
    });
  };

  t.prototype.getTodayDailyWin = function () {
    var t = _uData["default"].ins.getLocalData().tdDWin;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setTodayDailyWin = function (t) {
    _uData["default"].ins.setLocalData({
      tdDWin: t
    });
  };

  t.prototype.getTodayRaceScore = function () {
    var t = _uData["default"].ins.getLocalData().tdRScore;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setTodayRaceScore = function (t) {
    t > this.getTodayRaceScore() && (_uData["default"].ins.setLocalData({
      tdRScore: t
    }), _rankMgr["default"].ins.uploadRaceData());
  };

  t.prototype.chgTodayRaceScore = function (t) {
    _uData["default"].ins.setLocalData({
      tdRScore: t
    });
  };

  t.prototype.getYdayRaceScore = function () {
    var t = _uData["default"].ins.getLocalData().ydRScore;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setYdayRaceScore = function (t) {
    _uData["default"].ins.setLocalData({
      ydRScore: t
    });
  };

  t.prototype.clearDailyData = function () {
    this.setYdayRaceScore(this.getTodayRaceScore());
    this.clearDayUpLoad();
    this.setTodayMainScore(0);
    this.setTodayMainWin(0);
    this.setTodayDailyScore(0);
    this.setTodayDailyWin(0);
    this.chgTodayRaceScore(0);
    this.setTicketAdTimes(0);
    this.setYdayRaceRankData([]);

    _rankMgr["default"].ins.setYdayRaceRankData([]);

    this.setShareNames([]);
    this.setIsGetSlider(!1);
    this.setFirstRaceTip(!1);
    this.setNormalShareTime(0);
    this.setRaceShareTime(0);
    this.setJigsawAdTimes(0);
    this.setNewJigAdTimes(0);
    this.setAdCount(0);
    this.setShareCount(0);
    this.setShopRecord({});

    _shopMgr["default"].ins.setPackRed({});

    _shopMgr["default"].ins.setTabsRed({});
  };

  t.prototype.getLuckTimes = function () {
    var t = _uData["default"].ins.getLocalData().luckyTimes;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setLuckyTimes = function (t) {
    _uData["default"].ins.setLocalData({
      luckyTimes: t
    });
  };

  t.prototype.addLuckyTimes = function () {
    var t = this.getLuckTimes();
    t = (t += 1) > 10 ? 1 : t;
    this.setLuckyTimes(t);
    this.setLuckState(!1);
  };

  t.prototype.getLuckyState = function () {
    var t = _uData["default"].ins.getLocalData().luckyState;

    return null != t && t;
  };

  t.prototype.setLuckState = function (t) {
    _uData["default"].ins.setLocalData({
      luckyState: t
    });
  };

  t.prototype.getPowerAdTimes = function () {
    var t = _uData["default"].ins.getLocalData().powerAdTimes;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setPowerAdTimes = function (t) {
    _uData["default"].ins.setLocalData({
      powerAdTimes: t
    });
  };

  t.prototype.addPowerAdTimes = function () {
    var t = this.getPowerAdTimes();
    t = (t += 1) > 1 ? 0 : t;
    this.setPowerAdTimes(t);
  };

  t.prototype.getCoinAdTimes = function () {
    var t = _uData["default"].ins.getLocalData().coinAdTimes;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setCoinAdTimes = function (t) {
    _uData["default"].ins.setLocalData({
      coinAdTimes: t
    });
  };

  t.prototype.addCoinAdTimes = function () {
    var t = this.getCoinAdTimes();
    t = (t += 1) > 2 ? 0 : t;
    this.setCoinAdTimes(t);
  };

  t.prototype.getTicketAdTimes = function () {
    var t = _uData["default"].ins.getLocalData().ticketAdTimes;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setTicketAdTimes = function (t) {
    _uData["default"].ins.setLocalData({
      ticketAdTimes: t
    });
  };

  t.prototype.addTicketAdTimes = function () {
    var t = this.getTicketAdTimes();
    this.setTicketAdTimes(t + 1);
  };

  t.prototype.getLastUploadRankData = function () {
    var t = _uData["default"].ins.getLocalData().lastUploadRank;

    return null == t ? this.uploadData : t;
  };

  t.prototype.setLastUploadRankData = function (t) {
    _uData["default"].ins.setLocalData({
      lastUploadRank: t
    });
  };

  t.prototype.clearDayUpLoad = function () {
    var t = this.getLastUploadRankData();
    t.tdMScore = 0;
    t.tdDScore = 0;
    t.tdMWin = 0;
    t.tdDWin = 0;
    t.tdRScore = 0;
    this.setLastUploadRankData(t);
  };

  t.prototype.setYdayRaceRankData = function (t) {
    _uData["default"].ins.setLocalData({
      ydayRRData: t
    });
  };

  t.prototype.getRankLastTimeData = function () {
    var t = _uData["default"].ins.getLocalData().rLastTime;

    return null == t ? 0 : t;
  };

  t.prototype.setRankLastTimeData = function (t) {
    _uData["default"].ins.setLocalData({
      rLastTime: t
    });
  };

  t.prototype.getIsGetSlider = function () {
    var t = _uData["default"].ins.getLocalData().isSlider;

    return null != t && t;
  };

  t.prototype.setIsGetSlider = function (t) {
    _uData["default"].ins.setLocalData({
      isSlider: t
    });
  };

  t.prototype.getAliAddHome = function () {
    var t = _uData["default"].ins.getLocalData().aliAddHome;

    return null == t ? -1 : t;
  };

  t.prototype.setAliAddHome = function (t) {
    _uData["default"].ins.setLocalData({
      aliAddHome: t
    });
  };

  t.prototype.getIsFirstRaceTip = function () {
    var t = _uData["default"].ins.getLocalData().isRaceTip;

    return null != t && t;
  };

  t.prototype.setFirstRaceTip = function (t) {
    _uData["default"].ins.setLocalData({
      isRaceTip: t
    });
  };

  t.prototype.getNormalShareTime = function () {
    var t = _uData["default"].ins.getLocalData().norShareT;

    return null == t ? 0 : t;
  };

  t.prototype.setNormalShareTime = function (t) {
    _uData["default"].ins.setLocalData({
      norShareT: t
    });
  };

  t.prototype.getRaceShareTime = function () {
    var t = _uData["default"].ins.getLocalData().raceShareT;

    return null == t ? 0 : t;
  };

  t.prototype.setRaceShareTime = function (t) {
    _uData["default"].ins.setLocalData({
      raceShareT: t
    });
  };

  t.prototype.getJigsawAdTimes = function () {
    var t = _uData["default"].ins.getLocalData().jigsawAdTimes;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setJigsawAdTimes = function (t) {
    _uData["default"].ins.setLocalData({
      jigsawAdTimes: t
    });
  };

  t.prototype.addJigsawAdTimes = function () {
    var t = this.getJigsawAdTimes();
    this.setJigsawAdTimes(t + 1);
  };

  t.prototype.getNewJigAdTimes = function () {
    var t = _uData["default"].ins.getLocalData().newJigAdTimes;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setNewJigAdTimes = function (t) {
    _uData["default"].ins.setLocalData({
      newJigAdTimes: t
    });
  };

  t.prototype.addNewJigAdTimes = function () {
    var t = this.getNewJigAdTimes();
    this.setNewJigAdTimes(t + 1);
  };

  t.prototype.getAdCount = function () {
    var t = _uData["default"].ins.getLocalData().adCount;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setAdCount = function (t) {
    _uData["default"].ins.setLocalData({
      adCount: t
    });
  };

  t.prototype.addAdCount = function () {
    var t = this.getAdCount();
    this.setAdCount(t + 1);
    this.isMaxAdCount() && (_idx.platform.reportEvent(_idx.ERepEvt.adMax), _evts["default"].opE.emit({
      action: _evts["default"].AD_MAX
    }));
  };

  t.prototype.isMaxAdCount = function () {
    return void 0 !== _cfgMgr["default"].serverCfg.daily_max_ad_times.val && this.getAdCount() >= _cfgMgr["default"].serverCfg.daily_max_ad_times.val;
  };

  t.prototype.getShareCount = function () {
    var t = _uData["default"].ins.getLocalData().shareCount;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setShareCount = function (t) {
    _uData["default"].ins.setLocalData({
      shareCount: t
    });
  };

  t.prototype.addShareCount = function () {
    var t = this.getShareCount();
    this.setShareCount(t + 1);
  };

  t.prototype.isMaxShareCount = function () {
    var t;
    var e = null !== (t = _cfgMgr["default"].serverCfg.daily_max_ad_times.share_times_limit) && void 0 !== t ? t : 5;
    return this.getShareCount() >= e;
  };

  t.prototype.getJigsawBgEndTimesByIdx = function (t) {
    return this.getJigsawBgEndTimes()[t] || 0;
  };

  t.prototype.setJigsawBgEndTimesByIdx = function (t, e) {
    var o = this.getJigsawBgEndTimes();
    o[t] = e;
    this.setJigsawBgEndTimes(o);
  };

  t.prototype.getJigsawBgEndTimes = function () {
    var t = _uData["default"].ins.getLocalData().jigEndTimes;

    return null == t ? [] : t;
  };

  t.prototype.setJigsawBgEndTimes = function (t) {
    _uData["default"].ins.setLocalData({
      jigEndTimes: t
    });
  };

  t.prototype.getNewJigBgEndTimesByIdx = function (t) {
    return this.getNewJigBgEndTimes()[t] || 0;
  };

  t.prototype.setNewJigBgEndTimesByIdx = function (t, e) {
    var o = this.getNewJigBgEndTimes();
    o[t] = e;
    this.setNewJigBgEndTimes(o);
  };

  t.prototype.getNewJigBgEndTimes = function () {
    var t = _uData["default"].ins.getLocalData().newJigEndTimes;

    return null == t ? [] : t;
  };

  t.prototype.setNewJigBgEndTimes = function (t) {
    _uData["default"].ins.setLocalData({
      newJigEndTimes: t
    });
  };

  t.prototype.getIsClearJigsawData = function () {
    var t = _uData["default"].ins.getLocalData().isClearJig1;

    return null == t || t;
  };

  t.prototype.setIsClearJigsawData = function (t) {
    _uData["default"].ins.setLocalData({
      isClearJig1: t
    });
  };

  t.prototype.getIsCheckdLock = function () {
    var t = _uData["default"].ins.getLocalData().isCheckdLock;

    return null != t && t;
  };

  t.prototype.setIsCheckdLock = function (t) {
    _uData["default"].ins.setLocalData({
      isCheckdLock: t
    });
  };

  t.prototype.getIsOpenLocked = function () {
    var t = _uData["default"].ins.getLocalData().localIsOpen;

    return null == t || t;
  };

  t.prototype.setIsOpenLocked = function (t) {
    _uData["default"].ins.setLocalData({
      localIsOpen: t
    });
  };

  t.prototype.checkIsOpenLock = function () {
    if (this.isOpenLock = this.getIsOpenLocked(), !this.getIsCheckdLock()) {
      var t = this.getPuzzleLvl();

      var e = _bagMgr["default"].ins.getItemCount("puzzle_pieces");

      var o = _jigsawMgr["default"].ins.getUnPlacedNum();

      (t > 1 || e != o) && (this.isOpenLock = !1, this.setIsOpenLocked(!1));
      this.setIsCheckdLock(!0);
    }
  };

  t.prototype.isMianLocked = function () {
    var t;
    var e;
    var o;
    if (this.checkIsOpenLock(), !this.isOpenLock) return !1;
    if (this.getPuzzleLvl() < 55) return !1;
    var n = JSON.parse(JSON.stringify(b.ins.getRecordData())).race.hePoints;
    var i = (null === (o = null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.lock_rules) || void 0 === e ? void 0 : e.main_line_lock) || void 0 === o ? void 0 : o.main_line_val) || 0;
    return Number(n) < Number(i);
  };

  t.prototype.isJigsawLocked = function () {
    var t;
    var e;
    var o;
    if (this.checkIsOpenLock(), !this.isOpenLock) return !1;
    var n = JSON.parse(JSON.stringify(b.ins.getRecordData())).race.hePoints;
    var i = (null === (o = null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.lock_rules) || void 0 === e ? void 0 : e.main_line_lock) || void 0 === o ? void 0 : o.puzzle_line_val) || 0;
    return Number(n) < Number(i);
  };

  t.prototype.getIsGetNewGift = function () {
    var t = _uData["default"].ins.getLocalData().isGetNewGift;

    return null != t && t;
  };

  t.prototype.setIsGetNewGif = function (t) {
    _uData["default"].ins.setLocalData({
      isGetNewGift: t
    });
  };

  t.prototype.getHasFinJig = function () {
    var t = _uData["default"].ins.getLocalData().hasFinJig;

    return null == t ? {} : t;
  };

  t.prototype.setHasFinJig = function (t) {
    _uData["default"].ins.setLocalData({
      hasFinJig: t
    });

    _uData["default"].ins._setLocalAndCloudData();
  };

  t.prototype.getHasFinFesJig = function () {
    var t = _uData["default"].ins.getLocalData().hasFinFesJig;

    return null == t ? {} : t;
  };

  t.prototype.setHasFinFesJig = function (t) {
    _uData["default"].ins.setLocalData({
      hasFinFesJig: t
    });

    _uData["default"].ins._setLocalAndCloudData();
  };

  t.prototype.getFesName = function () {
    var t = _uData["default"].ins.getLocalData().fesName;

    return null == t ? "" : t;
  };

  t.prototype.setFesName = function (t) {
    _uData["default"].ins.setLocalData({
      fesName: t
    });
  };

  t.prototype.getFesPro = function () {
    var t = _uData["default"].ins.getLocalData().fesPro;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setFesPro = function (t) {
    _uData["default"].ins.setLocalData({
      fesPro: t
    });
  };

  t.prototype.getFesTaskPro = function () {
    var t = _uData["default"].ins.getLocalData().fesTaskPro;

    return null == t ? 0 : Number(t);
  };

  t.prototype.setFesTaskPro = function (t) {
    _uData["default"].ins.setLocalData({
      fesTaskPro: t
    });
  };

  t.prototype.getFesPuzzleLv = function () {
    var t = _uData["default"].ins.getLocalData().fesPuzzleLv;

    return null == t ? 1 : Number(t);
  };

  t.prototype.setFesPuzzleLv = function (t) {
    _uData["default"].ins.setLocalData({
      fesPuzzleLv: t
    });
  };

  t.prototype.getShareNames = function () {
    var t = _uData["default"].ins.getLocalData().sNames;

    return null == t ? [] : t;
  };

  t.prototype.setShareNames = function (t) {
    _uData["default"].ins.setLocalData({
      sNames: t
    });
  };

  t.prototype.getChallengeData = function () {
    var t = _uData["default"].ins.getLocalData().chaData;

    return null == t ? [] : t;
  };

  t.prototype.setChallengeData = function (t) {
    _uData["default"].ins.setLocalData({
      chaData: t
    });
  };

  t.prototype.getChallengePackData = function () {
    var t = _uData["default"].ins.getLocalData().chaPackData;

    return null == t ? [] : t;
  };

  t.prototype.setChallengePackData = function (t) {
    _uData["default"].ins.setLocalData({
      chaPackData: t
    });
  };

  t.prototype.getAddDesk = function () {
    var t = _uData["default"].ins.getLocalData().addDesk;

    return null != t && t;
  };

  t.prototype.setAddDesk = function (t) {
    _uData["default"].ins.setLocalData({
      addDesk: t
    });
  };

  t.prototype.getJigTiles = function () {
    var t = _uData["default"].ins.getLocalData().jigTiles;

    return null == t ? [-1, ""] : t;
  };

  t.prototype.setJigTiles = function (t) {
    _uData["default"].ins.setLocalData({
      jigTiles: t
    }, 15);
  };

  t.prototype.addSevenDays = function () {
    var t = this.getSevenDays();
    var e = Math.min(7, t + 1);
    this.setSevenDays(e);
  };

  t.prototype.getSevenDays = function () {
    var t = _uData["default"].ins.getLocalData().sevenLogin;

    return null == t ? 0 : t;
  };

  t.prototype.setSevenDays = function (t) {
    _uData["default"].ins.setLocalData({
      sevenLogin: t
    });
  };

  t.prototype.getSevenReward = function () {
    var t = _uData["default"].ins.getLocalData().sevenReward;

    return null == t ? 0 : t;
  };

  t.prototype.setSevenReward = function (t) {
    _uData["default"].ins.setLocalData({
      sevenReward: t
    });
  };

  t.prototype.addShopRecord = function (t) {
    var e = this.getShopRecord();
    e[t] ? e[t] += 1 : e[t] = 1;
    this.setShopRecord(e);
  };

  t.prototype.getShopRecord = function () {
    var t = _uData["default"].ins.getLocalData().shopRecord;

    return null == t ? {} : t;
  };

  t.prototype.setShopRecord = function (t) {
    _uData["default"].ins.setLocalData({
      shopRecord: t
    });
  };

  t.prototype.addShopUnreset = function (t) {
    var e = this.getShopUnreset();
    e[t] ? e[t] += 1 : e[t] = 1;
    this.setShopUnreset(e);
  };

  t.prototype.getShopUnreset = function () {
    var t = _uData["default"].ins.getLocalData().shopReUn;

    return null == t ? {} : t;
  };

  t.prototype.setShopUnreset = function (t) {
    _uData["default"].ins.setLocalData({
      shopReUn: t
    });
  };

  Object.defineProperty(t.prototype, "Bag", {
    get: function get() {
      var t = _uData["default"].ins.getLocalData().bag;

      null == t && (t = {});
      return t;
    },
    set: function set(t) {
      t && _uData["default"].ins.setLocalData({
        bag: t
      });
    },
    enumerable: !1,
    configurable: !0
  });
  Object.defineProperty(t.prototype, "Mail", {
    get: function get() {
      var t = _uData["default"].ins.getLocalData().mail;

      null == t && (t = {});
      return t;
    },
    set: function set(t) {
      t && _uData["default"].ins.setLocalData({
        mail: t
      });
    },
    enumerable: !1,
    configurable: !0
  });
  Object.defineProperty(t.prototype, "mySkin", {
    get: function get() {
      this._mySkin || (this._mySkin = {
        bg: [1],
        role: [1],
        headFrame: [1],
        nameFrame: [1]
      });
      return this._mySkin;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.getUsingSkin = function () {
    return this.usingSkin;
  };

  t.prototype.setUsingSkin = function () {};

  t.prototype.getMySkin = function () {};

  t.prototype.addMySkin = function () {};

  t.prototype.getSkinAdPro = function () {};

  t.prototype.addSkinAdPro = function () {};

  return t;
}();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/item.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ab1208U3p1LdY9+tJ9S8YFo', 'item');
// scripts/item.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _numberUtils = require("NumberUtils");

var _res = require("res");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.icon = null;
    e.numLbl = null;
    e.numBgNode = null;
    e.key = "";
    e.count = "";
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t, e) {
    this.key = e;

    _res["default"].ins.lSF("item/" + e, this.icon);

    var o = _numberUtils["default"].FormatCurrency(t.val[e]);

    this.count = o;
    this.numLbl.string = "x" + o;
  };

  e.prototype.initByData = function (t, e) {
    var o = this;
    this.key = t;
    this.count = e;

    _res["default"].ins.lSF("item/" + t, this.icon);

    var n = this.numLbl.node.width;
    this.numLbl.string = "x" + e;
    this.scheduleOnce(function () {
      var t = o.numLbl.node.width - n;
      o.reNumBg(t);
    });
  };

  e.prototype.reNumBg = function (t) {
    this.numBgNode && (this.numBgNode.width += t);
  };

  __decorate([u(cc.Sprite)], e.prototype, "icon", void 0);

  __decorate([u(cc.Label)], e.prototype, "numLbl", void 0);

  __decorate([u(cc.Node)], e.prototype, "numBgNode", void 0);

  return __decorate([l], e);
}(cc.Component);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcaXRlbS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfbnVtYmVyVXRpbHMiLCJyZXF1aXJlIiwiX3JlcyIsImMiLCJjYyIsIl9kZWNvcmF0b3IiLCJsIiwiY2NjbGFzcyIsInUiLCJwcm9wZXJ0eSIsInAiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwiaWNvbiIsIm51bUxibCIsIm51bUJnTm9kZSIsImtleSIsImNvdW50IiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwiaW5pdCIsImlucyIsImxTRiIsIm8iLCJGb3JtYXRDdXJyZW5jeSIsInZhbCIsInN0cmluZyIsImluaXRCeURhdGEiLCJub2RlIiwid2lkdGgiLCJzY2hlZHVsZU9uY2UiLCJyZU51bUJnIiwiX19kZWNvcmF0ZSIsIlNwcml0ZSIsIkxhYmVsIiwiTm9kZSIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQUlDLElBQUksR0FBR0QsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUUsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLElBQUlDLENBQUMsR0FBSSxVQUFVQyxDQUFWLEVBQWE7RUFDbEIsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxJQUFGLEdBQVMsSUFBVDtJQUNBSCxDQUFDLENBQUNJLE1BQUYsR0FBVyxJQUFYO0lBQ0FKLENBQUMsQ0FBQ0ssU0FBRixHQUFjLElBQWQ7SUFDQUwsQ0FBQyxDQUFDTSxHQUFGLEdBQVEsRUFBUjtJQUNBTixDQUFDLENBQUNPLEtBQUYsR0FBVSxFQUFWO0lBQ0EsT0FBT1AsQ0FBUDtFQUNIOztFQUNEUSxTQUFTLENBQUNSLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNTLFNBQUYsQ0FBWUMsSUFBWixHQUFtQixVQUFVWCxDQUFWLEVBQWFDLENBQWIsRUFBZ0I7SUFDL0IsS0FBS00sR0FBTCxHQUFXTixDQUFYOztJQUNBVixJQUFJLFdBQUosQ0FBYXFCLEdBQWIsQ0FBaUJDLEdBQWpCLENBQXFCLFVBQVVaLENBQS9CLEVBQWtDLEtBQUtHLElBQXZDOztJQUNBLElBQUlVLENBQUMsR0FBR3pCLFlBQVksV0FBWixDQUFxQjBCLGNBQXJCLENBQW9DZixDQUFDLENBQUNnQixHQUFGLENBQU1mLENBQU4sQ0FBcEMsQ0FBUjs7SUFDQSxLQUFLTyxLQUFMLEdBQWFNLENBQWI7SUFDQSxLQUFLVCxNQUFMLENBQVlZLE1BQVosR0FBcUIsTUFBTUgsQ0FBM0I7RUFDSCxDQU5EOztFQU9BYixDQUFDLENBQUNTLFNBQUYsQ0FBWVEsVUFBWixHQUF5QixVQUFVbEIsQ0FBVixFQUFhQyxDQUFiLEVBQWdCO0lBQ3JDLElBQUlhLENBQUMsR0FBRyxJQUFSO0lBQ0EsS0FBS1AsR0FBTCxHQUFXUCxDQUFYO0lBQ0EsS0FBS1EsS0FBTCxHQUFhUCxDQUFiOztJQUNBVixJQUFJLFdBQUosQ0FBYXFCLEdBQWIsQ0FBaUJDLEdBQWpCLENBQXFCLFVBQVViLENBQS9CLEVBQWtDLEtBQUtJLElBQXZDOztJQUNBLElBQUlwQixDQUFDLEdBQUcsS0FBS3FCLE1BQUwsQ0FBWWMsSUFBWixDQUFpQkMsS0FBekI7SUFDQSxLQUFLZixNQUFMLENBQVlZLE1BQVosR0FBcUIsTUFBTWhCLENBQTNCO0lBQ0EsS0FBS29CLFlBQUwsQ0FBa0IsWUFBWTtNQUMxQixJQUFJckIsQ0FBQyxHQUFHYyxDQUFDLENBQUNULE1BQUYsQ0FBU2MsSUFBVCxDQUFjQyxLQUFkLEdBQXNCcEMsQ0FBOUI7TUFDQThCLENBQUMsQ0FBQ1EsT0FBRixDQUFVdEIsQ0FBVjtJQUNILENBSEQ7RUFJSCxDQVhEOztFQVlBQyxDQUFDLENBQUNTLFNBQUYsQ0FBWVksT0FBWixHQUFzQixVQUFVdEIsQ0FBVixFQUFhO0lBQy9CLEtBQUtNLFNBQUwsS0FBbUIsS0FBS0EsU0FBTCxDQUFlYyxLQUFmLElBQXdCcEIsQ0FBM0M7RUFDSCxDQUZEOztFQUdBdUIsVUFBVSxDQUFDLENBQUMxQixDQUFDLENBQUNKLEVBQUUsQ0FBQytCLE1BQUosQ0FBRixDQUFELEVBQWlCdkIsQ0FBQyxDQUFDUyxTQUFuQixFQUE4QixNQUE5QixFQUFzQyxLQUFLLENBQTNDLENBQVY7O0VBQ0FhLFVBQVUsQ0FBQyxDQUFDMUIsQ0FBQyxDQUFDSixFQUFFLENBQUNnQyxLQUFKLENBQUYsQ0FBRCxFQUFnQnhCLENBQUMsQ0FBQ1MsU0FBbEIsRUFBNkIsUUFBN0IsRUFBdUMsS0FBSyxDQUE1QyxDQUFWOztFQUNBYSxVQUFVLENBQUMsQ0FBQzFCLENBQUMsQ0FBQ0osRUFBRSxDQUFDaUMsSUFBSixDQUFGLENBQUQsRUFBZXpCLENBQUMsQ0FBQ1MsU0FBakIsRUFBNEIsV0FBNUIsRUFBeUMsS0FBSyxDQUE5QyxDQUFWOztFQUNBLE9BQU9hLFVBQVUsQ0FBQyxDQUFDNUIsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBakI7QUFDSCxDQXJDTyxDQXFDTFIsRUFBRSxDQUFDa0MsU0FyQ0UsQ0FBUjs7QUFzQ0F4QyxPQUFPLFdBQVAsR0FBa0JZLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9udW1iZXJVdGlscyA9IHJlcXVpcmUoXCJOdW1iZXJVdGlsc1wiKTtcbnZhciBfcmVzID0gcmVxdWlyZShcInJlc1wiKTtcbnZhciBjID0gY2MuX2RlY29yYXRvcjtcbnZhciBsID0gYy5jY2NsYXNzO1xudmFyIHUgPSBjLnByb3BlcnR5O1xudmFyIHAgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5pY29uID0gbnVsbDtcbiAgICAgICAgZS5udW1MYmwgPSBudWxsO1xuICAgICAgICBlLm51bUJnTm9kZSA9IG51bGw7XG4gICAgICAgIGUua2V5ID0gXCJcIjtcbiAgICAgICAgZS5jb3VudCA9IFwiXCI7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIHRoaXMua2V5ID0gZTtcbiAgICAgICAgX3Jlcy5kZWZhdWx0Lmlucy5sU0YoXCJpdGVtL1wiICsgZSwgdGhpcy5pY29uKTtcbiAgICAgICAgdmFyIG8gPSBfbnVtYmVyVXRpbHMuZGVmYXVsdC5Gb3JtYXRDdXJyZW5jeSh0LnZhbFtlXSk7XG4gICAgICAgIHRoaXMuY291bnQgPSBvO1xuICAgICAgICB0aGlzLm51bUxibC5zdHJpbmcgPSBcInhcIiArIG87XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5pbml0QnlEYXRhID0gZnVuY3Rpb24gKHQsIGUpIHtcbiAgICAgICAgdmFyIG8gPSB0aGlzO1xuICAgICAgICB0aGlzLmtleSA9IHQ7XG4gICAgICAgIHRoaXMuY291bnQgPSBlO1xuICAgICAgICBfcmVzLmRlZmF1bHQuaW5zLmxTRihcIml0ZW0vXCIgKyB0LCB0aGlzLmljb24pO1xuICAgICAgICB2YXIgbiA9IHRoaXMubnVtTGJsLm5vZGUud2lkdGg7XG4gICAgICAgIHRoaXMubnVtTGJsLnN0cmluZyA9IFwieFwiICsgZTtcbiAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHQgPSBvLm51bUxibC5ub2RlLndpZHRoIC0gbjtcbiAgICAgICAgICAgIG8ucmVOdW1CZyh0KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5yZU51bUJnID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdGhpcy5udW1CZ05vZGUgJiYgKHRoaXMubnVtQmdOb2RlLndpZHRoICs9IHQpO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbdShjYy5TcHJpdGUpXSwgZS5wcm90b3R5cGUsIFwiaWNvblwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW3UoY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwibnVtTGJsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbdShjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcIm51bUJnTm9kZVwiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtsXSwgZSk7XG59KShjYy5Db21wb25lbnQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gcDtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/page_race.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '57a50JN9w9EQJ5/pwcl4QsY', 'page_race');
// scripts/page_race.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a;

var _evts = require("evts");

var _idx = require("idx");

var _mySafeArea = require("mySafeArea");

var _pConst = require("pConst");

var _request = require("request");

var _time = require("time");

var _uData = require("uData");

var _rankItem = require("rankItem");

var _global = require("global");

var _bagMgr = require("bagMgr");

var _panelMgr = require("panelMgr");

var _rankMgr = require("rankMgr");

var _taskMgr = require("taskMgr");

var _pInfo = require("pInfo");

var w = cc._decorator;
var S = w.ccclass;
var T = w.property;

(function (t) {
  t[t.today = 0] = "today";
  t[t.yday = 1] = "yday";
})(a || (a = {}));

var I = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.scrollView = null;
    e.dayTypeBtnsSps = [];
    e.friendRankBtn = null;
    e.viewItem = null;
    e.rankTop = [];
    e.myRank = null;
    e.ticketCount = null;
    e.topNode = null;
    e.loadingNode = null;
    e.bgSpr = null;
    e.last_view_inner_y = -1;
    e.THEME_H = 122;
    e.top_offest = 61;
    e.designContH = 410;
    e.itemCount = 0;
    e.items = [];
    e.bottom_offest = 0;
    e.rankData = [];
    e.nowDataTag = a.today;
    e.isFirstLoad = !0;
    e.playAni = !0;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.node.height = cc.winSize.height;
    _global["default"].padScale && (this.bgSpr.node.scale = _global["default"].padScale);
    this.scrollView.vertical = !1;

    _evts["default"].opE.on(this.onOperTap.bind(this));
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].UPD_PANEL:
      case _evts["default"].UPD_MAIN_RED:
        this.initData();
        break;

      case _evts["default"].SKIN_CHG:
        this.setMySelf();
    }
  };

  e.prototype.start = function () {
    var t = this;
    this.scheduleOnce(function () {
      t.adapter();
      t.scrollView.node.on("scrolling", function () {
        t.RefreshThemesVisible();
      }, t);
      t.initData();
      t.refreshData();
      t.updateFriendRankBtn();
    });
  };

  e.prototype.adapter = function () {
    var t = _mySafeArea.getSafeAreaRect().yMin;

    var e = this.node.height - 1280 - t;
    this.scrollView.node.height = this.designContH + e;
    this.scrollView.node.getChildByName("view").height = this.designContH + e;
    this.topNode.y -= t;
    this.scrollView.node.y -= t / 2;
    this.loadingNode.position = this.scrollView.node.position;
  };

  e.prototype.onEnable = function () {
    var t = this;
    this.isFirstLoad || (this.scrollView.vertical = !1, this.scheduleOnce(function () {
      t.adapter(), t.scrollView.scrollToTop(), t.playAni = !0, t.last_view_inner_y = -1, t.RefreshThemesVisible();
    }, 0.2));
    this.isFirstLoad = !1;
    var e = _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);

    if (e - _pInfo["default"].ins.getRankLastTimeData() >= 3600 && !_pInfo["default"].ins.isOpenLock) {
      _pInfo["default"].ins.setRankLastTimeData(e);

      var o = _idx.platform.getUserInfo();

      var n = this.myRank.getComponent(_rankItem["default"]);
      o ? o.then(function (t) {
        _request["default"].ins.updateUserInfo(t);

        n.setHeadSp(_uData["default"].ins.getHeadImg());
      }, function () {
        n.setDefaultHead();
      }) : n.setDefaultHead();
    }
  };

  e.prototype.onDisable = function () {
    this.initAni();
  };

  e.prototype.initData = function () {
    var t = _bagMgr["default"].ins.getItemCount("qw_line_ticket") || 0;
    this.ticketCount.string = t + "/1";
  };

  e.prototype.refreshData = function () {
    this.getRankData();
  };

  e.prototype.getRankData = function () {
    var t;
    var e = this;
    this.nowDataTag === a.today ? t = _rankMgr["default"].ins.getTodayRaceData() : this.nowDataTag === a.yday && (t = _rankMgr["default"].ins.getYdayRaceData());
    t.then(function (t) {
      e.dealData(t.data);
      e.nowDataTag === a.yday && _rankMgr["default"].ins.setYdayRaceRankData(t.data);
    })["catch"](function (t) {
      console.error("getRankDataErr" + t);
    });
  };

  e.prototype.dealData = function (t) {
    this.node && (this.loadingNode.active = !1);
    var e = !1;
    var o = [];
    var n = 0;
    if (this.nowDataTag === a.today ? n = _rankMgr["default"].ins.getMyRaceTodayData() : this.nowDataTag === a.yday && (n = _rankMgr["default"].ins.getMyRaceYdayData()), t) for (var i in o = o.concat(t)) {
      if ((r = o[i]).game_uid == _uData["default"].ins.getUid()) {
        r.nickname = _uData["default"].ins.getName();
        r.sort_value = n;
        r.game_uid = _uData["default"].ins.getUid();
        r.avatar = _uData["default"].ins.getHeadImg();
        e = !0;
        break;
      }
    }

    if (!e) {
      var r = {
        nickname: _uData["default"].ins.getName(),
        sort_value: n,
        game_uid: _uData["default"].ins.getUid(),
        avatar: _uData["default"].ins.getHeadImg()
      };
      o.push(r);
    }

    o.sort(function (t, e) {
      return e.sort_value - t.sort_value;
    });
    this.rankData = o;
    this.refreshPanel();
  };

  e.prototype.refreshPanel = function () {
    this.setMySelf();
    this.last_view_inner_y = -1;
    this.itemCount = 97;
    var t = this.THEME_H * this.itemCount + this.top_offest / 2;
    this.scrollView.content.setContentSize(cc.size(cc.winSize.width, t));
    this.scrollView.scrollToTop();

    for (var e = 0; e < 3; e++) {
      var o = this.rankData[e];
      var n = this.rankTop[e];
      this.setRankTop(n, o);
    }

    this.RefreshThemesVisible();
  };

  e.prototype.RefreshThemesVisible = function (t) {
    var e = this;
    void 0 === t && (t = 0);
    var o = this.scrollView.getContentPosition();

    if (!(Math.abs(this.last_view_inner_y - o.y) < 0.01)) {
      this.last_view_inner_y = o.y;

      for (var n, i, r, a, s, c, l = function l() {
        n = -d * u.THEME_H - u.top_offest;
        i = u.scrollView.content.convertToWorldSpaceAR(cc.v2(0, n));
        r = u.node.convertToNodeSpaceAR(i);
        a = r.y < -p || r.y + u.THEME_H > p;
        s = d;
        var t = d + 3;
        var o = u.rankData[t];
        if (a) u.items[s] && (u.items[s].active = !1);else if (u.items[s]) {
          u.setItemInfo(u.items[s], t, o);
          var l = u.playAni;
          if (u.items[s].x = 0, l) return u.items[s].opacity = 0, u.scheduleOnce(function () {
            e.items[s].active = !0;
            e.last_view_inner_y = -1;
            e.RefreshThemesVisible(d + 1);
            l && e.showChgAni(e.items[s]);
          }, 0.06), "break";
          u.items[s].opacity = 255;
          u.items[s].active = !0;
        } else {
          (c = cc.instantiate(u.viewItem)).active = !0;
          c.position = cc.v3(0, -d * u.THEME_H - u.top_offest);
          c.parent = u.scrollView.content;
          u.items[s] = c;
          u.setItemInfo(c, t, o);
          var h = u.playAni;
          if (h) return c.x = (cc.winSize.width + u.items[s].width) / 2, c.opacity = 255, u.scheduleOnce(function () {
            e.last_view_inner_y = -1;
            e.RefreshThemesVisible(d + 1);
            h && e.showLoadAni(c);
          }, 0.02), "break";
          c.opacity = 255;
          c.x = 0;
        }
        u.playAni = !1;
        d === u.itemCount - 1 && u.scheduleOnce(function () {
          e.scrollView.vertical = !0;
        }, 0.5);
      }, u = this, p = this.scrollView.node.height / 5 * 4, d = t; d < this.itemCount && "break" !== l(); d++) {
        ;
      }
    }
  };

  e.prototype.setRankTop = function (t, e) {
    var o = t.getComponent(_rankItem["default"]);
    e ? (o.setRankData(e), o.setGameUid(e.game_uid), o.setScore(e.sort_value), e.game_uid == _uData["default"].ins.getUid() ? (o.setSkin(_pInfo["default"].ins.getUsingSkin(), !1, !0), o.setNickName(_uData["default"].ins.getName()), o.setHeadSp(_uData["default"].ins.getHeadImg())) : (o.setSkin(null == e ? void 0 : e.uSkin, !1, !0), o.setNickName(e.nickname), e.avatar ? o.setHeadSp(e.avatar) : o.setDefaultHead())) : (o.clearFrame(), o.setNickName("暂无"), o.setScore("0"), o.setDefaultHead());
  };

  e.prototype.setItemInfo = function (t, e, o, n) {
    void 0 === n && (n = !1);
    var i = t.getComponent(_rankItem["default"]);
    i.setIdx(Number(e) + 1 + "");
    o ? (i.setRankData(o), i.setGameUid(o.game_uid), i.setScore(o.sort_value), o.game_uid == _uData["default"].ins.getUid() ? (i.setSkin(_pInfo["default"].ins.getUsingSkin(), n), i.setNickName(_uData["default"].ins.getName()), i.setHeadSp(_uData["default"].ins.getHeadImg())) : (i.setSkin(null == o ? void 0 : o.uSkin), i.setNickName(o.nickname), o.avatar ? i.setHeadSp(o.avatar) : i.setDefaultHead())) : (i.clearFrame(), i.setNickName("暂无"), i.setScore("0"), i.setDefaultHead());
  };

  e.prototype.setMySelf = function () {
    var t = this.rankData;

    for (var e in t) {
      var o = t[e];
      if (o.game_uid == _uData["default"].ins.getUid() && Number(e) < 100) return void this.setItemInfo(this.myRank, e, o, !0);
    }

    var n = 0;
    this.nowDataTag === a.today ? n = _rankMgr["default"].ins.getMyRaceTodayData() : this.nowDataTag === a.yday && (n = _rankMgr["default"].ins.getMyRaceYdayData());
    var i = this.myRank.getComponent(_rankItem["default"]);
    i.setSkin(_pInfo["default"].ins.getUsingSkin(), !0);
    i.setGameUid(_uData["default"].ins.getUid().toString());
    i.setIdx("99+");
    i.setNickName(_uData["default"].ins.getName());
    i.setScore(n + "");
    _uData["default"].ins.getHeadImg() ? i.setHeadSp(_uData["default"].ins.getHeadImg()) : i.setDefaultHead();
  };

  e.prototype.showLoadAni = function (t) {
    cc.tween(t).to(0.5, {
      x: 0
    }, {
      easing: "backInOut"
    }).start();
  };

  e.prototype.showChgAni = function (t) {
    cc.tween(t).to(0.5, {
      opacity: 255
    }).start();
  };

  e.prototype.onBtnStart = function () {
    _bagMgr["default"].ins.getItemCount("qw_line_ticket") <= 0 ? _panelMgr["default"].ins.open("ui/ui_getItem", {
      itemId: "qw_line_ticket",
      cb: this.initData.bind(this),
      gType: _pInfo.gameType.race
    }) : (_pInfo.chgScene(_pInfo.sceneType.game, {
      gameType: _pInfo.gameType.race
    }), _bagMgr["default"].ins.useItem("qw_line_ticket", 1, _pInfo.gameType.race), _taskMgr["default"].taskCheck(_pInfo.gameType.race));
  };

  e.prototype.onBtnTip = function () {
    _panelMgr["default"].ins.open("ui/ui_raceTip", {
      pageIdx: 2
    });
  };

  e.prototype.onBtnChange = function () {
    this.initAni();
    this.nowDataTag === a.yday ? (this.nowDataTag = a.today, this.dayTypeBtnsSps[0].active = !1, this.dayTypeBtnsSps[1].active = !0, this.refreshData()) : this.nowDataTag === a.today && (this.nowDataTag = a.yday, this.dayTypeBtnsSps[0].active = !0, this.dayTypeBtnsSps[1].active = !1, this.refreshData());
  };

  e.prototype.initAni = function () {
    this.unscheduleAllCallbacks();

    for (var t = 0, e = this.items.length; t < e; t++) {
      var o = this.items[t];
      cc.Tween.stopAllByTarget(o);
      o && (o.opacity = 0);
    }

    this.scrollView.stopAutoScroll();
    this.scrollView.scrollToTop();
    this.scrollView.vertical = !1;
    this.playAni = !0;
  };

  e.prototype.updateFriendRankBtn = function () {
    this.friendRankBtn.active = _idx.platform.string() === _pConst.PFCode.Bytedance;
  };

  e.prototype.onBtnFriendRank = function () {
    _idx.platform.showFriendRank(_pConst.SDKConfig.ttZoneId.race);
  };

  e.prototype.onDestroy = function () {
    cc.assetManager.releaseAsset(this.bgSpr.spriteFrame);
  };

  __decorate([T(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([T([cc.Node])], e.prototype, "dayTypeBtnsSps", void 0);

  __decorate([T(cc.Node)], e.prototype, "friendRankBtn", void 0);

  __decorate([T(cc.Node)], e.prototype, "viewItem", void 0);

  __decorate([T([cc.Node])], e.prototype, "rankTop", void 0);

  __decorate([T(cc.Node)], e.prototype, "myRank", void 0);

  __decorate([T(cc.Label)], e.prototype, "ticketCount", void 0);

  __decorate([T(cc.Node)], e.prototype, "topNode", void 0);

  __decorate([T(cc.Node)], e.prototype, "loadingNode", void 0);

  __decorate([T(cc.Sprite)], e.prototype, "bgSpr", void 0);

  return __decorate([S], e);
}(cc.Component);

exports["default"] = I;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/nameFrame.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9d594+dIy1LgYWXL4uGdb1G', 'nameFrame');
// scripts/nameFrame.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _skinMgr = require("skinMgr");

var _pInfo = require("pInfo");

var l = cc._decorator;
var u = l.ccclass;
var p = (l.property, function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.icon = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.icon = this.node.getComponent(cc.Sprite);
    this.updateNameFrame();
    this.eventFunc = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eventFunc);
  };

  e.prototype.onDestroy = function () {
    _evts["default"].opE.off(this.eventFunc);

    this.eventFunc = null;
  };

  e.prototype.onOperTap = function (t) {
    var e;
    (null == t ? void 0 : t.action) === _evts["default"].SKIN_CHG && (null === (e = t.data) || void 0 === e ? void 0 : e.skinId) === _skinMgr.SkinIdEnum.nameFrame && this.updateNameFrame();
  };

  e.prototype.updateNameFrame = function () {
    var t = _pInfo["default"].ins.getUsingSkin()[_skinMgr.SkinIdEnum.nameFrame];

    _skinMgr["default"].ins.updateNameFrame(t, this.icon);
  };

  return __decorate([u], e);
}(cc.Component));
exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcbmFtZUZyYW1lLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9ldnRzIiwicmVxdWlyZSIsIl9za2luTWdyIiwiX3BJbmZvIiwibCIsImNjIiwiX2RlY29yYXRvciIsInUiLCJjY2NsYXNzIiwicCIsInByb3BlcnR5IiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsImljb24iLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJvbkxvYWQiLCJub2RlIiwiZ2V0Q29tcG9uZW50IiwiU3ByaXRlIiwidXBkYXRlTmFtZUZyYW1lIiwiZXZlbnRGdW5jIiwib25PcGVyVGFwIiwiYmluZCIsIm9wRSIsIm9uIiwib25EZXN0cm95Iiwib2ZmIiwiYWN0aW9uIiwiU0tJTl9DSEciLCJkYXRhIiwic2tpbklkIiwiU2tpbklkRW51bSIsIm5hbWVGcmFtZSIsImlucyIsImdldFVzaW5nU2tpbiIsIl9fZGVjb3JhdGUiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsS0FBSyxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFuQjs7QUFDQSxJQUFJQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQUlFLE1BQU0sR0FBR0YsT0FBTyxDQUFDLE9BQUQsQ0FBcEI7O0FBQ0EsSUFBSUcsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsSUFDQUwsQ0FBQyxDQUFDTSxRQUFGLEVBQ0EsVUFBVUMsQ0FBVixFQUFhO0VBQ1YsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxJQUFGLEdBQVMsSUFBVDtJQUNBLE9BQU9ILENBQVA7RUFDSDs7RUFDREksU0FBUyxDQUFDSixDQUFELEVBQUlELENBQUosQ0FBVDs7RUFDQUMsQ0FBQyxDQUFDSyxTQUFGLENBQVlDLE1BQVosR0FBcUIsWUFBWTtJQUM3QixLQUFLSCxJQUFMLEdBQVksS0FBS0ksSUFBTCxDQUFVQyxZQUFWLENBQXVCZixFQUFFLENBQUNnQixNQUExQixDQUFaO0lBQ0EsS0FBS0MsZUFBTDtJQUNBLEtBQUtDLFNBQUwsR0FBaUIsS0FBS0MsU0FBTCxDQUFlQyxJQUFmLENBQW9CLElBQXBCLENBQWpCOztJQUNBekIsS0FBSyxXQUFMLENBQWMwQixHQUFkLENBQWtCQyxFQUFsQixDQUFxQixLQUFLSixTQUExQjtFQUNILENBTEQ7O0VBTUFYLENBQUMsQ0FBQ0ssU0FBRixDQUFZVyxTQUFaLEdBQXdCLFlBQVk7SUFDaEM1QixLQUFLLFdBQUwsQ0FBYzBCLEdBQWQsQ0FBa0JHLEdBQWxCLENBQXNCLEtBQUtOLFNBQTNCOztJQUNBLEtBQUtBLFNBQUwsR0FBaUIsSUFBakI7RUFDSCxDQUhEOztFQUlBWCxDQUFDLENBQUNLLFNBQUYsQ0FBWU8sU0FBWixHQUF3QixVQUFVYixDQUFWLEVBQWE7SUFDakMsSUFBSUMsQ0FBSjtJQUNBLENBQUMsUUFBUUQsQ0FBUixHQUFZLEtBQUssQ0FBakIsR0FBcUJBLENBQUMsQ0FBQ21CLE1BQXhCLE1BQW9DOUIsS0FBSyxXQUFMLENBQWMrQixRQUFsRCxJQUNJLENBQUMsVUFBVW5CLENBQUMsR0FBR0QsQ0FBQyxDQUFDcUIsSUFBaEIsS0FBeUIsS0FBSyxDQUFMLEtBQVdwQixDQUFwQyxHQUF3QyxLQUFLLENBQTdDLEdBQWlEQSxDQUFDLENBQUNxQixNQUFwRCxNQUFnRS9CLFFBQVEsQ0FBQ2dDLFVBQVQsQ0FBb0JDLFNBRHhGLElBRUksS0FBS2IsZUFBTCxFQUZKO0VBR0gsQ0FMRDs7RUFNQVYsQ0FBQyxDQUFDSyxTQUFGLENBQVlLLGVBQVosR0FBOEIsWUFBWTtJQUN0QyxJQUFJWCxDQUFDLEdBQUdSLE1BQU0sV0FBTixDQUFlaUMsR0FBZixDQUFtQkMsWUFBbkIsR0FBa0NuQyxRQUFRLENBQUNnQyxVQUFULENBQW9CQyxTQUF0RCxDQUFSOztJQUNBakMsUUFBUSxXQUFSLENBQWlCa0MsR0FBakIsQ0FBcUJkLGVBQXJCLENBQXFDWCxDQUFyQyxFQUF3QyxLQUFLSSxJQUE3QztFQUNILENBSEQ7O0VBSUEsT0FBT3VCLFVBQVUsQ0FBQyxDQUFDL0IsQ0FBRCxDQUFELEVBQU1LLENBQU4sQ0FBakI7QUFDSCxDQTVCRCxDQTRCR1AsRUFBRSxDQUFDa0MsU0E1Qk4sQ0FGQyxDQUFMO0FBK0JBekMsT0FBTyxXQUFQLEdBQWtCVyxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfZXZ0cyA9IHJlcXVpcmUoXCJldnRzXCIpO1xudmFyIF9za2luTWdyID0gcmVxdWlyZShcInNraW5NZ3JcIik7XG52YXIgX3BJbmZvID0gcmVxdWlyZShcInBJbmZvXCIpO1xudmFyIGwgPSBjYy5fZGVjb3JhdG9yO1xudmFyIHUgPSBsLmNjY2xhc3M7XG52YXIgcCA9XG4gICAgKGwucHJvcGVydHksXG4gICAgKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgICAgIGUuaWNvbiA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm4gZTtcbiAgICAgICAgfVxuICAgICAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgICAgIGUucHJvdG90eXBlLm9uTG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuaWNvbiA9IHRoaXMubm9kZS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlTmFtZUZyYW1lKCk7XG4gICAgICAgICAgICB0aGlzLmV2ZW50RnVuYyA9IHRoaXMub25PcGVyVGFwLmJpbmQodGhpcyk7XG4gICAgICAgICAgICBfZXZ0cy5kZWZhdWx0Lm9wRS5vbih0aGlzLmV2ZW50RnVuYyk7XG4gICAgICAgIH07XG4gICAgICAgIGUucHJvdG90eXBlLm9uRGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF9ldnRzLmRlZmF1bHQub3BFLm9mZih0aGlzLmV2ZW50RnVuYyk7XG4gICAgICAgICAgICB0aGlzLmV2ZW50RnVuYyA9IG51bGw7XG4gICAgICAgIH07XG4gICAgICAgIGUucHJvdG90eXBlLm9uT3BlclRhcCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICB2YXIgZTtcbiAgICAgICAgICAgIChudWxsID09IHQgPyB2b2lkIDAgOiB0LmFjdGlvbikgPT09IF9ldnRzLmRlZmF1bHQuU0tJTl9DSEcgJiZcbiAgICAgICAgICAgICAgICAobnVsbCA9PT0gKGUgPSB0LmRhdGEpIHx8IHZvaWQgMCA9PT0gZSA/IHZvaWQgMCA6IGUuc2tpbklkKSA9PT0gX3NraW5NZ3IuU2tpbklkRW51bS5uYW1lRnJhbWUgJiZcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZU5hbWVGcmFtZSgpO1xuICAgICAgICB9O1xuICAgICAgICBlLnByb3RvdHlwZS51cGRhdGVOYW1lRnJhbWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdCA9IF9wSW5mby5kZWZhdWx0Lmlucy5nZXRVc2luZ1NraW4oKVtfc2tpbk1nci5Ta2luSWRFbnVtLm5hbWVGcmFtZV07XG4gICAgICAgICAgICBfc2tpbk1nci5kZWZhdWx0Lmlucy51cGRhdGVOYW1lRnJhbWUodCwgdGhpcy5pY29uKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF9fZGVjb3JhdGUoW3VdLCBlKTtcbiAgICB9KShjYy5Db21wb25lbnQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IHA7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/packItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7abceAnT1dHcJZ6MEKrASAc', 'packItem');
// scripts/packItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.spine = null;
    e.getSp = null;
    e.idx = 0;
    return e;
  }

  __extends(e, t);

  e.prototype.initItem = function (t, e) {
    this.spine.skeletonData = e;
    this.idx = t + 1;
    this.spine.animation = "box_" + this.idx + "_" + this.idx;
    this.getSp.active = !1;
  };

  e.prototype.setFinish = function (t) {
    var e = this.idx;
    this.spine.animation = t ? "box_" + e : "box_" + e + "_" + e;
  };

  e.prototype.setIsGet = function (t) {
    this.getSp.active = t;
    t && this.setFinish(!1);
  };

  __decorate([c(sp.Skeleton)], e.prototype, "spine", void 0);

  __decorate([c(cc.Node)], e.prototype, "getSp", void 0);

  return __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xccGFja0l0ZW0uanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYSIsImNjIiwiX2RlY29yYXRvciIsInMiLCJjY2NsYXNzIiwiYyIsInByb3BlcnR5IiwibCIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJzcGluZSIsImdldFNwIiwiaWR4IiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwiaW5pdEl0ZW0iLCJza2VsZXRvbkRhdGEiLCJhbmltYXRpb24iLCJhY3RpdmUiLCJzZXRGaW5pc2giLCJzZXRJc0dldCIsIl9fZGVjb3JhdGUiLCJzcCIsIlNrZWxldG9uIiwiTm9kZSIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3QztBQUNBLElBQUlDLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csS0FBRixHQUFVLElBQVY7SUFDQUgsQ0FBQyxDQUFDSSxLQUFGLEdBQVUsSUFBVjtJQUNBSixDQUFDLENBQUNLLEdBQUYsR0FBUSxDQUFSO0lBQ0EsT0FBT0wsQ0FBUDtFQUNIOztFQUNETSxTQUFTLENBQUNOLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNPLFNBQUYsQ0FBWUMsUUFBWixHQUF1QixVQUFVVCxDQUFWLEVBQWFDLENBQWIsRUFBZ0I7SUFDbkMsS0FBS0csS0FBTCxDQUFXTSxZQUFYLEdBQTBCVCxDQUExQjtJQUNBLEtBQUtLLEdBQUwsR0FBV04sQ0FBQyxHQUFHLENBQWY7SUFDQSxLQUFLSSxLQUFMLENBQVdPLFNBQVgsR0FBdUIsU0FBUyxLQUFLTCxHQUFkLEdBQW9CLEdBQXBCLEdBQTBCLEtBQUtBLEdBQXREO0lBQ0EsS0FBS0QsS0FBTCxDQUFXTyxNQUFYLEdBQW9CLENBQUMsQ0FBckI7RUFDSCxDQUxEOztFQU1BWCxDQUFDLENBQUNPLFNBQUYsQ0FBWUssU0FBWixHQUF3QixVQUFVYixDQUFWLEVBQWE7SUFDakMsSUFBSUMsQ0FBQyxHQUFHLEtBQUtLLEdBQWI7SUFDQSxLQUFLRixLQUFMLENBQVdPLFNBQVgsR0FBdUJYLENBQUMsR0FBRyxTQUFTQyxDQUFaLEdBQWdCLFNBQVNBLENBQVQsR0FBYSxHQUFiLEdBQW1CQSxDQUEzRDtFQUNILENBSEQ7O0VBSUFBLENBQUMsQ0FBQ08sU0FBRixDQUFZTSxRQUFaLEdBQXVCLFVBQVVkLENBQVYsRUFBYTtJQUNoQyxLQUFLSyxLQUFMLENBQVdPLE1BQVgsR0FBb0JaLENBQXBCO0lBQ0FBLENBQUMsSUFBSSxLQUFLYSxTQUFMLENBQWUsQ0FBQyxDQUFoQixDQUFMO0VBQ0gsQ0FIRDs7RUFJQUUsVUFBVSxDQUFDLENBQUNsQixDQUFDLENBQUNtQixFQUFFLENBQUNDLFFBQUosQ0FBRixDQUFELEVBQW1CaEIsQ0FBQyxDQUFDTyxTQUFyQixFQUFnQyxPQUFoQyxFQUF5QyxLQUFLLENBQTlDLENBQVY7O0VBQ0FPLFVBQVUsQ0FBQyxDQUFDbEIsQ0FBQyxDQUFDSixFQUFFLENBQUN5QixJQUFKLENBQUYsQ0FBRCxFQUFlakIsQ0FBQyxDQUFDTyxTQUFqQixFQUE0QixPQUE1QixFQUFxQyxLQUFLLENBQTFDLENBQVY7O0VBQ0EsT0FBT08sVUFBVSxDQUFDLENBQUNwQixDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBMUJPLENBMEJMUixFQUFFLENBQUMwQixTQTFCRSxDQUFSOztBQTJCQTdCLE9BQU8sV0FBUCxHQUFrQlMsQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgYSA9IGNjLl9kZWNvcmF0b3I7XG52YXIgcyA9IGEuY2NjbGFzcztcbnZhciBjID0gYS5wcm9wZXJ0eTtcbnZhciBsID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuc3BpbmUgPSBudWxsO1xuICAgICAgICBlLmdldFNwID0gbnVsbDtcbiAgICAgICAgZS5pZHggPSAwO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLmluaXRJdGVtID0gZnVuY3Rpb24gKHQsIGUpIHtcbiAgICAgICAgdGhpcy5zcGluZS5za2VsZXRvbkRhdGEgPSBlO1xuICAgICAgICB0aGlzLmlkeCA9IHQgKyAxO1xuICAgICAgICB0aGlzLnNwaW5lLmFuaW1hdGlvbiA9IFwiYm94X1wiICsgdGhpcy5pZHggKyBcIl9cIiArIHRoaXMuaWR4O1xuICAgICAgICB0aGlzLmdldFNwLmFjdGl2ZSA9ICExO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuc2V0RmluaXNoID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdmFyIGUgPSB0aGlzLmlkeDtcbiAgICAgICAgdGhpcy5zcGluZS5hbmltYXRpb24gPSB0ID8gXCJib3hfXCIgKyBlIDogXCJib3hfXCIgKyBlICsgXCJfXCIgKyBlO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuc2V0SXNHZXQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0aGlzLmdldFNwLmFjdGl2ZSA9IHQ7XG4gICAgICAgIHQgJiYgdGhpcy5zZXRGaW5pc2goITEpO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbYyhzcC5Ta2VsZXRvbildLCBlLnByb3RvdHlwZSwgXCJzcGluZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2MoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJnZXRTcFwiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtzXSwgZSk7XG59KShjYy5Db21wb25lbnQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gbDtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/raceRankItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7e2e8kHoUZNVrkBvdUrlq5X', 'raceRankItem');
// scripts/raceRankItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _rankItem = require("rankItem");

var s = cc._decorator;
var c = s.ccclass;
var l = s.property;

var u = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.idxIcon = null;
    e.idxBg = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.scoreLb.string = "";
    this.idxLb.string = "";
    this.nickNameLb.string = "";
    this.idxIcon && (this.idxIcon.spriteFrame = null);
  };

  e.prototype.initItem = function (t, e) {
    this.setNickName(t.nick);
    this.setScore(t.score);
    e ? this.setIdxSp(e) : this.setIdx(t.idx);
    t.headUrl ? this.setHeadSp(t.headUrl) : this.setDefaultHead();
  };

  e.prototype.setIdx = function (e) {
    t.prototype.setIdx.call(this, e);
    this.idxBg.active = !0;
  };

  e.prototype.setIdxSp = function (t) {
    this.idxIcon.spriteFrame = t;
    this.idxBg.active = !1;
  };

  __decorate([l(cc.Sprite)], e.prototype, "idxIcon", void 0);

  __decorate([l(cc.Node)], e.prototype, "idxBg", void 0);

  return __decorate([c], e);
}(_rankItem["default"]);

exports["default"] = u;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xccmFjZVJhbmtJdGVtLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9yYW5rSXRlbSIsInJlcXVpcmUiLCJzIiwiY2MiLCJfZGVjb3JhdG9yIiwiYyIsImNjY2xhc3MiLCJsIiwicHJvcGVydHkiLCJ1IiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsImlkeEljb24iLCJpZHhCZyIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsIm9uTG9hZCIsInNjb3JlTGIiLCJzdHJpbmciLCJpZHhMYiIsIm5pY2tOYW1lTGIiLCJzcHJpdGVGcmFtZSIsImluaXRJdGVtIiwic2V0Tmlja05hbWUiLCJuaWNrIiwic2V0U2NvcmUiLCJzY29yZSIsInNldElkeFNwIiwic2V0SWR4IiwiaWR4IiwiaGVhZFVybCIsInNldEhlYWRTcCIsInNldERlZmF1bHRIZWFkIiwiY2FsbCIsImFjdGl2ZSIsIl9fZGVjb3JhdGUiLCJTcHJpdGUiLCJOb2RlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdkI7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLElBQUlDLENBQUMsR0FBSSxVQUFVQyxDQUFWLEVBQWE7RUFDbEIsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxPQUFGLEdBQVksSUFBWjtJQUNBSCxDQUFDLENBQUNJLEtBQUYsR0FBVSxJQUFWO0lBQ0EsT0FBT0osQ0FBUDtFQUNIOztFQUNESyxTQUFTLENBQUNMLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNNLFNBQUYsQ0FBWUMsTUFBWixHQUFxQixZQUFZO0lBQzdCLEtBQUtDLE9BQUwsQ0FBYUMsTUFBYixHQUFzQixFQUF0QjtJQUNBLEtBQUtDLEtBQUwsQ0FBV0QsTUFBWCxHQUFvQixFQUFwQjtJQUNBLEtBQUtFLFVBQUwsQ0FBZ0JGLE1BQWhCLEdBQXlCLEVBQXpCO0lBQ0EsS0FBS04sT0FBTCxLQUFpQixLQUFLQSxPQUFMLENBQWFTLFdBQWIsR0FBMkIsSUFBNUM7RUFDSCxDQUxEOztFQU1BWixDQUFDLENBQUNNLFNBQUYsQ0FBWU8sUUFBWixHQUF1QixVQUFVZCxDQUFWLEVBQWFDLENBQWIsRUFBZ0I7SUFDbkMsS0FBS2MsV0FBTCxDQUFpQmYsQ0FBQyxDQUFDZ0IsSUFBbkI7SUFDQSxLQUFLQyxRQUFMLENBQWNqQixDQUFDLENBQUNrQixLQUFoQjtJQUNBakIsQ0FBQyxHQUFHLEtBQUtrQixRQUFMLENBQWNsQixDQUFkLENBQUgsR0FBc0IsS0FBS21CLE1BQUwsQ0FBWXBCLENBQUMsQ0FBQ3FCLEdBQWQsQ0FBdkI7SUFDQXJCLENBQUMsQ0FBQ3NCLE9BQUYsR0FBWSxLQUFLQyxTQUFMLENBQWV2QixDQUFDLENBQUNzQixPQUFqQixDQUFaLEdBQXdDLEtBQUtFLGNBQUwsRUFBeEM7RUFDSCxDQUxEOztFQU1BdkIsQ0FBQyxDQUFDTSxTQUFGLENBQVlhLE1BQVosR0FBcUIsVUFBVW5CLENBQVYsRUFBYTtJQUM5QkQsQ0FBQyxDQUFDTyxTQUFGLENBQVlhLE1BQVosQ0FBbUJLLElBQW5CLENBQXdCLElBQXhCLEVBQThCeEIsQ0FBOUI7SUFDQSxLQUFLSSxLQUFMLENBQVdxQixNQUFYLEdBQW9CLENBQUMsQ0FBckI7RUFDSCxDQUhEOztFQUlBekIsQ0FBQyxDQUFDTSxTQUFGLENBQVlZLFFBQVosR0FBdUIsVUFBVW5CLENBQVYsRUFBYTtJQUNoQyxLQUFLSSxPQUFMLENBQWFTLFdBQWIsR0FBMkJiLENBQTNCO0lBQ0EsS0FBS0ssS0FBTCxDQUFXcUIsTUFBWCxHQUFvQixDQUFDLENBQXJCO0VBQ0gsQ0FIRDs7RUFJQUMsVUFBVSxDQUFDLENBQUM5QixDQUFDLENBQUNKLEVBQUUsQ0FBQ21DLE1BQUosQ0FBRixDQUFELEVBQWlCM0IsQ0FBQyxDQUFDTSxTQUFuQixFQUE4QixTQUE5QixFQUF5QyxLQUFLLENBQTlDLENBQVY7O0VBQ0FvQixVQUFVLENBQUMsQ0FBQzlCLENBQUMsQ0FBQ0osRUFBRSxDQUFDb0MsSUFBSixDQUFGLENBQUQsRUFBZTVCLENBQUMsQ0FBQ00sU0FBakIsRUFBNEIsT0FBNUIsRUFBcUMsS0FBSyxDQUExQyxDQUFWOztFQUNBLE9BQU9vQixVQUFVLENBQUMsQ0FBQ2hDLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0EvQk8sQ0ErQkxYLFNBQVMsV0EvQkosQ0FBUjs7QUFnQ0FGLE9BQU8sV0FBUCxHQUFrQlcsQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgX3JhbmtJdGVtID0gcmVxdWlyZShcInJhbmtJdGVtXCIpO1xudmFyIHMgPSBjYy5fZGVjb3JhdG9yO1xudmFyIGMgPSBzLmNjY2xhc3M7XG52YXIgbCA9IHMucHJvcGVydHk7XG52YXIgdSA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLmlkeEljb24gPSBudWxsO1xuICAgICAgICBlLmlkeEJnID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgfVxuICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICBlLnByb3RvdHlwZS5vbkxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuc2NvcmVMYi5zdHJpbmcgPSBcIlwiO1xuICAgICAgICB0aGlzLmlkeExiLnN0cmluZyA9IFwiXCI7XG4gICAgICAgIHRoaXMubmlja05hbWVMYi5zdHJpbmcgPSBcIlwiO1xuICAgICAgICB0aGlzLmlkeEljb24gJiYgKHRoaXMuaWR4SWNvbi5zcHJpdGVGcmFtZSA9IG51bGwpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuaW5pdEl0ZW0gPSBmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICB0aGlzLnNldE5pY2tOYW1lKHQubmljayk7XG4gICAgICAgIHRoaXMuc2V0U2NvcmUodC5zY29yZSk7XG4gICAgICAgIGUgPyB0aGlzLnNldElkeFNwKGUpIDogdGhpcy5zZXRJZHgodC5pZHgpO1xuICAgICAgICB0LmhlYWRVcmwgPyB0aGlzLnNldEhlYWRTcCh0LmhlYWRVcmwpIDogdGhpcy5zZXREZWZhdWx0SGVhZCgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuc2V0SWR4ID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdC5wcm90b3R5cGUuc2V0SWR4LmNhbGwodGhpcywgZSk7XG4gICAgICAgIHRoaXMuaWR4QmcuYWN0aXZlID0gITA7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5zZXRJZHhTcCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHRoaXMuaWR4SWNvbi5zcHJpdGVGcmFtZSA9IHQ7XG4gICAgICAgIHRoaXMuaWR4QmcuYWN0aXZlID0gITE7XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtsKGNjLlNwcml0ZSldLCBlLnByb3RvdHlwZSwgXCJpZHhJY29uXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbbChjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcImlkeEJnXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW2NdLCBlKTtcbn0pKF9yYW5rSXRlbS5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHU7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/random_notice.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd1568XYcd5KxbBwNiWbgXvK', 'random_notice');
// scripts/random_notice.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = (a.property, function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.tmpV3 = new cc.Vec3();
    return e;
  }

  __extends(e, t);

  e.prototype.init = function () {
    this.preV3 = this.node.position;
    this.isMoveing = !0;
  };

  e.prototype.update = function () {
    var t = this.preV3;
    var e = this.node.position;
    var o = this.tmpV3;
    cc.Vec3.subtract(o, e, t);
    t.set(e);
    var n = cc.Vec3.angle(o, cc.Vec3.RIGHT);
    var i = cc.misc.radiansToDegrees(n);
    this.node.angle = i - 90;
  };

  return __decorate([s], e);
}(cc.Component));
exports["default"] = c;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xccmFuZG9tX25vdGljZS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJhIiwiY2MiLCJfZGVjb3JhdG9yIiwicyIsImNjY2xhc3MiLCJjIiwicHJvcGVydHkiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwidG1wVjMiLCJWZWMzIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwiaW5pdCIsInByZVYzIiwibm9kZSIsInBvc2l0aW9uIiwiaXNNb3ZlaW5nIiwidXBkYXRlIiwibyIsInN1YnRyYWN0Iiwic2V0IiwiYW5nbGUiLCJSSUdIVCIsImkiLCJtaXNjIiwicmFkaWFuc1RvRGVncmVlcyIsIl9fZGVjb3JhdGUiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQSxJQUFJQyxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsSUFBSUMsQ0FBQyxJQUNBTCxDQUFDLENBQUNNLFFBQUYsRUFDQSxVQUFVQyxDQUFWLEVBQWE7RUFDVixTQUFTQyxDQUFULEdBQWE7SUFDVCxJQUFJQSxDQUFDLEdBQUksU0FBU0QsQ0FBVCxJQUFjQSxDQUFDLENBQUNFLEtBQUYsQ0FBUSxJQUFSLEVBQWNDLFNBQWQsQ0FBZixJQUE0QyxJQUFwRDtJQUNBRixDQUFDLENBQUNHLEtBQUYsR0FBVSxJQUFJVixFQUFFLENBQUNXLElBQVAsRUFBVjtJQUNBLE9BQU9KLENBQVA7RUFDSDs7RUFDREssU0FBUyxDQUFDTCxDQUFELEVBQUlELENBQUosQ0FBVDs7RUFDQUMsQ0FBQyxDQUFDTSxTQUFGLENBQVlDLElBQVosR0FBbUIsWUFBWTtJQUMzQixLQUFLQyxLQUFMLEdBQWEsS0FBS0MsSUFBTCxDQUFVQyxRQUF2QjtJQUNBLEtBQUtDLFNBQUwsR0FBaUIsQ0FBQyxDQUFsQjtFQUNILENBSEQ7O0VBSUFYLENBQUMsQ0FBQ00sU0FBRixDQUFZTSxNQUFaLEdBQXFCLFlBQVk7SUFDN0IsSUFBSWIsQ0FBQyxHQUFHLEtBQUtTLEtBQWI7SUFDQSxJQUFJUixDQUFDLEdBQUcsS0FBS1MsSUFBTCxDQUFVQyxRQUFsQjtJQUNBLElBQUlHLENBQUMsR0FBRyxLQUFLVixLQUFiO0lBQ0FWLEVBQUUsQ0FBQ1csSUFBSCxDQUFRVSxRQUFSLENBQWlCRCxDQUFqQixFQUFvQmIsQ0FBcEIsRUFBdUJELENBQXZCO0lBQ0FBLENBQUMsQ0FBQ2dCLEdBQUYsQ0FBTWYsQ0FBTjtJQUNBLElBQUliLENBQUMsR0FBR00sRUFBRSxDQUFDVyxJQUFILENBQVFZLEtBQVIsQ0FBY0gsQ0FBZCxFQUFpQnBCLEVBQUUsQ0FBQ1csSUFBSCxDQUFRYSxLQUF6QixDQUFSO0lBQ0EsSUFBSUMsQ0FBQyxHQUFHekIsRUFBRSxDQUFDMEIsSUFBSCxDQUFRQyxnQkFBUixDQUF5QmpDLENBQXpCLENBQVI7SUFDQSxLQUFLc0IsSUFBTCxDQUFVTyxLQUFWLEdBQWtCRSxDQUFDLEdBQUcsRUFBdEI7RUFDSCxDQVREOztFQVVBLE9BQU9HLFVBQVUsQ0FBQyxDQUFDMUIsQ0FBRCxDQUFELEVBQU1LLENBQU4sQ0FBakI7QUFDSCxDQXRCRCxDQXNCR1AsRUFBRSxDQUFDNkIsU0F0Qk4sQ0FGQyxDQUFMO0FBeUJBaEMsT0FBTyxXQUFQLEdBQWtCTyxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBhID0gY2MuX2RlY29yYXRvcjtcbnZhciBzID0gYS5jY2NsYXNzO1xudmFyIGMgPVxuICAgIChhLnByb3BlcnR5LFxuICAgIChmdW5jdGlvbiAodCkge1xuICAgICAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgICAgICBlLnRtcFYzID0gbmV3IGNjLlZlYzMoKTtcbiAgICAgICAgICAgIHJldHVybiBlO1xuICAgICAgICB9XG4gICAgICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICAgICAgZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMucHJlVjMgPSB0aGlzLm5vZGUucG9zaXRpb247XG4gICAgICAgICAgICB0aGlzLmlzTW92ZWluZyA9ICEwO1xuICAgICAgICB9O1xuICAgICAgICBlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdCA9IHRoaXMucHJlVjM7XG4gICAgICAgICAgICB2YXIgZSA9IHRoaXMubm9kZS5wb3NpdGlvbjtcbiAgICAgICAgICAgIHZhciBvID0gdGhpcy50bXBWMztcbiAgICAgICAgICAgIGNjLlZlYzMuc3VidHJhY3QobywgZSwgdCk7XG4gICAgICAgICAgICB0LnNldChlKTtcbiAgICAgICAgICAgIHZhciBuID0gY2MuVmVjMy5hbmdsZShvLCBjYy5WZWMzLlJJR0hUKTtcbiAgICAgICAgICAgIHZhciBpID0gY2MubWlzYy5yYWRpYW5zVG9EZWdyZWVzKG4pO1xuICAgICAgICAgICAgdGhpcy5ub2RlLmFuZ2xlID0gaSAtIDkwO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gX19kZWNvcmF0ZShbc10sIGUpO1xuICAgIH0pKGNjLkNvbXBvbmVudCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gYztcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/rankItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '64824nHmPRCBqzNVohG2VVh', 'rankItem');
// scripts/rankItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _res = require("res");

var _global = require("global");

var _panelMgr = require("panelMgr");

var _skinMgr = require("skinMgr");

var u = cc._decorator;
var p = u.ccclass;
var d = u.property;

var h = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.nickNameLb = null;
    e.scoreLb = null;
    e.idxLb = null;
    e.headSp = null;
    e.headFSp = null;
    e.nameFSp = null;
    e.game_uid = "";
    e.rankInfo = {};
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.setHeadBtn();
    this.game_uid = "";
  };

  e.prototype.setNickName = function (t) {
    t.length > 6 && (t = t.substring(0, 5) + "...");
    this.nickNameLb.string = t;
  };

  e.prototype.setScore = function (t) {
    this.scoreLb.string = t;
  };

  e.prototype.setIdx = function (t) {
    this.idxLb.string = t;
  };

  e.prototype.setHeadSp = function (t) {
    var e = this;
    t ? cc.assetManager.loadRemote(t, {
      ext: _global.headImgExt
    }, function (t, o) {
      e.node && e.node.isValid && (t ? e.setDefaultHead() : e.headSp.spriteFrame = new cc.SpriteFrame(o));
    }) : this.setDefaultHead();
  };

  e.prototype.setDefaultHead = function () {
    _res["default"].ins.lSF("common/head_1", this.headSp);
  };

  e.prototype.setHeadBtn = function () {};

  e.prototype.setGameUid = function (t) {
    this.game_uid = t;
  };

  e.prototype.setRankData = function (t) {
    this.rankInfo = t;
  };

  e.prototype.setSkin = function (t, e, o) {
    void 0 === e && (e = !1);
    void 0 === o && (o = !1);
    t ? (t.headFrame && 1 != t.headFrame ? _skinMgr["default"].ins.updateHeadFrame(t.headFrame, this.headFSp, !0) : _skinMgr["default"].ins.updateHeadFrame(1, this.headFSp, !0), t.nameFrame && 1 != t.nameFrame ? _skinMgr["default"].ins.updateNameFrame(t.nameFrame, this.nameFSp) : this.nameFSp.spriteFrame = null) : (_skinMgr["default"].ins.updateHeadFrame(1, this.headFSp, !0), this.nameFSp.spriteFrame = null);
  };

  e.prototype.clearFrame = function () {
    _skinMgr["default"].ins.updateHeadFrame(1, this.headFSp, !0);

    this.nameFSp.spriteFrame = null;
  };

  e.prototype.clickHead = function () {
    this.game_uid && _panelMgr["default"].ins.open("ui/ui_userInfo", {
      gameUid: this.game_uid,
      baseData: this.rankInfo
    });
  };

  e.nameColor1 = new cc.Color(166, 86, 31);
  e.nameColor2 = new cc.Color(64, 109, 30);
  e.nameColor3 = new cc.Color(152, 54, 38);

  __decorate([d(cc.Label)], e.prototype, "nickNameLb", void 0);

  __decorate([d(cc.Label)], e.prototype, "scoreLb", void 0);

  __decorate([d(cc.Label)], e.prototype, "idxLb", void 0);

  __decorate([d(cc.Sprite)], e.prototype, "headSp", void 0);

  __decorate([d(cc.Sprite)], e.prototype, "headFSp", void 0);

  __decorate([d(cc.Sprite)], e.prototype, "nameFSp", void 0);

  return __decorate([p], e);
}(cc.Component);

exports["default"] = h;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/qq.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7bad26df+hPn6RIm3jVIcMH', 'qq');
// scripts/qq.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _c = require("c");

var _evts = require("evts");

var _pConst = require("pConst");

var c = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.isQQ = !0;
    return e;
  }

  __extends(e, t);

  Object.defineProperty(e.prototype, "appId", {
    get: function get() {
      return "1110513462";
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.canUse = function () {
    return !0;
  };

  e.prototype.doWatchAD = function () {
    var t = this;
    return this.noAd ? (_evts["default"].adE.emit(_c.ADE.VIDEO_END), Promise.reject(_pConst.VideoFailCode.NO_AD)) : this.noVideo ? void Promise.reject(_pConst.VideoFailCode.NO_AD) : (_evts["default"].adE.emit(_c.ADE.VIDEO), this.showLoading(), new Promise(function (e, o) {
      var n = wx.createRewardedVideoAd({
        adUnitId: "bb8f5f005098f1ca2e16e73448b4bc8c"
      });
      n.onError(function () {});
      n.onLoad(function () {});
      n.onClose(function t(i) {
        null != n && n.offClose(t), null != i && i.isEnded ? (_evts["default"].adE.emit(_c.ADE.VIDEO_END), e(1)) : (_evts["default"].adE.emit(_c.ADE.VIDEO_END), o(_pConst.VideoFailCode.CANCELED));
      });
      n.load().then(function () {
        n.show().then(function () {})["catch"](function () {
          _evts["default"].adE.emit(_c.ADE.VIDEO_END);

          o(_pConst.VideoFailCode.NO_AD);
        }).then(function () {
          t.hideLoading();
        });
      })["catch"](function () {
        t.hideLoading();
      });
    }));
  };

  e.prototype.preloadVideo = function () {
    return !1;
  };

  e.prototype.reportEvent = function () {};

  e.prototype.share = function () {
    return new Promise(function (t) {
      var e = _pConst.SDKConfig.shareData();

      qq.shareAppMessage({
        title: e.title,
        imageUrl: e.imageUrl,
        query: e.query,
        success: function success(e) {
          t(e.data);
        },
        fail: function fail() {
          t(0);
        }
      });
    });
  };

  return e;
}(require("wx")["default"]);

exports["default"] = c;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xccXEuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2MiLCJyZXF1aXJlIiwiX2V2dHMiLCJfcENvbnN0IiwiYyIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJpc1FRIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwiZ2V0IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsImNhblVzZSIsImRvV2F0Y2hBRCIsIm5vQWQiLCJhZEUiLCJlbWl0IiwiQURFIiwiVklERU9fRU5EIiwiUHJvbWlzZSIsInJlamVjdCIsIlZpZGVvRmFpbENvZGUiLCJOT19BRCIsIm5vVmlkZW8iLCJWSURFTyIsInNob3dMb2FkaW5nIiwibyIsInd4IiwiY3JlYXRlUmV3YXJkZWRWaWRlb0FkIiwiYWRVbml0SWQiLCJvbkVycm9yIiwib25Mb2FkIiwib25DbG9zZSIsImkiLCJvZmZDbG9zZSIsImlzRW5kZWQiLCJDQU5DRUxFRCIsImxvYWQiLCJ0aGVuIiwic2hvdyIsImhpZGVMb2FkaW5nIiwicHJlbG9hZFZpZGVvIiwicmVwb3J0RXZlbnQiLCJzaGFyZSIsIlNES0NvbmZpZyIsInNoYXJlRGF0YSIsInFxIiwic2hhcmVBcHBNZXNzYWdlIiwidGl0bGUiLCJpbWFnZVVybCIsInF1ZXJ5Iiwic3VjY2VzcyIsImRhdGEiLCJmYWlsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLEVBQUUsR0FBR0MsT0FBTyxDQUFDLEdBQUQsQ0FBaEI7O0FBQ0EsSUFBSUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFuQjs7QUFDQSxJQUFJRSxPQUFPLEdBQUdGLE9BQU8sQ0FB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bk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9jID0gcmVxdWlyZShcImNcIik7XG52YXIgX2V2dHMgPSByZXF1aXJlKFwiZXZ0c1wiKTtcbnZhciBfcENvbnN0ID0gcmVxdWlyZShcInBDb25zdFwiKTtcbnZhciBjID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuaXNRUSA9ICEwO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSwgXCJhcHBJZFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIFwiMTExMDUxMzQ2MlwiO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiAhMSxcbiAgICAgICAgY29uZmlndXJhYmxlOiAhMFxuICAgIH0pO1xuICAgIGUucHJvdG90eXBlLmNhblVzZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICEwO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuZG9XYXRjaEFEID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IHRoaXM7XG4gICAgICAgIHJldHVybiB0aGlzLm5vQWRcbiAgICAgICAgICAgID8gKF9ldnRzLmRlZmF1bHQuYWRFLmVtaXQoX2MuQURFLlZJREVPX0VORCksIFByb21pc2UucmVqZWN0KF9wQ29uc3QuVmlkZW9GYWlsQ29kZS5OT19BRCkpXG4gICAgICAgICAgICA6IHRoaXMubm9WaWRlb1xuICAgICAgICAgICAgPyB2b2lkIFByb21pc2UucmVqZWN0KF9wQ29uc3QuVmlkZW9GYWlsQ29kZS5OT19BRClcbiAgICAgICAgICAgIDogKF9ldnRzLmRlZmF1bHQuYWRFLmVtaXQoX2MuQURFLlZJREVPKSxcbiAgICAgICAgICAgICAgdGhpcy5zaG93TG9hZGluZygpLFxuICAgICAgICAgICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAoZSwgbykge1xuICAgICAgICAgICAgICAgICAgdmFyIG4gPSB3eC5jcmVhdGVSZXdhcmRlZFZpZGVvQWQoe2FkVW5pdElkOiBcImJiOGY1ZjAwNTA5OGYxY2EyZTE2ZTczNDQ4YjRiYzhjXCJ9KTtcbiAgICAgICAgICAgICAgICAgIG4ub25FcnJvcihmdW5jdGlvbiAoKSB7fSk7XG4gICAgICAgICAgICAgICAgICBuLm9uTG9hZChmdW5jdGlvbiAoKSB7fSk7XG4gICAgICAgICAgICAgICAgICBuLm9uQ2xvc2UoZnVuY3Rpb24gdChpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgbnVsbCAhPSBuICYmIG4ub2ZmQ2xvc2UodCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgIT0gaSAmJiBpLmlzRW5kZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gKF9ldnRzLmRlZmF1bHQuYWRFLmVtaXQoX2MuQURFLlZJREVPX0VORCksIGUoMSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IChfZXZ0cy5kZWZhdWx0LmFkRS5lbWl0KF9jLkFERS5WSURFT19FTkQpLCBvKF9wQ29uc3QuVmlkZW9GYWlsQ29kZS5DQU5DRUxFRCkpO1xuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICBuLmxvYWQoKVxuICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbi5zaG93KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHt9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfZXZ0cy5kZWZhdWx0LmFkRS5lbWl0KF9jLkFERS5WSURFT19FTkQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG8oX3BDb25zdC5WaWRlb0ZhaWxDb2RlLk5PX0FEKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdC5oaWRlTG9hZGluZygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0LmhpZGVMb2FkaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0pKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnByZWxvYWRWaWRlbyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICExO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUucmVwb3J0RXZlbnQgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICBlLnByb3RvdHlwZS5zaGFyZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICB2YXIgZSA9IF9wQ29uc3QuU0RLQ29uZmlnLnNoYXJlRGF0YSgpO1xuICAgICAgICAgICAgcXEuc2hhcmVBcHBNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICB0aXRsZTogZS50aXRsZSxcbiAgICAgICAgICAgICAgICBpbWFnZVVybDogZS5pbWFnZVVybCxcbiAgICAgICAgICAgICAgICBxdWVyeTogZS5xdWVyeSxcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICB0KGUuZGF0YSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHQoMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIGU7XG59KShyZXF1aXJlKFwid3hcIikuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSBjO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/page_challenge.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ffe87NgStNFVZHkaf3sEeX1', 'page_challenge');
// scripts/page_challenge.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _mySafeArea = require("mySafeArea");

var _numberUtils = require("NumberUtils");

var _res = require("res");

var _time = require("time");

var _cfgMgr = require("cfgMgr");

var _global = require("global");

var _bagMgr = require("bagMgr");

var _challengeMgr = require("challengeMgr");

var _panelMgr = require("panelMgr");

var _skinMgr = require("skinMgr");

var _pInfo = require("pInfo");

var _dateItem = require("dateItem");

var _packItem = require("packItem");

var T = cc._decorator;
var I = T.ccclass;
var D = T.property;

var P = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.dateNodes = null;
    e.dateNode0 = null;
    e.dateNode1 = null;
    e.dateItem = null;
    e.yearLb = null;
    e.monthLb = null;
    e.costLb = null;
    e.topNode = null;
    e.leftNode = null;
    e.rightNode = null;
    e.lvPerLb = null;
    e.finNumLb = null;
    e.packPro = null;
    e.packItems = [];
    e.midBg = null;
    e.packageNode = null;
    e.maskNode = null;
    e.topSp = null;
    e.spineNode = null;
    e.beforeRedLb = null;
    e.afterRedLb = null;
    e.bgNode = null;
    e.hengNode = null;
    e.curYear = 0;
    e.curMonth = 0;
    e.curDay = 0;
    e.lvData = {
      type: 1,
      diff: 3
    };
    e.isAni = !1;
    e.isFin = !1;
    e.gameDate = null;
    e.loadPackEnd = !1;
    e.crossData = {};
    e.isLoad = !0;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t = this;
    this.node.height = cc.winSize.height;
    _global["default"].padScale && (this.hengNode.scaleX = this.bgNode.scaleX = this.topSp.node.parent.scale = _global["default"].padScale);

    _evts["default"].opE.on(this.onOperTap.bind(this));

    _res["default"].ins.getBundleByString("resSps").then(function (e) {
      e.load("game/normal/top1", cc.SpriteFrame, function (e, o) {
        !e && t.node && t.node.isValid && (t.topSp.spriteFrame = o);
      }), e.load("spine/package/action", sp.SkeletonData, function (e, o) {
        if (!e && t.node && t.node.isValid) {
          for (var n = 0, i = t.packItems.length; n < i; n++) {
            t.packItems[n].initItem(n, o);
          }

          t.setPackPer(), t.loadPackEnd = !0;
        }
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });

    this.loadGirl();
  };

  e.prototype.loadGirl = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        _skinMgr["default"].ins.updateRole(_pInfo["default"].ins.getUsingSkin().role, this.spineNode);

        return [2];
      });
    });
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].UPD_MAIN_RED:
        this.updateReds();
        break;

      case _evts["default"].SKIN_CHG:
        this.loadGirl();
    }
  };

  e.prototype.start = function () {
    var t = this;
    this.scheduleOnce(function () {
      t.adapter();
      t.initPanel();
    });
  };

  e.prototype.onEnable = function () {
    var t = this;
    this.isLoad || _challengeMgr["default"].ins.getRequestChallengeData(this.curYear, this.curMonth).then(function (e) {
      e.status && (t.crossData = e.data, t.setCrossNum());
    })["catch"](function (t) {
      console.error("getRequestChallengeDataErr", t);
    });
    this.isLoad = !1;
  };

  e.prototype.adapter = function () {
    var t = _mySafeArea.getSafeAreaRect().yMin;

    var e = this.node.height - 1280 - t;
    this.spineNode.y += e / 6;
    this.topNode.y -= t;
    this.topNode.removeComponent(cc.Widget);
  };

  e.prototype.initPanel = function () {
    var t = this;
    var e = 1e3 * _time["default"].ins.serverTime;
    var o = new Date(e);
    var n = o.getDate();
    var i = o.getFullYear();
    var r = o.getMonth() + 1;

    if (_global["default"].challengeLv) {
      var a = Math.trunc;
      var s = a(_global["default"].challengeLv / 1e4);
      var c = a(_global["default"].challengeLv % 1e4 / 100);
      _challengeMgr["default"].ins.getTheMonthIsFin(i, r) || (i = s, r = c);
    }

    this.curYear = i;
    this.curMonth = r;
    this.curDay = n;
    this.yearLb.string = this.curYear + "年";
    this.monthLb.string = this.curMonth + "";
    this.initItems();
    this.checkBtns();
    this.getCrossData();

    _res["default"].ins.getBundleByString("resSps").then(function (e) {
      e.load("spine/package/action", sp.SkeletonData, function (e, o) {
        if (!e && t.node && t.node.isValid) {
          for (var n = 0, i = t.packItems.length; n < i; n++) {
            t.packItems[n].initItem(n, o);
          }

          t.setPackPer();
          t.loadPackEnd = !0;
        }
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });
  };

  e.prototype.initItems = function () {
    for (var t = this.curYear, e = this.curMonth, o = 0, n = 0, i = 0; i < 42; i++) {
      var r = cc.instantiate(this.dateItem);
      r.active = !0;
      r.parent = this.dateNode1;
      r.x = 92 * o;
      r.y = -86 * n;
      ++o > 6 && (o = 0, n++);
    }

    this.setItemsByDate(this.dateNode1, t, e);
    var a = 1e3 * _time["default"].ins.serverTime;
    var s = new Date(a);
    var c = s.getFullYear();
    var l = s.getMonth() + 1;
    var u = s.getDate();
    var p = _challengeMgr["default"].ins;
    var d = p.getLastUnFinIdx(t, e);
    var f = p.getFinLvNum(t, e);
    c == t && l == e && u == f && (d = u - 1);
    this.setIsSelect(d);
    this.dateNode0.y += 516;
    o = 0;
    n = 0;
    this.loadDateItem(0, o, n);
  };

  e.prototype.loadDateItem = function (t, e, o) {
    var n = this;

    if (!(t >= 42)) {
      var i = cc.instantiate(this.dateItem);
      i.active = !0;
      i.parent = this.dateNode0;
      i.x = 92 * e;
      i.y = -86 * o;
      ++e > 6 && (e = 0, o++);
      t++;
      this.scheduleOnce(function () {
        n.loadDateItem(t, e, o);
      }, 0);
    }
  };

  e.prototype.checkBtns = function () {
    var t = 1e3 * _time["default"].ins.serverTime;
    var e = new Date(t);
    var o = e.getFullYear();
    var n = e.getMonth() + 1;
    var i = _challengeMgr["default"].ins;
    var r = this.curYear;
    var a = this.curMonth;
    this.rightNode.active = o != r || n != a;
    r == i.firstYear && a == i.firstMonth ? this.leftNode.active = !1 : this.leftNode.active = !0;
    this.updateReds();
  };

  e.prototype.updateReds = function () {
    var t = _challengeMgr["default"].ins;
    var e = this.curYear;
    var o = this.curMonth;
    var n = t.getMonthRed(e, o);
    var i = t.getBeforeMonthRed(e, o);
    var r = i - n;
    var a = t.getAllMonthRed() - i;
    r > 0 ? (this.beforeRedLb.node.parent.active = !0, this.beforeRedLb.string = r + "", this.beforeRedLb.node.x = _global["default"].getCharXOffset(this.beforeRedLb.string)) : this.beforeRedLb.node.parent.active = !1;
    a > 0 ? (this.afterRedLb.node.parent.active = !0, this.afterRedLb.string = a + "", this.afterRedLb.node.x = _global["default"].getCharXOffset(this.afterRedLb.string)) : this.afterRedLb.node.parent.active = !1;
  };

  e.prototype.rePanel = function (t) {
    var e = this;
    var o = this.curYear;
    var n = this.curMonth;
    var i = 516 * t;
    var r = this.dateNode0.active ? this.dateNode0 : this.dateNode1;
    var a = this.dateNode0.active ? this.dateNode1 : this.dateNode0;
    a.y = r.y - i;
    this.setItemsByDate(a, o, n);
    this.dateNode0.active = !0;
    this.dateNode1.active = !0;
    this.isAni = !0;
    cc.tween(this.dateNodes).by(0.2, {
      y: i
    }).call(function () {
      e.isAni = !1, r.active = !1, a.active = !0;

      var t = _challengeMgr["default"].ins.getLastUnFinIdx(e.curYear, e.curMonth);

      e.setIsSelect(t);
    }).start();
    this.yearLb.string = o + "年";
    this.monthLb.string = n + "";
    this.loadPackEnd && this.setPackPer();
    this.getCrossData();
  };

  e.prototype.setPackPer = function () {
    var t = _challengeMgr["default"].ins;
    var e = this.curYear;
    var o = this.curMonth;
    var n = t.getMonthData(e, o);
    var i = (n[0], n[1]);
    var r = t.getFinLvNum(e, o);
    this.lvPerLb.string = r + "/" + i;
    this.packPro.progress = r / 28;

    for (var a = t.getChaPackData(e, o), s = 0, c = this.packItems.length; s < c; s++) {
      var l = 7 * (s + 1);
      var u = this.packItems[s];
      u.setIsGet(!1);
      u.setFinish(!1);
      r >= l && u.setFinish(!0);
      a[s] && u.setIsGet(!0);
    }
  };

  e.prototype.setItemsByDate = function (t, e, o) {
    for (var n = this, i = _challengeMgr["default"].ins, r = i.getfinData(e, o), a = i.getMonthData(e, o), s = a[0], c = a[1], l = function l(a) {
      var l = t.children[a];
      var p = a - s + 1;
      var d = l.getComponent(_dateItem["default"]);
      p < 0 || p >= c ? l.active = !1 : (l.active = !0, d.setDate(p + 1), l.off("click"), i.isLocked(e, o, p) ? d.setLocked(!0) : (l.on("click", function () {
        n.onBtnChgStartData(p);
      }, u), d.setLocked(!1)), d.setFinish(r[p]));
    }, u = this, p = 0, d = t.childrenCount; p < d; p++) {
      l(p);
    }
  };

  e.prototype.setIsSelect = function (t) {
    for (var e = this.dateNode0.active ? this.dateNode0 : this.dateNode1, o = 0, n = e.childrenCount; o < n; o++) {
      var i = e.children[o];
      i && i.getComponent(_dateItem["default"]).setSelected(!1);
    }

    var r = _challengeMgr["default"].ins;
    var a = r.getMonthData(this.curYear, this.curMonth);
    var s = a[0];
    var c = (a[1], t + s - 1);
    var l = r.getfinData(this.curYear, this.curMonth);
    this.isFin = l[t];
    var u = e.children[c];
    u && u.getComponent(_dateItem["default"]).setSelected(!0);
    this.lvData = r.getLvDataByDate(this.curYear, this.curMonth, t);
    var p = {};
    p.year = this.curYear;
    p.month = this.curMonth;
    p.day = t + 1;
    p.isFin = l[t];
    this.gameDate = p;
    this.setCrossNum();
    var d = this.getLevelCost();
    this.costLb.string = "-" + d;
  };

  e.prototype.getCrossData = function () {
    var t = this;

    var e = _challengeMgr["default"].ins.getRequestChallengeData(this.curYear, this.curMonth);

    this.crossData = {};
    e.then(function (e) {
      e.status && (t.crossData = e.data, t.setCrossNum());
    })["catch"](function (t) {
      console.error("getRequestChallengeDataErr", t);
    });
  };

  e.prototype.setCrossNum = function () {
    var t = this.gameDate;
    var e = _challengeMgr["default"].ins;
    var o = e.addZeroToNum(t.month);
    var n = e.addZeroToNum(t.day);
    var i = t.year + "-" + o + "-" + n;
    var r = e.getfinData(t.year, t.month);
    var a = r[t.day - 1] ? 1 : 0;
    var s = this.crossData[i] || a;
    this.finNumLb.string = s + "";
    var c = r[t.day - 1] ? s : s + 1;
    this.gameDate.num = c;
  };

  e.prototype.onBtnChgStartData = function (t) {
    this.isAni || this.setIsSelect(t);
  };

  e.prototype.onBtnStart = function () {
    var t = this;

    if (!this.isAni) {
      var e = this.getLevelCost();
      if (_pInfo["default"].ins.getPower() < e) _panelMgr["default"].ins.open("ui/ui_getRes", {
        itemId: "times"
      });else {
        var o = this.lvData;

        if (o.date = this.gameDate, o.type === _pInfo.challengeType.worm) {
          var n = o.count || _numberUtils["default"].RandomInt(1, 460);

          (n < 0 || n > 460) && (n = Math.abs(n) % 460);
          o.count = n;

          _idx.platform.showLoading();

          cc.assetManager.loadRemote(_global.OssConfig.challengeWormUrl + n + ".json", cc.JsonAsset, function (n, i) {
            _idx.platform.hideLoading();

            !n && i && i.json ? o.data = i.json : o.data = {
              size: 15,
              data: [[188, 203, 218, 219, 220, 221, 206, 191, 192, 193, 194, 179, 164, 149, 148, 147, 132, 117, 102, 87, 72, 71, 70, 69, 84, 99, 114, 113, 112, 111, 110, 95, 80, 65, 50, 49, 48, 47, 62, 77, 76, 75, 90, 105, 120], [186, 185, 170, 155, 154, 153, 138, 123, 108, 107, 122, 137, 152, 151, 166, 167, 182, 197], [74, 59, 44, 43, 28, 13, 12, 11, 26, 41, 40, 39, 38, 23, 22, 21, 6, 5, 4, 3, 18, 17, 16, 15], [160, 159, 158, 157, 142, 143, 144, 145]]
            };

            _panelMgr["default"].ins.open("ui/ui_challengeInfo", {
              lvData: o,
              cost: e,
              crossNum: t.finNumLb.string
            });
          });
        } else _panelMgr["default"].ins.open("ui/ui_challengeInfo", {
          lvData: o,
          cost: e,
          crossNum: this.finNumLb.string
        });
      }
    }
  };

  e.prototype.onBtnChgMonth = function (t, e) {
    if (!this.isAni) {
      var o = Number(e);
      var n = this.getNewDate(o);
      var i = n[0];
      var r = n[1];
      this.curYear = i;
      this.curMonth = r;
      var a = _challengeMgr["default"].ins;
      var s = 1e3 * _time["default"].ins.serverTime;
      var c = new Date(s);
      var l = c.getFullYear();
      var u = c.getMonth() + 1;
      this.curYear == a.firstYear && this.curMonth < a.firstMonth ? this.curMonth = a.firstMonth : this.curYear == l && this.curMonth > u ? this.curMonth = u : (this.checkBtns(), this.rePanel(o));
    }
  };

  e.prototype.getNewDate = function (t) {
    var e = t;
    var o = this.curYear;
    var n = this.curMonth;
    (n += e) < 1 ? (o -= 1, n = 12) : n > 12 && (o += 1, n = 1);
    return [o, n];
  };

  e.prototype.getLevelCost = function () {
    var t;
    var e;
    var o = (null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.daily_challenge) || void 0 === e ? void 0 : e.consume) || 30;
    this.isFin && (o = 0);
    return o;
  };

  e.prototype.onBtnPack = function (t, e) {
    var o;
    var n;

    if (!this.isAni) {
      var i = Number(e);
      var r = this.curYear;
      var a = this.curMonth;
      var s = _challengeMgr["default"].ins;
      var l = s.getFinLvNum(r, a);
      var u = s.getChaPackData(r, a);
      var p = 7 * (i + 1);
      var d = (null === (n = null === (o = _cfgMgr["default"].serverCfg) || void 0 === o ? void 0 : o.daily_challenge) || void 0 === n ? void 0 : n.numreward)[i] || {
        times: 150,
        coin: 150,
        puzzle_pieces: 20
      };
      var h = this.packItems[i];
      var g = [];

      for (var _ in d) {
        var b = d[_];
        var w = h.node;
        var S = w.parent.convertToWorldSpaceAR(w.position);
        var T = {};
        T.itemId = _;
        T.worldPos = S;
        T.value = Number(b);
        g.push(T);
      }

      if (g.length) if (l >= p && !u[i]) {
        for (var _ in h.setIsGet(!0), s.setChaPackData(r, a, i), d) {
          b = d[_], _bagMgr["default"].ins.addItem(_, Number(b));
        }

        _evts["default"].opE.emit({
          action: _evts["default"].UPD_MAIN_RED
        });

        _panelMgr["default"].ins.open("ui/ui_flyAni", {
          itemDatas: g
        });
      } else _panelMgr["default"].ins.open("ui/ui_preReward", {
        itemDatas: g
      });
    }
  };

  __decorate([D(cc.Node)], e.prototype, "dateNodes", void 0);

  __decorate([D(cc.Node)], e.prototype, "dateNode0", void 0);

  __decorate([D(cc.Node)], e.prototype, "dateNode1", void 0);

  __decorate([D(cc.Prefab)], e.prototype, "dateItem", void 0);

  __decorate([D(cc.Label)], e.prototype, "yearLb", void 0);

  __decorate([D(cc.Label)], e.prototype, "monthLb", void 0);

  __decorate([D(cc.Label)], e.prototype, "costLb", void 0);

  __decorate([D(cc.Node)], e.prototype, "topNode", void 0);

  __decorate([D(cc.Node)], e.prototype, "leftNode", void 0);

  __decorate([D(cc.Node)], e.prototype, "rightNode", void 0);

  __decorate([D(cc.Label)], e.prototype, "lvPerLb", void 0);

  __decorate([D(cc.Label)], e.prototype, "finNumLb", void 0);

  __decorate([D(cc.ProgressBar)], e.prototype, "packPro", void 0);

  __decorate([D([_packItem["default"]])], e.prototype, "packItems", void 0);

  __decorate([D(cc.Node)], e.prototype, "midBg", void 0);

  __decorate([D(cc.Node)], e.prototype, "packageNode", void 0);

  __decorate([D(cc.Node)], e.prototype, "maskNode", void 0);

  __decorate([D(cc.Sprite)], e.prototype, "topSp", void 0);

  __decorate([D(cc.Node)], e.prototype, "spineNode", void 0);

  __decorate([D(cc.Label)], e.prototype, "beforeRedLb", void 0);

  __decorate([D(cc.Label)], e.prototype, "afterRedLb", void 0);

  __decorate([D(cc.Node)], e.prototype, "bgNode", void 0);

  __decorate([D(cc.Node)], e.prototype, "hengNode", void 0);

  return __decorate([I], e);
}(cc.Component);

exports["default"] = P;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/panelMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '18935KmlCBN86TB4yHqLYf5', 'panelMgr');
// scripts/panelMgr.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.PanelShowResult = void 0;
var c;

var _evts = require("evts");

var _res = require("res");

var _baseUI = require("baseUI");

var d = cc._decorator;
var h = d.ccclass;
var f = d.property;

(function (t) {
  t[t.DONE = 0] = "DONE";
  t[t.FAILED = 1] = "FAILED";
  t[t.WAITING = 2] = "WAITING";
})(c = exports.PanelShowResult || (exports.PanelShowResult = {}));

var g = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.container = null;
    e.mask = null;
    return e;
  }

  var o;

  __extends(e, t);

  o = e;

  e.prototype.onLoad = function () {
    o.ins = this;
    this.panelQueue = [];
    this.panelList = [];
    this.mask.active = !1;
    this.mask.opacity = 0;
  };

  e.prototype.open = function (t, e, o) {
    void 0 === o && (o = {});
    return __awaiter(this, void 0, void 0, function () {
      var n;
      var i;
      var r;
      var a;
      var d;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            return o.inQueue && this.panelList.length > 0 ? (this.panelQueue.push({
              prefab: t,
              data: e,
              opt: o
            }), [2, {
              panelResult: c.WAITING
            }]) : [3, 1];

          case 1:
            return [4, new Promise(function (e, o) {
              _res["default"].ins.getBundleByString("prefab").then(function (n) {
                n.load(t, cc.Prefab, function (t, n) {
                  t ? o(t) : e(n);
                });
              });
            })];

          case 2:
            return n = s.sent(), d = this, cc.isValid(n) ? (i = cc.instantiate(n), (r = i.getComponent(_baseUI["default"])) ? ((a = i.getComponent(cc.Widget) || i.addComponent(cc.Widget)).verticalCenter = 0, a.horizontalCenter = 0, a.isAlignVerticalCenter = !0, a.isAlignHorizontalCenter = !0, this.currentPanel = i, this.panelList.push({
              prefab: t,
              data: e,
              opt: o,
              node: i
            }), i.setParent(this.container), r.show(e), this.ensureMask(), _evts["default"].laE.emit({
              comp: r
            }), [2, new Promise(function (t) {
              r.setCb(function (e, o) {
                d.currentPanel = null;
                e.destroy();

                for (var n = 0; n < d.panelList.length; n++) {
                  if (e == d.panelList[n].node) {
                    d.panelList.splice(n, 1);
                    break;
                  }
                }

                t({
                  panelResult: c.DONE,
                  values: o
                });
                d.onNext();
                d.scheduleOnce(function () {
                  d.ensureMask();

                  _evts["default"].laE.emit({
                    comp: null
                  });
                }, 0);
              });
            })]) : (console.warn("failed to load component of prefab", t), [2, {
              panelResult: c.FAILED
            }])) : (console.warn("invalid prefab", t), [2, {
              panelResult: c.FAILED
            }]);

          case 3:
            return [2];
        }
      });
    });
  };

  e.prototype.getPanelByPath = function (t) {
    for (var e = this.panelList, o = e.length - 1; o >= 0; --o) {
      if (e[o].prefab === t && null != e[o].node) {
        var n = e[o].node.getComponent(_baseUI["default"]);
        if (null != n) return n;
      }
    }

    return null;
  };

  e.prototype.close = function (t) {
    for (var e = this.panelList, o = e.length - 1; o >= 0; --o) {
      if (e[o].prefab === t) {
        var n = e[o].node;

        if (null != n) {
          var i = n.getComponent(_baseUI["default"]);
          null != i && i.hide();
        }

        break;
      }
    }
  };

  e.prototype.closeAllPanel = function () {
    this.panelQueue = [];

    for (var t = this.panelList, e = t.length - 1; e >= 0; --e) {
      if (null != t[e].node) {
        var o = t[e].node.getComponent(_baseUI["default"]);
        null != o && o.hide();
      }
    }
  };

  e.prototype.onNext = function () {
    if (!(this.panelList.length > 0) && null == this.currentPanel && 0 != this.panelQueue.length) {
      var t = this.panelQueue.shift();
      this.open(t.prefab, t.data, t.opt);
    }
  };

  e.prototype.ensureMask = function () {
    var t = this.panelList;
    var e = t.length;
    var o = t[e - 1];
    var n = this.container.childrenCount;
    var i = this.mask;
    if (e <= 0) i.opacity = 0, i.isValid && (i.active = !1), _evts["default"].opE.emit({
      action: _evts["default"].CHECK_WX_BTNS
    });else {
      var r = o.node;
      i.active = !0;
      cc.tween(i).to(0.2, {
        opacity: 200
      }).start();
      r.active = !0;
      i.setSiblingIndex(n);
      r.setSiblingIndex(n);

      _evts["default"].opE.emit({
        action: _evts["default"].HIDE_WX_BTNS
      });
    }
  };

  e.prototype.onMaskClick = function () {
    var t = this.panelList;
    var e = t.length;

    if (!(e <= 0)) {
      var o = t[e - 1];
      var n = o.opt;
      var i = o.node;
      !n.MaskNoHide && i.getComponent(_baseUI["default"]).hide();
    }
  };

  e.prototype.hasPop = function () {
    return this.panelList.length > 0;
  };

  __decorate([f(cc.Node)], e.prototype, "container", void 0);

  __decorate([f(cc.Node)], e.prototype, "mask", void 0);

  return o = __decorate([h], e);
}(cc.Component);

exports["default"] = g;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xccGFuZWxNZ3IuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUGFuZWxTaG93UmVzdWx0IiwiYyIsIl9ldnRzIiwicmVxdWlyZSIsIl9yZXMiLCJfYmFzZVVJIiwiZCIsImNjIiwiX2RlY29yYXRvciIsImgiLCJjY2NsYXNzIiwiZiIsInByb3BlcnR5IiwidCIsIkRPTkUiLCJGQUlMRUQiLCJXQUlUSU5HIiwiZyIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsImNvbnRhaW5lciIsIm1hc2siLCJvIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwib25Mb2FkIiwiaW5zIiwicGFuZWxRdWV1ZSIsInBhbmVsTGlzdCIsImFjdGl2ZSIsIm9wYWNpdHkiLCJvcGVuIiwiX19hd2FpdGVyIiwiaSIsInIiLCJhIiwiX19nZW5lcmF0b3IiLCJzIiwibGFiZWwiLCJpblF1ZXVlIiwibGVuZ3RoIiwicHVzaCIsInByZWZhYiIsImRhdGEiLCJvcHQiLCJwYW5lbFJlc3VsdCIsIlByb21pc2UiLCJnZXRCdW5kbGVCeVN0cmluZyIsInRoZW4iLCJsb2FkIiwiUHJlZmFiIiwic2VudCIsImlzVmFsaWQiLCJpbnN0YW50aWF0ZSIsImdldENvbXBvbmVudCIsIldpZGdldCIsImFkZENvbXBvbmVudCIsInZlcnRpY2FsQ2VudGVyIiwiaG9yaXpvbnRhbENlbnRlciIsImlzQWxpZ25WZXJ0aWNhbENlbnRlciIsImlzQWxpZ25Ib3Jpem9udGFsQ2VudGVyIiwiY3VycmVudFBhbmVsIiwibm9kZSIsInNldFBhcmVudCIsInNob3ciLCJlbnN1cmVNYXNrIiwibGFFIiwiZW1pdCIsImNvbXAiLCJzZXRDYiIsImRlc3Ryb3kiLCJzcGxpY2UiLCJ2YWx1ZXMiLCJvbk5leHQiLCJzY2hlZHVsZU9uY2UiLCJjb25zb2xlIiwid2FybiIsImdldFBhbmVsQnlQYXRoIiwiY2xvc2UiLCJoaWRlIiwiY2xvc2VBbGxQYW5lbCIsInNoaWZ0IiwiY2hpbGRyZW5Db3VudCIsIm9wRSIsImFjdGlvbiIsIkNIRUNLX1dYX0JUTlMiLCJ0d2VlbiIsInRvIiwic3RhcnQiLCJzZXRTaWJsaW5nSW5kZXgiLCJISURFX1dYX0JUTlMiLCJvbk1hc2tDbGljayIsIk1hc2tOb0hpZGUiLCJoYXNQb3AiLCJfX2RlY29yYXRlIiwiTm9kZSIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3QztBQUNBRCxPQUFPLENBQUNFLGVBQVIsR0FBMEIsS0FBSyxDQUEvQjtBQUNBLElBQUlDLENBQUo7O0FBQ0EsSUFBSUMsS0FBSyxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFuQjs7QUFDQSxJQUFJQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxLQUFELENBQWxCOztBQUNBLElBQUlFLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBSUcsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLENBQUMsVUFBVUMsQ0FBVixFQUFhO0VBQ1ZBLENBQUMsQ0FBRUEsQ0FBQyxDQUFDQyxJQUFGLEdBQVMsQ0FBWCxDQUFELEdBQWtCLE1BQWxCO0VBQ0FELENBQUMsQ0FBRUEsQ0FBQyxDQUFDRSxNQUFGLEdBQVcsQ0FBYixDQUFELEdBQW9CLFFBQXBCO0VBQ0FGLENBQUMsQ0FBRUEsQ0FBQyxDQUFDRyxPQUFGLEdBQVksQ0FBZCxDQUFELEdBQXFCLFNBQXJCO0FBQ0gsQ0FKRCxFQUlJZixDQUFDLEdBQUdILE9BQU8sQ0FBQ0UsZUFBUixLQUE0QkYsT0FBTyxDQUFDRSxlQUFSLEdBQTBC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Q0FBQyxHQUFHVixDQUFDLENBQUNLLENBQUMsR0FBRyxDQUFMLENBQVQ7TUFDQSxJQUFJdkIsQ0FBQyxHQUFHNEIsQ0FBQyxDQUFDc0IsR0FBVjtNQUNBLElBQUlYLENBQUMsR0FBR1gsQ0FBQyxDQUFDd0MsSUFBVjtNQUNBLENBQUNwRSxDQUFDLENBQUNrRyxVQUFILElBQWlCM0QsQ0FBQyxDQUFDcUIsWUFBRixDQUFlbEQsT0FBTyxXQUF0QixFQUFnQzJFLElBQWhDLEVBQWpCO0lBQ0g7RUFDSixDQVREOztFQVVBOUQsQ0FBQyxDQUFDTyxTQUFGLENBQVlxRSxNQUFaLEdBQXFCLFlBQVk7SUFDN0IsT0FBTyxLQUFLakUsU0FBTCxDQUFlWSxNQUFmLEdBQXdCLENBQS9CO0VBQ0gsQ0FGRDs7RUFHQXNELFVBQVUsQ0FBQyxDQUFDcEYsQ0FBQyxDQUFDSixFQUFFLENBQUN5RixJQUFKLENBQUYsQ0FBRCxFQUFlOUUsQ0FBQyxDQUFDTyxTQUFqQixFQUE0QixXQUE1QixFQUF5QyxLQUFLLENBQTlDLENBQVY7O0VBQ0FzRSxVQUFVLENBQUMsQ0FBQ3BGLENBQUMsQ0FBQ0osRUFBRSxDQUFDeUYsSUFBSixDQUFGLENBQUQsRUFBZTlFLENBQUMsQ0FBQ08sU0FBakIsRUFBNEIsTUFBNUIsRUFBb0MsS0FBSyxDQUF6QyxDQUFWOztFQUNBLE9BQVFGLENBQUMsR0FBR3dFLFVBQVUsQ0FBQyxDQUFDdEYsQ0FBRCxDQUFELEVBQU1TLENBQU4sQ0FBdEI7QUFDSCxDQS9KTyxDQStKTFgsRUFBRSxDQUFDMEYsU0EvSkUsQ0FBUjs7QUFnS0FuRyxPQUFPLFdBQVAsR0FBa0JtQixDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbmV4cG9ydHMuUGFuZWxTaG93UmVzdWx0ID0gdm9pZCAwO1xudmFyIGM7XG52YXIgX2V2dHMgPSByZXF1aXJlKFwiZXZ0c1wiKTtcbnZhciBfcmVzID0gcmVxdWlyZShcInJlc1wiKTtcbnZhciBfYmFzZVVJID0gcmVxdWlyZShcImJhc2VVSVwiKTtcbnZhciBkID0gY2MuX2RlY29yYXRvcjtcbnZhciBoID0gZC5jY2NsYXNzO1xudmFyIGYgPSBkLnByb3BlcnR5O1xuKGZ1bmN0aW9uICh0KSB7XG4gICAgdFsodC5ET05FID0gMCldID0gXCJET05FXCI7XG4gICAgdFsodC5GQUlMRUQgPSAxKV0gPSBcIkZBSUxFRFwiO1xuICAgIHRbKHQuV0FJVElORyA9IDIpXSA9IFwiV0FJVElOR1wiO1xufSkoKGMgPSBleHBvcnRzLlBhbmVsU2hvd1Jlc3VsdCB8fCAoZXhwb3J0cy5QYW5lbFNob3dSZXN1bHQgPSB7fSkpKTtcbnZhciBnID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuY29udGFpbmVyID0gbnVsbDtcbiAgICAgICAgZS5tYXNrID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgfVxuICAgIHZhciBvO1xuICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICBvID0gZTtcbiAgICBlLnByb3RvdHlwZS5vbkxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIG8uaW5zID0gdGhpcztcbiAgICAgICAgdGhpcy5wYW5lbFF1ZXVlID0gW107XG4gICAgICAgIHRoaXMucGFuZWxMaXN0ID0gW107XG4gICAgICAgIHRoaXMubWFzay5hY3RpdmUgPSAhMTtcbiAgICAgICAgdGhpcy5tYXNrLm9wYWNpdHkgPSAwO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uICh0LCBlLCBvKSB7XG4gICAgICAgIHZvaWQgMCA9PT0gbyAmJiAobyA9IHt9KTtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG47XG4gICAgICAgICAgICB2YXIgaTtcbiAgICAgICAgICAgIHZhciByO1xuICAgICAgICAgICAgdmFyIGE7XG4gICAgICAgICAgICB2YXIgZDtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAocy5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gby5pblF1ZXVlICYmIHRoaXMucGFuZWxMaXN0Lmxlbmd0aCA+IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICh0aGlzLnBhbmVsUXVldWUucHVzaCh7cHJlZmFiOiB0LCBkYXRhOiBlLCBvcHQ6IG99KSwgWzIsIHtwYW5lbFJlc3VsdDogYy5XQUlUSU5HfV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBbMywgMV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgNCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAoZSwgbykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfcmVzLmRlZmF1bHQuaW5zLmdldEJ1bmRsZUJ5U3RyaW5nKFwicHJlZmFiXCIpLnRoZW4oZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG4ubG9hZCh0LCBjYy5QcmVmYWIsIGZ1bmN0aW9uICh0LCBuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdCA/IG8odCkgOiBlKG4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChuID0gcy5zZW50KCkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChkID0gdGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2MuaXNWYWxpZChuKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICgoaSA9IGNjLmluc3RhbnRpYXRlKG4pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAociA9IGkuZ2V0Q29tcG9uZW50KF9iYXNlVUkuZGVmYXVsdCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gKCgoYSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkuZ2V0Q29tcG9uZW50KGNjLldpZGdldCkgfHwgaS5hZGRDb21wb25lbnQoY2MuV2lkZ2V0KSkudmVydGljYWxDZW50ZXIgPSAwKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYS5ob3Jpem9udGFsQ2VudGVyID0gMCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGEuaXNBbGlnblZlcnRpY2FsQ2VudGVyID0gITApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChhLmlzQWxpZ25Ib3Jpem9udGFsQ2VudGVyID0gITApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzLmN1cnJlbnRQYW5lbCA9IGkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFuZWxMaXN0LnB1c2goe3ByZWZhYjogdCwgZGF0YTogZSwgb3B0OiBvLCBub2RlOiBpfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaS5zZXRQYXJlbnQodGhpcy5jb250YWluZXIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIuc2hvdyhlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVuc3VyZU1hc2soKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfZXZ0cy5kZWZhdWx0LmxhRS5lbWl0KHtjb21wOiByfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgci5zZXRDYihmdW5jdGlvbiAoZSwgbykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQuY3VycmVudFBhbmVsID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBuID0gMDsgbiA8IGQucGFuZWxMaXN0Lmxlbmd0aDsgbisrKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZSA9PSBkLnBhbmVsTGlzdFtuXS5ub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkLnBhbmVsTGlzdC5zcGxpY2UobiwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQoe3BhbmVsUmVzdWx0OiBjLkRPTkUsIHZhbHVlczogb30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQub25OZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZC5zY2hlZHVsZU9uY2UoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkLmVuc3VyZU1hc2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2V2dHMuZGVmYXVsdC5sYUUuZW1pdCh7Y29tcDogbnVsbH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAoY29uc29sZS53YXJuKFwiZmFpbGVkIHRvIGxvYWQgY29tcG9uZW50IG9mIHByZWZhYlwiLCB0KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbMiwge3BhbmVsUmVzdWx0OiBjLkZBSUxFRH1dKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAoY29uc29sZS53YXJuKFwiaW52YWxpZCBwcmVmYWJcIiwgdCksIFsyLCB7cGFuZWxSZXN1bHQ6IGMuRkFJTEVEfV0pXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzJdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmdldFBhbmVsQnlQYXRoID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgZm9yICh2YXIgZSA9IHRoaXMucGFuZWxMaXN0LCBvID0gZS5sZW5ndGggLSAxOyBvID49IDA7IC0tbylcbiAgICAgICAgICAgIGlmIChlW29dLnByZWZhYiA9PT0gdCAmJiBudWxsICE9IGVbb10ubm9kZSkge1xuICAgICAgICAgICAgICAgIHZhciBuID0gZVtvXS5ub2RlLmdldENvbXBvbmVudChfYmFzZVVJLmRlZmF1bHQpO1xuICAgICAgICAgICAgICAgIGlmIChudWxsICE9IG4pIHJldHVybiBuO1xuICAgICAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgZm9yICh2YXIgZSA9IHRoaXMucGFuZWxMaXN0LCBvID0gZS5sZW5ndGggLSAxOyBvID49IDA7IC0tbylcbiAgICAgICAgICAgIGlmIChlW29dLnByZWZhYiA9PT0gdCkge1xuICAgICAgICAgICAgICAgIHZhciBuID0gZVtvXS5ub2RlO1xuICAgICAgICAgICAgICAgIGlmIChudWxsICE9IG4pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSBuLmdldENvbXBvbmVudChfYmFzZVVJLmRlZmF1bHQpO1xuICAgICAgICAgICAgICAgICAgICBudWxsICE9IGkgJiYgaS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgIH07XG4gICAgZS5wcm90b3R5cGUuY2xvc2VBbGxQYW5lbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5wYW5lbFF1ZXVlID0gW107XG4gICAgICAgIGZvciAodmFyIHQgPSB0aGlzLnBhbmVsTGlzdCwgZSA9IHQubGVuZ3RoIC0gMTsgZSA+PSAwOyAtLWUpXG4gICAgICAgICAgICBpZiAobnVsbCAhPSB0W2VdLm5vZGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgbyA9IHRbZV0ubm9kZS5nZXRDb21wb25lbnQoX2Jhc2VVSS5kZWZhdWx0KTtcbiAgICAgICAgICAgICAgICBudWxsICE9IG8gJiYgby5oaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vbk5leHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghKHRoaXMucGFuZWxMaXN0Lmxlbmd0aCA+IDApICYmIG51bGwgPT0gdGhpcy5jdXJyZW50UGFuZWwgJiYgMCAhPSB0aGlzLnBhbmVsUXVldWUubGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgdCA9IHRoaXMucGFuZWxRdWV1ZS5zaGlmdCgpO1xuICAgICAgICAgICAgdGhpcy5vcGVuKHQucHJlZmFiLCB0LmRhdGEsIHQub3B0KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgZS5wcm90b3R5cGUuZW5zdXJlTWFzayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSB0aGlzLnBhbmVsTGlzdDtcbiAgICAgICAgdmFyIGUgPSB0Lmxlbmd0aDtcbiAgICAgICAgdmFyIG8gPSB0W2UgLSAxXTtcbiAgICAgICAgdmFyIG4gPSB0aGlzLmNvbnRhaW5lci5jaGlsZHJlbkNvdW50O1xuICAgICAgICB2YXIgaSA9IHRoaXMubWFzaztcbiAgICAgICAgaWYgKGUgPD0gMClcbiAgICAgICAgICAgIChpLm9wYWNpdHkgPSAwKSxcbiAgICAgICAgICAgICAgICBpLmlzVmFsaWQgJiYgKGkuYWN0aXZlID0gITEpLFxuICAgICAgICAgICAgICAgIF9ldnRzLmRlZmF1bHQub3BFLmVtaXQoe2FjdGlvbjogX2V2dHMuZGVmYXVsdC5DSEVDS19XWF9CVE5TfSk7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIHIgPSBvLm5vZGU7XG4gICAgICAgICAgICBpLmFjdGl2ZSA9ICEwO1xuICAgICAgICAgICAgY2MudHdlZW4oaSkudG8oMC4yLCB7b3BhY2l0eTogMjAwfSkuc3RhcnQoKTtcbiAgICAgICAgICAgIHIuYWN0aXZlID0gITA7XG4gICAgICAgICAgICBpLnNldFNpYmxpbmdJbmRleChuKTtcbiAgICAgICAgICAgIHIuc2V0U2libGluZ0luZGV4KG4pO1xuICAgICAgICAgICAgX2V2dHMuZGVmYXVsdC5vcEUuZW1pdCh7YWN0aW9uOiBfZXZ0cy5kZWZhdWx0LkhJREVfV1hfQlROU30pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vbk1hc2tDbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSB0aGlzLnBhbmVsTGlzdDtcbiAgICAgICAgdmFyIGUgPSB0Lmxlbmd0aDtcbiAgICAgICAgaWYgKCEoZSA8PSAwKSkge1xuICAgICAgICAgICAgdmFyIG8gPSB0W2UgLSAxXTtcbiAgICAgICAgICAgIHZhciBuID0gby5vcHQ7XG4gICAgICAgICAgICB2YXIgaSA9IG8ubm9kZTtcbiAgICAgICAgICAgICFuLk1hc2tOb0hpZGUgJiYgaS5nZXRDb21wb25lbnQoX2Jhc2VVSS5kZWZhdWx0KS5oaWRlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmhhc1BvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFuZWxMaXN0Lmxlbmd0aCA+IDA7XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtmKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiY29udGFpbmVyXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbZihjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcIm1hc2tcIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gKG8gPSBfX2RlY29yYXRlKFtoXSwgZSkpO1xufSkoY2MuQ29tcG9uZW50KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGc7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/page_jigsaw.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '502baxKlExFebmxN98W6bhx', 'page_jigsaw');
// scripts/page_jigsaw.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _mySafeArea = require("mySafeArea");

var _global = require("global");

var _jigsawMgr = require("jigsawMgr");

var _newJigMgr = require("newJigMgr");

var _tipMgr = require("tipMgr");

var _jigMenu = require("jigMenu");

var h = cc._decorator;
var f = h.ccclass;
var g = h.property;

var y = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.jigsawItem = null;
    e.menuView = null;
    e.newView = null;
    e.btnsNode = null;
    e.pageNodes = null;
    e.jigsawNum = null;
    e.jigsawNum1 = null;
    e.jigTypes = [];
    e.bgNode = null;
    e.menuItem = null;
    e.THEME_H = 276;
    e.themeSpace = 10;
    e.top_offest = 30;
    e.bottom_offest = 200;
    e.last_view_inner_y = -1;
    e.themes = {};
    e.newThemes = {};
    e.touching_theme_id = 0;
    e.jigBID = 1;
    e.jigEID = 27;
    e.jigCount = 27;
    e.newJigBID = 1;
    e.newJigEID = 18;
    e.newJigCount = 18;
    e.designContH = 1100;
    e.btnsComp = [];
    e.curPageIdx = 0;
    e.isAni = !1;
    e.isFirstLoad = !0;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.jigEID = this.jigCount = _global["default"].jisawCount;
    this.newJigEID = this.newJigCount = _newJigMgr["default"].ins.jigsawThemeNum;
    this.node.height = cc.winSize.height;
    _global["default"].padScale && (this.bgNode.scale = _global["default"].padScale);

    _evts["default"].opE.on(this.onOperTap.bind(this));

    this.upNewJigRed();
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].FINISH_PUZZLE:
        break;

      case _evts["default"].UPD_MAIN_RED:
        this.upNewJigRed();
    }
  };

  e.prototype.upNewJigRed = function () {
    this.jigsawNum1.node.parent.active = !1;

    var t = _newJigMgr["default"].ins.getUnPlacedNum();

    if (t > 0) {
      var e = t > 99 ? "99+" : t + "";
      this.jigsawNum.node.parent.active = !0;
      this.jigsawNum.string = e + "";
      this.jigsawNum.node.x = _global["default"].getCharXOffset(this.jigsawNum.string);
    } else this.jigsawNum.node.parent.active = !1, this.jigsawNum1.node.parent.active = !1;
  };

  e.prototype.start = function () {
    var t = this;
    this.scheduleOnce(function () {
      t.adapter();

      var e = _mySafeArea.getSafeAreaRect().yMin;

      var o = t.node.height - 1280 - e;
      t.newView.node.height = t.menuView.node.height = t.designContH + o;
      t.newView.node.getChildByName("view").height = t.menuView.node.getChildByName("view").height = t.designContH + o;
      t.menuView.node.y -= e / 2;
      t.newView.node.y -= e / 2;
      t.initMenuView();
    });
  };

  e.prototype.adapter = function () {
    var t = _mySafeArea.getSafeAreaRect().yMin;

    this.btnsNode.y -= t;
  };

  e.prototype.onEnable = function () {
    var t = this;
    this.isFirstLoad || this.scheduleOnce(function () {
      t.adapter();
    });
    this.isFirstLoad = !1;
  };

  e.prototype.initMenuView = function () {
    var t = (Math.ceil(this.jigCount / 3) + 1) * (this.themeSpace + this.THEME_H);
    this.menuView.content.setContentSize(cc.size(cc.winSize.width, t));
    this.initItemView1();
    this.loadMenuItem(0);
  };

  e.prototype.loadMenuItem = function (t) {
    if (t < this.jigCount) {
      var e = this.jigBID + t;
      var o = cc.instantiate(this.menuItem);
      var n = o.getComponent(_jigMenu["default"]);
      n.node.active = !0;
      o.opacity = 0;
      cc.tween(o).to(0.5, {
        opacity: 255
      }).start();
      var i = t % 3;
      var r = Math.ceil(e / 3);
      var a = 128 + 232 * i;
      var s = -this.top_offest - this.THEME_H / 2 + (r - 1) * -(this.THEME_H + this.themeSpace);
      n.node.parent = this.menuView.content;
      n.node.position = cc.v3(a, s);
      this.themes[e] = n;
      n.init(t, 1);
      t++;
      this.scheduleOnce(this.loadMenuItem.bind(this, t), 0);
    } else this.reItemVis1(), this.loadNewItem(0);
  };

  e.prototype.loadNewItem = function (t) {
    if (t < this.newJigCount) {
      var e = this.newJigBID + t;
      var o = cc.instantiate(this.menuItem).getComponent(_jigMenu["default"]);
      o.node.active = !0;
      var n = t % 3;
      var i = Math.ceil(e / 3);
      var r = 128 + 232 * n;
      var a = -this.top_offest - this.THEME_H / 2 + (i - 1) * -(this.THEME_H + this.themeSpace);
      o.node.parent = this.newView.content;
      o.node.position = cc.v3(r, a);
      this.newThemes[e] = o;
      o.init(t, 2);
      t++;
      this.scheduleOnce(this.loadNewItem.bind(this, t), 0);
    } else this.initItemView2();
  };

  e.prototype.initItemView1 = function () {
    var t = this;
    this.menuView.node.on("scrolling", function () {
      t.reItemVis1();
    }, this);

    var e = _jigsawMgr["default"].ins.getNowJigsawLv();

    e >= this.jigBID && e <= this.jigEID ? this.ScrollToItem1(e) : this.ScrollToItem1(this.jigBID);
  };

  e.prototype.initItemView2 = function () {
    var t = this;
    this.newView.node.on("scrolling", function () {
      t.reItemVis2();
    }, this);

    var e = _newJigMgr["default"].ins.getNowJigsawLv();

    e >= this.newJigBID && e <= this.newJigEID ? this.ScrollToItem2(e) : this.ScrollToItem2(this.newJigBID);
  };

  e.prototype.ScrollToItem1 = function (t) {
    if (this.last_view_inner_y = -1, !(t < this.jigBID || t > this.jigEID)) {
      var e = Math.ceil(t / 3);
      var o = Math.abs(-279 * (e - 1));
      var n = Math.max(o, 0);
      var i = this.menuView.getScrollOffset();
      Math.abs(n - i.y) < Number.EPSILON || this.menuView.scrollToOffset(cc.v2(0, n), 0.5);
    }
  };

  e.prototype.ScrollToItem2 = function (t) {
    if (this.last_view_inner_y = -1, !(t < this.newJigBID || t > this.newJigEID)) {
      var e = Math.ceil(t / 3);
      var o = Math.abs((e - 1) * -this.THEME_H);
      var n = Math.max(o, 0);
      var i = this.newView.getScrollOffset();
      Math.abs(n - i.y) < Number.EPSILON || this.newView.scrollToOffset(cc.v2(0, n));
    }

    this.reItemVis2();
  };

  e.prototype.reItemVis1 = function () {
    var t = this.menuView.getContentPosition();

    if (!(Math.abs(this.last_view_inner_y - t.y) < 0.01)) {
      this.last_view_inner_y = t.y;

      for (var e = this.menuView.node, o = e.height / 2, n = e.parent.convertToWorldSpaceAR(e.position), i = n.y + o, r = n.y - o, a = this.menuView.content.children, s = 0, c = a.length; s < c; s++) {
        var l = a[s];
        var u = l.parent.convertToWorldSpaceAR(l.position);
        var p = u.y - 125 > i || u.y + 125 < r;
        l.active = !p;
      }
    }
  };

  e.prototype.reItemVis2 = function () {};

  e.prototype.chgToFes = function () {};

  e.prototype.onBtnChgJigType = function () {
    var t = this;

    if (0 !== this.curPageIdx) {
      var e = this.curPageIdx;
      var o = 0 === e ? 1 : 0;

      if (!this.isAni) {
        this.isAni = !0;
        this.jigTypes[e].active = !1;
        this.jigTypes[o].active = !0;
        this.curPageIdx = 0 === e ? 1 : 0;
        var n = this.pageNodes.children[o];
        var i = this.pageNodes.children[e];
        cc.Tween.stopAllByTarget(this.pageNodes);
        var r = o > e ? -1 : 1;
        var a = this.pageNodes.x + cc.view.getVisibleSize().width * r;
        n.x = -a;
        n && (n.active = !0);
        cc.tween(this.pageNodes).to(0.5, {
          x: a
        }, {
          easing: this.customEaseInOut
        }).call(function () {
          i && (i.active = !1);
          t.isAni = !1;
        }).start();
      }
    } else _tipMgr["default"].ins.showTip("暂未开启");
  };

  e.prototype.customEaseInOut = function (t) {
    return t < 0.5 ? 8 * t * t * t * t : 1 - Math.pow(-2 * t + 2, 4) / 2;
  };

  __decorate([g(cc.Prefab)], e.prototype, "jigsawItem", void 0);

  __decorate([g(cc.ScrollView)], e.prototype, "menuView", void 0);

  __decorate([g(cc.ScrollView)], e.prototype, "newView", void 0);

  __decorate([g(cc.Node)], e.prototype, "btnsNode", void 0);

  __decorate([g(cc.Node)], e.prototype, "pageNodes", void 0);

  __decorate([g(cc.Label)], e.prototype, "jigsawNum", void 0);

  __decorate([g(cc.Label)], e.prototype, "jigsawNum1", void 0);

  __decorate([g([cc.Node])], e.prototype, "jigTypes", void 0);

  __decorate([g(cc.Node)], e.prototype, "bgNode", void 0);

  __decorate([g(cc.Node)], e.prototype, "menuItem", void 0);

  return __decorate([f], e);
}(cc.Component);

exports["default"] = y;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/shopItem1.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f95238W2llPIrEkQREhyIIb', 'shopItem1');
// scripts/shopItem1.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _cfgMgr = require("cfgMgr");

var _shopItem = require("shopItem");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.shopItems = [];
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {};

  e.prototype.initPower = function () {
    var t;
    var e;
    var o = null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.buy_stamina) || void 0 === e ? void 0 : e.stamina;

    if (o) {
      var n = 0;

      for (var i in o) {
        var r = o[i];

        if (r) {
          var s = this.shopItems[n];
          s && s.initItem(r, !0);
        }

        n++;
      }
    }
  };

  e.prototype.initGold = function () {
    var t;
    var e;
    var o = null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.buy_gold_coins) || void 0 === e ? void 0 : e.gold_coins;

    if (o) {
      var n = 0;

      for (var i in o) {
        var r = o[i];

        if (r) {
          var s = this.shopItems[n];
          s && s.initItem(r, !1);
        }

        n++;
      }
    }
  };

  __decorate([u([_shopItem["default"]])], e.prototype, "shopItems", void 0);

  return __decorate([l], e);
}(cc.Component);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc2hvcEl0ZW0xLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9jZmdNZ3IiLCJyZXF1aXJlIiwiX3Nob3BJdGVtIiwiYyIsImNjIiwiX2RlY29yYXRvciIsImwiLCJjY2NsYXNzIiwidSIsInByb3BlcnR5IiwicCIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJzaG9wSXRlbXMiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJvbkxvYWQiLCJpbml0UG93ZXIiLCJvIiwic2VydmVyQ2ZnIiwiYnV5X3N0YW1pbmEiLCJzdGFtaW5hIiwiaSIsInIiLCJzIiwiaW5pdEl0ZW0iLCJpbml0R29sZCIsImJ1eV9nb2xkX2NvaW5zIiwiZ29sZF9jb2lucyIsIl9fZGVjb3JhdGUiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXZCOztBQUNBLElBQUlFLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csU0FBRixHQUFjLEVBQWQ7SUFDQSxPQUFPSCxDQUFQO0VBQ0g7O0VBQ0RJLFNBQVMsQ0FBQ0osQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FDLENBQUMsQ0FBQ0ssU0FBRixDQUFZQyxNQUFaLEdBQXFCLFlBQVksQ0FBRSxDQUFuQzs7RUFDQU4sQ0FBQyxDQUFDSyxTQUFGLENBQVlFLFNBQVosR0FBd0IsWUFBWTtJQUNoQyxJQUFJUixDQUFKO0lBQ0EsSUFBSUMsQ0FBSjtJQUNBLElBQUlRLENBQUMsR0FDRCxVQUFVUixDQUFDLEdBQUcsVUFBVUQsQ0FBQyxHQUFHWCxPQUFPLFdBQVAsQ0FBZ0JxQixTQUE5QixLQUE0QyxLQUFLLENBQUwsS0FBV1YsQ0FBdkQsR0FBMkQsS0FBSyxDQUFoRSxHQUFvRUEsQ0FBQyxDQUFDVyxXQUFwRixLQUNBLEtBQUssQ0FBTCxLQUFXVixDQURYLEdBRU0sS0FBSyxDQUZYLEdBR01BLENBQUMsQ0FBQ1csT0FKWjs7SUFLQSxJQUFJSCxDQUFKLEVBQU87TUFDSCxJQUFJekIsQ0FBQyxHQUFHLENBQVI7O01BQ0EsS0FBSyxJQUFJNkIsQ0FBVCxJQUFjSixDQUFkLEVBQWlCO1FBQ2IsSUFBSUssQ0FBQyxHQUFHTCxDQUFDLENBQUNJLENBQUQsQ0FBVDs7UUFDQSxJQUFJQyxDQUFKLEVBQU87VUFDSCxJQUFJQyxDQUFDLEdBQUcsS0FBS1gsU0FBTCxDQUFlcEIsQ0FBZixDQUFSO1VBQ0ErQixDQUFDLElBQUlBLENBQUMsQ0FBQ0MsUUFBRixDQUFXRixDQUFYLEVBQWMsQ0FBQyxDQUFmLENBQUw7UUFDSDs7UUFDRDlCLENBQUM7TUFDSjtJQUNKO0VBQ0osQ0FuQkQ7O0VBb0JBaUIsQ0FBQyxDQUFDSyxTQUFGLENBQVlXLFFBQVosR0FBdUIsWUFBWTtJQUMvQixJQUFJakIsQ0FBSjtJQUNBLElBQUlDLENBQUo7SUFDQSxJQUFJUSxDQUFDLEdBQ0QsVUFBVVIsQ0FBQyxHQUFHLFVBQVVELENBQUMsR0FBR1gsT0FBTyxXQUFQLENBQWdCcUIsU0FBOUIsS0FBNEMsS0FBSyxDQUFMLEtBQVdWLENBQXZELEdBQTJELEtBQUssQ0FBaEUsR0FBb0VBLENBQUMsQ0FBQ2tCLGNBQXBGLEtBQ0EsS0FBSyxDQUFMLEtBQVdqQixDQURYLEdBRU0sS0FBSyxDQUZYLEdBR01BLENBQUMsQ0FBQ2tCLFVBSlo7O0lBS0EsSUFBSVYsQ0FBSixFQUFPO01BQ0gsSUFBSXpCLENBQUMsR0FBRyxDQUFSOztNQUNBLEtBQUssSUFBSTZCLENBQVQsSUFBY0osQ0FBZCxFQUFpQjtRQUNiLElBQUlLLENBQUMsR0FBR0wsQ0FBQyxDQUFDSSxDQUFELENBQVQ7O1FBQ0EsSUFBSUMsQ0FBSixFQUFPO1VBQ0gsSUFBSUMsQ0FBQyxHQUFHLEtBQUtYLFNBQUwsQ0FBZXBCLENBQWYsQ0FBUjtVQUNBK0IsQ0FBQyxJQUFJQSxDQUFDLENBQUNDLFFBQUYsQ0FBV0YsQ0FBWCxFQUFjLENBQUMsQ0FBZixDQUFMO1FBQ0g7O1FBQ0Q5QixDQUFDO01BQ0o7SUFDSjtFQUNKLENBbkJEOztFQW9CQW9DLFVBQVUsQ0FBQyxDQUFDdkIsQ0FBQyxDQUFDLENBQUNOLFNBQVMsV0FBVixDQUFELENBQUYsQ0FBRCxFQUEyQlUsQ0FBQyxDQUFDSyxTQUE3QixFQUF3QyxXQUF4QyxFQUFxRCxLQUFLLENBQTFELENBQVY7O0VBQ0EsT0FBT2MsVUFBVSxDQUFDLENBQUN6QixDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBbERPLENBa0RMUixFQUFFLENBQUM0QixTQWxERSxDQUFSOztBQW1EQWxDLE9BQU8sV0FBUCxHQUFrQlksQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgX2NmZ01nciA9IHJlcXVpcmUoXCJjZmdNZ3JcIik7XG52YXIgX3Nob3BJdGVtID0gcmVxdWlyZShcInNob3BJdGVtXCIpO1xudmFyIGMgPSBjYy5fZGVjb3JhdG9yO1xudmFyIGwgPSBjLmNjY2xhc3M7XG52YXIgdSA9IGMucHJvcGVydHk7XG52YXIgcCA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLnNob3BJdGVtcyA9IFtdO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLm9uTG9hZCA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIGUucHJvdG90eXBlLmluaXRQb3dlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQ7XG4gICAgICAgIHZhciBlO1xuICAgICAgICB2YXIgbyA9XG4gICAgICAgICAgICBudWxsID09PSAoZSA9IG51bGwgPT09ICh0ID0gX2NmZ01nci5kZWZhdWx0LnNlcnZlckNmZykgfHwgdm9pZCAwID09PSB0ID8gdm9pZCAwIDogdC5idXlfc3RhbWluYSkgfHxcbiAgICAgICAgICAgIHZvaWQgMCA9PT0gZVxuICAgICAgICAgICAgICAgID8gdm9pZCAwXG4gICAgICAgICAgICAgICAgOiBlLnN0YW1pbmE7XG4gICAgICAgIGlmIChvKSB7XG4gICAgICAgICAgICB2YXIgbiA9IDA7XG4gICAgICAgICAgICBmb3IgKHZhciBpIGluIG8pIHtcbiAgICAgICAgICAgICAgICB2YXIgciA9IG9baV07XG4gICAgICAgICAgICAgICAgaWYgKHIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHMgPSB0aGlzLnNob3BJdGVtc1tuXTtcbiAgICAgICAgICAgICAgICAgICAgcyAmJiBzLmluaXRJdGVtKHIsICEwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbisrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5pbml0R29sZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQ7XG4gICAgICAgIHZhciBlO1xuICAgICAgICB2YXIgbyA9XG4gICAgICAgICAgICBudWxsID09PSAoZSA9IG51bGwgPT09ICh0ID0gX2NmZ01nci5kZWZhdWx0LnNlcnZlckNmZykgfHwgdm9pZCAwID09PSB0ID8gdm9pZCAwIDogdC5idXlfZ29sZF9jb2lucykgfHxcbiAgICAgICAgICAgIHZvaWQgMCA9PT0gZVxuICAgICAgICAgICAgICAgID8gdm9pZCAwXG4gICAgICAgICAgICAgICAgOiBlLmdvbGRfY29pbnM7XG4gICAgICAgIGlmIChvKSB7XG4gICAgICAgICAgICB2YXIgbiA9IDA7XG4gICAgICAgICAgICBmb3IgKHZhciBpIGluIG8pIHtcbiAgICAgICAgICAgICAgICB2YXIgciA9IG9baV07XG4gICAgICAgICAgICAgICAgaWYgKHIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHMgPSB0aGlzLnNob3BJdGVtc1tuXTtcbiAgICAgICAgICAgICAgICAgICAgcyAmJiBzLmluaXRJdGVtKHIsICExKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbisrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFt1KFtfc2hvcEl0ZW0uZGVmYXVsdF0pXSwgZS5wcm90b3R5cGUsIFwic2hvcEl0ZW1zXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW2xdLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSBwO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/scrollView.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c59d3G5OhpCHoMi9impffT1', 'scrollView');
// scripts/scrollView.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.maxScale = 1.5;
    e.minScale = 0.5;
    e.brake = 0.75;
    e.content = null;
    e._touchMovePreviousTimestamp = 0;
    e._autoScrolling = !1;
    e._touchMoveDisplacements = [];
    e._touchMoveTimeDeltas = [];
    e._autoScrollAccumulatedTime = 0;
    e._autoScrollTotalTime = 0;
    e._autoScrollStartPosition = cc.v2(0, 0);
    e._autoScrollTargetDelta = cc.Vec2.ZERO;
    e._isHandleMultiTouch = !1;
    e._isOnDestScrolling = !1;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t = this.content;
    var e = cc.Node.EventType;
    t.on(e.TOUCH_START, this.onTouchStart, this);
    t.on(e.TOUCH_MOVE, this.onTouchMove, this);
    t.on(e.TOUCH_END, this.onTouchEnd, this);
    t.on(e.TOUCH_CANCEL, this.onTouchEnd, this);
  };

  e.prototype.onDestroy = function () {
    var t = this.content;
    var e = cc.Node.EventType;
    t.off(e.TOUCH_START, this.onTouchStart, this);
    t.off(e.TOUCH_MOVE, this.onTouchMove, this);
    t.off(e.TOUCH_END, this.onTouchEnd, this);
    t.off(e.TOUCH_CANCEL, this.onTouchEnd, this);
  };

  e.prototype.onTouchStart = function () {
    this.resetTouchInfos();
  };

  e.prototype.onTouchMove = function (t) {
    if (!this._isOnDestScrolling) {
      var e = t.getTouches();

      if (1 == e.length) {
        var o = t.getDelta();
        this.moveContent(o);
        this.gatherTouchMove(o);
      } else {
        this._isHandleMultiTouch = !0;
        var n = e[0];
        var i = e[1];

        if (!this._initLen) {
          this._initLen = n.getPreviousLocation().sub(i.getPreviousLocation()).mag();
          var r = n.getStartLocation().add(i.getStartLocation()).divide(2);
          var a = this.node.convertToNodeSpaceAR(r);
          var s = this.node.convertToWorldSpaceAR(a);
          this._initPos = this.content.convertToNodeSpaceAR(s);
          this._initScale = this.content.scale;
        }

        var c = n.getLocation().sub(i.getLocation()).mag();
        var l = this._initScale * (c / this._initLen);
        if (l > this.maxScale || l < this.minScale) return;
        this._tarScale = l;
        this._scrollZoom = !0;
      }
    }
  };

  e.prototype.onTouchEnd = function (t) {
    this._isOnDestScrolling || (this._isHandleMultiTouch ? this._scrollZoom = null : (this.gatherTouchMove(t.getDelta()), this.startInertiaScroll()), this._isHandleMultiTouch = !1);
  };

  e.prototype.update = function (t) {
    if (this._scrollZoom) {
      var e = this.content.scale;
      var o = this._tarScale;
      var n = e + 0.5 * (o - e);
      var i = n - e;

      var r = this._initPos.mul(-i);

      this.content.scale = n;
      this.moveContent(r);
      this._scrollZoom = Math.abs(n - o) > 0.01;
    } else this._autoScrolling && this.processAutoScrolling(t);
  };

  e.prototype.calculateTouchMoveVelocity = function () {
    var t = 0;
    if ((t = this._touchMoveTimeDeltas.reduce(function (t, e) {
      return t + e;
    }, t)) <= 0 || t >= 0.5) return cc.v2(0, 0);
    var e = cc.v2(0, 0);
    e = this._touchMoveDisplacements.reduce(function (t, e) {
      return t.add(e);
    }, e);
    return cc.v2(e.x * (1 - this.brake) / t, e.y * (1 - this.brake) / t);
  };

  e.prototype.processAutoScrolling = function (t) {
    this._autoScrollAccumulatedTime += t;
    var e;
    var o = Math.min(1, this._autoScrollAccumulatedTime / this._autoScrollTotalTime);
    e = o;
    o = (e -= 1) * e * e * e * e + 1;

    var n = this._autoScrollStartPosition.add(this._autoScrollTargetDelta.mul(o));

    Math.abs(o - 1) <= 1e-4 && (this._autoScrolling = !1);
    var i = n.sub(this.content.getPosition());
    this.moveContent(this._clampDelta(i));
  };

  e.prototype.startAttenuatingAutoScroll = function (t, e) {
    var o = Math.sqrt(Math.sqrt(e.mag() / 5));
    var n = t.normalize();
    var i = this.content.getContentSize();
    var r = this.node.getContentSize();
    var a = i.width - r.width;
    var s = i.height - r.height;
    var c = this.calculateAttenuatedFactor(a);
    var l = this.calculateAttenuatedFactor(s);
    n = cc.v2(n.x * a * (1 - this.brake) * c, n.y * s * l * (1 - this.brake));
    var u = t.mag();
    var p = n.mag() / u;
    n = n.add(t);
    this.brake > 0 && p > 7 && (p = Math.sqrt(p), n = t.mul(p).add(t));
    this.brake > 0 && p > 3 && (o *= p = 3);
    0 === this.brake && p > 1 && (o *= p);
    this.startAutoScroll(n, o);
  };

  e.prototype.calculateAttenuatedFactor = function (t) {
    return this.brake <= 0 ? 1 - this.brake : (1 - this.brake) * (1 / (1 + 14e-6 * t + t * t * 8e-9));
  };

  e.prototype.startInertiaScroll = function () {
    var t = this.calculateTouchMoveVelocity();

    if (!t.fuzzyEquals(cc.v2(0, 0), 1e-4) && this.brake < 1) {
      var e = t.mul(0.7);
      this.startAttenuatingAutoScroll(e, t);
    }
  };

  e.prototype.startAutoScroll = function (t, e) {
    this._autoScrolling = !0;
    this._autoScrollTargetDelta = t;
    this._autoScrollStartPosition = this.content.getPosition();
    this._autoScrollTotalTime = e;
    this._autoScrollAccumulatedTime = 0;
  };

  e.prototype._clampDelta = function (t) {
    var e = this.content.getContentSize();
    var o = this.node.getContentSize();
    e.width < o.width && (t.x = 0);
    e.height < o.height && (t.y = 0);
    return t;
  };

  e.prototype.moveContent = function (t, e) {
    var o = this;
    void 0 === e && (e = 0);
    return new Promise(function (n) {
      var i = t;
      var r = o.content.getPosition().add(i);
      r.x > o.boundX ? (r.x = o.boundX, o._autoScrolling = !1) : r.x < -o.boundX && (r.x = -o.boundX, o._autoScrolling = !1);
      r.y > o.boundY ? (r.y = o.boundY, o._autoScrolling = !1) : r.y < -o.boundY && (r.y = -o.boundY, o._autoScrolling = !1);
      e > 0 ? cc.tween(o.content).to(e, {
        position: cc.v3(r.x, r.y)
      }).call(function () {
        n();
      }).start() : (o.content.setPosition(r), n());
    });
  };

  e.prototype.getTimeInMilliseconds = function () {
    return new Date().getMilliseconds();
  };

  e.prototype.gatherTouchMove = function (t) {
    for (t = this._clampDelta(t); this._touchMoveDisplacements.length >= 5;) {
      this._touchMoveDisplacements.shift(), this._touchMoveTimeDeltas.shift();
    }

    this._touchMoveDisplacements.push(t);

    var e = this.getTimeInMilliseconds();

    this._touchMoveTimeDeltas.push((e - this._touchMovePreviousTimestamp) / 1e3);

    this._touchMovePreviousTimestamp = e;
  };

  Object.defineProperty(e.prototype, "boundY", {
    get: function get() {
      return this.content.height * this.content.scaleY / 2 - this.node.height / 2;
    },
    enumerable: !1,
    configurable: !0
  });
  Object.defineProperty(e.prototype, "boundX", {
    get: function get() {
      return this.content.width * this.content.scaleX / 2 - this.node.width / 2;
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.scrollTo = function (t, e) {
    var o = this;
    void 0 === e && (e = 0);
    this._isOnDestScrolling = !0;
    this.resetTouchInfos();
    return new Promise(function (n) {
      o.moveContent(t.mul(-1), e).then(function () {
        o._isOnDestScrolling = !1;
        n();
      });
    });
  };

  e.prototype.resetTouchInfos = function () {
    this._autoScrolling = !1;
    this._touchMovePreviousTimestamp = this.getTimeInMilliseconds();
    this._touchMoveDisplacements.length = 0;
    this._touchMoveTimeDeltas.length = 0;
    this._isHandleMultiTouch = !1;
    this._initLen = null;
  };

  e.prototype.stopAutoScroll = function () {
    this._autoScrolling = !1;
    this._autoScrollAccumulatedTime = this._autoScrollTotalTime;
  };

  __decorate([c({
    tooltip: "最大可放大倍数",
    type: cc.Float
  })], e.prototype, "maxScale", void 0);

  __decorate([c({
    tooltip: "最小可缩小倍数",
    type: cc.Float
  })], e.prototype, "minScale", void 0);

  __decorate([c({
    tooltip: "滚动之后的减速系数",
    type: cc.Float
  })], e.prototype, "brake", void 0);

  __decorate([c(cc.Node)], e.prototype, "content", void 0);

  return __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/pf.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5d08eGcGmRG/bMCOUzEMeOL', 'pf');
// scripts/pf.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _request = require("request");

var i = function () {
  function t() {}

  t.prototype.syncTime = function () {
    return new Promise(function (t) {
      t(Date.now()); // _request.default.ins
      //     .getTime()
      //     .then(function (e) {
      //         t(e.server_time);
      //     })
      //     .catch(function () {
      //         t(null);
      //     });
    });
  };

  return t;
}();

exports["default"] = i;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xccGYuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfcmVxdWVzdCIsInJlcXVpcmUiLCJpIiwidCIsInByb3RvdHlwZSIsInN5bmNUaW1lIiwiUHJvbWlzZSIsIkRhdGUiLCJub3ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBRUMsS0FBSyxFQUFFLENBQUM7QUFBVixDQUE3Qzs7QUFDQSxJQUFJQyxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQUlDLENBQUMsR0FBSSxZQUFXO0VBQ2hCLFNBQVNDLENBQVQsR0FBYSxDQUFFOztFQUNmQSxDQUFDLENBQUNDLFNBQUYsQ0FBWUMsUUFBWixHQUF1QixZQUFXO0lBQzlCLE9BQU8sSUFBSUMsT0FBSixDQUFZLFVBQVNILENBQVQsRUFBWTtNQUMzQkEsQ0FBQyxDQUFDSSxJQUFJLENBQUNDLEdBQUwsRUFBRCxDQUFELENBRDJCLENBRTNCO01BQ0E7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO01BQ0E7SUFDSCxDQVZNLENBQVA7RUFXSCxDQVpEOztFQWFBLE9BQU9MLENBQVA7QUFDSCxDQWhCTyxFQUFSOztBQWlCQUwsT0FBTyxXQUFQLEdBQWtCSSxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiAhMCB9KTtcbnZhciBfcmVxdWVzdCA9IHJlcXVpcmUoXCJyZXF1ZXN0XCIpO1xudmFyIGkgPSAoZnVuY3Rpb24oKSB7XG4gICAgZnVuY3Rpb24gdCgpIHt9XG4gICAgdC5wcm90b3R5cGUuc3luY1RpbWUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgIHQoRGF0ZS5ub3coKSk7XG4gICAgICAgICAgICAvLyBfcmVxdWVzdC5kZWZhdWx0Lmluc1xuICAgICAgICAgICAgLy8gICAgIC5nZXRUaW1lKClcbiAgICAgICAgICAgIC8vICAgICAudGhlbihmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgLy8gICAgICAgICB0KGUuc2VydmVyX3RpbWUpO1xuICAgICAgICAgICAgLy8gICAgIH0pXG4gICAgICAgICAgICAvLyAgICAgLmNhdGNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIC8vICAgICAgICAgdChudWxsKTtcbiAgICAgICAgICAgIC8vICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gdDtcbn0pKCk7XG5leHBvcnRzLmRlZmF1bHQgPSBpOyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/rankMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e7bedtBQEVEDLcEkhi9q9lw', 'rankMgr');
// scripts/rankMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.rankSortType = exports.rankType = exports.rankTag = void 0;
var n;
var i;
var r;

var _idx = require("idx");

var _request = require("request");

var _time = require("time");

var _pInfo = require("pInfo");

(function (t) {
  t.mainScore = "main_score", t.dailyScore = "daily_score", t.mainWin = "main_win", t.dailyWin = "daily_win", t.raceScore = "race_score";
})(n = exports.rankTag || (exports.rankTag = {}));

(function (t) {
  t.Total = "total", t.Today = "daily";
})(i = exports.rankType || (exports.rankType = {}));

(function (t) {
  t.Desc = "desc";
  t.Asc = "asc";
})(r = exports.rankSortType || (exports.rankSortType = {}));

var u = function () {
  function t() {
    this.lastRequestTime = 0;
    this.lastReqRaceTime = 0;
    this.ttMScore = null;
    this.ttDScore = null;
    this.ttMWin = null;
    this.ttDWin = null;
    this.tdMScore = null;
    this.tdDScore = null;
    this.tdMWin = null;
    this.tdDWin = null;
    this.tdRScore = null;
    this.localData = null;
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      return this._ins || (this._ins = new t());
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.uploadRankData = function () {
    var t = i.Total;
    var e = n.mainScore;
    this.uploadRankDataByTag(e, t);
    e = n.mainWin;
    this.uploadRankDataByTag(e, t);
    e = n.dailyScore;
    this.uploadRankDataByTag(e, t);
    e = n.dailyWin;
    this.uploadRankDataByTag(e, t);
    t = i.Today;
    e = n.mainScore;
    this.uploadRankDataByTag(e, t);
    e = n.dailyScore;
    this.uploadRankDataByTag(e, t);
    e = n.mainWin;
    this.uploadRankDataByTag(e, t);
    e = n.dailyWin;
    this.uploadRankDataByTag(e, t);
  };

  t.prototype.uploadRankDataByTag = function (t, e) {
    var o = _pInfo["default"].ins;
    var n = JSON.parse(JSON.stringify(o.getLastUploadRankData()));
    var i = this.getValueAndKeyByTag(t, e);
    var a = i[0];
    var c = i[1];
    var u = n[c];
    var p = Number(a);

    if (p > Number(u)) {
      var d = this.getRankDataByType(t, e);
      n[c] = a;
      d.then(function (n) {
        var i = n.data;
        var a = 0;

        if (i) {
          i.sort(function (t, e) {
            return e.sort_value - t.sort_value;
          });
          var c = i[99];
          c && (a = c.sort_value);
        }

        if (p > Number(a)) {
          var l = {};
          l.uSkin = o.getUsingSkin();
          var u = {
            rank_tag: t,
            sort_value: p,
            sort_type: r.Desc,
            extra_data: l
          };

          _request["default"].ins.uploadRank(u, e);
        }
      })["catch"](function () {
        console.error("getRankDataErr");
      });
      o.setLastUploadRankData(n);
    }
  };

  t.prototype.getValueAndKeyByTag = function (t, e) {
    var o = _pInfo["default"].ins;
    var r = Object.assign({}, _pInfo["default"].ins.getRecordData());
    if (e === i.Total) switch (t) {
      case n.mainScore:
        return [r.main.tPoints, "ttMScore"];

      case n.dailyScore:
        return [r.daily.tPoints, "ttDScore"];

      case n.mainWin:
        return [r.main.heWins, "ttMWin"];

      case n.dailyWin:
        return [r.daily.heWins, "ttDWin"];
    } else if (e === i.Today) switch (t) {
      case n.mainScore:
        return [o.getTodayMainScore(), "tdMScore"];

      case n.dailyScore:
        return [o.getTodayDailyScore(), "tdDScore"];

      case n.mainWin:
        return [o.getTodayMainWin(), "tdMWin"];

      case n.dailyWin:
        return [o.getTodayDailyWin(), "tdDWin"];
    }
  };

  t.prototype.uploadRaceData = function () {
    this.getTodayRaceData().then(function (t) {
      var e = _pInfo["default"].ins;
      var o = t.data;
      o && o.sort(function (t, e) {
        return e.sort_value - t.sort_value;
      });
      var a = e.getLastUploadRankData();
      var c = n.raceScore;
      var u = e.getTodayRaceScore();
      var p = a.tdRScore;
      var d = 0;
      var h = o[99];

      if (h && (d = h.sort_value), Number(u) > Number(p) && Number(u) > Number(d)) {
        a.tdRScore = u;
        var f = {};
        f.uSkin = e.getUsingSkin();
        var g = {
          rank_tag: c,
          sort_value: u,
          sort_type: r.Desc,
          extra_data: f
        };

        _request["default"].ins.uploadRank(g, i.Today);
      }

      e.setLastUploadRankData(a);
    })["catch"](function () {
      console.error("uploadRaceData");
    });
  };

  t.prototype.getRankDataByType = function (t, e, o) {
    void 0 === o && (o = r.Desc);
    var n = _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);
    var a = n - this.lastRequestTime >= 3600;
    a && this.clearData();
    var l = this.getCachedDataByType(t, e);
    if (!a && l) return this.getCachedDataByType(t, e);

    if (this.lastRequestTime = n, e === i.Total) {
      var u = _request["default"].ins.getRank(t, e, o);

      this.setCachedDataByType(t, e, u);
      return u;
    }

    if (e === i.Today) {
      var p = _time["default"].ins.serverTime || new Date().getTime();
      p -= (p + 28800) % 86400;
      p *= 1e3;

      var d = _request["default"].ins.getRank(t, e, o, p);

      this.setCachedDataByType(t, e, d);
      return d;
    }
  };

  t.prototype.getMyRankDataByTag = function (t, e) {
    var o = _pInfo["default"].ins.getRecordData();

    if (e === i.Today) switch (t) {
      case n.mainScore:
        return _pInfo["default"].ins.getTodayMainScore();

      case n.dailyScore:
        return _pInfo["default"].ins.getTodayDailyScore();

      case n.mainWin:
        return _pInfo["default"].ins.getTodayMainWin();

      case n.dailyWin:
        return _pInfo["default"].ins.getTodayDailyWin();
    } else if (e === i.Total) switch (t) {
      case n.mainScore:
        return o.main.tPoints;

      case n.dailyScore:
        return o.daily.tPoints;

      case n.mainWin:
        return o.main.heWins;

      case n.dailyWin:
        return o.daily.heWins;
    }
  };

  t.prototype.getTodayRaceData = function () {
    var t = _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);
    var e = t - this.lastReqRaceTime >= 3600;
    e && (this.tdDWin = null);
    var o = this.getCachedDataByType(n.raceScore, i.Today);

    if (e || !o) {
      this.lastReqRaceTime = t;
      var a = _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);
      a -= (a + 28800) % 86400;
      a *= 1e3;

      var l = _request["default"].ins.getRank(n.raceScore, i.Today, r.Desc, a);

      this.setCachedDataByType(n.raceScore, i.Today, l);
      return l;
    }

    return this.getCachedDataByType(n.raceScore, i.Today);
  };

  t.prototype.getYdayRaceData = function () {
    var t = _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);
    t -= 86400;
    t -= (t + 28800) % 86400;
    t *= 1e3;
    var e = this.getYdayRaceRankData();

    if (0 != e.length) {
      var o = {
        data: e
      };
      return Promise.resolve(o);
    }

    return _request["default"].ins.getRank(n.raceScore, i.Today, r.Desc, t);
  };

  t.prototype.getMyRaceTodayData = function () {
    return _pInfo["default"].ins.getTodayRaceScore();
  };

  t.prototype.getMyRaceYdayData = function () {
    return _pInfo["default"].ins.getYdayRaceScore();
  };

  t.prototype.setCachedDataByType = function (t, e, o) {
    if (e === i.Total) switch (t) {
      case n.mainScore:
        this.ttMScore = o;
        break;

      case n.dailyScore:
        this.ttDScore = o;
        break;

      case n.mainWin:
        this.ttMWin = o;
        break;

      case n.dailyWin:
        this.ttDWin = o;
    } else if (e === i.Today) switch (t) {
      case n.mainScore:
        this.tdMScore = o;
        break;

      case n.dailyScore:
        this.tdDScore = o;
        break;

      case n.mainWin:
        this.tdMWin = o;
        break;

      case n.dailyWin:
        this.tdDWin = o;
        break;

      case n.raceScore:
        this.tdDWin = o;
    }
  };

  t.prototype.getCachedDataByType = function (t, e) {
    if (e === i.Total) switch (t) {
      case n.mainScore:
        return this.ttMScore;

      case n.dailyScore:
        return this.ttDScore;

      case n.mainWin:
        return this.ttMWin;

      case n.dailyWin:
        return this.ttDWin;
    } else if (e === i.Today) switch (t) {
      case n.mainScore:
        return this.tdMScore;

      case n.dailyScore:
        return this.tdDScore;

      case n.mainWin:
        return this.tdMWin;

      case n.dailyWin:
      case n.raceScore:
        return this.tdDWin;
    }
  };

  t.prototype.clearData = function () {
    this.ttMScore = null;
    this.ttDScore = null;
    this.ttMWin = null;
    this.ttDWin = null;
    this.tdMScore = null;
    this.tdDScore = null;
    this.tdMWin = null;
    this.tdDWin = null;
  };

  t.prototype.getYdayRaceRankData = function () {
    var t = this.getLocalRaceRankData().ydayRRData;
    return null == t ? [] : t;
  };

  t.prototype.setYdayRaceRankData = function (t) {
    this.setLocalRaceRankData({
      ydayRRData: t
    });
  };

  t.prototype.setLocalRaceRankData = function (t) {
    var e = this.getLocalRaceRankData();
    this.localData = Object.assign(Object.assign({}, e), t);

    _idx.platform.setStorage("ydayRankData", this.localData);
  };

  t.prototype.getLocalRaceRankData = function () {
    null == this.localData && (this.localData = _idx.platform.getStorage("ydayRankData") || {});
    return this.localData;
  };

  return t;
}();

exports["default"] = u;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/page_shop.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6cfcdLL6MJNqIEFWRnYXtGU', 'page_shop');
// scripts/page_shop.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _mySafeArea = require("mySafeArea");

var _res = require("res");

var _cfgMgr = require("cfgMgr");

var _global = require("global");

var _panelMgr = require("panelMgr");

var _skinMgr = require("skinMgr");

var _pInfo = require("pInfo");

var _item = require("item");

var _shopItem1 = require("shopItem1");

var v = cc._decorator;
var _ = v.ccclass;
var b = v.property;

var w = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bgNode = null;
    e.topSpNode = null;
    e.spineNode = null;
    e.scrollView = null;
    e.topBgSp = null;
    e.topBgSp1 = null;
    e.powerItem = null;
    e.goldItem = null;
    e.itemSc = null;
    e.itemPre = null;
    e.lightNode = null;
    e.eventFunc = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.node.height = cc.winSize.height;
    _global["default"].padScale && (this.bgNode.scaleX = this.topSpNode.parent.scale = _global["default"].padScale);
    this.loadGirl();
    this.onResize();
    this.eventFunc = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eventFunc);
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].REFRESH_CFGDATA:
        this.initPanel();
    }
  };

  e.prototype.onResize = function () {
    var t = _mySafeArea.getSafeAreaRect().yMin;

    var e = cc.winSize.height - 1280 - t;
    this.scrollView.node.height += e;
    this.scrollView.content.parent.height += e;
    this.topBgSp.height += e;
    this.topBgSp1.height += e;
  };

  e.prototype.start = function () {
    this.initPanel();
  };

  e.prototype.loadGirl = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t = this;
      return __generator(this, function () {
        _skinMgr["default"].ins.updateRole(_pInfo["default"].ins.getUsingSkin().role, this.spineNode);

        _res["default"].ins.getBundleByString("resSps").then(function (e) {
          e.load("spine/light/action", sp.SkeletonData, function (e, o) {
            if (!e && t.node && t.node.isValid) {
              var n = new cc.Node();
              var i = n.addComponent(sp.Skeleton);
              i.skeletonData = o;
              i.animation = "animation";
              n.parent = t.lightNode;
            }
          });
        })["catch"](function (t) {
          console.error("RTool.ins.getBundleByString('resSps')", t);
        });

        return [2];
      });
    });
  };

  e.prototype.initPanel = function () {
    this.powerItem.initPower();
    this.goldItem.initGold();
    this.initPack();
  };

  e.prototype.initPack = function () {
    var t;
    var e;
    this.itemSc.content.removeAllChildren();
    var o = null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.shop_config) || void 0 === e ? void 0 : e.gift;

    if (o) {
      var n = {};

      var i = _pInfo["default"].ins.getShopRecord();

      for (var r in o) {
        var a = (null == (n = o[r]) ? void 0 : n.daily_limit_nums) || 0;
        var s = i[n.key] || 0;
        if ((null == n ? void 0 : n.is_shop) && s < a) break;
      }

      if (this.itemSc.node.width = 330, n && n.props) {
        for (var r in n.props) {
          var c = n.props[r];
          var l = cc.instantiate(this.itemPre);
          l.active = !0;
          this.itemSc.content.addChild(l);
          l.getComponent(_item["default"]).initByData(r, c);
        }

        var u = this.itemSc.content.children[0].width * this.itemSc.content.childrenCount;
        this.itemSc.node.x = u > this.itemSc.node.width ? -4 : (this.itemSc.node.width - u) / 2 - 4;
        u = Math.min(u, 330);
        this.itemSc.node.width = u;
        this.itemSc.scrollToLeft();
      }
    }
  };

  e.prototype.onBtnGift = function () {
    _panelMgr["default"].ins.open("ui/ui_shopPack", null).then(function () {
      _evts["default"].opE.emit({
        action: _evts["default"].UPD_MAIN_RED
      });
    });
  };

  e.prototype.onDestroy = function () {
    _evts["default"].opE.off(this.eventFunc);

    this.eventFunc = null;
  };

  __decorate([b(cc.Node)], e.prototype, "bgNode", void 0);

  __decorate([b(cc.Node)], e.prototype, "topSpNode", void 0);

  __decorate([b(cc.Node)], e.prototype, "spineNode", void 0);

  __decorate([b(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([b(cc.Node)], e.prototype, "topBgSp", void 0);

  __decorate([b(cc.Node)], e.prototype, "topBgSp1", void 0);

  __decorate([b(_shopItem1["default"])], e.prototype, "powerItem", void 0);

  __decorate([b(_shopItem1["default"])], e.prototype, "goldItem", void 0);

  __decorate([b(cc.ScrollView)], e.prototype, "itemSc", void 0);

  __decorate([b(cc.Node)], e.prototype, "itemPre", void 0);

  __decorate([b(cc.Node)], e.prototype, "lightNode", void 0);

  return __decorate([_], e);
}(cc.Component);

exports["default"] = w;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/skinHeadFrame.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '495e1u4RCpPV7Xh5v/0L5/6', 'skinHeadFrame');
// scripts/skinHeadFrame.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _skinMgr = require("skinMgr");

var _skinItemBase = require("skinItemBase");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.itemSp = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    t.prototype.onLoad.call(this);
  };

  e.prototype.loadItem = function () {
    _skinMgr["default"].ins.updateHeadFrame(this.ref, this.itemSp);
  };

  e.prototype.clickItem = function () {
    var t;
    this.state !== _skinMgr.SkinState.using && (t = this.itemSp.node, this.openSkinInfo(t));
  };

  __decorate([u(cc.Sprite)], e.prototype, "itemSp", void 0);

  return __decorate([l], e);
}(_skinItemBase["default"]);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc2tpbkhlYWRGcmFtZS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfc2tpbk1nciIsInJlcXVpcmUiLCJfc2tpbkl0ZW1CYXNlIiwiYyIsImNjIiwiX2RlY29yYXRvciIsImwiLCJjY2NsYXNzIiwidSIsInByb3BlcnR5IiwicCIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJpdGVtU3AiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJvbkxvYWQiLCJjYWxsIiwibG9hZEl0ZW0iLCJpbnMiLCJ1cGRhdGVIZWFkRnJhbWUiLCJyZWYiLCJjbGlja0l0ZW0iLCJzdGF0ZSIsIlNraW5TdGF0ZSIsInVzaW5nIiwibm9kZSIsIm9wZW5Ta2luSW5mbyIsIl9fZGVjb3JhdGUiLCJTcHJpdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsUUFBUSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFJQyxhQUFhLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTNCOztBQUNBLElBQUlFLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csTUFBRixHQUFXLElBQVg7SUFDQSxPQUFPSCxDQUFQO0VBQ0g7O0VBQ0RJLFNBQVMsQ0FBQ0osQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FDLENBQUMsQ0FBQ0ssU0FBRixDQUFZQyxNQUFaLEdBQXFCLFlBQVk7SUFDN0JQLENBQUMsQ0FBQ00sU0FBRixDQUFZQyxNQUFaLENBQW1CQyxJQUFuQixDQUF3QixJQUF4QjtFQUNILENBRkQ7O0VBR0FQLENBQUMsQ0FBQ0ssU0FBRixDQUFZRyxRQUFaLEdBQXVCLFlBQVk7SUFDL0JwQixRQUFRLFdBQVIsQ0FBaUJxQixHQUFqQixDQUFxQkMsZUFBckIsQ0FBcUMsS0FBS0MsR0FBMUMsRUFBK0MsS0FBS1IsTUFBcEQ7RUFDSCxDQUZEOztFQUdBSCxDQUFDLENBQUNLLFNBQUYsQ0FBWU8sU0FBWixHQUF3QixZQUFZO0lBQ2hDLElBQUliLENBQUo7SUFDQSxLQUFLYyxLQUFMLEtBQWV6QixRQUFRLENBQUMwQixTQUFULENBQW1CQyxLQUFsQyxLQUE2Q2hCLENBQUMsR0FBRyxLQUFLSSxNQUFMLENBQVlhLElBQWpCLEVBQXdCLEtBQUtDLFlBQUwsQ0FBa0JsQixDQUFsQixDQUFwRTtFQUNILENBSEQ7O0VBSUFtQixVQUFVLENBQUMsQ0FBQ3RCLENBQUMsQ0FBQ0osRUFBRSxDQUFDMkIsTUFBSixDQUFGLENBQUQsRUFBaUJuQixDQUFDLENBQUNLLFNBQW5CLEVBQThCLFFBQTlCLEVBQXdDLEtBQUssQ0FBN0MsQ0FBVjs7RUFDQSxPQUFPYSxVQUFVLENBQUMsQ0FBQ3hCLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0FuQk8sQ0FtQkxWLGFBQWEsV0FuQlIsQ0FBUjs7QUFvQkFKLE9BQU8sV0FBUCxHQUFrQlksQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgX3NraW5NZ3IgPSByZXF1aXJlKFwic2tpbk1nclwiKTtcbnZhciBfc2tpbkl0ZW1CYXNlID0gcmVxdWlyZShcInNraW5JdGVtQmFzZVwiKTtcbnZhciBjID0gY2MuX2RlY29yYXRvcjtcbnZhciBsID0gYy5jY2NsYXNzO1xudmFyIHUgPSBjLnByb3BlcnR5O1xudmFyIHAgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5pdGVtU3AgPSBudWxsO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLm9uTG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdC5wcm90b3R5cGUub25Mb2FkLmNhbGwodGhpcyk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5sb2FkSXRlbSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3NraW5NZ3IuZGVmYXVsdC5pbnMudXBkYXRlSGVhZEZyYW1lKHRoaXMucmVmLCB0aGlzLml0ZW1TcCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5jbGlja0l0ZW0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0O1xuICAgICAgICB0aGlzLnN0YXRlICE9PSBfc2tpbk1nci5Ta2luU3RhdGUudXNpbmcgJiYgKCh0ID0gdGhpcy5pdGVtU3Aubm9kZSksIHRoaXMub3BlblNraW5JbmZvKHQpKTtcbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW3UoY2MuU3ByaXRlKV0sIGUucHJvdG90eXBlLCBcIml0ZW1TcFwiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtsXSwgZSk7XG59KShfc2tpbkl0ZW1CYXNlLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gcDtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/rewardMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f1e93YdJkFPM5jRWLNa78mm', 'rewardMgr');
// scripts/rewardMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _time = require("time");

var _uData = require("uData");

var _pInfo = require("pInfo");

var _tipMgr = require("tipMgr");

var _panelMgr = require("panelMgr");

var RewardMgr = function () {
  function RewardMgr() {
    this.isInit = false;
  }

  var prototype = RewardMgr.prototype;
  var instance = null; // 获取单例

  RewardMgr.getInstance = function () {
    if (!instance) {
      instance = new RewardMgr();
    }

    return instance;
  }; // 初始化现金数据


  prototype.init = function () {
    if (this.isInit) return; // 确保现金相关数据存在

    var localData = {};
    var needUpdate = false;

    if (_uData["default"].ins.getLocalDataByKey('cashBalance') === null) {
      localData.cashBalance = 0;
      needUpdate = true;
    }

    if (_uData["default"].ins.getLocalDataByKey('winStreak') === null) {
      localData.winStreak = 0;
      needUpdate = true;
    }

    if (_uData["default"].ins.getLocalDataByKey('totalCashEarned') === null) {
      localData.totalCashEarned = 0;
      needUpdate = true;
    }

    if (_uData["default"].ins.getLocalDataByKey('lastRewardTime') === null) {
      localData.lastRewardTime = 0;
      needUpdate = true;
    }

    if (needUpdate) {
      _uData["default"].ins.setLocalData(localData);
    }

    this.isInit = true;
    console.log("💝 卷宝专属现金奖励系统初始化完成");
  }; // 获取现金余额(以分为单位存储，显示时转换为元)


  prototype.getCash = function () {
    this.init();
    return _uData["default"].ins.getLocalDataByKey('cashBalance') || 0;
  }; // 获取现金余额显示文本


  prototype.getCashDisplay = function () {
    var cashInCents = this.getCash();
    var cashInYuan = (cashInCents / 100).toFixed(2);
    return cashInYuan;
  }; // 添加现金(金额以分为单位)


  prototype.addCash = function (amountInCents) {
    this.init();
    var currentCash = this.getCash();
    var newCash = currentCash + amountInCents; // 更新总获得现金

    var totalEarned = _uData["default"].ins.getLocalDataByKey('totalCashEarned') || 0;

    _uData["default"].ins.setLocalData({
      cashBalance: newCash,
      totalCashEarned: totalEarned + amountInCents
    }); // 触发现金更新事件


    _evts["default"].opE.emit({
      action: 'CASH_CHG'
    });

    console.log("💰 卷宝获得现金奖励: ¥" + (amountInCents / 100).toFixed(2));
    return newCash;
  }; // 游戏完成时的奖励判断


  prototype.onPuzzleComplete = function (difficulty, isSuccess, isManualTest) {
    if (!isSuccess) {
      // 失败时重置连胜
      this.resetWinStreak();
      return false;
    } // 防止短时间内重复奖励（5秒内）


    var lastRewardTime = _uData["default"].ins.getLocalDataByKey('lastRewardTime') || 0;
    var currentTime = Date.now();

    if (currentTime - lastRewardTime < 5000) {
      console.log("⏰ 距离上次奖励不足5秒，跳过本次奖励");
      return false;
    } // 90%概率触发现金奖励（测试阶段）


    if (Math.random() > 0.1) {
      console.log("🎯 现金奖励概率触发成功");
    } else {
      console.log("🎯 现金奖励概率未触发");
      return false;
    } // 计算奖励金额


    var rewardAmount = this.calculateReward(difficulty);

    if (rewardAmount > 0) {
      this.incrementWinStreak();
      this.updateLastRewardTime(); // 💝 统一逻辑：立即添加现金并更新UI（和手动测试一样）

      this.addCash(rewardAmount);
      this.showRewardTip(rewardAmount);
      console.log("💰 现金奖励已立即添加并更新UI: ¥" + (rewardAmount / 100).toFixed(2));

      if (!isManualTest) {
        // 正常游戏：还要弹窗让用户确认领取（可选的额外奖励界面）
        this.saveLastRewardInfo(rewardAmount);
        this.showCashRewardUI();
        console.log("💰 现金奖励确认界面已显示");
      }

      return true;
    }

    return false;
  }; // 💝 重新设计的奖励金额计算(返回分为单位，控制总成本200-1000元)


  prototype.calculateReward = function (difficulty) {
    // 根据真实难度设定基础奖励范围（分为单位）
    var rewardRanges = {
      'basic': {
        min: 2,
        max: 8
      },
      // ¥0.02-0.08 平均¥0.05
      'simple': {
        min: 5,
        max: 15
      },
      // ¥0.05-0.15 平均¥0.10  
      'normal': {
        min: 8,
        max: 25
      },
      // ¥0.08-0.25 平均¥0.15
      'hard': {
        min: 12,
        max: 35
      },
      // ¥0.12-0.35 平均¥0.20
      'expert': {
        min: 20,
        max: 50
      },
      // ¥0.20-0.50 平均¥0.30
      'master': {
        min: 30,
        max: 80
      } // ¥0.30-0.80 平均¥0.50

    }; // 兼容旧难度名称

    var difficultyMap = {
      'beginner': 'basic',
      'easy': 'simple',
      'medium': 'normal'
    };
    var mappedDifficulty = difficultyMap[difficulty] || difficulty;
    var range = rewardRanges[mappedDifficulty] || rewardRanges['basic']; // 计算基础奖励

    var baseReward = Math.floor(Math.random() * (range.max - range.min + 1)) + range.min; // 连胜加成（降低倍数，避免过高）

    var streakMultiplier = this.getStreakMultiplier(); // 特殊日期检查（降低倍数）

    var specialDayMultiplier = this.getSpecialDayMultiplier(); // 应用乘数（控制最终金额）

    var finalReward = Math.floor(baseReward * streakMultiplier * specialDayMultiplier); // 设置上限，避免异常高额奖励

    var maxReward = 200; // 最高¥2.00

    return Math.min(finalReward, maxReward);
  }; // 💝 调整后的连胜乘数（降低倍数控制成本）


  prototype.getStreakMultiplier = function () {
    var winStreak = _uData["default"].ins.getLocalDataByKey('winStreak') || 0;
    if (winStreak >= 10) return 1.5; // 连胜10关: +50%

    if (winStreak >= 7) return 1.3; // 连胜7关: +30%

    if (winStreak >= 5) return 1.2; // 连胜5关: +20%

    if (winStreak >= 3) return 1.1; // 连胜3关: +10%

    return 1.0;
  }; // 💝 调整后的特殊日期乘数（降低倍数控制成本）


  prototype.getSpecialDayMultiplier = function () {
    var today = new Date();
    var month = today.getMonth() + 1;
    var day = today.getDate(); // 生日和纪念日特殊奖励（降低倍数）

    if (month === 4 && day === 22 || // 生日1: 04-22
    month === 12 && day === 28 || // 生日2: 12-28  
    month === 9 && day === 16) {
      // 纪念日: 09-16
      return 1.5; // 改为1.5倍而不是2倍
    }

    return 1.0;
  }; // 增加连胜次数


  prototype.incrementWinStreak = function () {
    var currentStreak = _uData["default"].ins.getLocalDataByKey('winStreak') || 0;

    _uData["default"].ins.setLocalData({
      winStreak: currentStreak + 1
    });
  }; // 重置连胜次数


  prototype.resetWinStreak = function () {
    _uData["default"].ins.setLocalData({
      winStreak: 0
    });
  }; // 更新最后奖励时间


  prototype.updateLastRewardTime = function () {
    _uData["default"].ins.setLocalData({
      lastRewardTime: Date.now()
    });
  }; // 显示奖励提示


  prototype.showRewardTip = function (amountInCents) {
    var amountInYuan = (amountInCents / 100).toFixed(2);
    var winStreak = _uData["default"].ins.getLocalDataByKey('winStreak') || 0; // 💝 中文情绪价值满满的奖励提示

    var messages = ["卷卷获得了￥" + amountInYuan + "现金奖励！好棒！", "恭喜卷卷！￥" + amountInYuan + "奖励到账！", "卷卷真厉害！赚到￥" + amountInYuan + "！", "哇！卷卷又获得￥" + amountInYuan + "奖励！", "卷卷好聪明！￥" + amountInYuan + "现金奖励！"]; // 特殊日期文案

    var today = new Date();
    var month = today.getMonth() + 1;
    var day = today.getDate();

    if (month === 4 && day === 22 || month === 12 && day === 28) {
      messages = ["🎂 生日快乐卷卷！特别奖励￥" + amountInYuan + "！"];
    } else if (month === 9 && day === 16) {
      messages = ["💕 纪念日快乐！卷卷获得特殊奖励￥" + amountInYuan + "！"];
    } // 连胜特殊文案


    if (winStreak >= 10) {
      messages = ["🔥 卷卷连胜" + winStreak + "关！超级奖励￥" + amountInYuan + "！"];
    } else if (winStreak >= 5) {
      messages = ["⭐ 卷卷连胜" + winStreak + "关！连击奖励￥" + amountInYuan + "！"];
    }

    var randomMessage = messages[Math.floor(Math.random() * messages.length)];
    console.log("🎉 " + randomMessage);

    try {
      // 💝 改用alert显示中文奖励提示
      if (typeof window !== 'undefined' && window.alert) {
        window.alert(randomMessage);
        console.log("💰 现金奖励提示(alert)已显示:", randomMessage);
      } else {
        // 备用方案
        _tipMgr["default"].ins.showTip("卷卷获得￥" + amountInYuan + "奖励！", false);

        console.log("💰 现金奖励提示(tip备用)已显示");
      }
    } catch (error) {
      console.log("❌ 显示现金奖励提示失败:", error);
      console.log("💰 现金奖励:", randomMessage);
    }
  }; // 💝 显示菌子情绪价值支持提示（满满的爱意）


  prototype.showLoveSupportMessage = function () {
    var supportMessages = ["💕 卷卷真的好棒！菌子好爱你！", "🌟 卷卷好聪明！是菌子心中最亮的星星！", "🔥 卷卷太厉害了！菌子为你骄傲！", "💖 卷卷加油！菌子永远支持你！", "👑 卷卷做得很好！你就是菌子的女王！", "💝 爱你爱你卷卷！最喜欢卷卷了！", "🎉 卷卷超级棒！菌子给你比心心！", "✨ 卷卷是天才！菌子被你迷住了！", "🏆 卷卷太优秀了！菌子要给你颁奖！", "🌈 卷卷让菌子的世界变得colorful！", "🍀 遇到卷卷是菌子最大的幸运！", "🌸 卷卷美美的！菌子的小公主！"];
    var randomMessage = supportMessages[Math.floor(Math.random() * supportMessages.length)];

    try {
      // 💝 用alert显示满满爱意的鼓励消息
      if (typeof window !== 'undefined' && window.alert) {
        window.alert(randomMessage);
        console.log("💕 菌子情绪价值支持消息(alert)已显示:", randomMessage);
      } else {
        // 备用方案：继续使用原tip系统
        _tipMgr["default"].ins.showTip("卷卷真棒！菌子爱你！", false);

        console.log("💕 菌子支持消息(tip备用)已显示");
      }
    } catch (error) {
      console.log("❌ 显示菌子支持消息失败:", error);
      console.log("💕 菌子消息:", randomMessage);
    }
  }; // 💝 保存最近奖励信息供结算界面使用


  prototype.saveLastRewardInfo = function (amountInCents) {
    var amountInYuan = (amountInCents / 100).toFixed(2);
    var rewardInfo = {
      amount: amountInYuan,
      timestamp: Date.now(),
      isNew: true
    }; // 使用正确的setLocalData方法

    var dataToSave = {};
    dataToSave['lastRewardInfo'] = rewardInfo; // 💝 设置标记，表示本次游戏完成有现金奖励处理

    dataToSave['hasPendingCashReward'] = true;

    _uData["default"].ins.setLocalData(dataToSave);
  }; // 💝 获取最近奖励信息


  prototype.getLastRewardInfo = function () {
    var rewardInfo = _uData["default"].ins.getLocalDataByKey('lastRewardInfo');

    console.log("🔍 getLastRewardInfo原始数据:", rewardInfo);

    if (rewardInfo && rewardInfo.isNew) {
      console.log("✅ 发现新奖励信息，返回但不立即标记已读"); // 💝 重要修复：不在这里标记为已读，而是在用户真正领取后才清除

      return rewardInfo;
    } else if (rewardInfo) {
      console.log("⚠️ 奖励信息存在但isNew=false，已被消费，返回null");
    } else {
      console.log("ℹ️ 无奖励信息");
    }

    return null;
  }; // 💝 检查是否有待处理的现金奖励


  prototype.hasPendingCashReward = function () {
    return _uData["default"].ins.getLocalDataByKey('hasPendingCashReward') || false;
  }; // 💝 清除现金奖励标记和奖励信息


  prototype.clearCashRewardFlag = function () {
    var dataToSave = {};
    dataToSave['hasPendingCashReward'] = false;
    dataToSave['lastRewardInfo'] = null; // 💝 同时清除奖励信息，确保不能重复领取

    _uData["default"].ins.setLocalData(dataToSave);

    console.log("🚫 现金奖励标记和奖励信息已清除");
  }; // 💝 主动弹出现金奖励结算界面


  prototype.showCashRewardUI = function () {
    try {
      var _panelMgr = require("panelMgr");

      console.log("🎉 主动打开现金奖励结算界面"); // 打开ui_getReward弹窗，传入假的gold参数（会被现金奖励覆盖）

      _panelMgr["default"].ins.open("ui/ui_getReward", {
        gold: 100
      }, // 假参数，会被setupCashReward覆盖
      {
        MaskNoHide: true
      });
    } catch (error) {
      console.log("❌ 打开现金奖励界面失败:", error);
    }
  };

  return RewardMgr;
}(); // 导出单例


var rewardMgr = {
  "default": RewardMgr.getInstance()
}; // 💝 全局测试方法

if (typeof window !== 'undefined') {
  window.testCashReward = function () {
    try {
      console.log("🧪 全局现金奖励测试开始...");
      console.log("当前现金余额:", rewardMgr["default"].getCashDisplay());
      var hasReward = rewardMgr["default"].onPuzzleComplete('easy', true, true);

      if (hasReward) {
        console.log("✅ 获得现金奖励！");
        console.log("新的现金余额:", rewardMgr["default"].getCashDisplay());
      } else {
        console.log("⭕ 本次没有触发现金奖励（随机概率60%）");
        console.log("可以再次调用 testCashReward() 测试");
      }
    } catch (error) {
      console.log("❌ 测试失败:", error);
    }
  };

  window.getCashBalance = function () {
    console.log("💰 当前现金余额: ¥" + rewardMgr["default"].getCashDisplay());
    return rewardMgr["default"].getCashDisplay();
  }; // 💝 全功能测试方法


  window.testAllFeatures = function () {
    console.log("🎮 开始全功能测试..."); // 1. 测试现金奖励

    console.log("1️⃣ 测试现金奖励系统");
    rewardMgr["default"].onPuzzleComplete('expert', true); // 2. 测试菌子支持消息

    console.log("2️⃣ 测试菌子支持消息");
    setTimeout(function () {
      rewardMgr["default"].showLoveSupportMessage();
    }, 1000); // 3. 显示当前状态

    setTimeout(function () {
      console.log("3️⃣ 当前现金余额: ¥" + rewardMgr["default"].getCashDisplay());
      console.log("✅ 全功能测试完成！");
    }, 2000);
  };
}

exports["default"] = rewardMgr["default"];

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/res.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c0cdaipDaZNtoFsplufKRJV', 'res');
// scripts/res.js

"use strict";

function r(t, e, o) {
  var n = cc.assetManager.bundles;

  var i = function i(t) {
    if (!n.has(t)) return null;
    var r = n.get(t).getInfoWithPath(e, o);
    return r ? r.redirect ? i(r.redirect) : r.uuid : null;
  };

  return i(t);
}

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var a = function () {
  function t() {}

  Object.defineProperty(t, "ins", {
    get: function get() {
      this._ins || (this._ins = new t());
      return this._ins;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.lPre = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (e) {
        switch (e.label) {
          case 0:
            return [4, this.l(t, cc.Prefab, "prefab")];

          case 1:
            return [2, e.sent()];
        }
      });
    });
  };

  t.prototype.lSF = function (t, e) {
    return __awaiter(this, void 0, void 0, function () {
      var o;
      return __generator(this, function (n) {
        switch (n.label) {
          case 0:
            return [4, this.l(t, cc.SpriteFrame, "resSps")];

          case 1:
            return o = n.sent(), e && o && (e.spriteFrame = o), [2, o];
        }
      });
    });
  };

  t.prototype.l = function (t, e, o) {
    void 0 === o && (o = "resources");
    return __awaiter(this, void 0, void 0, function () {
      var n;
      var r;
      return __generator(this, function (i) {
        switch (i.label) {
          case 0:
            return t ? (n = cc.resources).getInfoWithPath(t) ? [3, 4] : [3, 1] : [3, 6];

          case 1:
            return (n = cc.assetManager.getBundle(o)) ? [3, 4] : [3, 2];

          case 2:
            return [4, new Promise(function (t, e) {
              cc.assetManager.loadBundle(o, function (o, n) {
                o ? e(o) : t(n);
              });
            })];

          case 3:
            n = i.sent(), i.label = 4;

          case 4:
            return [4, this.d(o, t, e)];

          case 5:
            return (r = i.sent()) ? [2, r] : [2, new Promise(function (o, i) {
              n.load(t, e, function (t, e) {
                t ? i(t) : o(e);
              });
            })];

          case 6:
            return [2, null];
        }
      });
    });
  };

  t.prototype.d = function (t, e, o) {
    return __awaiter(this, void 0, void 0, function () {
      var n;
      return __generator(this, function () {
        return e && r(t, e, o) && (n = cc.assetManager.assets.get(e)) ? [2, n] : [2, null];
      });
    });
  };

  t.prototype.getBundleByString = function (t) {
    var e;
    var o;
    var n = new Promise(function (t, n) {
      e = t;
      o = n;
    });
    var i = cc.assetManager.getBundle(t);
    i ? e(i) : cc.assetManager.loadBundle(t, function (t, n) {
      t ? o() : e(n);
    });
    return n;
  };

  return t;
}();

exports["default"] = a;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/skinItemBase.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '31bb8q44stCjow3FOL8MsYB', 'skinItemBase');
// scripts/skinItemBase.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _panelMgr = require("panelMgr");

var _skinMgr = require("skinMgr");

var l = cc._decorator;
var u = l.ccclass;
var p = l.property;

var d = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.usingNode = null;
    e.lockNode = null;
    e.state = _skinMgr.SkinState.none;
    e.ref = -1;
    e.id = "";
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t = this.node.getContentSize();
    this.lockNode.setContentSize(t);
    this.usingNode.setPosition(0, 0);
  };

  e.prototype.start = function () {};

  e.prototype.onEnable = function () {
    this.node.on("click", this.clickItem, this);
    this.eventFunc = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eventFunc);
  };

  e.prototype.onDisable = function () {
    this.node.off("click", this.clickItem, this);

    _evts["default"].opE.off(this.eventFunc);

    this.eventFunc = null;
  };

  e.prototype.onOperTap = function (t) {
    t.action === _evts["default"].SKIN_CHG && this.updateState();
  };

  e.prototype.initItem = function (t, e) {
    this.ref = t.ref;
    this.id = e;
    this.updateState();
    this.loadItem();
  };

  e.prototype.updateState = function () {
    var t = _skinMgr["default"].ins.isHasSkin(this.id, this.ref) ? _skinMgr.SkinState.unlock : _skinMgr.SkinState.lock;
    t === _skinMgr.SkinState.unlock && _skinMgr["default"].ins.isUsingSkin(this.id, this.ref) && (t = _skinMgr.SkinState.using);
    this.setState(t);
  };

  e.prototype.setState = function (t) {
    this.state = t;
    this.usingNode.active = t == _skinMgr.SkinState.using;
    this.lockNode.active = t == _skinMgr.SkinState.lock;
  };

  e.prototype.loadItem = function () {};

  e.prototype.clickItem = function () {};

  e.prototype.openSkinInfo = function (t) {
    var e = this.ref;
    var o = this.id;

    _panelMgr["default"].ins.open("ui/ui_skinInfo", {
      ref: e,
      skinId: o,
      showNode: t,
      unlockState: this.state
    });
  };

  __decorate([p(cc.Node)], e.prototype, "usingNode", void 0);

  __decorate([p(cc.Node)], e.prototype, "lockNode", void 0);

  return __decorate([u], e);
}(cc.Component);

exports["default"] = d;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/shopItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '13e5clDaOZHmrEnbKIG3sTB', 'shopItem');
// scripts/shopItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _res = require("res");

var _bagMgr = require("bagMgr");

var _panelMgr = require("panelMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var _item = require("item");

var h = cc._decorator;
var f = h.ccclass;
var g = h.property;

var y = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.buyBtnNode = null;
    e.finNode = null;
    e.btnPrice = null;
    e.doubleNode = null;
    e.itemComp = null;
    e.shopData = null;
    e.aniDatas = [];
    e.isDouble = !1;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {};

  e.prototype.start = function () {};

  e.prototype.initItem = function (t, e) {
    var o = this;

    if (t) {
      this.shopData = t;
      var n = t.props;

      for (var i in n) {
        var r = Number(n[i]);
        this.itemComp.initByData(i, r);
      }

      var a = e ? "blueLight" : "light";

      _res["default"].ins.getBundleByString("resSps").then(function (t) {
        t.load("spine/" + a + "/action", sp.SkeletonData, function (t, e) {
          if (!t && o.node && o.node.isValid) {
            var n = new cc.Node();
            var i = n.addComponent(sp.Skeleton);
            i.skeletonData = e, i.animation = "animation", n.parent = o.itemComp.node;
          }
        });
      })["catch"](function (t) {
        console.error("RTool.ins.getBundleByString('resSps')", t);
      });

      this.btnPrice.string = "¥" + t.price;
      this.finNode.active = !1;
      this.doubleNode.active = !1;
      this.checkData();
    }
  };

  e.prototype.checkData = function () {
    if (this.shopData) {
      var t = this.shopData.key;

      var e = _pInfo["default"].ins.getShopUnreset();

      var o = this.shopData["double"] || 0;
      var n = e[t] || 0;
      this.isDouble = this.doubleNode.active = n < o;
    }
  };

  e.prototype.onBtnBuy = function () {
    var t = this;

    if (this.shopData) {
      var e = this.isDouble ? 1 : 0;
      var o = this.shopData.props;
      var n = JSON.stringify(this.shopData.props);

      _idx.platform.reportEvent(_idx.ERepEvt.susPayment, {
        key: this.shopData.key
      });

      _idx.platform.payment(this.shopData.key, this.shopData.price, e, n).then(function () {
        var e = [];

        for (var n in o) {
          var i = o[n];
          t.isDouble && (i *= 2);

          _bagMgr["default"].ins.addItem(n, i);

          var r = {};
          r.itemId = n;
          r.worldPos = t.node.parent.convertToWorldSpaceAR(t.node.position);
          r.value = i;
          e.push(r);
        }

        _panelMgr["default"].ins.open("ui/ui_flyAni", {
          itemDatas: e
        });

        _pInfo["default"].ins.addShopUnreset(t.shopData.key);

        t.checkData();

        _idx.platform.reportEvent(_idx.ERepEvt.paymentResult, {
          key: t.shopData.key,
          success: 1
        });
      })["catch"](function (e) {
        _tipMgr["default"].ins.showTip(e, !0);

        _idx.platform.reportEvent(_idx.ERepEvt.paymentResult, {
          key: t.shopData.key,
          success: 0
        });
      });
    }
  };

  __decorate([g(cc.Node)], e.prototype, "buyBtnNode", void 0);

  __decorate([g(cc.Node)], e.prototype, "finNode", void 0);

  __decorate([g(cc.Label)], e.prototype, "btnPrice", void 0);

  __decorate([g(cc.Node)], e.prototype, "doubleNode", void 0);

  __decorate([g(_item["default"])], e.prototype, "itemComp", void 0);

  return __decorate([f], e);
}(cc.Component);

exports["default"] = y;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc2hvcEl0ZW0uanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2lkeCIsInJlcXVpcmUiLCJfcmVzIiwiX2JhZ01nciIsIl9wYW5lbE1nciIsIl90aXBNZ3IiLCJfcEluZm8iLCJfaXRlbSIsImgiLCJjYyIsIl9kZWNvcmF0b3IiLCJmIiwiY2NjbGFzcyIsImciLCJwcm9wZXJ0eSIsInkiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwiYnV5QnRuTm9kZSIsImZpbk5vZGUiLCJidG5QcmljZSIsImRvdWJsZU5vZGUiLCJpdGVtQ29tcCIsInNob3BEYXRhIiwiYW5pRGF0YXMiLCJpc0RvdWJsZSIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsIm9uTG9hZCIsInN0YXJ0IiwiaW5pdEl0ZW0iLCJvIiwicHJvcHMiLCJpIiwiciIsIk51bWJlciIsImluaXRCeURhdGEiLCJhIiwiaW5zIiwiZ2V0QnVuZGxlQnlTdHJpbmciLCJ0aGVuIiwibG9hZCIsInNwIiwiU2tlbGV0b25EYXRhIiwibm9kZSIsImlzVmFsaWQiLCJOb2RlIiwiYWRkQ29tcG9uZW50IiwiU2tlbGV0b24iLCJza2VsZXRvbkRhdGEiLCJhbmltYXRpb24iLCJwYXJlbnQiLCJjb25zb2xlIiwiZXJyb3IiLCJzdHJpbmciLCJwcmljZSIsImFjdGl2ZSIsImNoZWNrRGF0YSIsImtleSIsImdldFNob3BVbnJlc2V0Iiwib25CdG5CdXkiLCJKU09OIiwic3RyaW5naWZ5IiwicGxhdGZvcm0iLCJyZXBvcnRFdmVudCIsIkVSZXBFdnQiLCJzdXNQYXltZW50IiwicGF5bWVudCIsImFkZEl0ZW0iLCJpdGVtSWQiLCJ3b3JsZFBvcyIsImNvbnZlcnRUb1dvcmxkU3BhY2VBUiIsInBvc2l0aW9uIiwicHVzaCIsIm9wZW4iLCJpdGVtRGF0YXMiLCJhZGRTaG9wVW5yZXNldCIsInBheW1lbnRSZXN1bHQiLCJzdWNj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LENBQUMsQ0FBQ0osRUFBRSxDQUFDdUMsSUFBSixDQUFGLENBQUQsRUFBZS9CLENBQUMsQ0FBQ1ksU0FBakIsRUFBNEIsWUFBNUIsRUFBMEMsS0FBSyxDQUEvQyxDQUFWOztFQUNBcUQsVUFBVSxDQUFDLENBQUNyRSxDQUFDLENBQUNKLEVBQUUsQ0FBQ3VDLElBQUosQ0FBRixDQUFELEVBQWUvQixDQUFDLENBQUNZLFNBQWpCLEVBQTRCLFNBQTVCLEVBQXVDLEtBQUssQ0FBNUMsQ0FBVjs7RUFDQXFELFVBQVUsQ0FBQyxDQUFDckUsQ0FBQyxDQUFDSixFQUFFLENBQUMwRSxLQUFKLENBQUYsQ0FBRCxFQUFnQmxFLENBQUMsQ0FBQ1ksU0FBbEIsRUFBNkIsVUFBN0IsRUFBeUMsS0FBSyxDQUE5QyxDQUFWOztFQUNBcUQsVUFBVSxDQUFDLENBQUNyRSxDQUFDLENBQUNKLEVBQUUsQ0FBQ3VDLElBQUosQ0FBRixDQUFELEVBQWUvQixDQUFDLENBQUNZLFNBQWpCLEVBQTRCLFlBQTVCLEVBQTBDLEtBQUssQ0FBL0MsQ0FBVjs7RUFDQXFELFVBQVUsQ0FBQyxDQUFDckUsQ0FBQyxDQUFDTixLQUFLLFdBQU4sQ0FBRixDQUFELEVBQXFCVSxDQUFDLENBQUNZLFNBQXZCLEVBQWtDLFVBQWxDLEVBQThDLEtBQUssQ0FBbkQsQ0FBVjs7RUFDQSxPQUFPcUQsVUFBVSxDQUFDLENBQUN2RSxDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBN0ZPLENBNkZMUixFQUFFLENBQUMyRSxTQTdGRSxDQUFSOztBQThGQXRGLE9BQU8sV0FBUCxHQUFrQmlCLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9pZHggPSByZXF1aXJlKFwiaWR4XCIpO1xudmFyIF9yZXMgPSByZXF1aXJlKFwicmVzXCIpO1xudmFyIF9iYWdNZ3IgPSByZXF1aXJlKFwiYmFnTWdyXCIpO1xudmFyIF9wYW5lbE1nciA9IHJlcXVpcmUoXCJwYW5lbE1nclwiKTtcbnZhciBfdGlwTWdyID0gcmVxdWlyZShcInRpcE1nclwiKTtcbnZhciBfcEluZm8gPSByZXF1aXJlKFwicEluZm9cIik7XG52YXIgX2l0ZW0gPSByZXF1aXJlKFwiaXRlbVwiKTtcbnZhciBoID0gY2MuX2RlY29yYXRvcjtcbnZhciBmID0gaC5jY2NsYXNzO1xudmFyIGcgPSBoLnByb3BlcnR5O1xudmFyIHkgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5idXlCdG5Ob2RlID0gbnVsbDtcbiAgICAgICAgZS5maW5Ob2RlID0gbnVsbDtcbiAgICAgICAgZS5idG5QcmljZSA9IG51bGw7XG4gICAgICAgIGUuZG91YmxlTm9kZSA9IG51bGw7XG4gICAgICAgIGUuaXRlbUNvbXAgPSBudWxsO1xuICAgICAgICBlLnNob3BEYXRhID0gbnVsbDtcbiAgICAgICAgZS5hbmlEYXRhcyA9IFtdO1xuICAgICAgICBlLmlzRG91YmxlID0gITE7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUub25Mb2FkID0gZnVuY3Rpb24gKCkge307XG4gICAgZS5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICBlLnByb3RvdHlwZS5pbml0SXRlbSA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIHZhciBvID0gdGhpcztcbiAgICAgICAgaWYgKHQpIHtcbiAgICAgICAgICAgIHRoaXMuc2hvcERhdGEgPSB0O1xuICAgICAgICAgICAgdmFyIG4gPSB0LnByb3BzO1xuICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBuKSB7XG4gICAgICAgICAgICAgICAgdmFyIHIgPSBOdW1iZXIobltpXSk7XG4gICAgICAgICAgICAgICAgdGhpcy5pdGVtQ29tcC5pbml0QnlEYXRhKGksIHIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGEgPSBlID8gXCJibHVlTGlnaHRcIiA6IFwibGlnaHRcIjtcbiAgICAgICAgICAgIF9yZXMuZGVmYXVsdC5pbnNcbiAgICAgICAgICAgICAgICAuZ2V0QnVuZGxlQnlTdHJpbmcoXCJyZXNTcHNcIilcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICB0LmxvYWQoXCJzcGluZS9cIiArIGEgKyBcIi9hY3Rpb25cIiwgc3AuU2tlbGV0b25EYXRhLCBmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0ICYmIG8ubm9kZSAmJiBvLm5vZGUuaXNWYWxpZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuID0gbmV3IGNjLk5vZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaSA9IG4uYWRkQ29tcG9uZW50KHNwLlNrZWxldG9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaS5za2VsZXRvbkRhdGEgPSBlKSwgKGkuYW5pbWF0aW9uID0gXCJhbmltYXRpb25cIiksIChuLnBhcmVudCA9IG8uaXRlbUNvbXAubm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJSVG9vbC5pbnMuZ2V0QnVuZGxlQnlTdHJpbmcoJ3Jlc1NwcycpXCIsIHQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5idG5QcmljZS5zdHJpbmcgPSBcIsKlXCIgKyB0LnByaWNlO1xuICAgICAgICAgICAgdGhpcy5maW5Ob2RlLmFjdGl2ZSA9ICExO1xuICAgICAgICAgICAgdGhpcy5kb3VibGVOb2RlLmFjdGl2ZSA9ICExO1xuICAgICAgICAgICAgdGhpcy5jaGVja0RhdGEoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgZS5wcm90b3R5cGUuY2hlY2tEYXRhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5zaG9wRGF0YSkge1xuICAgICAgICAgICAgdmFyIHQgPSB0aGlzLnNob3BEYXRhLmtleTtcbiAgICAgICAgICAgIHZhciBlID0gX3BJbmZvLmRlZmF1bHQuaW5zLmdldFNob3BVbnJlc2V0KCk7XG4gICAgICAgICAgICB2YXIgbyA9IHRoaXMuc2hvcERhdGEuZG91YmxlIHx8IDA7XG4gICAgICAgICAgICB2YXIgbiA9IGVbdF0gfHwgMDtcbiAgICAgICAgICAgIHRoaXMuaXNEb3VibGUgPSB0aGlzLmRvdWJsZU5vZGUuYWN0aXZlID0gbiA8IG87XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGUucHJvdG90eXBlLm9uQnRuQnV5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IHRoaXM7XG4gICAgICAgIGlmICh0aGlzLnNob3BEYXRhKSB7XG4gICAgICAgICAgICB2YXIgZSA9IHRoaXMuaXNEb3VibGUgPyAxIDogMDtcbiAgICAgICAgICAgIHZhciBvID0gdGhpcy5zaG9wRGF0YS5wcm9wcztcbiAgICAgICAgICAgIHZhciBuID0gSlNPTi5zdHJpbmdpZnkodGhpcy5zaG9wRGF0YS5wcm9wcyk7XG4gICAgICAgICAgICBfaWR4LnBsYXRmb3JtLnJlcG9ydEV2ZW50KF9pZHguRVJlcEV2dC5zdXNQYXltZW50LCB7a2V5OiB0aGlzLnNob3BEYXRhLmtleX0pO1xuICAgICAgICAgICAgX2lkeC5wbGF0Zm9ybVxuICAgICAgICAgICAgICAgIC5wYXltZW50KHRoaXMuc2hvcERhdGEua2V5LCB0aGlzLnNob3BEYXRhLnByaWNlLCBlLCBuKVxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGUgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbiBpbiBvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaSA9IG9bbl07XG4gICAgICAgICAgICAgICAgICAgICAgICB0LmlzRG91YmxlICYmIChpICo9IDIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX2JhZ01nci5kZWZhdWx0Lmlucy5hZGRJdGVtKG4sIGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHIgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHIuaXRlbUlkID0gbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHIud29ybGRQb3MgPSB0Lm5vZGUucGFyZW50LmNvbnZlcnRUb1dvcmxkU3BhY2VBUih0Lm5vZGUucG9zaXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgci52YWx1ZSA9IGk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnB1c2gocik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgX3BhbmVsTWdyLmRlZmF1bHQuaW5zLm9wZW4oXCJ1aS91aV9mbHlBbmlcIiwge2l0ZW1EYXRhczogZX0pO1xuICAgICAgICAgICAgICAgICAgICBfcEluZm8uZGVmYXVsdC5pbnMuYWRkU2hvcFVucmVzZXQodC5zaG9wRGF0YS5rZXkpO1xuICAgICAgICAgICAgICAgICAgICB0LmNoZWNrRGF0YSgpO1xuICAgICAgICAgICAgICAgICAgICBfaWR4LnBsYXRmb3JtLnJlcG9ydEV2ZW50KF9pZHguRVJlcEV2dC5wYXltZW50UmVzdWx0LCB7a2V5OiB0LnNob3BEYXRhLmtleSwgc3VjY2VzczogMX0pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aXBNZ3IuZGVmYXVsdC5pbnMuc2hvd1RpcChlLCAhMCk7XG4gICAgICAgICAgICAgICAgICAgIF9pZHgucGxhdGZvcm0ucmVwb3J0RXZlbnQoX2lkeC5FUmVwRXZ0LnBheW1lbnRSZXN1bHQsIHtrZXk6IHQuc2hvcERhdGEua2V5LCBzdWNjZXNzOiAwfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW2coY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJidXlCdG5Ob2RlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbZyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcImZpbk5vZGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtnKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcImJ0blByaWNlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbZyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcImRvdWJsZU5vZGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtnKF9pdGVtLmRlZmF1bHQpXSwgZS5wcm90b3R5cGUsIFwiaXRlbUNvbXBcIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gX19kZWNvcmF0ZShbZl0sIGUpO1xufSkoY2MuQ29tcG9uZW50KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHk7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/skinContent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '25d4cZd7RtM460Zomkgx+9w', 'skinContent');
// scripts/skinContent.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _skinItemBase = require("skinItemBase");

var s = cc._decorator;
var c = s.ccclass;
var l = (s.property, function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.isInit = !1;
    return e;
  }

  __extends(e, t);

  e.prototype.initContent = function (t) {
    if (!this.isInit) {
      for (var e = this.node.children[0], o = t.itemData, n = t.skinId, i = 0; i < o.length; i++) {
        var r = null;
        this.node.childrenCount > i ? r = this.node.children[i] : (r = cc.instantiate(e), this.node.addChild(r));
        r.getComponent(_skinItemBase["default"]).initItem(o[i], n);
      }

      this.isInit = !0;
    }
  };

  return __decorate([c], e);
}(cc.Component));
exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc2tpbkNvbnRlbnQuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX3NraW5JdGVtQmFzZSIsInJlcXVpcmUiLCJzIiwiY2MiLCJfZGVjb3JhdG9yIiwiYyIsImNjY2xhc3MiLCJsIiwicHJvcGVydHkiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwiaXNJbml0IiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwiaW5pdENvbnRlbnQiLCJub2RlIiwiY2hpbGRyZW4iLCJvIiwiaXRlbURhdGEiLCJza2luSWQiLCJpIiwibGVuZ3RoIiwiciIsImNoaWxkcmVuQ291bnQiLCJpbnN0YW50aWF0ZSIsImFkZENoaWxkIiwiZ2V0Q29tcG9uZW50IiwiaW5pdEl0ZW0iLCJfX2RlY29yYXRlIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLGFBQWEsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBM0I7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsSUFDQUwsQ0FBQyxDQUFDTSxRQUFGLEVBQ0EsVUFBVUMsQ0FBVixFQUFhO0VBQ1YsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxNQUFGLEdBQVcsQ0FBQyxDQUFaO0lBQ0EsT0FBT0gsQ0FBUDtFQUNIOztFQUNESSxTQUFTLENBQUNKLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNLLFNBQUYsQ0FBWUMsV0FBWixHQUEwQixVQUFVUCxDQUFWLEVBQWE7SUFDbkMsSUFBSSxDQUFDLEtBQUtJLE1BQVYsRUFBa0I7TUFDZCxLQUFLLElBQUlILENBQUMsR0FBRyxLQUFLTyxJQUFMLENBQVVDLFFBQVYsQ0FBbUIsQ0FBbkIsQ0FBUixFQUErQkMsQ0FBQyxHQUFHVixDQUFDLENBQUNXLFFBQXJDLEVBQStDekIsQ0FBQyxHQUFHYyxDQUFDLENBQUNZLE1BQXJELEVBQTZEQyxDQUFDLEdBQUcsQ0FBdEUsRUFBeUVBLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxNQUEvRSxFQUF1RkQsQ0FBQyxFQUF4RixFQUE0RjtRQUN4RixJQUFJRSxDQUFDLEdBQUcsSUFBUjtRQUNBLEtBQUtQLElBQUwsQ0FBVVEsYUFBVixHQUEwQkgsQ0FBMUIsR0FDT0UsQ0FBQyxHQUFHLEtBQUtQLElBQUwsQ0FBVUMsUUFBVixDQUFtQkksQ0FBbkIsQ0FEWCxJQUVRRSxDQUFDLEdBQUdyQixFQUFFLENBQUN1QixXQUFILENBQWVoQixDQUFmLENBQUwsRUFBeUIsS0FBS08sSUFBTCxDQUFVVSxRQUFWLENBQW1CSCxDQUFuQixDQUZoQztRQUdBQSxDQUFDLENBQUNJLFlBQUYsQ0FBZTVCLGFBQWEsV0FBNUIsRUFBc0M2QixRQUF0QyxDQUErQ1YsQ0FBQyxDQUFDRyxDQUFELENBQWhELEVBQXFEM0IsQ0FBckQ7TUFDSDs7TUFDRCxLQUFLa0IsTUFBTCxHQUFjLENBQUMsQ0FBZjtJQUNIO0VBQ0osQ0FYRDs7RUFZQSxPQUFPaUIsVUFBVSxDQUFDLENBQUN6QixDQUFELENBQUQsRUFBTUssQ0FBTixDQUFqQjtBQUNILENBcEJELENBb0JHUCxFQUFFLENBQUM0QixTQXBCTixDQUZDLENBQUw7QUF1QkFqQyxPQUFPLFdBQVAsR0FBa0JTLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9za2luSXRlbUJhc2UgPSByZXF1aXJlKFwic2tpbkl0ZW1CYXNlXCIpO1xudmFyIHMgPSBjYy5fZGVjb3JhdG9yO1xudmFyIGMgPSBzLmNjY2xhc3M7XG52YXIgbCA9XG4gICAgKHMucHJvcGVydHksXG4gICAgKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgICAgIGUuaXNJbml0ID0gITE7XG4gICAgICAgICAgICByZXR1cm4gZTtcbiAgICAgICAgfVxuICAgICAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgICAgIGUucHJvdG90eXBlLmluaXRDb250ZW50ID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5pc0luaXQpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBlID0gdGhpcy5ub2RlLmNoaWxkcmVuWzBdLCBvID0gdC5pdGVtRGF0YSwgbiA9IHQuc2tpbklkLCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHIgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5vZGUuY2hpbGRyZW5Db3VudCA+IGlcbiAgICAgICAgICAgICAgICAgICAgICAgID8gKHIgPSB0aGlzLm5vZGUuY2hpbGRyZW5baV0pXG4gICAgICAgICAgICAgICAgICAgICAgICA6ICgociA9IGNjLmluc3RhbnRpYXRlKGUpKSwgdGhpcy5ub2RlLmFkZENoaWxkKHIpKTtcbiAgICAgICAgICAgICAgICAgICAgci5nZXRDb21wb25lbnQoX3NraW5JdGVtQmFzZS5kZWZhdWx0KS5pbml0SXRlbShvW2ldLCBuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5pc0luaXQgPSAhMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF9fZGVjb3JhdGUoW2NdLCBlKTtcbiAgICB9KShjYy5Db21wb25lbnQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IGw7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/shopMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8a5decHXkJJK6qhk3PNOD+U', 'shopMgr');
// scripts/shopMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _cfgMgr = require("cfgMgr");

var r = function () {
  function t() {
    this.localData = null;
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      return this._ins || (this._ins = new t());
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.getAllRed = function () {
    var t;
    var e;
    var o = null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.shop_config) || void 0 === e ? void 0 : e.gift;
    var n = 0;

    if (o) {
      var r = {};

      for (var a in o) {
        var s = o[a];
        var c = s.tag || 0;
        s.is_shop && (r[c] ? r[c].push(s) : (r[c] = [], r[c].push(s)));
      }

      var l = this.getTabsRed();

      for (var u in r) {
        var p = r[u];

        if (p) {
          var d = 1;
          if (l[u]) d = 0;else for (var h = p.length, f = 0; f < h; f++) {
            0 == (p[f].price || 0) && d++;
          }
          n += d;
        }
      }
    }

    return n;
  };

  t.prototype.getTabsRed = function () {
    var t = this.getLocalShopRedData().tabsRed;
    return null == t ? {} : t;
  };

  t.prototype.setTabsRed = function (t) {
    this.setLocalShopRedData({
      tabsRed: t
    });
  };

  t.prototype.getPackRed = function () {
    var t = this.getLocalShopRedData().packRed;
    return null == t ? {} : t;
  };

  t.prototype.setPackRed = function (t) {
    this.setLocalShopRedData({
      packRed: t
    });
  };

  t.prototype.setLocalShopRedData = function (t) {
    var e = this.getLocalShopRedData();
    this.localData = Object.assign(Object.assign({}, e), t);

    _idx.platform.setStorage("shopRed", this.localData);
  };

  t.prototype.getLocalShopRedData = function () {
    null == this.localData && (this.localData = _idx.platform.getStorage("shopRed") || {});
    return this.localData;
  };

  return t;
}();

exports["default"] = r;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc2hvcE1nci5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9pZHgiLCJyZXF1aXJlIiwiX2NmZ01nciIsInIiLCJ0IiwibG9jYWxEYXRhIiwiZ2V0IiwiX2lucyIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJwcm90b3R5cGUiLCJnZXRBbGxSZWQiLCJlIiwibyIsInNlcnZlckNmZyIsInNob3BfY29uZmlnIiwiZ2lmdCIsIm4iLCJhIiwicyIsImMiLCJ0YWciLCJpc19zaG9wIiwicHVzaCIsImwiLCJnZXRUYWJzUmVkIiwidSIsInAiLCJkIiwiaCIsImxlbmd0aCIsImYiLCJwcmljZSIsImdldExvY2FsU2hvcFJlZERhdGEiLCJ0YWJzUmVkIiwic2V0VGFic1JlZCIsInNldExvY2FsU2hvcFJlZERhdGEiLCJnZXRQYWNrUmVkIiwicGFja1JlZCIsInNldFBhY2tSZWQiLCJhc3NpZ24iLCJwbGF0Zm9ybSIsInNldFN0b3JhZ2UiLCJnZXRTdG9yYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFsQjs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlFLENBQUMsR0FBSSxZQUFZO0VBQ2pCLFNBQVNDLENBQVQsR0FBYTtJQUNULEtBQUtDLFNBQUwsR0FBaUIsSUFBakI7RUFDSDs7RUFDRFQsTUFBTSxDQUFDQyxjQUFQLENBQXNCTyxDQUF0QixFQUF5QixLQUF6QixFQUFnQztJQUM1QkUsR0FBRyxFQUFFLGVBQVk7TUFDYixPQUFPLEtBQUtDLElBQUwsS0FBYyxLQUFLQSxJQUFM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QU8sRUFBRWxDO0lBQVYsQ0FBekI7RUFDSCxDQUZEOztFQUdBQSxDQUFDLENBQUNNLFNBQUYsQ0FBWTBCLG1CQUFaLEdBQWtDLFVBQVVoQyxDQUFWLEVBQWE7SUFDM0MsSUFBSVEsQ0FBQyxHQUFHLEtBQUtxQixtQkFBTCxFQUFSO0lBQ0EsS0FBSzVCLFNBQUwsR0FBaUJULE1BQU0sQ0FBQzRDLE1BQVAsQ0FBYzVDLE1BQU0sQ0FBQzRDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCNUIsQ0FBbEIsQ0FBZCxFQUFvQ1IsQ0FBcEMsQ0FBakI7O0lBQ0FKLElBQUksQ0FBQ3lDLFFBQUwsQ0FBY0MsVUFBZCxDQUF5QixTQUF6QixFQUFvQyxLQUFLckMsU0FBekM7RUFDSCxDQUpEOztFQUtBRCxDQUFDLENBQUNNLFNBQUYsQ0FBWXVCLG1CQUFaLEdBQWtDLFlBQVk7SUFDMUMsUUFBUSxLQUFLNUIsU0FBYixLQUEyQixLQUFLQSxTQUFMLEdBQWlCTCxJQUFJLENBQUN5QyxRQUFMLENBQWNFLFVBQWQsQ0FBeUIsU0FBekIsS0FBdUMsRUFBbkY7SUFDQSxPQUFPLEtBQUt0QyxTQUFaO0VBQ0gsQ0FIRDs7RUFJQSxPQUFPRCxDQUFQO0FBQ0gsQ0FoRU8sRUFBUjs7QUFpRUFOLE9BQU8sV0FBUCxHQUFrQkssQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9pZHggPSByZXF1aXJlKFwiaWR4XCIpO1xudmFyIF9jZmdNZ3IgPSByZXF1aXJlKFwiY2ZnTWdyXCIpO1xudmFyIHIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHQoKSB7XG4gICAgICAgIHRoaXMubG9jYWxEYXRhID0gbnVsbDtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwiaW5zXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faW5zIHx8ICh0aGlzLl9pbnMgPSBuZXcgdCgpKTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogITEsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogITBcbiAgICB9KTtcbiAgICB0LnByb3RvdHlwZS5nZXRBbGxSZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0O1xuICAgICAgICB2YXIgZTtcbiAgICAgICAgdmFyIG8gPVxuICAgICAgICAgICAgbnVsbCA9PT0gKGUgPSBudWxsID09PSAodCA9IF9jZmdNZ3IuZGVmYXVsdC5zZXJ2ZXJDZmcpIHx8IHZvaWQgMCA9PT0gdCA/IHZvaWQgMCA6IHQuc2hvcF9jb25maWcpIHx8XG4gICAgICAgICAgICB2b2lkIDAgPT09IGVcbiAgICAgICAgICAgICAgICA/IHZvaWQgMFxuICAgICAgICAgICAgICAgIDogZS5naWZ0O1xuICAgICAgICB2YXIgbiA9IDA7XG4gICAgICAgIGlmIChvKSB7XG4gICAgICAgICAgICB2YXIgciA9IHt9O1xuICAgICAgICAgICAgZm9yICh2YXIgYSBpbiBvKSB7XG4gICAgICAgICAgICAgICAgdmFyIHMgPSBvW2FdO1xuICAgICAgICAgICAgICAgIHZhciBjID0gcy50YWcgfHwgMDtcbiAgICAgICAgICAgICAgICBzLmlzX3Nob3AgJiYgKHJbY10gPyByW2NdLnB1c2gocykgOiAoKHJbY10gPSBbXSksIHJbY10ucHVzaChzKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGwgPSB0aGlzLmdldFRhYnNSZWQoKTtcbiAgICAgICAgICAgIGZvciAodmFyIHUgaW4gcikge1xuICAgICAgICAgICAgICAgIHZhciBwID0gclt1XTtcbiAgICAgICAgICAgICAgICBpZiAocCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZCA9IDE7XG4gICAgICAgICAgICAgICAgICAgIGlmIChsW3VdKSBkID0gMDtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBmb3IgKHZhciBoID0gcC5sZW5ndGgsIGYgPSAwOyBmIDwgaDsgZisrKSAwID09IChwW2ZdLnByaWNlIHx8IDApICYmIGQrKztcbiAgICAgICAgICAgICAgICAgICAgbiArPSBkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbjtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmdldFRhYnNSZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ID0gdGhpcy5nZXRMb2NhbFNob3BSZWREYXRhKCkudGFic1JlZDtcbiAgICAgICAgcmV0dXJuIG51bGwgPT0gdCA/IHt9IDogdDtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnNldFRhYnNSZWQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0aGlzLnNldExvY2FsU2hvcFJlZERhdGEoe3RhYnNSZWQ6IHR9KTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmdldFBhY2tSZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ID0gdGhpcy5nZXRMb2NhbFNob3BSZWREYXRhKCkucGFja1JlZDtcbiAgICAgICAgcmV0dXJuIG51bGwgPT0gdCA/IHt9IDogdDtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnNldFBhY2tSZWQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0aGlzLnNldExvY2FsU2hvcFJlZERhdGEoe3BhY2tSZWQ6IHR9KTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnNldExvY2FsU2hvcFJlZERhdGEgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB2YXIgZSA9IHRoaXMuZ2V0TG9jYWxTaG9wUmVkRGF0YSgpO1xuICAgICAgICB0aGlzLmxvY2FsRGF0YSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZSksIHQpO1xuICAgICAgICBfaWR4LnBsYXRmb3JtLnNldFN0b3JhZ2UoXCJzaG9wUmVkXCIsIHRoaXMubG9jYWxEYXRhKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmdldExvY2FsU2hvcFJlZERhdGEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIG51bGwgPT0gdGhpcy5sb2NhbERhdGEgJiYgKHRoaXMubG9jYWxEYXRhID0gX2lkeC5wbGF0Zm9ybS5nZXRTdG9yYWdlKFwic2hvcFJlZFwiKSB8fCB7fSk7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2FsRGF0YTtcbiAgICB9O1xuICAgIHJldHVybiB0O1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IHI7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/skinMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9335eNcn6hC4YaMUkwXQ5k8', 'skinMgr');
// scripts/skinMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.SkinUnlockType = exports.SkinIdEnum = exports.SkinState = void 0;
var r;

var _evts = require("evts");

var _idx = require("idx");

var _res = require("res");

var _uData = require("uData");

var _global = require("global");

var _pInfo = require("pInfo");

(function (t) {
  t[t.none = 0] = "none", t[t.unlock = 1] = "unlock", t[t.lock = 2] = "lock", t[t.using = 3] = "using";
})(exports.SkinState || (exports.SkinState = {}));

(function (t) {
  t.bg = "bg", t.role = "role", t.nameFrame = "nameFrame", t.headFrame = "headFrame";
})(r = exports.SkinIdEnum || (exports.SkinIdEnum = {}));

(function (t) {
  t[t.none = 0] = "none";
  t[t.video = 1] = "video";
  t[t.coin = 2] = "coin";
})(exports.SkinUnlockType || (exports.SkinUnlockType = {}));

var d = function () {
  function t() {
    this.defaultConfig = {
      bg: {
        skinId: "bg",
        itemData: [{
          ref: 1,
          name: "默认背景",
          unlockType: 0,
          unlockValue: 0,
          desc: ""
        }, {
          ref: 2,
          name: "夜色降临",
          unlockType: 1,
          unlockValue: 20,
          desc: ""
        }]
      },
      role: {
        skinId: "role",
        itemData: [{
          ref: 1,
          name: "默认角色",
          unlockType: 0,
          unlockValue: 0,
          desc: ""
        }, {
          ref: 2,
          name: "流连忘返",
          unlockType: 1,
          unlockValue: 20,
          desc: ""
        }]
      },
      nameFrame: {
        skinId: "nameFrame",
        itemData: [{
          ref: 1,
          name: "默认名字框",
          unlockType: 0,
          unlockValue: 0,
          desc: ""
        }, {
          ref: 2,
          name: "心旷神怡",
          unlockType: 2,
          unlockValue: 1e4,
          desc: ""
        }, {
          ref: 3,
          name: "海誓山盟",
          unlockType: 2,
          unlockValue: 1e4,
          desc: ""
        }, {
          ref: 4,
          name: "旖旎风光",
          unlockType: 2,
          unlockValue: 2e4,
          desc: ""
        }, {
          ref: 5,
          name: "柳暗花遮",
          unlockType: 2,
          unlockValue: 2e4,
          desc: ""
        }, {
          ref: 6,
          name: "姹紫嫣红",
          unlockType: 2,
          unlockValue: 2e4,
          desc: ""
        }]
      },
      headFrame: {
        skinId: "headFrame",
        itemData: [{
          ref: 1,
          name: "默认头像框",
          unlockType: 0,
          unlockValue: 0,
          desc: ""
        }, {
          ref: 2,
          name: "秀色可餐",
          unlockType: 2,
          unlockValue: 2e4,
          desc: ""
        }, {
          ref: 3,
          name: "火树银花",
          unlockType: 2,
          unlockValue: 2e4,
          desc: ""
        }, {
          ref: 4,
          name: "湖光山色",
          unlockType: 2,
          unlockValue: 2e3,
          desc: ""
        }, {
          ref: 5,
          name: "鸟语花香",
          unlockType: 1,
          unlockValue: 10,
          desc: ""
        }, {
          ref: 6,
          name: "江山如画",
          unlockType: 1,
          unlockValue: 10,
          desc: ""
        }]
      }
    };
    this.skinConfig = this.defaultConfig;
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      return this._ins || (this._ins = new t());
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.init = function () {
    var t = this;
    cc.resources.load("config", cc.JsonAsset, function (e, o) {
      !e && o && o.json ? t.skinConfig = o.json : t.skinConfig = t.defaultConfig;
    });
  };

  t.prototype.isUsingSkin = function (t, e) {
    return _pInfo["default"].ins.getUsingSkin()[t] === e;
  };

  t.prototype.isHasSkin = function (t, e) {
    var o = _pInfo["default"].ins.getMySkin();

    return o[t] && o[t].includes(e);
  };

  t.prototype.getSkinConfig = function (t) {
    return this.skinConfig[t];
  };

  t.prototype.getSkinData = function (t, e) {
    for (var o = this.getSkinConfig(t).itemData, n = 0; n < o.length; n++) {
      if (o[n].ref === e) return o[n];
    }

    return null;
  };

  t.prototype.addSkin = function (t, e) {
    _pInfo["default"].ins.addMySkin(t, e);

    _idx.platform.reportEvent(_idx.ERepEvt.buySkin, {
      skinId: t,
      ref: e
    });

    _evts["default"].opE.emit({
      action: _evts["default"].SKIN_CHG,
      data: {
        skinId: t,
        ref: e,
        isUse: !1
      }
    });

    _uData["default"].ins._setLocalAndCloudData();
  };

  t.prototype.usingSkin = function (t, e) {
    var o;

    _pInfo["default"].ins.setUsingSkin(((o = {})[t] = e, o));

    _idx.platform.reportEvent(_idx.ERepEvt.useSkin, {
      skinId: t,
      ref: e
    });

    _evts["default"].opE.emit({
      action: _evts["default"].SKIN_CHG,
      data: {
        skinId: t,
        ref: e,
        isUse: !0
      }
    });
  };

  t.prototype.updateHeadFrame = function (t, e, o) {
    var n;
    var i;

    if (void 0 === o && (o = !1), e) {
      t || (t = 1);
      var a;
      var s = (null === (i = null === (n = this.getSkinConfig(r.headFrame)) || void 0 === n ? void 0 : n.itemData) || void 0 === i ? void 0 : i.length) || 1;
      (t = Math.min(t, s)) > 6 ? (a = _global.OssConfig.skinUrl + "headFrame/head" + t + ".png", cc.assetManager.loadRemote(a, cc.Texture2D, function (t, n) {
        if (!t && n && e.isValid) {
          var i = new cc.SpriteFrame(n);
          e.spriteFrame = i;
        } else o ? (a = "game/skin/headFrame/head1", _res["default"].ins.lSF(a, e)) : e.spriteFrame = null;
      })) : (a = "game/skin/headFrame/head" + t, _res["default"].ins.lSF(a, e));
    }
  };

  t.prototype.updateBg = function (t, e, o) {
    var n;
    var i;

    if (void 0 === o && (o = !1), e) {
      t || (t = 1);
      var a;
      var s = (null === (i = null === (n = this.getSkinConfig(r.bg)) || void 0 === n ? void 0 : n.itemData) || void 0 === i ? void 0 : i.length) || 1;
      (t = Math.min(t, s)) > 2 ? (a = _global.OssConfig.skinUrl + "bg/top" + t + ".jpg", cc.assetManager.loadRemote(a, cc.Texture2D, function (t, n) {
        if (!t && n && e.isValid) {
          var i = new cc.SpriteFrame(n);
          e.spriteFrame = i;
        } else o ? (a = "game/normal/top1", _res["default"].ins.lSF(a, e)) : e.spriteFrame = null;
      })) : (a = "game/normal/top" + t, _res["default"].ins.lSF(a, e));
    }
  };

  t.prototype.updateNameFrame = function (t, e, o) {
    var n;
    var i;

    if (void 0 === o && (o = !1), e) {
      t || (t = 1);
      var a;
      var s = (null === (i = null === (n = this.getSkinConfig(r.nameFrame)) || void 0 === n ? void 0 : n.itemData) || void 0 === i ? void 0 : i.length) || 1;
      (t = Math.min(t, s)) > 6 ? (a = _global.OssConfig.skinUrl + "nameFrame/name" + t + ".png", cc.assetManager.loadRemote(a, cc.Texture2D, function (t, n) {
        if (!t && n && e.isValid) {
          var i = new cc.SpriteFrame(n);
          e.spriteFrame = i;
        } else o ? (a = "game/skin/nameFrame/name1", _res["default"].ins.lSF(a, e)) : e.spriteFrame = null;
      })) : (a = "game/skin/nameFrame/name" + t, _res["default"].ins.lSF(a, e));
    }
  };

  t.prototype.updateRole = function (t, e, o) {
    var a;
    var s;
    var l = this;

    if (void 0 === o && (o = !1), e) {
      t || (t = 1);
      var u = (null === (s = null === (a = this.getSkinConfig(r.role)) || void 0 === a ? void 0 : a.itemData) || void 0 === s ? void 0 : s.length) || 1;
      if ((t = Math.min(t, u)) > 2) this.curRoleNode = e, this.curRoleRef = t, Promise.all([this._remoteAtlas(), this._remoteImg(), this._remoteJson()]).then(function (t) {
        var o = t[0];
        var r = t[1];
        var a = t[2];
        return __awaiter(l, void 0, void 0, function () {
          var t;
          var n;
          var s;
          var l;
          return __generator(this, function (i) {
            switch (i.label) {
              case 0:
                return (t = new sp.SkeletonData()).skeletonJson = a.json, t.atlasText = o.text, t.textures = [r], t.textureNames = ["1.png"], [4, _res["default"].ins.lPre("skin/girl1")];

              case 1:
                return n = i.sent(), s = cc.instantiate(n), (l = s.getComponent(sp.Skeleton)) ? (l.skeletonData = t, s.position = cc.Vec3.ZERO, l.animation = "idle", e.addChild(s), [2]) : [2];
            }
          });
        });
      })["catch"](function (t) {
        if (console.error(t), e.removeAllChildren(), o) {
          if (!e) return;

          _res["default"].ins.lPre("skin/girl1").then(function (t) {
            var o = cc.instantiate(t);
            o.position = cc.Vec3.ZERO;
            e.addChild(o);
          });
        }
      });else {
        var p = "skin/girl" + t;
        e.removeAllChildren();

        _res["default"].ins.lPre(p).then(function (t) {
          var o = cc.instantiate(t);
          o.position = cc.Vec3.ZERO;
          e.addChild(o);
        });
      }
    }
  };

  t.prototype._remoteAtlas = function () {
    var t = this;
    var e = _global.OssConfig.skinUrl + "role/" + this.curRoleRef + "/1.atlas";
    return new Promise(function (o, n) {
      cc.assetManager.loadRemote(e, function (e, i) {
        e && n(e);
        t.curRoleNode.isValid || n("this.curRoleNode.isValid === false");
        i || n("atlasText is null");
        o(i);
      });
    });
  };

  t.prototype._remoteImg = function () {
    var t = this;
    var e = _global.OssConfig.skinUrl + "role/" + this.curRoleRef + "/1.png";
    return new Promise(function (o, n) {
      cc.assetManager.loadRemote(e, function (e, i) {
        e && n(e);
        t.curRoleNode.isValid || n("this.curRoleNode.isValid === false");
        i || n("texture is null");
        o(i);
      });
    });
  };

  t.prototype._remoteJson = function () {
    var t = this;
    var e = _global.OssConfig.skinUrl + "role/" + this.curRoleRef + "/1.json";
    return new Promise(function (o, r) {
      cc.assetManager.loadRemote(e, function (e, a) {
        return __awaiter(t, void 0, void 0, function () {
          return __generator(this, function () {
            e && r(e);
            this.curRoleNode.isValid || r("this.curRoleNode.isValid === false");
            a || r("skeletonJson is null");
            o(a);
            return [2];
          });
        });
      });
    });
  };

  return t;
}();

exports["default"] = d;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/skinNameFrame.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '367f7W3ubxNcbB33cXikbqd', 'skinNameFrame');
// scripts/skinNameFrame.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _skinMgr = require("skinMgr");

var _skinItemBase = require("skinItemBase");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.itemSp = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    t.prototype.onLoad.call(this);
  };

  e.prototype.loadItem = function () {
    this.itemSp.node.y = this.ref > 1 ? 0 : -4;
    this.itemSp.type = this.ref > 1 ? cc.Sprite.Type.SIMPLE : cc.Sprite.Type.SLICED;
    this.itemSp.sizeMode = this.ref > 1 ? cc.Sprite.SizeMode.TRIMMED : (this.itemSp.node.setContentSize(155, 55), cc.Sprite.SizeMode.CUSTOM);

    _skinMgr["default"].ins.updateNameFrame(this.ref, this.itemSp);
  };

  e.prototype.clickItem = function () {
    var t;
    this.state !== _skinMgr.SkinState.using && (t = this.itemSp.node, this.openSkinInfo(t));
  };

  __decorate([u(cc.Sprite)], e.prototype, "itemSp", void 0);

  return __decorate([l], e);
}(_skinItemBase["default"]);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc2tpbk5hbWVGcmFtZS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfc2tpbk1nciIsInJlcXVpcmUiLCJfc2tpbkl0ZW1CYXNlIiwiYyIsImNjIiwiX2RlY29yYXRvciIsImwiLCJjY2NsYXNzIiwidSIsInByb3BlcnR5IiwicCIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJpdGVtU3AiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJvbkxvYWQiLCJjYWxsIiwibG9hZEl0ZW0iLCJub2RlIiwieSIsInJlZiIsInR5cGUiLCJTcHJpdGUiLCJUeXBlIiwiU0lNUExFIiwiU0xJQ0VEIiwic2l6ZU1vZGUiLCJTaXplTW9kZSIsIlRSSU1NRUQiLCJzZXRDb250ZW50U2l6ZSIsIkNVU1RPTSIsImlucyIsInVwZGF0ZU5hbWVGcmFtZSIsImNsaWNrSXRlbSIsInN0YXRlIiwiU2tpblN0YXRlIiwidXNpbmciLCJvcGVuU2tpbkluZm8iLCJfX2RlY29yYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBQ0EsSUFBSUMsYUFBYSxHQUFHRCxPQUFPLENBQUMsY0FBRCxDQUEzQjs7QUFDQSxJQUFJRSxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHTCxDQUFDLENBQUNNLFFBQVY7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFJLFVBQVVDLENBQVYsRUFBYTtFQUNsQixTQUFTQyxDQUFULEdBQWE7SUFDVCxJQUFJQSxDQUFDLEdBQUksU0FBU0QsQ0FBVCxJQUFjQSxDQUFDLENBQUNFLEtBQUYsQ0FBUSxJQUFSLEVBQWNDLFNBQWQsQ0FBZixJQUE0QyxJQUFwRDtJQUNBRixDQUFDLENBQUNHLE1BQUYsR0FBVyxJQUFYO0lBQ0EsT0FBT0gsQ0FBUDtFQUNIOztFQUNESSxTQUFTLENBQUNKLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNLLFNBQUYsQ0FBWUMsTUFBWixHQUFxQixZQUFZO0lBQzdCUCxDQUFDLENBQUNNLFNBQUYsQ0FBWUMsTUFBWixDQUFtQkMsSUFBbkIsQ0FBd0IsSUFBeEI7RUFDSCxDQUZEOztFQUdBUCxDQUFDLENBQUNLLFNBQUYsQ0FBWUcsUUFBWixHQUF1QixZQUFZO0lBQy9CLEtBQUtMLE1BQUwsQ0FBWU0sSUFBWixDQUFpQkMsQ0FBakIsR0FBcUIsS0FBS0MsR0FBTCxHQUFXLENBQVgsR0FBZSxDQUFmLEdBQW1CLENBQUMsQ0FBekM7SUFDQSxLQUFLUixNQUFMLENBQVlTLElBQVosR0FBbUIsS0FBS0QsR0FBTCxHQUFXLENBQVgsR0FBZW5CLEVBQUUsQ0FBQ3FCLE1BQUgsQ0FBVUMsSUFBVixDQUFlQyxNQUE5QixHQUF1Q3ZCLEVBQUUsQ0FBQ3FCLE1BQUgsQ0FBVUMsSUFBVixDQUFlRSxNQUF6RTtJQUNBLEtBQUtiLE1BQUwsQ0FBWWMsUUFBWixHQUNJLEtBQUtOLEdBQUwsR0FBVyxDQUFYLEdBQ01uQixFQUFFLENBQUNxQixNQUFILENBQVVLLFFBQVYsQ0FBbUJDLE9BRHpCLElBRU8sS0FBS2hCLE1BQUwsQ0FBWU0sSUFBWixDQUFpQlcsY0FBakIsQ0FBZ0MsR0FBaEMsRUFBcUMsRUFBckMsR0FBMEM1QixFQUFFLENBQUNxQixNQUFILENBQVVLLFFBQVYsQ0FBbUJHLE1BRnBFLENBREo7O0lBSUFqQyxRQUFRLFdBQVIsQ0FBaUJrQyxHQUFqQixDQUFxQkMsZUFBckIsQ0FBcUMsS0FBS1osR0FBMUMsRUFBK0MsS0FBS1IsTUFBcEQ7RUFDSCxDQVJEOztFQVNBSCxDQUFDLENBQUNLLFNBQUYsQ0FBWW1CLFNBQVosR0FBd0IsWUFBWTtJQUNoQyxJQUFJekIsQ0FBSjtJQUNBLEtBQUswQixLQUFMLEtBQWVyQyxRQUFRLENBQUNzQyxTQUFULENBQW1CQyxLQUFsQyxLQUE2QzVCLENBQUMsR0FBRyxLQUFLSSxNQUFMLENBQVlNLElBQWpCLEVBQXdCLEtBQUttQixZQUFMLENBQWtCN0IsQ0FBbEIsQ0FBcEU7RUFDSCxDQUhEOztFQUlBOEIsVUFBVSxDQUFDLENBQUNqQyxDQUFDLENBQUNKLEVBQUUsQ0FBQ3FCLE1BQUosQ0FBRixDQUFELEVBQWlCYixDQUFDLENBQUNLLFNBQW5CLEVBQThCLFFBQTlCLEVBQXdDLEtBQUssQ0FBN0MsQ0FBVjs7RUFDQSxPQUFPd0IsVUFBVSxDQUFDLENBQUNuQyxDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBekJPLENBeUJMVixhQUFhLFdBekJSLENBQVI7O0FBMEJBSixPQUFPLFdBQVAsR0FBa0JZLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9za2luTWdyID0gcmVxdWlyZShcInNraW5NZ3JcIik7XG52YXIgX3NraW5JdGVtQmFzZSA9IHJlcXVpcmUoXCJza2luSXRlbUJhc2VcIik7XG52YXIgYyA9IGNjLl9kZWNvcmF0b3I7XG52YXIgbCA9IGMuY2NjbGFzcztcbnZhciB1ID0gYy5wcm9wZXJ0eTtcbnZhciBwID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuaXRlbVNwID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgfVxuICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICBlLnByb3RvdHlwZS5vbkxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHQucHJvdG90eXBlLm9uTG9hZC5jYWxsKHRoaXMpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUubG9hZEl0ZW0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaXRlbVNwLm5vZGUueSA9IHRoaXMucmVmID4gMSA/IDAgOiAtNDtcbiAgICAgICAgdGhpcy5pdGVtU3AudHlwZSA9IHRoaXMucmVmID4gMSA/IGNjLlNwcml0ZS5UeXBlLlNJTVBMRSA6IGNjLlNwcml0ZS5UeXBlLlNMSUNFRDtcbiAgICAgICAgdGhpcy5pdGVtU3Auc2l6ZU1vZGUgPVxuICAgICAgICAgICAgdGhpcy5yZWYgPiAxXG4gICAgICAgICAgICAgICAgPyBjYy5TcHJpdGUuU2l6ZU1vZGUuVFJJTU1FRFxuICAgICAgICAgICAgICAgIDogKHRoaXMuaXRlbVNwLm5vZGUuc2V0Q29udGVudFNpemUoMTU1LCA1NSksIGNjLlNwcml0ZS5TaXplTW9kZS5DVVNUT00pO1xuICAgICAgICBfc2tpbk1nci5kZWZhdWx0Lmlucy51cGRhdGVOYW1lRnJhbWUodGhpcy5yZWYsIHRoaXMuaXRlbVNwKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmNsaWNrSXRlbSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQ7XG4gICAgICAgIHRoaXMuc3RhdGUgIT09IF9za2luTWdyLlNraW5TdGF0ZS51c2luZyAmJiAoKHQgPSB0aGlzLml0ZW1TcC5ub2RlKSwgdGhpcy5vcGVuU2tpbkluZm8odCkpO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbdShjYy5TcHJpdGUpXSwgZS5wcm90b3R5cGUsIFwiaXRlbVNwXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW2xdLCBlKTtcbn0pKF9za2luSXRlbUJhc2UuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSBwO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/swBtn.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7c4e0aUwodIo6AqBp46T8p1', 'swBtn');
// scripts/swBtn.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.sprNode = null;
    e.flag = !0;
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {
    this.u();
  };

  e.prototype.setState = function (t) {
    this.flag = t;
    this.u();
  };

  e.prototype.u = function () {
    null != this.sprNode && (this.sprNode.active = this.flag);
  };

  __decorate([c(cc.Node)], e.prototype, "sprNode", void 0);

  return __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc3dCdG4uanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYSIsImNjIiwiX2RlY29yYXRvciIsInMiLCJjY2NsYXNzIiwiYyIsInByb3BlcnR5IiwibCIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJzcHJOb2RlIiwiZmxhZyIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsInN0YXJ0IiwidSIsInNldFN0YXRlIiwiYWN0aXZlIiwiX19kZWNvcmF0ZSIsIk5vZGUiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQSxJQUFJQyxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHTCxDQUFDLENBQUNNLFFBQVY7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFJLFVBQVVDLENBQVYsRUFBYTtFQUNsQixTQUFTQyxDQUFULEdBQWE7SUFDVCxJQUFJQSxDQUFDLEdBQUksU0FBU0QsQ0FBVCxJQUFjQSxDQUFDLENBQUNFLEtBQUYsQ0FBUSxJQUFSLEVBQWNDLFNBQWQsQ0FBZixJQUE0QyxJQUFwRDtJQUNBRixDQUFDLENBQUNHLE9BQUYsR0FBWSxJQUFaO0lBQ0FILENBQUMsQ0FBQ0ksSUFBRixHQUFTLENBQUMsQ0FBVjtJQUNBLE9BQU9KLENBQVA7RUFDSDs7RUFDREssU0FBUyxDQUFDTCxDQUFELEVBQUlELENBQUosQ0FBVDs7RUFDQUMsQ0FBQyxDQUFDTSxTQUFGLENBQVlDLEtBQVosR0FBb0IsWUFBWTtJQUM1QixLQUFLQyxDQUFMO0VBQ0gsQ0FGRDs7RUFHQVIsQ0FBQyxDQUFDTSxTQUFGLENBQVlHLFFBQVosR0FBdUIsVUFBVVYsQ0FBVixFQUFhO0lBQ2hDLEtBQUtLLElBQUwsR0FBWUwsQ0FBWjtJQUNBLEtBQUtTLENBQUw7RUFDSCxDQUhEOztFQUlBUixDQUFDLENBQUNNLFNBQUYsQ0FBWUUsQ0FBWixHQUFnQixZQUFZO0lBQ3hCLFFBQVEsS0FBS0wsT0FBYixLQUF5QixLQUFLQSxPQUFMLENBQWFPLE1BQWIsR0FBc0IsS0FBS04sSUFBcEQ7RUFDSCxDQUZEOztFQUdBTyxVQUFVLENBQUMsQ0FBQ2YsQ0FBQyxDQUFDSixFQUFFLENBQUNvQixJQUFKLENBQUYsQ0FBRCxFQUFlWixDQUFDLENBQUNNLFNBQWpCLEVBQTRCLFNBQTVCLEVBQXVDLEtBQUssQ0FBNUMsQ0FBVjs7RUFDQSxPQUFPSyxVQUFVLENBQUMsQ0FBQ2pCLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0FwQk8sQ0FvQkxSLEVBQUUsQ0FBQ3FCLFNBcEJFLENBQVI7O0FBcUJBeEIsT0FBTyxXQUFQLEdBQWtCUyxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBhID0gY2MuX2RlY29yYXRvcjtcbnZhciBzID0gYS5jY2NsYXNzO1xudmFyIGMgPSBhLnByb3BlcnR5O1xudmFyIGwgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5zcHJOb2RlID0gbnVsbDtcbiAgICAgICAgZS5mbGFnID0gITA7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMudSgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuc2V0U3RhdGUgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0aGlzLmZsYWcgPSB0O1xuICAgICAgICB0aGlzLnUoKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIG51bGwgIT0gdGhpcy5zcHJOb2RlICYmICh0aGlzLnNwck5vZGUuYWN0aXZlID0gdGhpcy5mbGFnKTtcbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW2MoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJzcHJOb2RlXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW3NdLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSBsO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/skinRole.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c3f91k0OeBK2Z1h7DbieN6o', 'skinRole');
// scripts/skinRole.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _skinMgr = require("skinMgr");

var _skinItemBase = require("skinItemBase");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.roleNode = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    t.prototype.onLoad.call(this);
  };

  e.prototype.loadItem = function () {
    _skinMgr["default"].ins.updateRole(this.ref, this.roleNode);
  };

  e.prototype.clickItem = function () {
    var t;
    this.state !== _skinMgr.SkinState.using && (t = this.roleNode.children[0], this.openSkinInfo(t));
  };

  __decorate([u(cc.Node)], e.prototype, "roleNode", void 0);

  return __decorate([l], e);
}(_skinItemBase["default"]);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc2tpblJvbGUuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX3NraW5NZ3IiLCJyZXF1aXJlIiwiX3NraW5JdGVtQmFzZSIsImMiLCJjYyIsIl9kZWNvcmF0b3IiLCJsIiwiY2NjbGFzcyIsInUiLCJwcm9wZXJ0eSIsInAiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwicm9sZU5vZGUiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJvbkxvYWQiLCJjYWxsIiwibG9hZEl0ZW0iLCJpbnMiLCJ1cGRhdGVSb2xlIiwicmVmIiwiY2xpY2tJdGVtIiwic3RhdGUiLCJTa2luU3RhdGUiLCJ1c2luZyIsImNoaWxkcmVuIiwib3BlblNraW5JbmZvIiwiX19kZWNvcmF0ZSIsIk5vZGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsUUFBUSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFJQyxhQUFhLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTNCOztBQUNBLElBQUlFLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csUUFBRixHQUFhLElBQWI7SUFDQSxPQUFPSCxDQUFQO0VBQ0g7O0VBQ0RJLFNBQVMsQ0FBQ0osQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FDLENBQUMsQ0FBQ0ssU0FBRixDQUFZQyxNQUFaLEdBQXFCLFlBQVk7SUFDN0JQLENBQUMsQ0FBQ00sU0FBRixDQUFZQyxNQUFaLENBQW1CQyxJQUFuQixDQUF3QixJQUF4QjtFQUNILENBRkQ7O0VBR0FQLENBQUMsQ0FBQ0ssU0FBRixDQUFZRyxRQUFaLEdBQXVCLFlBQVk7SUFDL0JwQixRQUFRLFdBQVIsQ0FBaUJxQixHQUFqQixDQUFxQkMsVUFBckIsQ0FBZ0MsS0FBS0MsR0FBckMsRUFBMEMsS0FBS1IsUUFBL0M7RUFDSCxDQUZEOztFQUdBSCxDQUFDLENBQUNLLFNBQUYsQ0FBWU8sU0FBWixHQUF3QixZQUFZO0lBQ2hDLElBQUliLENBQUo7SUFDQSxLQUFLYyxLQUFMLEtBQWV6QixRQUFRLENBQUMwQixTQUFULENBQW1CQyxLQUFsQyxLQUE2Q2hCLENBQUMsR0FBRyxLQUFLSSxRQUFMLENBQWNhLFFBQWQsQ0FBdUIsQ0FBdkIsQ0FBTCxFQUFpQyxLQUFLQyxZQUFMLENBQWtCbEIsQ0FBbEIsQ0FBN0U7RUFDSCxDQUhEOztFQUlBbUIsVUFBVSxDQUFDLENBQUN0QixDQUFDLENBQUNKLEVBQUUsQ0FBQzJCLElBQUosQ0FBRixDQUFELEVBQWVuQixDQUFDLENBQUNLLFNBQWpCLEVBQTRCLFVBQTVCLEVBQXdDLEtBQUssQ0FBN0MsQ0FBVjs7RUFDQSxPQUFPYSxVQUFVLENBQUMsQ0FBQ3hCLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0FuQk8sQ0FtQkxWLGFBQWEsV0FuQlIsQ0FBUjs7QUFvQkFKLE9BQU8sV0FBUCxHQUFrQlksQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgX3NraW5NZ3IgPSByZXF1aXJlKFwic2tpbk1nclwiKTtcbnZhciBfc2tpbkl0ZW1CYXNlID0gcmVxdWlyZShcInNraW5JdGVtQmFzZVwiKTtcbnZhciBjID0gY2MuX2RlY29yYXRvcjtcbnZhciBsID0gYy5jY2NsYXNzO1xudmFyIHUgPSBjLnByb3BlcnR5O1xudmFyIHAgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5yb2xlTm9kZSA9IG51bGw7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUub25Mb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0LnByb3RvdHlwZS5vbkxvYWQuY2FsbCh0aGlzKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmxvYWRJdGVtID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfc2tpbk1nci5kZWZhdWx0Lmlucy51cGRhdGVSb2xlKHRoaXMucmVmLCB0aGlzLnJvbGVOb2RlKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmNsaWNrSXRlbSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQ7XG4gICAgICAgIHRoaXMuc3RhdGUgIT09IF9za2luTWdyLlNraW5TdGF0ZS51c2luZyAmJiAoKHQgPSB0aGlzLnJvbGVOb2RlLmNoaWxkcmVuWzBdKSwgdGhpcy5vcGVuU2tpbkluZm8odCkpO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbdShjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcInJvbGVOb2RlXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW2xdLCBlKTtcbn0pKF9za2luSXRlbUJhc2UuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSBwO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/skinBg.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7a56ebbKS9OsZ5A4r1830oM', 'skinBg');
// scripts/skinBg.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _skinMgr = require("skinMgr");

var _skinItemBase = require("skinItemBase");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.itemSp = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    t.prototype.onLoad.call(this);
  };

  e.prototype.loadItem = function () {
    _skinMgr["default"].ins.updateBg(this.ref, this.itemSp);
  };

  e.prototype.clickItem = function () {
    var t;
    this.state !== _skinMgr.SkinState.using && (t = this.itemSp.node, this.openSkinInfo(t));
  };

  __decorate([u(cc.Sprite)], e.prototype, "itemSp", void 0);

  return __decorate([l], e);
}(_skinItemBase["default"]);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc2tpbkJnLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9za2luTWdyIiwicmVxdWlyZSIsIl9za2luSXRlbUJhc2UiLCJjIiwiY2MiLCJfZGVjb3JhdG9yIiwibCIsImNjY2xhc3MiLCJ1IiwicHJvcGVydHkiLCJwIiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsIml0ZW1TcCIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsIm9uTG9hZCIsImNhbGwiLCJsb2FkSXRlbSIsImlucyIsInVwZGF0ZUJnIiwicmVmIiwiY2xpY2tJdGVtIiwic3RhdGUiLCJTa2luU3RhdGUiLCJ1c2luZyIsIm5vZGUiLCJvcGVuU2tpbkluZm8iLCJfX2RlY29yYXRlIiwiU3ByaXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBQ0EsSUFBSUMsYUFBYSxHQUFHRCxPQUFPLENBQUMsY0FBRCxDQUEzQjs7QUFDQSxJQUFJRSxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHTCxDQUFDLENBQUNNLFFBQVY7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFJLFVBQVVDLENBQVYsRUFBYTtFQUNsQixTQUFTQyxDQUFULEdBQWE7SUFDVCxJQUFJQSxDQUFDLEdBQUksU0FBU0QsQ0FBVCxJQUFjQSxDQUFDLENBQUNFLEtBQUYsQ0FBUSxJQUFSLEVBQWNDLFNBQWQsQ0FBZixJQUE0QyxJQUFwRDtJQUNBRixDQUFDLENBQUNHLE1BQUYsR0FBVyxJQUFYO0lBQ0EsT0FBT0gsQ0FBUDtFQUNIOztFQUNESSxTQUFTLENBQUNKLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNLLFNBQUYsQ0FBWUMsTUFBWixHQUFxQixZQUFZO0lBQzdCUCxDQUFDLENBQUNNLFNBQUYsQ0FBWUMsTUFBWixDQUFtQkMsSUFBbkIsQ0FBd0IsSUFBeEI7RUFDSCxDQUZEOztFQUdBUCxDQUFDLENBQUNLLFNBQUYsQ0FBWUcsUUFBWixHQUF1QixZQUFZO0lBQy9CcEIsUUFBUSxXQUFSLENBQWlCcUIsR0FBakIsQ0FBcUJDLFFBQXJCLENBQThCLEtBQUtDLEdBQW5DLEVBQXdDLEtBQUtSLE1BQTdDO0VBQ0gsQ0FGRDs7RUFHQUgsQ0FBQyxDQUFDSyxTQUFGLENBQVlPLFNBQVosR0FBd0IsWUFBWTtJQUNoQyxJQUFJYixDQUFKO0lBQ0EsS0FBS2MsS0FBTCxLQUFlekIsUUFBUSxDQUFDMEIsU0FBVCxDQUFtQkMsS0FBbEMsS0FBNkNoQixDQUFDLEdBQUcsS0FBS0ksTUFBTCxDQUFZYSxJQUFqQixFQUF3QixLQUFLQyxZQUFMLENBQWtCbEIsQ0FBbEIsQ0FBcEU7RUFDSCxDQUhEOztFQUlBbUIsVUFBVSxDQUFDLENBQUN0QixDQUFDLENBQUNKLEVBQUUsQ0FBQzJCLE1BQUosQ0FBRixDQUFELEVBQWlCbkIsQ0FBQyxDQUFDSyxTQUFuQixFQUE4QixRQUE5QixFQUF3QyxLQUFLLENBQTdDLENBQVY7O0VBQ0EsT0FBT2EsVUFBVSxDQUFDLENBQUN4QixDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBbkJPLENBbUJMVixhQUFhLFdBbkJSLENBQVI7O0FBb0JBSixPQUFPLFdBQVAsR0FBa0JZLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9za2luTWdyID0gcmVxdWlyZShcInNraW5NZ3JcIik7XG52YXIgX3NraW5JdGVtQmFzZSA9IHJlcXVpcmUoXCJza2luSXRlbUJhc2VcIik7XG52YXIgYyA9IGNjLl9kZWNvcmF0b3I7XG52YXIgbCA9IGMuY2NjbGFzcztcbnZhciB1ID0gYy5wcm9wZXJ0eTtcbnZhciBwID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuaXRlbVNwID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgfVxuICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICBlLnByb3RvdHlwZS5vbkxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHQucHJvdG90eXBlLm9uTG9hZC5jYWxsKHRoaXMpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUubG9hZEl0ZW0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF9za2luTWdyLmRlZmF1bHQuaW5zLnVwZGF0ZUJnKHRoaXMucmVmLCB0aGlzLml0ZW1TcCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5jbGlja0l0ZW0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0O1xuICAgICAgICB0aGlzLnN0YXRlICE9PSBfc2tpbk1nci5Ta2luU3RhdGUudXNpbmcgJiYgKCh0ID0gdGhpcy5pdGVtU3Aubm9kZSksIHRoaXMub3BlblNraW5JbmZvKHQpKTtcbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW3UoY2MuU3ByaXRlKV0sIGUucHJvdG90eXBlLCBcIml0ZW1TcFwiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtsXSwgZSk7XG59KShfc2tpbkl0ZW1CYXNlLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gcDtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/tb.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b3b25KMz3pN65/TF12QdPWO', 'tb');
// scripts/tb.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _ali = require("ali");

var _uData = require("uData");

var _evts = require("evts");

var _pConst = require("pConst");

var _sound = require("sound");

var _idx = require("idx");

var _time = require("time");

var _ali = require("ali");

var h = function (t) {
  function e() {
    return t.call(this) || this;
  }

  __extends(e, t);

  Object.defineProperty(e.prototype, "appId", {
    get: function get() {
      return "3000000107678912";
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.string = function () {
    return _pConst.PFCode.TaoBao;
  };

  e.prototype.login = function () {
    return Promise.resolve();
  };

  e.prototype.initAliListener = function () {
    var t = this;

    _ali.my.onShow(function (e) {
      _evts["default"].plE.emit({
        onShow: !0,
        isSharing: t.isSharing
      }), _uData["default"].ins.syncLaunchOption(e), t.isSharing || t.reenter(), t.bySlider = "gamecenter" == e.query.sourceChannel, _evts["default"].opE.emit({
        action: _evts["default"].Slider_Chg
      });
    });

    _ali.my.onHide(function () {
      t.onHideT = _time["default"].ins.serverTime;

      _evts["default"].plE.emit({
        onHide: !0
      });
    });

    var e = _pConst.SDKConfig.shareData();

    this.canUse("8.8.0") && (_ali.my.onShareAppMessage = function () {
      return {
        title: e.title,
        desc: "",
        imageUrl: "https://tjkj300.oss-cn-shenzhen.aliyuncs.com/web/tjkj300web/other/share.jpg"
      };
    });
    _ali.my.onMemoryWarning && _ali.my.onMemoryWarning(function () {
      _ali.my.triggerGC && _ali.my.triggerGC();
    });
  };

  e.prototype.initCommonSetting = function () {
    _ali.my.getNetworkType({
      success: function success() {},
      fail: function fail() {}
    });

    _evts["default"].chE.on(function () {});
  };

  e.prototype.syncTime = function () {
    return new Promise(function (t) {
      var e = _idx.platform.cloud;
      e ? e.callContainer({
        path: "/api/gTime",
        init: {
          method: "GET",
          header: {
            "content-type": "application/json"
          },
          timeout: 2e3
        },
        success: function success(e) {
          var o;
          var n = e.data;
          if (n) if ("string" == typeof n) try {
            o = JSON.parse(n).t;
          } catch (e) {} else o = n.t;
          t(o || null);
        },
        fail: function fail() {
          return t(null);
        }
      }) : t(null);
    });
  };

  e.prototype.doWatchAD = function () {};

  e.prototype.share = function () {
    return new Promise(function (t) {
      _ali.my.showSharePanel({
        from: "code",
        success: function success() {
          _sound["default"].ins.playBGM();

          t(1);
        },
        fail: function fail(e) {
          console.error("alisharedata fail:", e);

          _sound["default"].ins.playBGM();

          t(0);
        }
      });
    });
  };

  return e;
}(_ali["default"]);

exports["default"] = h;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/questItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5625bI4JLpBOohvs4j5MumY', 'questItem');
// scripts/questItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _veBtn = require("veBtn");

var _lang = require("lang");

var _panelMgr = require("panelMgr");

var _taskMgr = require("taskMgr");

var _loading = require("loading");

var _item = require("item");

var y = cc._decorator;
var m = y.ccclass;
var v = y.property;

var _ = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.nameLbl = null;
    e.itemsNode = null;
    e.itemPrefab = null;
    e.pro = null;
    e.proLbl = null;
    e.getBtnNode = null;
    e.goBtnNode = null;
    e.adNode = null;
    e.goImgNode = null;
    e.scrollView = null;
    e.getedNode = null;
    e.questPool = new cc.NodePool(_item["default"]);
    e.eventFunc = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    for (var e in this._taskData = t, this.nameLbl.string = _lang.lang[t.temp.key], this.nameLbl.font = _loading.DEFAULTFONT, this.pro.progress = 0, this.scrollView.node.width = 360, cc.tween(this.pro).to(0.5, {
      progress: t.data.count / t.temp.nums
    }).start(), this.proLbl.string = t.data.count + "/" + t.temp.nums, t.temp.val) {
      if (t.temp.val.hasOwnProperty(e)) {
        var o = this.questPool.get();
        o || (o = cc.instantiate(this.itemPrefab));
        this.scrollView.content.addChild(o);
        o.getComponent(_item["default"]).init(t.temp, e);
      }
    }

    var n = this.scrollView.content.children[0].width * this.scrollView.content.childrenCount;

    if (this.scrollView.node.x = n > this.scrollView.node.width ? -283 : (this.scrollView.node.width - n) / 2 - 283, n = Math.min(n, 360), this.scrollView.node.width = n, this.scrollView.scrollToLeft(), this.adNode.active = !1, this.goImgNode.x = 0, this.goBtnNode.getComponent(_veBtn["default"]) && this.goBtnNode.removeComponent(_veBtn["default"]), t.temp.get_by == _taskMgr.TaskType.ad_reward) {
      var i = this.goBtnNode.addComponent(_veBtn["default"]);
      var r = new cc.Component.EventHandler();
      r.target = this.node;
      r.component = "questItem";
      r.handler = "onWatchEnd";
      "task_1" == t.temp.key && (r.customEventData = "每日任务-道具礼包");
      i.onWatchEndEvent = r;
      this.adNode.active = !0;
      this.goImgNode.x = 25;
    }

    this.goBtnNode.active = this._taskData.data.state === _taskMgr.taskState.Receive;
    this.getBtnNode.active = this._taskData.data.state === _taskMgr.taskState.Finish;
    this.getedNode.active = this._taskData.data.state === _taskMgr.taskState.Rewared;
  };

  e.prototype.updateTask = function (t) {
    t && t.temp.key == this._taskData.temp.key && (this._taskData = t, cc.tween(this.pro).to(0.5, {
      progress: t.data.count / t.temp.nums
    }).start(), this.proLbl.string = t.data.count + "/" + t.temp.nums, this.goBtnNode.active = this._taskData.data.state === _taskMgr.taskState.Receive, this.getBtnNode.active = this._taskData.data.state === _taskMgr.taskState.Finish, this.getedNode.active = this._taskData.data.state === _taskMgr.taskState.Rewared);
  };

  e.prototype.unuse = function () {
    var t = this;
    this.scrollView.content.children.forEach(function (e) {
      t.questPool.put(e);
    });
    this.scrollView.content.removeAllChildren();
  };

  e.prototype.reuse = function () {};

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].UPDTASK:
        this.updateTask(t.data);
    }
  };

  e.prototype.onEnable = function () {
    this.goBtnNode.on("click", this.jumpPage, this);
    this.getBtnNode.on("click", this.onAward, this);
    this.eventFunc = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eventFunc);
  };

  e.prototype.onDisable = function () {
    this.goBtnNode.off("click", this.jumpPage, this);
    this.getBtnNode.off("click", this.onAward, this);

    _evts["default"].opE.off(this.eventFunc);

    this.eventFunc = null;
  };

  e.prototype.jumpPage = function (t) {
    var e;
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (o) {
        switch (o.label) {
          case 0:
            if (this._taskData.data.state != _taskMgr.taskState.Receive) return [2];

            switch (this._taskData.temp.get_by) {
              case "ad_reward":
                return [3, 1];

              case "cg_line":
                return [3, 2];

              case "qw_line":
                return [3, 3];

              case "daily_challenge":
                return [3, 4];

              case "share":
                return [3, 5];
            }

            return [3, 7];

          case 1:
            return null === (e = this.goBtnNode.getComponent(_veBtn["default"])) || void 0 === e || e.onClick(t), [3, 8];

          case 2:
            return _panelMgr["default"].ins.closeAllPanel(), _evts["default"].opE.emit({
              action: _evts["default"].MAINJUMP,
              data: 2
            }), [3, 8];

          case 3:
            return _panelMgr["default"].ins.closeAllPanel(), _evts["default"].opE.emit({
              action: _evts["default"].MAINJUMP,
              data: 4
            }), [3, 8];

          case 4:
            return _panelMgr["default"].ins.closeAllPanel(), _evts["default"].opE.emit({
              action: _evts["default"].MAINJUMP,
              data: 3
            }), [3, 8];

          case 5:
            return [4, _idx.platform.share()];

          case 6:
            return o.sent() && _taskMgr["default"].doTask(this._taskData.temp.key), [3, 8];

          case 7:
            return [3, 8];

          case 8:
            return [2];
        }
      });
    });
  };

  Object.defineProperty(e.prototype, "taskData", {
    get: function get() {
      return this._taskData;
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.onAward = function () {
    _taskMgr["default"].updateTask(this._taskData);

    for (var t = [], e = this.scrollView.content.childrenCount - 1; e >= 0; e--) {
      var o = this.scrollView.content.children[e];
      var n = o.parent.convertToWorldSpaceAR(o.position);
      var i = {};
      i.itemId = o.getComponent(_item["default"]).key;
      i.worldPos = n;
      i.value = o.getComponent(_item["default"]).count;
      t.push(i);
    }

    _panelMgr["default"].ins.open("ui/ui_flyAni", {
      itemDatas: t
    });
  };

  e.prototype.onWatchEnd = function () {
    cc.log("广告的回调");

    _taskMgr["default"].doTask(this._taskData.temp.key);
  };

  __decorate([v(cc.Label)], e.prototype, "nameLbl", void 0);

  __decorate([v(cc.Node)], e.prototype, "itemsNode", void 0);

  __decorate([v(cc.Prefab)], e.prototype, "itemPrefab", void 0);

  __decorate([v(cc.ProgressBar)], e.prototype, "pro", void 0);

  __decorate([v(cc.Label)], e.prototype, "proLbl", void 0);

  __decorate([v(cc.Node)], e.prototype, "getBtnNode", void 0);

  __decorate([v(cc.Node)], e.prototype, "goBtnNode", void 0);

  __decorate([v(cc.Node)], e.prototype, "adNode", void 0);

  __decorate([v(cc.Node)], e.prototype, "goImgNode", void 0);

  __decorate([v(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([v(cc.Node)], e.prototype, "getedNode", void 0);

  return __decorate([m], e);
}(cc.Component);

exports["default"] = _;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/tipMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a83eevdkoxFOaQQ5jw2Zqgx', 'tipMgr');
// scripts/tipMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _res = require("res");

var _ui_tip = require("ui_tip");

var r = function () {
  function t() {
    if (this.iL = !1, this.tipN = null, t._ins) throw new Error("tipMgr can only be one！");
    t._ins = this;
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      t._ins || new t();
      return t._ins;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.showTip = function (t, e) {
    var o = this;
    this.showStr = t;
    this.isSystemFont = e;
    this.iL || (cc.isValid(this.tipN) ? this.onShow() : (this.iL = !0, _res["default"].ins.lPre("prefab/tip").then(function (t) {
      o.tipN = cc.instantiate(t);
      o.onShow();
      o.iL = !1;
    })["catch"](function () {
      console.error("getPrefabErr");
    })));
  };

  t.prototype.onShow = function () {
    if (this.showStr) {
      var t = cc.director.getScene().getChildByName("Canvas");

      if (t) {
        var e = t.getChildByName("tipManager");
        e || (e = new cc.Node("tipManager"), t.addChild(e));
        this.tipN.parent || e.addChild(this.tipN);
        e.setPosition(cc.v2());
        this.tipN.getComponent(_ui_tip["default"]).init(this.showStr, this.isSystemFont);
      }
    }
  };

  return t;
}();

exports["default"] = r;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdGlwTWdyLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX3JlcyIsInJlcXVpcmUiLCJfdWlfdGlwIiwiciIsInQiLCJpTCIsInRpcE4iLCJfaW5zIiwiRXJyb3IiLCJnZXQiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwicHJvdG90eXBlIiwic2hvd1RpcCIsImUiLCJvIiwic2hvd1N0ciIsImlzU3lzdGVtRm9udCIsImNjIiwiaXNWYWxpZCIsIm9uU2hvdyIsImlucyIsImxQcmUiLCJ0aGVuIiwiaW5zdGFudGlhdGUiLCJjb25zb2xlIiwiZXJyb3IiLCJkaXJlY3RvciIsImdldFNjZW5lIiwiZ2V0Q2hpbGRCeU5hbWUiLCJOb2RlIiwiYWRkQ2hpbGQiLCJwYXJlbnQiLCJzZXRQb3NpdGlvbiIsInYyIiwiZ2V0Q29tcG9uZW50IiwiaW5pdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJRSxDQUFDLEdBQUksWUFBWTtFQUNqQixTQUFTQyxDQUFULEdBQWE7SUFDVCxJQUFNLEtBQUtDLEVBQUwsR0FBVSxDQUFDLENBQVosRUFBaUIsS0FBS0MsSUFBTCxHQUFZLElBQTdCLEVBQW9DRixDQUFDLENBQUNHLElBQTNDLEVBQWtELE1BQU0sSUFBSUMsS0FBSixDQUFVLHlCQUFWLENBQU47SUFDbERKLENBQUMsQ0FBQ0csSUFBRixHQUFTLElBQVQ7RUFDSDs7RUFDRFgsTUFBTSxDQUFDQyxjQUFQLENBQXNCTyxDQUF0QixFQUF5QixLQUF6QixFQUFnQztJQUM1QkssR0FBRyxFQUFFLGVBQVk7TUFDYkwsQ0FBQyxDQUFDRyxJQUFGLElBQVUsSUFBSUgsQ0FBSixFQUFWO01BQ0EsT0FBT0EsQ0FBQyxDQUFDRyxJQUFUO0lBQ0gsQ0FKMkI7SUFLNUJHLFVBQVUsRUFBRSxDQUFDLENBTGU7SUFNNUJDLFlBQVksRUFBRSxDQUFDO0VBTmEsQ0FBaEM7O0VBUUFQLENBQUMsQ0FBQ1EsU0FBRixDQUFZQyxPQUFaLEdBQXNCLFVBQVVULENBQVYsRUFBYVUsQ0FBYixFQUFnQjtJQUNsQyxJQUFJQyxDQUFDLEdBQUcsSUFBUjtJQUNBLEtBQUtDLE9BQUwsR0FBZVosQ0FBZjtJQUNBLEtBQUthLFlBQUwsR0FBb0JILENBQXBCO0lBQ0EsS0FBS1QsRUFBTCxLQUNLYSxFQUFFLENBQUNDLE9BQUgsQ0FBVyxLQUFLYixJQUFoQixJQUNLLEtBQUtjLE1BQUwsRUFETCxJQUVPLEtBQUtmLEVBQUwsR0FBVSxDQUFDLENBQVosRUFDREwsSUFBSSxXQUFKLENBQWFxQixHQUFiLENBQ0tDLElBREwsQ0FDVSxZQURWLEVBRUtDLElBRkwsQ0FFVSxVQUFVbkIsQ0FBVixFQUFhO01BQ2ZXLENBQUMsQ0FBQ1QsSUFBRixHQUFTWSxFQUFFLENBQUNNLFdBQUgsQ0FBZXBCLENBQWYsQ0FBVDtNQUNBVyxDQUFDLENBQUNLLE1BQUY7TUFDQUwsQ0FBQyxDQUFDVixFQUFGLEdBQU8sQ0FBQyxDQUFSO0lBQ0gsQ0FOTCxXQU9XLFlBQVk7TUFDZm9CLE9BQU8sQ0FBQ0MsS0FBUixDQUFjLGNBQWQ7SUFDSCxDQVRMLENBSEwsQ0FETDtFQWNILENBbEJEOztFQW1CQXRCLENBQUMsQ0FBQ1EsU0FBRixDQUFZUSxNQUFaLEdBQXFCLFlBQVk7SUFDN0IsSUFBSSxLQUFLSixPQUFULEVBQWtCO01BQ2QsSUFBSVosQ0FBQyxHQUFHYyxFQUFFLENBQUNTLFFBQUgsQ0FBWUMsUUFBWixHQUF1QkMsY0FBdkIsQ0FBc0MsUUFBdEMsQ0FBUjs7TUFDQSxJQUFJekIsQ0FBSixFQUFPO1FBQ0gsSUFBSVUsQ0FBQyxHQUFHVixDQUFDLENBQUN5QixjQUFGLENBQWlCLFlBQWpCLENBQVI7UUFDQWYsQ0FBQyxLQUFNQSxDQUFDLEdBQUcsSUFBSUksRUFBRSxDQUFDWSxJQUFQLENBQVksWUFBWixDQUFMLEVBQWlDMUIsQ0FBQyxDQUFDMkIsUUFBRixDQUFXakIsQ0FBWCxDQUF0QyxDQUFEO1FBQ0EsS0FBS1IsSUFBTCxDQUFVMEIsTUFBVixJQUFvQmxCLENBQUMsQ0FBQ2lCLFFBQUYsQ0FBVyxLQUFLekIsSUFBaEIsQ0FBcEI7UUFDQVEsQ0FBQyxDQUFDbUIsV0FBRixDQUFjZixFQUFFLENBQUNnQixFQUFILEVBQWQ7UUFDQSxLQUFLNUIsSUFBTCxDQUFVNkIsWUFBVixDQUF1QmpDLE9BQU8sV0FBOUIsRUFBd0NrQyxJQUF4QyxDQUE2QyxLQUFLcEIsT0FBbEQsRUFBMkQsS0FBS0MsWUFBaEU7TUFDSDtJQUNKO0VBQ0osQ0FYRDs7RUFZQSxPQUFPYixDQUFQO0FBQ0gsQ0E3Q08sRUFBUjs7QUE4Q0FOLE9BQU8sV0FBUCxHQUFrQkssQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9yZXMgPSByZXF1aXJlKFwicmVzXCIpO1xudmFyIF91aV90aXAgPSByZXF1aXJlKFwidWlfdGlwXCIpO1xudmFyIHIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHQoKSB7XG4gICAgICAgIGlmICgoKHRoaXMuaUwgPSAhMSksICh0aGlzLnRpcE4gPSBudWxsKSwgdC5faW5zKSkgdGhyb3cgbmV3IEVycm9yKFwidGlwTWdyIGNhbiBvbmx5IGJlIG9uZe+8gVwiKTtcbiAgICAgICAgdC5faW5zID0gdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwiaW5zXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0Ll9pbnMgfHwgbmV3IHQoKTtcbiAgICAgICAgICAgIHJldHVybiB0Ll9pbnM7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6ICExLFxuICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgfSk7XG4gICAgdC5wcm90b3R5cGUuc2hvd1RpcCA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIHZhciBvID0gdGhpcztcbiAgICAgICAgdGhpcy5zaG93U3RyID0gdDtcbiAgICAgICAgdGhpcy5pc1N5c3RlbUZvbnQgPSBlO1xuICAgICAgICB0aGlzLmlMIHx8XG4gICAgICAgICAgICAoY2MuaXNWYWxpZCh0aGlzLnRpcE4pXG4gICAgICAgICAgICAgICAgPyB0aGlzLm9uU2hvdygpXG4gICAgICAgICAgICAgICAgOiAoKHRoaXMuaUwgPSAhMCksXG4gICAgICAgICAgICAgICAgICBfcmVzLmRlZmF1bHQuaW5zXG4gICAgICAgICAgICAgICAgICAgICAgLmxQcmUoXCJwcmVmYWIvdGlwXCIpXG4gICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgby50aXBOID0gY2MuaW5zdGFudGlhdGUodCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG8ub25TaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG8uaUwgPSAhMTtcbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJnZXRQcmVmYWJFcnJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgfSkpKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLm9uU2hvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuc2hvd1N0cikge1xuICAgICAgICAgICAgdmFyIHQgPSBjYy5kaXJlY3Rvci5nZXRTY2VuZSgpLmdldENoaWxkQnlOYW1lKFwiQ2FudmFzXCIpO1xuICAgICAgICAgICAgaWYgKHQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZSA9IHQuZ2V0Q2hpbGRCeU5hbWUoXCJ0aXBNYW5hZ2VyXCIpO1xuICAgICAgICAgICAgICAgIGUgfHwgKChlID0gbmV3IGNjLk5vZGUoXCJ0aXBNYW5hZ2VyXCIpKSwgdC5hZGRDaGlsZChlKSk7XG4gICAgICAgICAgICAgICAgdGhpcy50aXBOLnBhcmVudCB8fCBlLmFkZENoaWxkKHRoaXMudGlwTik7XG4gICAgICAgICAgICAgICAgZS5zZXRQb3NpdGlvbihjYy52MigpKTtcbiAgICAgICAgICAgICAgICB0aGlzLnRpcE4uZ2V0Q29tcG9uZW50KF91aV90aXAuZGVmYXVsdCkuaW5pdCh0aGlzLnNob3dTdHIsIHRoaXMuaXNTeXN0ZW1Gb250KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHQ7XG59KSgpO1xuZXhwb3J0cy5kZWZhdWx0ID0gcjtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/sound.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9e58fSpOr5KX6wp5ukpL3BX', 'sound');
// scripts/sound.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _pInfo = require("pInfo");

var _c = require("c");

var _evts = require("evts");

var _uData = require("uData");

var l = function () {
  function t() {
    this.isSharing = !1;
    this.isHiding = !1;
    this.delayID = 0;
    this.clips = {};

    _evts["default"].plE.on(function (e) {
      e.onShow ? (t.ins.isHiding = !1, t.ins.onSoundChange()) : e.onHide && (t.ins.isHiding = !0, t.ins.onSoundChange());
    });

    _evts["default"].adE.on(function (e) {
      t.ins.isSharing = e == _c.ADE.SHARE || e == _c.ADE.VIDEO;
      t.ins.onSoundChange();
    });
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      this._ins || (this._ins = new t());
      return this._ins;
    },
    enumerable: !1,
    configurable: !0
  });
  Object.defineProperty(t.prototype, "bgmVolume", {
    get: function get() {
      void 0 === this._bgmVolume && (this._bgmVolume = _uData["default"].ins.getSetting().bgmVolume);
      return this._bgmVolume;
    },
    set: function set(t) {
      cc.audioEngine.setMusicVolume(t);
      this._bgmVolume = t;
    },
    enumerable: !1,
    configurable: !0
  });
  Object.defineProperty(t.prototype, "effectVolume", {
    get: function get() {
      void 0 === this._effectVolume && (this._effectVolume = _uData["default"].ins.getSetting().effectVolume);
      return this._effectVolume;
    },
    set: function set(t) {
      this._effectVolume = t;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.onSoundChange = function () {
    clearTimeout(this.delayID);
    this.delayID = setTimeout(function () {
      clearTimeout(t.ins.delayID);
      t.ins.delayID = 0;
      t.ins.isSharing || t.ins.isHiding ? t.ins.stopAll() : t.ins.resumeAll();
    }, 100);
  };

  t.prototype.stopAllEffects = function () {
    cc.audioEngine.stopAllEffects();
  };

  t.prototype.resumeAll = function () {
    cc.audioEngine.resumeMusic();
    cc.audioEngine.resumeAllEffects();
  };

  t.prototype.stopAll = function () {
    cc.audioEngine.stopMusic();
    cc.audioEngine.stopAllEffects();
  };

  t.prototype.play = function (t, e) {
    void 0 === e && (e = 0);
    return __awaiter(this, void 0, void 0, function () {
      var o;
      var n;
      var r;
      return __generator(this, function (i) {
        switch (i.label) {
          case 0:
            return !1 !== _uData["default"].ins.getSetting().effectSound && null != t ? [3, 1] : [2];

          case 1:
            return e = Math.max(1, Math.min(0, e)), t instanceof cc.AudioClip ? (o = t, [3, 5]) : [3, 2];

          case 2:
            return null != this.clips[t] ? [3, 4] : (n = this.clips, r = t, [4, new Promise(function (e) {
              cc.assetManager.loadBundle("sound", function (o, n) {
                o ? e(o) : n.load(t, cc.AudioClip, function (t, o) {
                  e(t ? null : o);
                });
              });
            })]);

          case 3:
            return o = n[r] = i.sent(), [3, 5];

          case 4:
            o = this.clips[t], i.label = 5;

          case 5:
            return o ? (cc.audioEngine.playEffect(o, !1), cc.audioEngine.setEffectsVolume(e * this.effectVolume), [2, o.duration]) : [2];

          case 6:
            return [2];
        }
      });
    });
  };

  t.prototype.playBGM = function () {
    return __awaiter(this, void 0, void 0, function () {
      var e;
      var o;
      var n = this;
      return __generator(this, function () {
        return 0 == (e = _uData["default"].ins.getSetting().bgmSound) ? [2] : (o = _pInfo.ROOT == _pInfo.sceneType.game || _pInfo.ROOT == _pInfo.sceneType.guide ? "Game" : "Main", cc.assetManager.loadBundle("sound", function (i, r) {
          i || r.load(t.BGM + o, cc.AudioClip, function (t, i) {
            if (!t) {
              var r = cc.audioEngine;
              n.curBg == o && r.isMusicPlaying() || !e || (n.curBg = o, r.playMusic(i, !0), r.setMusicVolume(n.bgmVolume));
            }
          });
        }), [2]);
      });
    });
  };

  t.prototype.stopBGM = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return _uData["default"].ins.getSetting().bgmSound && !t ? [2] : (cc.audioEngine.stopMusic(), [2]);
      });
    });
  };

  t.CLICK = "click";
  t.BGM = "BGM";
  t.WIN = "win";
  t.LOSE = "lose";
  t.RIGHT = "right";
  t.ERROR = "error";
  t.SHOVEL = "shovel";
  t.ROCKETLAUNCH = "rocketLaunch";
  t.ROCKETATTACK = "rocketAttack";
  t.TIME = "time";
  t.FINISH_PUZZLE = "finish_puzzle";
  return t;
}();

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc291bmQuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfcEluZm8iLCJyZXF1aXJlIiwiX2MiLCJfZXZ0cyIsIl91RGF0YSIsImwiLCJ0IiwiaXNTaGFyaW5nIiwiaXNIaWRpbmciLCJkZWxheUlEIiwiY2xpcHMiLCJwbEUiLCJvbiIsImUiLCJvblNob3ciLCJpbnMiLCJvblNvdW5kQ2hhbmdlIiwib25IaWRlIiwiYWRFIiwiQURFIiwiU0hBUkUiLCJWSURFTyIsImdldCIsIl9pbnMiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwicHJvdG90eXBlIiwiX2JnbVZvbHVtZSIsImdldFNldHRpbmciLCJiZ21Wb2x1bWUiLCJzZXQiLCJjYyIsImF1ZGlvRW5naW5lIiwic2V0TXVzaWNWb2x1bWUiLCJfZWZmZWN0Vm9sdW1lIiwiZWZmZWN0Vm9sdW1lIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsInN0b3BBbGwiLCJyZXN1bWVBbGwiLCJzdG9wQWxsRWZmZWN0cyIsInJlc3VtZU11c2ljIiwicmVzdW1lQWxsRWZmZWN0cyIsInN0b3BNdXNpYyIsInBsYXkiLCJfX2F3YWl0ZXIiLCJvIiwibiIsInIiLCJfX2dlbmVyYXRvciIsImkiLCJsYWJlbCIsImVmZmVjdFNvdW5kIiwiTWF0aCIsIm1heCIsIm1pbiIsIkF1ZGlvQ2xpcCIsIlByb21pc2UiLCJhc3NldE1hbmFnZXIiLCJsb2FkQnVuZGxlIiwibG9hZCIsInNlbnQiLCJwbGF5RWZmZWN0Iiwic2V0RWZmZWN0c1ZvbHVtZSIsImR1cmF0aW9uIiwicGxheUJHTSIsImJnbVNvdW5kIiwiUk9PVCIsInNjZW5lVHlwZSIsImdhbWUiLCJndWlkZSIsIkJHTSIsImN1ckJnIiwiaXNNdXNpY1BsYXlpbmciLCJwbGF5TXVzaWMiLCJzdG9wQkdNIiwiQ0xJQ0siLCJXSU4iLCJMT1NFIiwiUklHSFQiLCJFUlJPUiIsIlNI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QUM0RSxZQUFGLEdBQWlCLGNBQWpCO0VBQ0E1RSxDQUFDLENBQUM2RSxZQUFGLEdBQWlCLGNBQWpCO0VBQ0E3RSxDQUFDLENBQUM4RSxJQUFGLEdBQVMsTUFBVDtFQUNBOUUsQ0FBQyxDQUFDK0UsYUFBRixHQUFrQixlQUFsQjtFQUNBLE9BQU8vRSxDQUFQO0FBQ0gsQ0EvSk8sRUFBUjs7QUFnS0FSLE9BQU8sV0FBUCxHQUFrQk8sQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9wSW5mbyA9IHJlcXVpcmUoXCJwSW5mb1wiKTtcbnZhciBfYyA9IHJlcXVpcmUoXCJjXCIpO1xudmFyIF9ldnRzID0gcmVxdWlyZShcImV2dHNcIik7XG52YXIgX3VEYXRhID0gcmVxdWlyZShcInVEYXRhXCIpO1xudmFyIGwgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHQoKSB7XG4gICAgICAgIHRoaXMuaXNTaGFyaW5nID0gITE7XG4gICAgICAgIHRoaXMuaXNIaWRpbmcgPSAhMTtcbiAgICAgICAgdGhpcy5kZWxheUlEID0gMDtcbiAgICAgICAgdGhpcy5jbGlwcyA9IHt9O1xuICAgICAgICBfZXZ0cy5kZWZhdWx0LnBsRS5vbihmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5vblNob3dcbiAgICAgICAgICAgICAgICA/ICgodC5pbnMuaXNIaWRpbmcgPSAhMSksIHQuaW5zLm9uU291bmRDaGFuZ2UoKSlcbiAgICAgICAgICAgICAgICA6IGUub25IaWRlICYmICgodC5pbnMuaXNIaWRpbmcgPSAhMCksIHQuaW5zLm9uU291bmRDaGFuZ2UoKSk7XG4gICAgICAgIH0pO1xuICAgICAgICBfZXZ0cy5kZWZhdWx0LmFkRS5vbihmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdC5pbnMuaXNTaGFyaW5nID0gZSA9PSBfYy5BREUuU0hBUkUgfHwgZSA9PSBfYy5BREUuVklERU87XG4gICAgICAgICAgICB0Lmlucy5vblNvdW5kQ2hhbmdlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJpbnNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuX2lucyB8fCAodGhpcy5faW5zID0gbmV3IHQoKSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faW5zO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiAhMSxcbiAgICAgICAgY29uZmlndXJhYmxlOiAhMFxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSwgXCJiZ21Wb2x1bWVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZvaWQgMCA9PT0gdGhpcy5fYmdtVm9sdW1lICYmICh0aGlzLl9iZ21Wb2x1bWUgPSBfdURhdGEuZGVmYXVsdC5pbnMuZ2V0U2V0dGluZygpLmJnbVZvbHVtZSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYmdtVm9sdW1lO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICBjYy5hdWRpb0VuZ2luZS5zZXRNdXNpY1ZvbHVtZSh0KTtcbiAgICAgICAgICAgIHRoaXMuX2JnbVZvbHVtZSA9IHQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6ICExLFxuICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLCBcImVmZmVjdFZvbHVtZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdm9pZCAwID09PSB0aGlzLl9lZmZlY3RWb2x1bWUgJiYgKHRoaXMuX2VmZmVjdFZvbHVtZSA9IF91RGF0YS5kZWZhdWx0Lmlucy5nZXRTZXR0aW5nKCkuZWZmZWN0Vm9sdW1lKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9lZmZlY3RWb2x1bWU7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIHRoaXMuX2VmZmVjdFZvbHVtZSA9IHQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6ICExLFxuICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgfSk7XG4gICAgdC5wcm90b3R5cGUub25Tb3VuZENoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuZGVsYXlJRCk7XG4gICAgICAgIHRoaXMuZGVsYXlJRCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHQuaW5zLmRlbGF5SUQpO1xuICAgICAgICAgICAgdC5pbnMuZGVsYXlJRCA9IDA7XG4gICAgICAgICAgICB0Lmlucy5pc1NoYXJpbmcgfHwgdC5pbnMuaXNIaWRpbmcgPyB0Lmlucy5zdG9wQWxsKCkgOiB0Lmlucy5yZXN1bWVBbGwoKTtcbiAgICAgICAgfSwgMTAwKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnN0b3BBbGxFZmZlY3RzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBjYy5hdWRpb0VuZ2luZS5zdG9wQWxsRWZmZWN0cygpO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUucmVzdW1lQWxsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBjYy5hdWRpb0VuZ2luZS5yZXN1bWVNdXNpYygpO1xuICAgICAgICBjYy5hdWRpb0VuZ2luZS5yZXN1bWVBbGxFZmZlY3RzKCk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5zdG9wQWxsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBjYy5hdWRpb0VuZ2luZS5zdG9wTXVzaWMoKTtcbiAgICAgICAgY2MuYXVkaW9FbmdpbmUuc3RvcEFsbEVmZmVjdHMoKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnBsYXkgPSBmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICB2b2lkIDAgPT09IGUgJiYgKGUgPSAwKTtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG87XG4gICAgICAgICAgICB2YXIgbjtcbiAgICAgICAgICAgIHZhciByO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChpLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhMSAhPT0gX3VEYXRhLmRlZmF1bHQuaW5zLmdldFNldHRpbmcoKS5lZmZlY3RTb3VuZCAmJiBudWxsICE9IHQgPyBbMywgMV0gOiBbMl07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGUgPSBNYXRoLm1heCgxLCBNYXRoLm1pbigwLCBlKSkpLCB0IGluc3RhbmNlb2YgY2MuQXVkaW9DbGlwID8gKChvID0gdCksIFszLCA1XSkgOiBbMywgMl1cbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsICE9IHRoaXMuY2xpcHNbdF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFszLCA0XVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogKChuID0gdGhpcy5jbGlwcyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAociA9IHQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IFByb21pc2UoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2MuYXNzZXRNYW5hZ2VyLmxvYWRCdW5kbGUoXCJzb3VuZFwiLCBmdW5jdGlvbiAobywgbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gZShvKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbi5sb2FkKHQsIGNjLkF1ZGlvQ2xpcCwgZnVuY3Rpb24gKHQsIG8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlKHQgPyBudWxsIDogbyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKG8gPSBuW3JdID0gaS5zZW50KCkpLCBbMywgNV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICAgICAgICAgIChvID0gdGhpcy5jbGlwc1t0XSksIChpLmxhYmVsID0gNSk7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAoY2MuYXVkaW9FbmdpbmUucGxheUVmZmVjdChvLCAhMSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYy5hdWRpb0VuZ2luZS5zZXRFZmZlY3RzVm9sdW1lKGUgKiB0aGlzLmVmZmVjdFZvbHVtZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbMiwgby5kdXJhdGlvbl0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBbMl07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMl07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUucGxheUJHTSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGU7XG4gICAgICAgICAgICB2YXIgbztcbiAgICAgICAgICAgIHZhciBuID0gdGhpcztcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDAgPT0gKGUgPSBfdURhdGEuZGVmYXVsdC5pbnMuZ2V0U2V0dGluZygpLmJnbVNvdW5kKVxuICAgICAgICAgICAgICAgICAgICA/IFsyXVxuICAgICAgICAgICAgICAgICAgICA6ICgobyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9wSW5mby5ST09UID09IF9wSW5mby5zY2VuZVR5cGUuZ2FtZSB8fCBfcEluZm8uUk9PVCA9PSBfcEluZm8uc2NlbmVUeXBlLmd1aWRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwiR2FtZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiTWFpblwiKSxcbiAgICAgICAgICAgICAgICAgICAgICBjYy5hc3NldE1hbmFnZXIubG9hZEJ1bmRsZShcInNvdW5kXCIsIGZ1bmN0aW9uIChpLCByKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIubG9hZCh0LkJHTSArIG8sIGNjLkF1ZGlvQ2xpcCwgZnVuY3Rpb24gKHQsIGkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHIgPSBjYy5hdWRpb0VuZ2luZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG4uY3VyQmcgPT0gbyAmJiByLmlzTXVzaWNQbGF5aW5nKCkpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhZSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKChuLmN1ckJnID0gbyksIHIucGxheU11c2ljKGksICEwKSwgci5zZXRNdXNpY1ZvbHVtZShuLmJnbVZvbHVtZSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgIFsyXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5zdG9wQkdNID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3VEYXRhLmRlZmF1bHQuaW5zLmdldFNldHRpbmcoKS5iZ21Tb3VuZCAmJiAhdCA/IFsyXSA6IChjYy5hdWRpb0VuZ2luZS5zdG9wTXVzaWMoKSwgWzJdKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHQuQ0xJQ0sgPSBcImNsaWNrXCI7XG4gICAgdC5CR00gPSBcIkJHTVwiO1xuICAgIHQuV0lOID0gXCJ3aW5cIjtcbiAgICB0LkxPU0UgPSBcImxvc2VcIjtcbiAgICB0LlJJR0hUID0gXCJyaWdodFwiO1xuICAgIHQuRVJST1IgPSBcImVycm9yXCI7XG4gICAgdC5TSE9WRUwgPSBcInNob3ZlbFwiO1xuICAgIHQuUk9DS0VUTEFVTkNIID0gXCJyb2NrZXRMYXVuY2hcIjtcbiAgICB0LlJPQ0tFVEFUVEFDSyA9IFwicm9ja2V0QXR0YWNrXCI7XG4gICAgdC5USU1FID0gXCJ0aW1lXCI7XG4gICAgdC5GSU5JU0hfUFVaWkxFID0gXCJmaW5pc2hfcHV6emxlXCI7XG4gICAgcmV0dXJuIHQ7XG59KSgpO1xuZXhwb3J0cy5kZWZhdWx0ID0gbDtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/taskMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '43d38GhCKVBYrlCS5iT8Rpi', 'taskMgr');
// scripts/taskMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.taskState = exports.taskChannel = exports.TaskType = exports.taskPro = exports.taskBase = void 0;

var _evts = require("evts");

var _idx = require("idx");

var _cfgMgr = require("cfgMgr");

var _pInfo = require("pInfo");

var _bagMgr = require("bagMgr");

var _lang = require("lang");

var l = function () {
  function t() {}

  t.initTask = function () {
    t.getTaskByType(d.daily, !0);
    t.getTaskByType(d.achieve, !0);
  };

  t.getTaskByType = function (e) {
    var o;
    var n = this;
    var i = _cfgMgr["default"].serverCfg[e];
    var s = t.baseTask[e];

    var c = t.saveData[e] || _pInfo["default"].ins.getTask(e);

    t.baseTask[e] = s = {};
    var l = 0 === Object.keys(c).length;
    null === (o = null == i ? void 0 : i.rules) || void 0 === o || o.forEach(function (t) {
      var o = n.baseTask[e][t.key];
      o || ((o = new u()).temp = t, o.data = c[t.key] || new f(), s[t.key] = o, c[t.key] = o.data);
    });
    l && _pInfo["default"].ins.setTask(e, c);
    t.saveData[e] || (t.saveData[e] = c);
    return s;
  };

  t.taskReset = function () {
    t.taskResetByTyp(d.daily);
  };

  t.taskResetByTyp = function (e) {
    var o;
    var n = _cfgMgr["default"].serverCfg[e];
    var i = t.saveData[e] || {};
    null === (o = null == n ? void 0 : n.rules) || void 0 === o || o.forEach(function (t) {
      i[t.key] ? (i[t.key].count = 0, i[t.key].state = h.Receive) : i[t.key] = new f();
    });
    t.saveData[e] = i;

    _pInfo["default"].ins.setTask(e, i);
  };

  t.updateTask = function (e, o) {
    void 0 === o && (o = d.daily);
    var r = t.baseTask[o];
    var l = t.saveData[o];
    if (r && e.data.state == h.Finish) for (var u in e.temp.get_by == p.ad_reward ? e.data.state = e.data.count >= e.temp.nums ? h.Rewared : h.Receive : e.data.state = h.Rewared, r[e.temp.key] = e, l[e.temp.key] = e.data, _pInfo["default"].ins.setTask(o, l), _idx.platform.reportEvent(_idx.ERepEvt.dailyTask, {
      taskId: _lang.lang[e.temp.key]
    }), _evts["default"].opE.emit({
      action: _evts["default"].UPDTASK,
      data: e
    }), e.temp.val) {
      e.temp.val.hasOwnProperty(u) && _bagMgr["default"].ins.addItem(u, e.temp.val[u]);
    }
  };

  t.doTask = function (e, o) {
    void 0 === o && (o = d.daily);
    var i = t.baseTask[o];
    var r = t.saveData[o];

    if (i) {
      var s;

      for (var c in i) {
        if (i.hasOwnProperty(c)) {
          var l = i[c];
          if (l.data.state != h.Receive) continue;
          var u = "string" == typeof e && Object.values(p).includes(e) ? "get_by" : "key";
          l.temp[u] == e && (l.data.count += 1, (l.data.count >= l.temp.nums || l.temp.get_by == p.ad_reward) && (l.data.state = h.Finish, r[c] = l.data), s = !0, _evts["default"].opE.emit({
            action: _evts["default"].UPDTASK,
            data: l
          }));

          _evts["default"].opE.emit({
            action: _evts["default"].UPD_MAIN_RED
          });
        }
      }

      s && _pInfo["default"].ins.setTask(o, r);
    }
  };

  t.taskCheck = function (e) {
    switch (e) {
      case _pInfo.gameType.normal:
      case _pInfo.gameType.freedom:
        t.doTask(p.cg_line);
        break;

      case _pInfo.gameType.race:
        t.doTask(p.qw_line);
        break;

      case _pInfo.gameType.challenge:
        t.doTask(p.daily_challenge);
    }
  };

  t.getFinishNum = function () {
    for (var e = _cfgMgr["default"].serverCfg[d.daily], o = t.getTaskByType(d.daily), n = null == e ? void 0 : e.rules, i = 0, a = 0, s = n.length; a < s; a++) {
      o[n[a].key].data.state == h.Finish && i++;
    }

    return i;
  };

  t.getUnFinishNum = function () {
    for (var e = _cfgMgr["default"].serverCfg[d.daily], o = t.getTaskByType(d.daily), n = null == e ? void 0 : e.rules, i = 0, a = 0, s = n.length; a < s; a++) {
      o[n[a].key].data.state == h.Receive && i++;
    }

    return i;
  };

  t.baseTask = {};
  t.saveData = {};
  return t;
}();

exports["default"] = l;

var u = function u() {};

exports.taskBase = u;
var p;
var d;
var h;

var f = function f() {
  this.count = 0;
  this.state = h.Receive;
};

exports.taskPro = f;

(function (t) {
  t.ad_reward = "ad_reward", t.cg_line = "cg_line", t.daily_challenge = "daily_challenge", t.qw_line = "qw_line";
})(p = exports.TaskType || (exports.TaskType = {}));

(function (t) {
  t.daily = "daily_tasks", t.achieve = "achieve_tasks";
})(d = exports.taskChannel || (exports.taskChannel = {}));

(function (t) {
  t[t.None = 0] = "None", t[t.Receive = 1] = "Receive", t[t.Finish = 2] = "Finish", t[t.Rewared = 3] = "Rewared";
})(h = exports.taskState || (exports.taskState = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/tt.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0b084hHrupN56MsxKfnNQhM', 'tt');
// scripts/tt.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _c = require("c");

var _com = require("com");

var _env = require("env");

var _errorCode = require("errorCode");

var _evts = require("evts");

var _idx = require("idx");

var _pConst = require("pConst");

var _request = require("request");

var _time = require("time");

var _uData = require("uData");

var _tipMgr = require("tipMgr");

var y = "env-nBT5qFlz3P";
var m = "1jtw3wjabr0ui";
var v = "4m29365j0d2k3agn5c";

var _ = function () {
  function t() {
    this.isSharing = !1;
    this.sdkSwitch = _pConst.DefaultSDKSwitch;
    this.videoCheckedMap = {};
    this.videoCheckedLastT = {};
    this.uniqueVideoUnitId = v;
    this.isLoading = !1;
    this.isLoggedIn = !1;
    this.onHideT = 0;
    this.noAd = !1;
    this.noVideo = !1;
    this.lastInterAdShowT = 0;
    this.switchesInitd = !1;
    this.gameRecorder = null;
    this.ta = null;
    this.m_nStartRecordT = 0;
    this.m_nRecordT = 0;
    this.m_bIsRecording = !1;
    this.m_nAutoStopVideoId = 0;
    this.m_strVideoPath = "";
    this.onKeyboardComplete = tt.onKeyboardComplete;
  }

  Object.defineProperty(t.prototype, "appId", {
    get: function get() {
      return "tt6d2c1b91f21d474902";
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.string = function () {
    return _pConst.PFCode.Bytedance;
  };

  t.prototype.init = function () {
    this.initVersion();
    this.initByteDanceListener();
    this.initCommonSetting();
    this.initTga();
    this.initVideoRecorder();
    this.uploadAdEvent("active", {});
    var t = tt.getLaunchOptionsSync();
    var e = (null == t ? void 0 : t.scene) || "0";
    this.bySlider = "021036" == e;
  };

  t.prototype.initVersion = function () {
    var t;
    var e;
    this.version = tt.getEnvInfoSync && (null === (e = null === (t = tt.getEnvInfoSync()) || void 0 === t ? void 0 : t.microapp) || void 0 === e ? void 0 : e.mpVersion);
  };

  t.prototype.initTga = function () {};

  t.prototype.isSwitchedInitd = function () {
    return this.switchesInitd;
  };

  t.prototype.initByteDanceListener = function () {
    var t = this;
    var e = this;
    tt.onShow(function (t) {
      _uData["default"].ins.syncLaunchOption(t), e.isSharing || e.reenter(), e.startStopRecordTimeout(Math.max(1e3, _pConst.VIDEO_RECORD_LIMIT - e.m_nRecordT)), e.bySlider = "homepage" == t.launch_from && "sidebar_card" == t.location, _evts["default"].opE.emit({
        action: _evts["default"].Slider_Chg
      }), Math.abs(Date.now() / 1e3 - e.onHideT) > 300 ? e.syncTime().then(function (t) {
        t && _time["default"].ins.sync(t), _evts["default"].plE.emit({
          onShow: !0,
          isSharing: e.isSharing
        });
      }) : _evts["default"].plE.emit({
        onShow: !0,
        isSharing: e.isSharing
      });
    });
    tt.checkScene && tt.checkScene({
      scene: "sidebar",
      success: function success(e) {
        t.sidebarExist = e.isExist;
      },
      fail: function fail() {}
    });
    tt.onHide(function () {
      e.onHideT = _time["default"].ins.serverTime, _evts["default"].plE.emit({
        onHide: !0
      }), e.clearStopRecordTimeout();
    });
    tt.onError(function (t) {
      _env.env.mode !== _env.EM.PROD && tt.showModal({
        title: t.message || "异常报错",
        content: t.stack || t + "",
        showCancel: !1,
        confirmText: "好的"
      });
    });
    tt.canIUse("onMemoryWarning") && tt.onMemoryWarning(function () {
      tt.triggerGC();
    });
    tt.onShareAppMessage(function () {
      return _pConst.SDKConfig.shareData();
    });
    tt.showShareMenu({
      success: function success() {},
      fail: function fail() {}
    });
    var o = tt.getUpdateManager();
    o.onCheckForUpdate(function () {});
    o.onUpdateFailed(function () {});
    o.onUpdateReady(function () {
      tt.showModal({
        title: "更新提示",
        content: "新版本已经准备好，是否重启小游戏？",
        success: function success(t) {
          t.confirm && o.applyUpdate();
        }
      });
    });
  };

  t.prototype.initCommonSetting = function () {
    _uData["default"].ins.syncLaunchOption(tt.getLaunchOptionsSync());

    tt.getNetworkType({
      success: function success() {},
      fail: function fail() {}
    });

    _evts["default"].chE.on(function () {});
  };

  t.prototype.initCloud = function () {
    return new Promise(function (t) {
      tt.login({
        success: function success() {
          tt.createCloud && tt.canIUse("createCloud") && (_idx.platform.cloud = tt.createCloud({
            envID: y,
            serviceID: m
          }));
          t(_idx.platform.syncTime());
        },
        fail: function fail() {
          t(null);
        }
      });
    });
  };

  t.prototype.setAccountID = function () {
    _env.env.mode;
    _env.EM.TEST;
  };

  t.prototype.login = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2, new Promise(function (e, o) {
          tt.login({
            success: function success(n) {
              if (n && n.code) {
                var i = _idx.platform.cloud || (_idx.platform.cloud = tt.createCloud && tt.canIUse("createCloud") && tt.createCloud({
                  envID: y,
                  serviceID: m
                }));
                if (t > 2 || !i) return void e(n);
                i.callContainer({
                  path: "/index",
                  init: {
                    method: "GET",
                    header: {
                      "content-type": "application/json"
                    },
                    timeout: 2e3
                  },
                  success: function success(t) {
                    var o = t.data;
                    if (o) if ("string" == typeof o) try {
                      var i = JSON.parse(o);
                      n.openid = i.i;
                      n.unionid = i.j;
                    } catch (t) {} else n.openid = o.i, n.unionid = o.j;
                    e(n);
                  },
                  fail: function fail() {
                    return o(_errorCode.errorCode.PF_CLOUD_ERR);
                  }
                });
              } else console.warn("头条登陆失败：empty code"), o(_errorCode.errorCode.LOGIN_ERR);
            },
            fail: function fail(t) {
              var e = "";
              null != t && null != t.errMsg && (e = t.errMsg);
              console.warn("头条登陆失败：", e);
              o(_errorCode.errorCode.LOGIN_ERR);
            }
          });
        })];
      });
    });
  };

  t.prototype.syncTime = function () {
    return new Promise(function (t) {
      var e = _idx.platform.cloud || (_idx.platform.cloud = tt.createCloud && tt.canIUse("createCloud") && tt.createCloud({
        envID: y,
        serviceID: m
      }));
      e ? e.callContainer({
        path: "/gTime",
        init: {
          method: "GET",
          header: {
            "content-type": "application/json"
          },
          timeout: 2e3
        },
        success: function success(e) {
          var o;
          var n = e.data;
          if (n) if ("string" == typeof n) try {
            o = JSON.parse(n).t;
          } catch (e) {} else o = n.t;
          t(o || null);
        },
        fail: function fail() {
          return t(null);
        }
      }) : t(null);
    });
  };

  t.prototype.reenter = function () {};

  t.prototype.getCloudData = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      var e;
      var o;
      var n;
      return __generator(this, function (i) {
        switch (i.label) {
          case 0:
            return (t = _idx.platform.cloud || (_idx.platform.cloud = tt.createCloud && tt.canIUse("createCloud") && tt.createCloud({
              envID: y,
              serviceID: m
            }))) ? [4, t.database()] : [3, 3];

          case 1:
            return (o = i.sent()) ? (n = o.collection("userData"), [4, _idx.platform._check(n)]) : [3, 3];

          case 2:
            e = i.sent(), i.label = 3;

          case 3:
            return [2, e];
        }
      });
    });
  };

  t.prototype._check = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2, new Promise(function (e) {
          t.get("id").then(function (t) {
            if (t) {
              _idx.platform.isCheck = !0;
              var o = t.data;

              if (o && o.length) {
                var n = o[0];
                _idx.platform.dbId = n._id;

                try {
                  var i = JSON.parse(n.uData);
                  e(i);
                } catch (r) {
                  e(null);
                }
              } else e(null);
            } else e(null);
          })["catch"](function () {
            return e(null);
          });
        })];
      });
    });
  };

  t.prototype.setCloudData = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      var e;
      var o;
      var n;
      var r;
      var a;
      return __generator(this, function (i) {
        switch (i.label) {
          case 0:
            return (e = this).isSaving ? [2] : (o = e.cloud || (e.cloud = tt.createCloud && tt.canIUse("createCloud") && tt.createCloud({
              envID: y,
              serviceID: m
            }))) ? [4, o.database()] : [3, 2];

          case 1:
            if (!(n = i.sent())) return [2];
            e.isSaving = !0, r = n.collection("userData"), a = Promise.resolve(), e.isCheck || (a = this._check(r)), a.then(function () {
              e.dbId ? r.doc(e.dbId).update({
                uData: t
              }).then(function () {
                _idx.platform.isSaving = !1;
              }) : r.add({
                uData: t
              }).then(function (t) {
                _idx.platform.dbId = t.id;
                _idx.platform.isSaving = !1;
              });
            })["catch"](function (t) {
              return console.error("写入失败", t);
            }), i.label = 2;

          case 2:
            return [2];
        }
      });
    });
  };

  t.prototype.getStorage = function (t) {
    try {
      var e = tt.getStorageSync(t);
      return null == e || "" == e ? null : JSON.parse(e);
    } catch (o) {}
  };

  t.prototype.setStorage = function (t, e) {
    try {
      tt.setStorageSync(t, JSON.stringify(e));
    } catch (o) {}
  };

  t.prototype.clearStorage = function () {
    try {
      tt.clearStorageSync();
    } catch (t) {}
  };

  t.prototype.removeStorage = function (t) {
    try {
      tt.removeStorageSync(t);
    } catch (e) {}
  };

  t.prototype.trackLogin = function () {};

  t.prototype.trackUserSet = function () {};

  t.prototype.trackUserSetOnce = function () {};

  t.prototype.trackEvent = function () {};

  t.prototype.getSeq = function () {};

  t.prototype.consumeSeq = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (e) {
        switch (e.label) {
          case 0:
            return t.sequenceInfo.type != _pConst.STDSeqType.VIDEO ? [3, 2] : [4, this.doWatchAD(t)];

          case 1:
            e.sent(), this.doShare(), e.label = 2;

          case 2:
            return [2];
        }
      });
    });
  };

  t.prototype.doWatchAD = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      var e;
      var o;
      return __generator(this, function () {
        return this.noAd ? [2] : this.noVideo ? (console.error("[error] no video"), [2, Promise.reject(_pConst.VideoFailCode.NO_AD)]) : (_evts["default"].adE.emit(_c.ADE.VIDEO), e = this.uniqueVideoUnitId, null == this.videoAd && (this.videoAd = tt.createRewardedVideoAd({
          adUnitId: e
        })), this.showLoading(), o = this, [2, new Promise(function (n, i) {
          o.videoAd.onClose(function a(s) {
            null != o.videoAd && o.videoAd.offClose(a), null != s && s.isEnded ? (_evts["default"].adE.emit(_c.ADE.VIDEO_END), o.trackEvent("video", {
              step: "complete",
              unit: e,
              type: t.videoSource,
              item: t.item
            }), n(1)) : (_evts["default"].adE.emit(_c.ADE.VIDEO_END), i(_pConst.VideoFailCode.CANCELED));
          });
          o.videoAd.show().then(function () {})["catch"](function () {
            _evts["default"].adE.emit(_c.ADE.VIDEO_END);

            o.videoAd.destroy();
            o.videoAd = null;
            i(_pConst.VideoFailCode.NO_AD);
          }).then(function () {
            o.hideLoading();
          });
        })]);
      });
    });
  };

  t.prototype.doShare = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2];
      });
    });
  };

  t.prototype._askReShare = function () {};

  t.prototype.canUse = function (t) {
    return _com["default"].ins.compareVersion(_idx.platform.getSystemData().SDKVersion, t) >= 0;
  };

  t.prototype.getSystemData = function () {
    if (null == this.systemInfoCache) try {
      this.systemInfoCache = tt.getSystemInfoSync();
    } catch (t) {
      return _pConst.DefaultSystemInfo;
    }
    return this.systemInfoCache;
  };

  t.prototype.getSwitches = function () {};

  t.prototype.vibrate = function (t) {
    t == _pConst.VEnum4.SHORT ? tt.vibrateShort(null) : t == _pConst.VEnum4.LONG && tt.vibrateLong({
      success: function success() {},
      fail: function fail() {}
    });
  };

  t.prototype.preloadVideo = function () {
    return !1;
  };

  t.prototype.showModal = function (t) {
    return new Promise(function (e) {
      tt.showModal(Object.assign(Object.assign({}, t), {
        success: function success(t) {
          t.confirm ? e(!0) : t.cancel && e(!1);
        },
        fail: function fail() {
          e(!1);
        }
      }));
    });
  };

  t.prototype.refreshGame = function () {
    try {
      tt.restartMiniProgramSync();
    } catch (t) {
      tt.exitMiniProgram();
    }
  };

  t.prototype.showLoading = function (t) {
    void 0 === t && (t = "加载中");
    this.canUse("1.0.0") && (this.isLoading = !0, tt.showLoading({
      title: t,
      mask: !0
    }));
  };

  t.prototype.hideLoading = function () {
    this.canUse("1.0.0") && this.isLoading && (tt.hideLoading(), this.isLoading = !1);
  };

  t.prototype.log = function () {};

  t.prototype.getMenuBounding = function () {};

  t.prototype.createShareImage = function () {};

  t.prototype.preloadInterstitialAD = function () {};

  t.prototype.showInterstitialAD = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2, null];
      });
    });
  };

  t.prototype.canShowBanner = function () {
    return !1;
  };

  t.prototype.getBannerSize = function () {
    return new cc.Size(0, 0);
  };

  t.prototype.showBanner = function () {};

  t.prototype.hideBanner = function () {};

  t.prototype.getSubscribeCnt = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2, 0];
      });
    });
  };

  t.prototype.subscribe = function () {};

  t.prototype.initVideoRecorder = function () {
    this.canUse("1.6.1") && (this.gameRecorder = tt.getGameRecorderManager(), this.gameRecorder.onStart(this.onVideoRecordStart.bind(this)), this.gameRecorder.onStop(this.onVideoRecordEnd.bind(this)), this.gameRecorder.onError(this.onVideoRecordError.bind(this)));
  };

  t.prototype.startVideoRecord = function () {
    try {
      null != this.gameRecorder && (this.m_bIsRecording = !0, this.gameRecorder.start({
        duration: 0.001 * _pConst.VIDEO_RECORD_LIMIT,
        isMarkOpen: !1
      }), this.startStopRecordTimeout(_pConst.VIDEO_RECORD_LIMIT));
    } catch (t) {
      this.gameRecorder = null;
    }
  };

  t.prototype.pauseVideoRecord = function () {
    null != this.gameRecorder && this.m_bIsRecording && (this.gameRecorder.pause(), this.clearStopRecordTimeout());
  };

  t.prototype.resumeVideoRecord = function () {
    null != this.gameRecorder && this.m_bIsRecording && (this.gameRecorder.resume(), this.startStopRecordTimeout(Math.max(1e3, _pConst.VIDEO_RECORD_LIMIT - this.m_nRecordT)));
  };

  t.prototype.stopVideoRecord = function () {
    null != this.gameRecorder && (this.clearStopRecordTimeout(), this.gameRecorder.stop(), this.m_bIsRecording = !1);
  };

  t.prototype.startStopRecordTimeout = function (t) {
    this.m_bIsRecording && (this.m_nAutoStopVideoId = setTimeout(this.autoStopVideoRecord.bind(this), t - 1e3), this.m_nStartRecordT = new Date().getTime());
  };

  t.prototype.clearStopRecordTimeout = function () {
    this.m_bIsRecording && (0 !== this.m_nAutoStopVideoId && clearTimeout(this.m_nAutoStopVideoId), this.m_nAutoStopVideoId = 0, this.m_nRecordT += new Date().getTime() - this.m_nStartRecordT, this.m_nStartRecordT = 0);
  };

  t.prototype.autoStopVideoRecord = function () {
    this.m_nAutoStopVideoId = 0;
    this.stopVideoRecord();
    setTimeout(this.startVideoRecord.bind(this), 100);
  };

  t.prototype.onVideoRecordStart = function () {
    this.m_strVideoPath = "";
    this.m_nRecordT = 0;
  };

  t.prototype.onVideoRecordEnd = function (t) {
    var e;
    null != t && null != t.videoPath && (e = this.m_strVideoPath = t.videoPath);
    e && _evts["default"].opE.emit({
      action: _evts["default"].SHOWVIDEOSHARE
    });
  };

  t.prototype.onVideoRecordError = function () {};

  t.prototype.hasVideoRecord = function () {
    return null != this.m_strVideoPath && "" !== this.m_strVideoPath;
  };

  t.prototype.shareVideoRecord = function () {
    var t;
    var e = new Promise(function (e) {
      t = e;
    });

    if (this.hasVideoRecord() && tt.shareAppMessage) {
      var o = [_env.env.name, "女生游戏推荐", "脑洞游戏", "烧脑益智"];

      var n = _pConst.SDKConfig.shareData();

      tt.shareAppMessage({
        title: "我欲修仙",
        channel: "video",
        desc: "来挑战一下",
        query: n.query,
        extra: {
          withVideoId: !0,
          videoPath: this.m_strVideoPath,
          video_title: n.title,
          videoTopics: o
        },
        success: function success() {
          _tipMgr["default"].ins.showTip("分享成功");

          t(1);
        },
        fail: function fail() {
          _tipMgr["default"].ins.showTip("分享失败");

          t(0);
        }
      });
    } else t(0);

    return e;
  };

  t.prototype.uploadAdEvent = function () {};

  t.prototype.PostMessage = function (t, e, o) {
    tt.getOpenDataContext().postMessage({
      Even: t,
      Value1: e,
      Value2: o
    });
  };

  t.prototype.SetUserCloudStorage = function (t, e, o) {
    var n = new Date();
    tt.setUserCloudStorage({
      KVDataList: [{
        key: "level",
        value: t.toString() + "#" + n.getTime().toString() + "#" + e.toString() + "#" + o.toString()
      }],
      success: function success() {},
      fail: function fail() {}
    });
  };

  t.prototype.GetOpenDataContext = function () {
    return tt.getOpenDataContext();
  };

  t.prototype.addShortcut = function () {
    tt.addShortcut({
      success: function success() {
        _evts["default"].opE.emit({
          action: _evts["default"].ADD_DESKTOP,
          data: !0
        });
      },
      fail: function fail() {
        _evts["default"].opE.emit({
          action: _evts["default"].ADD_DESKTOP,
          data: !1
        });

        _tipMgr["default"].ins.showTip("添加失败");
      }
    });
  };

  t.prototype.share = function () {
    return new Promise(function (t) {
      var e = _pConst.SDKConfig.shareData();

      tt.shareAppMessage({
        title: e.title,
        imageUrl: e.imageUrl,
        query: e.query,
        channel: "invite",
        success: function success(e) {
          t(e.data);
        },
        fail: function fail() {
          t(0);
        }
      });
    });
  };

  t.prototype.getUserInfo = function () {
    var t = this;
    return new Promise(function (e, o) {
      if (tt.canIUse("getUserInfo")) {
        var n = t;
        tt.getSetting({
          success: function success(t) {
            t.authSetting["scope.userInfo"] ? n._getUserInfo(e, o) : !1 === t.authSetting["scope.userInfo"] ? n.showRefuseTip(e, o) : n._getUserInfo(e, o);
          },
          fail: function fail() {
            o();
          }
        });
      } else o();
    });
  };

  t.prototype.showRefuseTip = function (t, e) {
    if (this.showModal({
      title: "友情提示",
      content: "申请使用您的用户信息，展示排行榜。",
      confirmText: "允许",
      cancelText: "拒绝"
    })) {
      var o = this;
      tt.openSetting({
        success: function success() {
          o._getUserInfo(t, e);
        },
        fail: function fail() {
          e();
        }
      });
    } else e();
  };

  t.prototype._getUserInfo = function (t, e) {
    tt.getUserInfo({
      success: function success(e) {
        t(e.userInfo);
      },
      fail: function fail() {
        e();
      }
    });
  };

  t.prototype.navigateToScene = function (t) {
    void 0 === t && (t = "sidebar");
    tt.navigateToScene({
      scene: t,
      success: function success() {},
      fail: function fail() {}
    });
  };

  t.prototype.reportEvent = function (t, e) {
    void 0 === e && (e = {});
    tt.reportAnalytics(t, e);
  };

  t.prototype.setFriendRankData = function (t, e) {
    var o;
    tt && (null === (o = tt.setImRankData) || void 0 === o || o.call(tt, {
      dataType: 0,
      value: t.toString(),
      zoneId: e,
      success: function success() {},
      fail: function fail() {}
    }));
  };

  t.prototype.showFriendRank = function (t) {
    if (tt) if (tt.getImRankList) {
      var e = t === _pConst.SDKConfig.ttZoneId.normal ? "关" : "分";
      var o = t === _pConst.SDKConfig.ttZoneId.normal ? "主线排行" : "好友趣味赛排行";
      var n = (_pConst.SDKConfig.ttZoneId.normal, "all");
      var i = t === _pConst.SDKConfig.ttZoneId.normal ? "all" : "friend";
      tt.getImRankList({
        relationType: i,
        dataType: 0,
        rankType: n,
        suffix: e,
        rankTitle: o,
        zoneId: t,
        success: function success() {},
        fail: function fail() {}
      });
    } else tt.showModal({
      title: "提示",
      content: "当前客户端版本过低，无法使用该功能，请升级客户端或关闭后重启更新。"
    });
  };

  t.prototype.payment = function (t, e, o, n) {
    var i = this;
    void 0 === t && (t = "1");
    void 0 === e && (e = 1);
    void 0 === o && (o = 0);

    var r = _idx.platform.getSystemData();

    var a = "android";
    r && -1 != r.system.indexOf("iOS") && (a = "iOS");
    return new Promise(function (r, s) {
      i.checkSession().then(function () {
        var i = _request["default"].ins.openId;
        var c = _time["default"].ins.serverTime;
        var l = t + i + c;
        var u = {};
        u.cp_orderno = l;
        u.creation_time = c;
        u.openid = i;
        u.money = e;
        u.gift_id = t;
        u.gift_num = 1;
        u.status = 0;
        u.is_double = o;
        u["package"] = n;
        u.phone = a;
        var p = {};
        p.openid = i;
        p.gift_id = t;
        p.gift_num = 1;
        p.money = e;
        p.is_double = o;
        p["package"] = n;
        p.phone = a;

        _request["default"].ins.getUserToken().then(function (t) {
          if (t) {
            p.token = t;
            var o = JSON.stringify(p);
            tt.requestGamePayment({
              mode: "game",
              env: 0,
              currencyType: "CNY",
              platform: a,
              buyQuantity: e,
              zoneId: "1",
              customId: l,
              extraInfo: o,
              success: function success() {
                u.status = 1;

                _request["default"].ins.paymentResult(u);

                r(1);
              },
              fail: function fail(t) {
                u.status = 2;
                var e = u.errCode = t && t.errCode || 0;

                _request["default"].ins.paymentResult(u);

                s("支付失败: " + e);
              },
              complete: function complete() {}
            });
          }
        })["catch"](function () {});
      })["catch"](function (t) {
        s("支付异常: " + t);
      });
    });
  };

  t.prototype.checkSession = function () {
    var t = this;
    return new Promise(function (e, o) {
      tt.checkSession({
        success: function success() {
          e(1);
        },
        fail: function fail() {
          t.login(0).then(function () {
            e(1);
          })["catch"](function (t) {
            o(t);
          });
        }
      });
    });
  };

  t.prototype.openService = function (t) {
    tt.openCustomerServiceConversation && tt.openCustomerServiceConversation({
      type: t,
      success: function success() {},
      fail: function fail() {}
    });
  };

  return t;
}();

exports["default"] = _;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdHQuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfYyIsInJlcXVpcmUiLCJfY29tIiwiX2VudiIsIl9lcnJvckNvZGUiLCJfZXZ0cyIsIl9pZHgiLCJfcENvbnN0IiwiX3JlcXVlc3QiLCJfdGltZSIsIl91RGF0YSIsIl90aXBNZ3IiLCJ5IiwibSIsInYiLCJfIiwidCIsImlzU2hhcmluZyIsInNka1N3aXRjaCIsIkRlZmF1bHRTREtTd2l0Y2giLCJ2aWRlb0NoZWNrZWRNYXAiLCJ2aWRlb0NoZWNrZWRMYXN0VCIsInVuaXF1ZVZpZGVvVW5pdElkIiwiaXNMb2FkaW5nIiwiaXNMb2dnZWRJbiIsIm9uSGlkZVQiLCJub0FkIiwibm9WaWRlbyIsImxhc3RJbnRlckFkU2hvd1QiLCJzd2l0Y2hlc0luaXRkIiwiZ2FtZVJlY29yZGVyIiwidGEiLCJtX25TdGFydFJlY29yZFQiLCJtX25SZWNvcmRUIiwibV9iSXNSZWNvcmRpbmciLCJtX25BdXRvU3RvcFZpZGVvSWQiLCJtX3N0clZpZGVvUGF0aCIsIm9uS2V5Ym9hcmRDb21wbGV0ZSIsInR0IiwicHJvdG90eXBlIiwiZ2V0IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsInN0cmluZyIsIlBGQ29kZSIsIkJ5dGVkYW5jZSIsImluaXQiLCJpbml0VmVyc2lvbiIsImluaXRCeXRlRGFuY2VMaXN0ZW5lciIsImluaXRDb21tb25TZXR0aW5nIiwiaW5pdFRnYSIsImluaXRWaWRlb1JlY29yZGVyIiwidXBsb2FkQWRFdmVudCIsImdldExhdW5jaE9wdGlvbnNTeW5jIiwiZSIsInNjZW5lIiwiYnlTbGlkZXIiLCJ2ZXJzaW9uIiwiZ2V0RW52SW5mb1N5bmMiLCJtaWNyb2FwcCIsIm1wVmVyc2lvbiIsImlzU3dpdGNoZWRJbml0ZCIsIm9uU2hvdyIsImlucyIsInN5bmNMYXVuY2hPcHRpb24iLCJyZWVudGVyIiwic3RhcnRTdG9wUmVjb3JkVGltZW91dCIsIk1hdGgiLCJtYXgiLCJWSURFT19SRUNPUkRfTElNSVQiLCJsYXVuY2hfZnJvbSIsImxvY2F0aW9uIiwib3BFIiwiZW1pdCIsImFjdGlvbiIsIlNsaWRlcl9DaGciLCJhYnMiLCJEYXRlIiwibm93Iiwic3luY1RpbWUiLCJ0aGVuIiwic3luYyIsInBsRSIsImNoZWNrU2NlbmUiLCJzdWNjZXNzIiwic2lkZWJhckV4aXN0IiwiaXNFeGlzdCIsImZhaWwiLCJvbkhpZGUiLCJzZXJ2ZXJUaW1lIiwiY2xlYXJTdG9wUmVjb3JkVGltZW91dCIsIm9uRXJyb3IiLCJlbnYiLCJtb2RlIiwiRU0iLCJQUk9EIiwic2hvd01vZGFsIiwidGl0bGUiLCJtZXNzYWdlIiwiY29udGVudCIsInN0YWNrIiwic2hvd0NhbmNlbCIsImNvbmZpcm1UZXh0IiwiY2FuSVVzZSIsIm9uTWVtb3J5V2FybmluZyIsInRyaWdnZXJHQyIsIm9uU2hhcmVBcHBNZXNzYWdlIiwiU0RLQ29uZmlnIiwic2hhcmVEYXRhIiwic2hvd1NoYXJlTWVudSIsIm8iLCJnZXRVcGRhdGVNYW5hZ2VyIiwib25DaGVja0ZvclVwZGF0ZSIsIm9uVXBkYXRlRmFpbGVkIiwib25VcGRhdGVSZWFkeSIsImNvbmZpcm0iLCJhcHBseVVwZGF0ZSIsImdldE5ldHdvcmtUeXBlIiwiY2hFIiwib24iLCJpbml0Q2xvdWQiLCJQcm9taXNlIiwibG9naW4iLCJjcmVhdGVDbG91ZCIsInBsYXRmb3JtIiwiY2xvdWQiLCJlbnZJRCIsInNlcnZpY2VJRCIsInNldEFjY291bnRJRCIsIlRFU1QiLCJfX2F3YWl0ZXIiLCJfX2dlbmVyYXRvciIsIm4iLCJjb2RlIiwiaSIsImNhbGxDb250YWluZXIiLCJwYXRoIiwibWV0aG9kIiwiaGVhZGVyIiwidGltZW91dCIsImRhdGEiLCJKU09OIiwicGFyc2UiLCJvcGVuaWQiLCJ1bmlvbmlkIiwiaiIsImVycm9yQ29kZSIsIlBGX0NMT1VEX0VSUiIsImNvbnNvbGUiLCJ3YXJuIiwiTE9HSU5fRVJSIiwiZXJyTXNnIiwiZ2V0Q2xvdWREYXRhIiwibGFiZWwiLCJkYXRhYmFzZSIsInNlbnQiLCJjb2xsZWN0aW9uIiwiX2NoZWNrIiwiaXNDaGVjayIsImxlbmd0aCIsImRiSWQiLCJfaWQiLCJ1RGF0YSIsInIiLCJzZXRDbG91ZERhdGEiLCJhIiwiaXNTYXZpbmciLCJyZXNvbHZlIiwiZG9jIiwidXBkYXRlIiwiYWRkIiwiaWQiLCJlcnJvciIsImdldFN0b3JhZ2UiLCJnZXRTdG9yYWdlU3luYyIsInNldFN0b3JhZ2UiLCJzZXRTdG9yYWdlU3luYyIsInN0cmluZ2lmeSIsImNsZWFyU3RvcmFnZSIsImNsZWFyU3RvcmFnZVN5bmMiLCJyZW1vdmVTdG9yYWdlIiwicmVtb3ZlU3RvcmFnZVN5bmMiLCJ0cmFja0xvZ2luIiwidHJhY2tVc2VyU2V0IiwidHJhY2tVc2VyU2V0T25jZSIsInRyYWNrRXZlbnQiLCJnZXRTZXEiLCJjb25zdW1lU2VxIiwic2VxdWVuY2VJbmZvIiwidHlwZSIsIlNURFNlcVR5cGUiLCJWSURFTyIsImRvV2F0Y2hBRCIsImRvU2hhcmUiLCJyZWplY3QiLCJWaWRlb0ZhaWxDb2RlIiwiTk9fQUQiLCJhZEUiLCJBREUiLCJ2aWRlb0FkIiwiY3JlYXRlUmV3YXJkZWRWaWRlb0FkIiwiYWRVbml0SWQiLCJzaG93TG9hZGluZyIsIm9uQ2xvc2UiLCJzIiwib2ZmQ2xvc2UiLCJpc0VuZGVkIiwiVklERU9fRU5EIiwic3RlcCIsInVuaXQiLCJ2aWRlb1NvdXJjZSIsIml0ZW0iLCJDQU5DRUxFRCIsInNob3ciLCJkZXN0cm95IiwiaGlkZUxvYWRpbmciLCJfYXNrUmVTaGFyZSIsImNhblVzZSIsImNvbXBhcmVWZXJzaW9uIiwiZ2V0U3lzdGVtRGF0YSIsIlNES1ZlcnNpb24iLCJzeXN0ZW1JbmZvQ2FjaGUiLCJnZXRTeXN0ZW1JbmZvU3luYyIsIkRlZmF1bHRTeXN0ZW1JbmZvIiwiZ2V0U3dpdGNoZXMiLCJ2aWJyYXRlIiwiVkVudW00IiwiU0hPUlQiLCJ2aWJyYXRlU2hvcnQiLCJMT05HIiwidmlicmF0ZUxvbmciLCJwcmVsb2FkVmlkZW8iLCJhc3NpZ24iLCJjYW5jZWwiLCJyZWZyZXNoR2FtZSIsInJlc3RhcnRNaW5pUHJvZ3JhbVN5bmMiLCJleGl0TWluaVByb2dyYW0iLCJtYXNrIiwibG9nIiwiZ2V0TWVudUJvdW5kaW5nIiwiY3JlYXRlU2hhcmVJbWFnZSIsInByZWxvYWRJbnRlcnN0aXRpYWxBRCIsInNob3dJbnRlcnN0aXRpYWxBRCIsImNhblNob3dCYW5uZXIiLCJnZXRCYW5uZXJTaXplIiwiY2MiLCJTaXplIiwic2hvd0Jhbm5lciIsImhpZGVCYW5uZXIiLCJnZXRTdWJzY3JpYmVDbnQiLCJzdWJzY3JpYmUiLCJnZXRHYW1lUmVjb3JkZXJNYW5hZ2VyIiwib25TdGFydCIsIm9uVmlkZW9SZWNvcmRTdGFydCIsImJpbmQiLCJvblN0b3AiLCJvblZpZGVvUmVjb3JkRW5kIiwib25WaWRlb1JlY29yZEVycm9yIiwic3RhcnRWaWRlb1JlY29yZCIsInN0YXJ0IiwiZHVyYXRpb24iLCJpc01hcmtPcGVuIiwicGF1c2VWaWRlb1JlY29yZCIsInBhdXNlIiwicmVzdW1lVmlkZW9SZWNvcmQiLCJyZXN1bWUiLCJzdG9wVmlkZW9SZWNvcmQiLCJzdG9wIiwic2V0VGltZW91dCIsImF1dG9TdG9wVmlkZW9SZWNvcmQiLCJnZXRUaW1lIiwiY2xlYXJUaW1lb3V0IiwidmlkZW9QYXRoIiwiU0hPV1ZJREVPU0hBUkUiLCJoYXNWaWRlb1JlY29yZCIsInNoYXJlVmlkZW9SZWNvcmQiLCJzaGFyZUFwcE1lc3NhZ2UiLCJuYW1lIiwiY2hhbm5lbCIsImRlc2MiLCJxdWVyeSIsImV4dHJhIiwid2l0aFZpZGVvSWQiLCJ2aWRlb190aXRsZSIsInZpZGVvVG9waWNzIiwic2hvd1RpcCIsIlBvc3RNZXNzYWdlIiwiZ2V0T3BlbkRhdGFDb250ZXh0IiwicG9zdE1lc3NhZ2UiLCJFdmVuIiwiVmFsdWUxIiwiVmFsdWUyIiwiU2V0VXNlckNsb3VkU3RvcmFnZSIsInNldFVzZXJDbG91ZFN0b3JhZ2UiLCJLVkRhdGFMaXN0Iiwia2V5IiwidG9TdHJpbmciLCJHZXRPcGVuRGF0YUNvbnRleHQiLCJhZGRTaG9ydGN1dCIsIkFERF9ERVNLVE9QIiwic2hhcmUiLCJpbWFnZVVybCIsImdldFVzZXJJbmZvIiwiZ2V0U2V0dGluZyIsImF1dGhTZXR0aW5nIiwiX2dldFVzZXJJbmZvIiwic2hvd1JlZnVzZVRpcCIsImNhbmNlbFRleHQiLCJvcGVuU2V0dGluZyIsInVzZXJJbmZvIiwibmF2aWdhdGVUb1NjZW5lIiwicmVwb3J0RXZlbnQiLCJyZXBvcnRBbmFseXRpY3MiLCJzZXRGcmllbmRSYW5rRGF0YSIsInNldEltUmFua0RhdGEiLCJjYWxsIiwiZGF0YVR5cGUiLCJ6b25lSWQiLCJzaG93RnJpZW5kUmFuayIsImdldEltUmFua0xpc3QiLCJ0dFpvbmVJZCIsIm5vcm1hbCIsInJlbGF0aW9uVHlwZSIsInJhbmtUeXBlIiwic3VmZml4IiwicmFua1RpdGxlIiwicGF5bWVudCIsInN5c3RlbSIsImluZGV4T2YiLCJjaGVja1Nlc3Npb24iLCJvcGVuSWQiLCJjIiwibCIsInUiLCJjcF9vcmRlcm5vIiwiY3JlYXRpb25fdGltZSIsIm1vbmV5IiwiZ2lmdF9pZCIsImdpZnRfbnVtIiwic3RhdHVzIiwiaXNfZG91YmxlIiwicGhvbmUiLCJwIiwiZ2V0VXNlclRva2VuIiwidG9rZW4iLCJyZXF1ZXN0R2FtZVBheW1lbnQiLCJjdXJyZW5jeVR5cGUiLCJidXlRdWFudGl0eSIsImN1c3RvbUlkIiwiZXh0cmFJbmZvIiwicGF5bWVudFJlc3VsdCIsImVyckNvZGUiLCJjb21wbGV0ZSIsIm9wZW5TZXJ2aWNlIiwib3BlbkN1c3RvbWVyU2VydmljZUNvbnZlcnNhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLEVBQUUsR0FBR0MsT0FBTyxDQUFDLEdB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QTZESCxDQXJFRDs7RUFzRUFBLENBQUMsQ0FBQ3VCLFNBQUYsQ0FBWWtTLFlBQVosR0FBMkIsWUFBWTtJQUNuQyxJQUFJelQsQ0FBQyxHQUFHLElBQVI7SUFDQSxPQUFPLElBQUl5RyxPQUFKLENBQVksVUFBVW5FLENBQVYsRUFBYXdELENBQWIsRUFBZ0I7TUFDL0J4RSxFQUFFLENBQUNtUyxZQUFILENBQWdCO1FBQ1pyUCxPQUFPLEVBQUUsbUJBQVk7VUFDakI5QixDQUFDLENBQUMsQ0FBRCxDQUFEO1FBQ0gsQ0FIVztRQUlaaUMsSUFBSSxFQUFFLGdCQUFZO1VBQ2R2RSxDQUFDLENBQUMwRyxLQUFGLENBQVEsQ0FBUixFQUNLMUMsSUFETCxDQUNVLFlBQVk7WUFDZDFCLENBQUMsQ0FBQyxDQUFELENBQUQ7VUFDSCxDQUhMLFdBSVcsVUFBVXRDLENBQVYsRUFBYTtZQUNoQjhGLENBQUMsQ0FBQzlGLENBQUQsQ0FBRDtVQUNILENBTkw7UUFPSDtNQVpXLENBQWhCO0lBY0gsQ0FmTSxDQUFQO0VBZ0JILENBbEJEOztFQW1CQUEsQ0FBQyxDQUFDdUIsU0FBRixDQUFZMFQsV0FBWixHQUEwQixVQUFValYsQ0FBVixFQUFhO0lBQ25Dc0IsRUFBRSxDQUFDNFQsK0JBQUgsSUFDSTVULEVBQUUsQ0FBQzRULCtCQUFILENBQW1DO01BQUNySyxJQUFJLEVBQUU3SyxDQUFQO01BQVVvRSxPQUFPLEVBQUUsbUJBQVksQ0FBRSxDQUFqQztNQUFtQ0csSUFBSSxFQUFFLGdCQUFZLENBQUU7SUFBdkQsQ0FBbkMsQ0FESjtFQUVILENBSEQ7O0VBSUEsT0FBT3ZFLENBQVA7QUFDSCxDQXZ6Qk8sRUFBUjs7QUF3ekJBbEIsT0FBTyxXQUFQLEdBQWtCaUIsQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9jID0gcmVxdWlyZShcImNcIik7XG52YXIgX2NvbSA9IHJlcXVpcmUoXCJjb21cIik7XG52YXIgX2VudiA9IHJlcXVpcmUoXCJlbnZcIik7XG52YXIgX2Vycm9yQ29kZSA9IHJlcXVpcmUoXCJlcnJvckNvZGVcIik7XG52YXIgX2V2dHMgPSByZXF1aXJlKFwiZXZ0c1wiKTtcbnZhciBfaWR4ID0gcmVxdWlyZShcImlkeFwiKTtcbnZhciBfcENvbnN0ID0gcmVxdWlyZShcInBDb25zdFwiKTtcbnZhciBfcmVxdWVzdCA9IHJlcXVpcmUoXCJyZXF1ZXN0XCIpO1xudmFyIF90aW1lID0gcmVxdWlyZShcInRpbWVcIik7XG52YXIgX3VEYXRhID0gcmVxdWlyZShcInVEYXRhXCIpO1xudmFyIF90aXBNZ3IgPSByZXF1aXJlKFwidGlwTWdyXCIpO1xudmFyIHkgPSBcImVudi1uQlQ1cUZsejNQXCI7XG52YXIgbSA9IFwiMWp0dzN3amFicjB1aVwiO1xudmFyIHYgPSBcIjRtMjkzNjVqMGQyazNhZ241Y1wiO1xudmFyIF8gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHQoKSB7XG4gICAgICAgIHRoaXMuaXNTaGFyaW5nID0gITE7XG4gICAgICAgIHRoaXMuc2RrU3dpdGNoID0gX3BDb25zdC5EZWZhdWx0U0RLU3dpdGNoO1xuICAgICAgICB0aGlzLnZpZGVvQ2hlY2tlZE1hcCA9IHt9O1xuICAgICAgICB0aGlzLnZpZGVvQ2hlY2tlZExhc3RUID0ge307XG4gICAgICAgIHRoaXMudW5pcXVlVmlkZW9Vbml0SWQgPSB2O1xuICAgICAgICB0aGlzLmlzTG9hZGluZyA9ICExO1xuICAgICAgICB0aGlzLmlzTG9nZ2VkSW4gPSAhMTtcbiAgICAgICAgdGhpcy5vbkhpZGVUID0gMDtcbiAgICAgICAgdGhpcy5ub0FkID0gITE7XG4gICAgICAgIHRoaXMubm9WaWRlbyA9ICExO1xuICAgICAgICB0aGlzLmxhc3RJbnRlckFkU2hvd1QgPSAwO1xuICAgICAgICB0aGlzLnN3aXRjaGVzSW5pdGQgPSAhMTtcbiAgICAgICAgdGhpcy5nYW1lUmVjb3JkZXIgPSBudWxsO1xuICAgICAgICB0aGlzLnRhID0gbnVsbDtcbiAgICAgICAgdGhpcy5tX25TdGFydFJlY29yZFQgPSAwO1xuICAgICAgICB0aGlzLm1fblJlY29yZFQgPSAwO1xuICAgICAgICB0aGlzLm1fYklzUmVjb3JkaW5nID0gITE7XG4gICAgICAgIHRoaXMubV9uQXV0b1N0b3BWaWRlb0lkID0gMDtcbiAgICAgICAgdGhpcy5tX3N0clZpZGVvUGF0aCA9IFwiXCI7XG4gICAgICAgIHRoaXMub25LZXlib2FyZENvbXBsZXRlID0gdHQub25LZXlib2FyZENvbXBsZXRlO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsIFwiYXBwSWRcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBcInR0NmQyYzFiOTFmMjFkNDc0OTAyXCI7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6ICExLFxuICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgfSk7XG4gICAgdC5wcm90b3R5cGUuc3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3BDb25zdC5QRkNvZGUuQnl0ZWRhbmNlO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5pbml0VmVyc2lvbigpO1xuICAgICAgICB0aGlzLmluaXRCeXRlRGFuY2VMaXN0ZW5lcigpO1xuICAgICAgICB0aGlzLmluaXRDb21tb25TZXR0aW5nKCk7XG4gICAgICAgIHRoaXMuaW5pdFRnYSgpO1xuICAgICAgICB0aGlzLmluaXRWaWRlb1JlY29yZGVyKCk7XG4gICAgICAgIHRoaXMudXBsb2FkQWRFdmVudChcImFjdGl2ZVwiLCB7fSk7XG4gICAgICAgIHZhciB0ID0gdHQuZ2V0TGF1bmNoT3B0aW9uc1N5bmMoKTtcbiAgICAgICAgdmFyIGUgPSAobnVsbCA9PSB0ID8gdm9pZCAwIDogdC5zY2VuZSkgfHwgXCIwXCI7XG4gICAgICAgIHRoaXMuYnlTbGlkZXIgPSBcIjAyMTAzNlwiID09IGU7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5pbml0VmVyc2lvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQ7XG4gICAgICAgIHZhciBlO1xuICAgICAgICB0aGlzLnZlcnNpb24gPVxuICAgICAgICAgICAgdHQuZ2V0RW52SW5mb1N5bmMgJiZcbiAgICAgICAgICAgIChudWxsID09PSAoZSA9IG51bGwgPT09ICh0ID0gdHQuZ2V0RW52SW5mb1N5bmMoKSkgfHwgdm9pZCAwID09PSB0ID8gdm9pZCAwIDogdC5taWNyb2FwcCkgfHwgdm9pZCAwID09PSBlXG4gICAgICAgICAgICAgICAgPyB2b2lkIDBcbiAgICAgICAgICAgICAgICA6IGUubXBWZXJzaW9uKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmluaXRUZ2EgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICB0LnByb3RvdHlwZS5pc1N3aXRjaGVkSW5pdGQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN3aXRjaGVzSW5pdGQ7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5pbml0Qnl0ZURhbmNlTGlzdGVuZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ID0gdGhpcztcbiAgICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgICB0dC5vblNob3coZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIF91RGF0YS5kZWZhdWx0Lmlucy5zeW5jTGF1bmNoT3B0aW9uKHQpLFxuICAgICAgICAgICAgICAgIGUuaXNTaGFyaW5nIHx8IGUucmVlbnRlcigpLFxuICAgICAgICAgICAgICAgIGUuc3RhcnRTdG9wUmVjb3JkVGltZW91dChNYXRoLm1heCgxZTMsIF9wQ29uc3QuVklERU9fUkVDT1JEX0xJTUlUIC0gZS5tX25SZWNvcmRUKSksXG4gICAgICAgICAgICAgICAgKGUuYnlTbGlkZXIgPSBcImhvbWVwYWdlXCIgPT0gdC5sYXVuY2hfZnJvbSAmJiBcInNpZGViYXJfY2FyZFwiID09IHQubG9jYXRpb24pLFxuICAgICAgICAgICAgICAgIF9ldnRzLmRlZmF1bHQub3BFLmVtaXQoe2FjdGlvbjogX2V2dHMuZGVmYXVsdC5TbGlkZXJfQ2hnfSksXG4gICAgICAgICAgICAgICAgTWF0aC5hYnMoRGF0ZS5ub3coKSAvIDFlMyAtIGUub25IaWRlVCkgPiAzMDBcbiAgICAgICAgICAgICAgICAgICAgPyBlLnN5bmNUaW1lKCkudGhlbihmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0ICYmIF90aW1lLmRlZmF1bHQuaW5zLnN5bmModCksIF9ldnRzLmRlZmF1bHQucGxFLmVtaXQoe29uU2hvdzogITAsIGlzU2hhcmluZzogZS5pc1NoYXJpbmd9KTtcbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICA6IF9ldnRzLmRlZmF1bHQucGxFLmVtaXQoe29uU2hvdzogITAsIGlzU2hhcmluZzogZS5pc1NoYXJpbmd9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHR0LmNoZWNrU2NlbmUgJiZcbiAgICAgICAgICAgIHR0LmNoZWNrU2NlbmUoe1xuICAgICAgICAgICAgICAgIHNjZW5lOiBcInNpZGViYXJcIixcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICB0LnNpZGViYXJFeGlzdCA9IGUuaXNFeGlzdDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uICgpIHt9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgdHQub25IaWRlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIChlLm9uSGlkZVQgPSBfdGltZS5kZWZhdWx0Lmlucy5zZXJ2ZXJUaW1lKSxcbiAgICAgICAgICAgICAgICBfZXZ0cy5kZWZhdWx0LnBsRS5lbWl0KHtvbkhpZGU6ICEwfSksXG4gICAgICAgICAgICAgICAgZS5jbGVhclN0b3BSZWNvcmRUaW1lb3V0KCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0dC5vbkVycm9yKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICBfZW52LmVudi5tb2RlICE9PSBfZW52LkVNLlBST0QgJiZcbiAgICAgICAgICAgICAgICB0dC5zaG93TW9kYWwoe1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogdC5tZXNzYWdlIHx8IFwi5byC5bi45oql6ZSZXCIsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IHQuc3RhY2sgfHwgdCArIFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIHNob3dDYW5jZWw6ICExLFxuICAgICAgICAgICAgICAgICAgICBjb25maXJtVGV4dDogXCLlpb3nmoRcIlxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdHQuY2FuSVVzZShcIm9uTWVtb3J5V2FybmluZ1wiKSAmJlxuICAgICAgICAgICAgdHQub25NZW1vcnlXYXJuaW5nKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0dC50cmlnZ2VyR0MoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB0dC5vblNoYXJlQXBwTWVzc2FnZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX3BDb25zdC5TREtDb25maWcuc2hhcmVEYXRhKCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0dC5zaG93U2hhcmVNZW51KHtzdWNjZXNzOiBmdW5jdGlvbiAoKSB7fSwgZmFpbDogZnVuY3Rpb24gKCkge319KTtcbiAgICAgICAgdmFyIG8gPSB0dC5nZXRVcGRhdGVNYW5hZ2VyKCk7XG4gICAgICAgIG8ub25DaGVja0ZvclVwZGF0ZShmdW5jdGlvbiAoKSB7fSk7XG4gICAgICAgIG8ub25VcGRhdGVGYWlsZWQoZnVuY3Rpb24gKCkge30pO1xuICAgICAgICBvLm9uVXBkYXRlUmVhZHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdHQuc2hvd01vZGFsKHtcbiAgICAgICAgICAgICAgICB0aXRsZTogXCLmm7TmlrDmj5DnpLpcIixcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIuaWsOeJiOacrOW3sue7j+WHhuWkh+Wlve+8jOaYr+WQpumHjeWQr+Wwj+a4uOaIj++8n1wiLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgICAgIHQuY29uZmlybSAmJiBvLmFwcGx5VXBkYXRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuaW5pdENvbW1vblNldHRpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF91RGF0YS5kZWZhdWx0Lmlucy5zeW5jTGF1bmNoT3B0aW9uKHR0LmdldExhdW5jaE9wdGlvbnNTeW5jKCkpO1xuICAgICAgICB0dC5nZXROZXR3b3JrVHlwZSh7c3VjY2VzczogZnVuY3Rpb24gKCkge30sIGZhaWw6IGZ1bmN0aW9uICgpIHt9fSk7XG4gICAgICAgIF9ldnRzLmRlZmF1bHQuY2hFLm9uKGZ1bmN0aW9uICgpIHt9KTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmluaXRDbG91ZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICB0dC5sb2dpbih7XG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0dC5jcmVhdGVDbG91ZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgdHQuY2FuSVVzZShcImNyZWF0ZUNsb3VkXCIpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAoX2lkeC5wbGF0Zm9ybS5jbG91ZCA9IHR0LmNyZWF0ZUNsb3VkKHtlbnZJRDogeSwgc2VydmljZUlEOiBtfSkpO1xuICAgICAgICAgICAgICAgICAgICB0KF9pZHgucGxhdGZvcm0uc3luY1RpbWUoKSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHQobnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuc2V0QWNjb3VudElEID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfZW52LmVudi5tb2RlO1xuICAgICAgICBfZW52LkVNLlRFU1Q7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5sb2dpbiA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgMixcbiAgICAgICAgICAgICAgICAgICAgbmV3IFByb21pc2UoZnVuY3Rpb24gKGUsIG8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR0LmxvZ2luKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAobikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobiAmJiBuLmNvZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWR4LnBsYXRmb3JtLmNsb3VkIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKF9pZHgucGxhdGZvcm0uY2xvdWQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0dC5jcmVhdGVDbG91ZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0dC5jYW5JVXNlKFwiY3JlYXRlQ2xvdWRcIikgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHQuY3JlYXRlQ2xvdWQoe2VudklEOiB5LCBzZXJ2aWNlSUQ6IG19KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodCA+IDIgfHwgIWkpIHJldHVybiB2b2lkIGUobik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpLmNhbGxDb250YWluZXIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IFwiL2luZGV4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcjoge1wiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwifSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZW91dDogMmUzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbyA9IHQuZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG8pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCJzdHJpbmdcIiA9PSB0eXBlb2YgbylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaSA9IEpTT04ucGFyc2Uobyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG4ub3BlbmlkID0gaS5pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuLnVuaW9uaWQgPSBpLmo7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAodCkge31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgKG4ub3BlbmlkID0gby5pKSwgKG4udW5pb25pZCA9IG8uaik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUobik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvKF9lcnJvckNvZGUuZXJyb3JDb2RlLlBGX0NMT1VEX0VSUik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBjb25zb2xlLndhcm4oXCLlpLTmnaHnmbvpmYblpLHotKXvvJplbXB0eSBjb2RlXCIpLCBvKF9lcnJvckNvZGUuZXJyb3JDb2RlLkxPR0lOX0VSUik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZSA9IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgIT0gdCAmJiBudWxsICE9IHQuZXJyTXNnICYmIChlID0gdC5lcnJNc2cpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCLlpLTmnaHnmbvpmYblpLHotKXvvJpcIiwgZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG8oX2Vycm9yQ29kZS5lcnJvckNvZGUuTE9HSU5fRVJSKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuc3luY1RpbWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgdmFyIGUgPVxuICAgICAgICAgICAgICAgIF9pZHgucGxhdGZvcm0uY2xvdWQgfHxcbiAgICAgICAgICAgICAgICAoX2lkeC5wbGF0Zm9ybS5jbG91ZCA9XG4gICAgICAgICAgICAgICAgICAgIHR0LmNyZWF0ZUNsb3VkICYmIHR0LmNhbklVc2UoXCJjcmVhdGVDbG91ZFwiKSAmJiB0dC5jcmVhdGVDbG91ZCh7ZW52SUQ6IHksIHNlcnZpY2VJRDogbX0pKTtcbiAgICAgICAgICAgIGVcbiAgICAgICAgICAgICAgICA/IGUuY2FsbENvbnRhaW5lcih7XG4gICAgICAgICAgICAgICAgICAgICAgcGF0aDogXCIvZ1RpbWVcIixcbiAgICAgICAgICAgICAgICAgICAgICBpbml0OiB7bWV0aG9kOiBcIkdFVFwiLCBoZWFkZXI6IHtcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIn0sIHRpbWVvdXQ6IDJlM30sXG4gICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG87XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuID0gZS5kYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcInN0cmluZ1wiID09IHR5cGVvZiBuKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG8gPSBKU09OLnBhcnNlKG4pLnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgbyA9IG4udDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdChvIHx8IG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdChudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIDogdChudWxsKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5yZWVudGVyID0gZnVuY3Rpb24gKCkge307XG4gICAgdC5wcm90b3R5cGUuZ2V0Q2xvdWREYXRhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdDtcbiAgICAgICAgICAgIHZhciBlO1xuICAgICAgICAgICAgdmFyIG87XG4gICAgICAgICAgICB2YXIgbjtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoaSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoaS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKHQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZHgucGxhdGZvcm0uY2xvdWQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoX2lkeC5wbGF0Zm9ybS5jbG91ZCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR0LmNyZWF0ZUNsb3VkICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR0LmNhbklVc2UoXCJjcmVhdGVDbG91ZFwiKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0dC5jcmVhdGVDbG91ZCh7ZW52SUQ6IHksIHNlcnZpY2VJRDogbX0pKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFs0LCB0LmRhdGFiYXNlKCldXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBbMywgM107XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAobyA9IGkuc2VudCgpKSA/ICgobiA9IG8uY29sbGVjdGlvbihcInVzZXJEYXRhXCIpKSwgWzQsIF9pZHgucGxhdGZvcm0uX2NoZWNrKG4pXSkgOiBbMywgM107XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgIChlID0gaS5zZW50KCkpLCAoaS5sYWJlbCA9IDMpO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIsIGVdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLl9jaGVjayA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgMixcbiAgICAgICAgICAgICAgICAgICAgbmV3IFByb21pc2UoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHQuZ2V0KFwiaWRcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2lkeC5wbGF0Zm9ybS5pc0NoZWNrID0gITA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbyA9IHQuZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvICYmIG8ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG4gPSBvWzBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZHgucGxhdGZvcm0uZGJJZCA9IG4uX2lkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpID0gSlNPTi5wYXJzZShuLnVEYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZShpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGUobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBlKG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGUobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnNldENsb3VkRGF0YSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBlO1xuICAgICAgICAgICAgdmFyIG87XG4gICAgICAgICAgICB2YXIgbjtcbiAgICAgICAgICAgIHZhciByO1xuICAgICAgICAgICAgdmFyIGE7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGkubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChlID0gdGhpcykuaXNTYXZpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFsyXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogKG8gPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuY2xvdWQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZS5jbG91ZCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR0LmNyZWF0ZUNsb3VkICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR0LmNhbklVc2UoXCJjcmVhdGVDbG91ZFwiKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0dC5jcmVhdGVDbG91ZCh7ZW52SUQ6IHksIHNlcnZpY2VJRDogbX0pKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFs0LCBvLmRhdGFiYXNlKCldXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBbMywgMl07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKG4gPSBpLnNlbnQoKSkpIHJldHVybiBbMl07XG4gICAgICAgICAgICAgICAgICAgICAgICAoZS5pc1NhdmluZyA9ICEwKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAociA9IG4uY29sbGVjdGlvbihcInVzZXJEYXRhXCIpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYSA9IFByb21pc2UucmVzb2x2ZSgpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLmlzQ2hlY2sgfHwgKGEgPSB0aGlzLl9jaGVjayhyKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLmRiSWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZG9jKGUuZGJJZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudXBkYXRlKHt1RGF0YTogdH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWR4LnBsYXRmb3JtLmlzU2F2aW5nID0gITE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHIuYWRkKHt1RGF0YTogdH0pLnRoZW4oZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWR4LnBsYXRmb3JtLmRiSWQgPSB0LmlkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZHgucGxhdGZvcm0uaXNTYXZpbmcgPSAhMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKFwi5YaZ5YWl5aSx6LSlXCIsIHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaS5sYWJlbCA9IDIpO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzJdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmdldFN0b3JhZ2UgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdmFyIGUgPSB0dC5nZXRTdG9yYWdlU3luYyh0KTtcbiAgICAgICAgICAgIHJldHVybiBudWxsID09IGUgfHwgXCJcIiA9PSBlID8gbnVsbCA6IEpTT04ucGFyc2UoZSk7XG4gICAgICAgIH0gY2F0Y2ggKG8pIHt9XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5zZXRTdG9yYWdlID0gZnVuY3Rpb24gKHQsIGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHR0LnNldFN0b3JhZ2VTeW5jKHQsIEpTT04uc3RyaW5naWZ5KGUpKTtcbiAgICAgICAgfSBjYXRjaCAobykge31cbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmNsZWFyU3RvcmFnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHR0LmNsZWFyU3RvcmFnZVN5bmMoKTtcbiAgICAgICAgfSBjYXRjaCAodCkge31cbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnJlbW92ZVN0b3JhZ2UgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdHQucmVtb3ZlU3RvcmFnZVN5bmModCk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS50cmFja0xvZ2luID0gZnVuY3Rpb24gKCkge307XG4gICAgdC5wcm90b3R5cGUudHJhY2tVc2VyU2V0ID0gZnVuY3Rpb24gKCkge307XG4gICAgdC5wcm90b3R5cGUudHJhY2tVc2VyU2V0T25jZSA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIHQucHJvdG90eXBlLnRyYWNrRXZlbnQgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICB0LnByb3RvdHlwZS5nZXRTZXEgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICB0LnByb3RvdHlwZS5jb25zdW1lU2VxID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChlLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0LnNlcXVlbmNlSW5mby50eXBlICE9IF9wQ29uc3QuU1REU2VxVHlwZS5WSURFTyA/IFszLCAyXSA6IFs0LCB0aGlzLmRvV2F0Y2hBRCh0KV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIGUuc2VudCgpLCB0aGlzLmRvU2hhcmUoKSwgKGUubGFiZWwgPSAyKTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5kb1dhdGNoQUQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgZTtcbiAgICAgICAgICAgIHZhciBvO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ub0FkXG4gICAgICAgICAgICAgICAgICAgID8gWzJdXG4gICAgICAgICAgICAgICAgICAgIDogdGhpcy5ub1ZpZGVvXG4gICAgICAgICAgICAgICAgICAgID8gKGNvbnNvbGUuZXJyb3IoXCJbZXJyb3JdIG5vIHZpZGVvXCIpLCBbMiwgUHJvbWlzZS5yZWplY3QoX3BDb25zdC5WaWRlb0ZhaWxDb2RlLk5PX0FEKV0pXG4gICAgICAgICAgICAgICAgICAgIDogKF9ldnRzLmRlZmF1bHQuYWRFLmVtaXQoX2MuQURFLlZJREVPKSxcbiAgICAgICAgICAgICAgICAgICAgICAoZSA9IHRoaXMudW5pcXVlVmlkZW9Vbml0SWQpLFxuICAgICAgICAgICAgICAgICAgICAgIG51bGwgPT0gdGhpcy52aWRlb0FkICYmICh0aGlzLnZpZGVvQWQgPSB0dC5jcmVhdGVSZXdhcmRlZFZpZGVvQWQoe2FkVW5pdElkOiBlfSkpLFxuICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmcoKSxcbiAgICAgICAgICAgICAgICAgICAgICAobyA9IHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgMixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IFByb21pc2UoZnVuY3Rpb24gKG4sIGkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG8udmlkZW9BZC5vbkNsb3NlKGZ1bmN0aW9uIGEocykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgIT0gby52aWRlb0FkICYmIG8udmlkZW9BZC5vZmZDbG9zZShhKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCAhPSBzICYmIHMuaXNFbmRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAoX2V2dHMuZGVmYXVsdC5hZEUuZW1pdChfYy5BREUuVklERU9fRU5EKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgby50cmFja0V2ZW50KFwidmlkZW9cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcDogXCJjb21wbGV0ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5pdDogZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHQudmlkZW9Tb3VyY2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtOiB0Lml0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG4oMSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IChfZXZ0cy5kZWZhdWx0LmFkRS5lbWl0KF9jLkFERS5WSURFT19FTkQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpKF9wQ29uc3QuVmlkZW9GYWlsQ29kZS5DQU5DRUxFRCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvLnZpZGVvQWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2hvdygpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge30pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2V2dHMuZGVmYXVsdC5hZEUuZW1pdChfYy5BREUuVklERU9fRU5EKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgby52aWRlb0FkLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgby52aWRlb0FkID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaShfcENvbnN0LlZpZGVvRmFpbENvZGUuTk9fQUQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvLmhpZGVMb2FkaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5kb1NoYXJlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbMl07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5fYXNrUmVTaGFyZSA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIHQucHJvdG90eXBlLmNhblVzZSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHJldHVybiBfY29tLmRlZmF1bHQuaW5zLmNvbXBhcmVWZXJzaW9uKF9pZHgucGxhdGZvcm0uZ2V0U3lzdGVtRGF0YSgpLlNES1ZlcnNpb24sIHQpID49IDA7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5nZXRTeXN0ZW1EYXRhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLnN5c3RlbUluZm9DYWNoZSlcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zeXN0ZW1JbmZvQ2FjaGUgPSB0dC5nZXRTeXN0ZW1JbmZvU3luYygpO1xuICAgICAgICAgICAgfSBjYXRjaCAodCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfcENvbnN0LkRlZmF1bHRTeXN0ZW1JbmZvO1xuICAgICAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5zeXN0ZW1JbmZvQ2FjaGU7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5nZXRTd2l0Y2hlcyA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIHQucHJvdG90eXBlLnZpYnJhdGUgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0ID09IF9wQ29uc3QuVkVudW00LlNIT1JUXG4gICAgICAgICAgICA/IHR0LnZpYnJhdGVTaG9ydChudWxsKVxuICAgICAgICAgICAgOiB0ID09IF9wQ29uc3QuVkVudW00LkxPTkcgJiYgdHQudmlicmF0ZUxvbmcoe3N1Y2Nlc3M6IGZ1bmN0aW9uICgpIHt9LCBmYWlsOiBmdW5jdGlvbiAoKSB7fX0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUucHJlbG9hZFZpZGVvID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gITE7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5zaG93TW9kYWwgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHR0LnNob3dNb2RhbChcbiAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHQpLCB7XG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0LmNvbmZpcm0gPyBlKCEwKSA6IHQuY2FuY2VsICYmIGUoITEpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlKCExKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnJlZnJlc2hHYW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdHQucmVzdGFydE1pbmlQcm9ncmFtU3luYygpO1xuICAgICAgICB9IGNhdGNoICh0KSB7XG4gICAgICAgICAgICB0dC5leGl0TWluaVByb2dyYW0oKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdC5wcm90b3R5cGUuc2hvd0xvYWRpbmcgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB2b2lkIDAgPT09IHQgJiYgKHQgPSBcIuWKoOi9veS4rVwiKTtcbiAgICAgICAgdGhpcy5jYW5Vc2UoXCIxLjAuMFwiKSAmJiAoKHRoaXMuaXNMb2FkaW5nID0gITApLCB0dC5zaG93TG9hZGluZyh7dGl0bGU6IHQsIG1hc2s6ICEwfSkpO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuaGlkZUxvYWRpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuY2FuVXNlKFwiMS4wLjBcIikgJiYgdGhpcy5pc0xvYWRpbmcgJiYgKHR0LmhpZGVMb2FkaW5nKCksICh0aGlzLmlzTG9hZGluZyA9ICExKSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5sb2cgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICB0LnByb3RvdHlwZS5nZXRNZW51Qm91bmRpbmcgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICB0LnByb3RvdHlwZS5jcmVhdGVTaGFyZUltYWdlID0gZnVuY3Rpb24gKCkge307XG4gICAgdC5wcm90b3R5cGUucHJlbG9hZEludGVyc3RpdGlhbEFEID0gZnVuY3Rpb24gKCkge307XG4gICAgdC5wcm90b3R5cGUuc2hvd0ludGVyc3RpdGlhbEFEID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbMiwgbnVsbF07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5jYW5TaG93QmFubmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gITE7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5nZXRCYW5uZXJTaXplID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbmV3IGNjLlNpemUoMCwgMCk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5zaG93QmFubmVyID0gZnVuY3Rpb24gKCkge307XG4gICAgdC5wcm90b3R5cGUuaGlkZUJhbm5lciA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIHQucHJvdG90eXBlLmdldFN1YnNjcmliZUNudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gWzIsIDBdO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuc3Vic2NyaWJlID0gZnVuY3Rpb24gKCkge307XG4gICAgdC5wcm90b3R5cGUuaW5pdFZpZGVvUmVjb3JkZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuY2FuVXNlKFwiMS42LjFcIikgJiZcbiAgICAgICAgICAgICgodGhpcy5nYW1lUmVjb3JkZXIgPSB0dC5nZXRHYW1lUmVjb3JkZXJNYW5hZ2VyKCkpLFxuICAgICAgICAgICAgdGhpcy5nYW1lUmVjb3JkZXIub25TdGFydCh0aGlzLm9uVmlkZW9SZWNvcmRTdGFydC5iaW5kKHRoaXMpKSxcbiAgICAgICAgICAgIHRoaXMuZ2FtZVJlY29yZGVyLm9uU3RvcCh0aGlzLm9uVmlkZW9SZWNvcmRFbmQuYmluZCh0aGlzKSksXG4gICAgICAgICAgICB0aGlzLmdhbWVSZWNvcmRlci5vbkVycm9yKHRoaXMub25WaWRlb1JlY29yZEVycm9yLmJpbmQodGhpcykpKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnN0YXJ0VmlkZW9SZWNvcmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBudWxsICE9IHRoaXMuZ2FtZVJlY29yZGVyICYmXG4gICAgICAgICAgICAgICAgKCh0aGlzLm1fYklzUmVjb3JkaW5nID0gITApLFxuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZVJlY29yZGVyLnN0YXJ0KHtkdXJhdGlvbjogMC4wMDEgKiBfcENvbnN0LlZJREVPX1JFQ09SRF9MSU1JVCwgaXNNYXJrT3BlbjogITF9KSxcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0U3RvcFJlY29yZFRpbWVvdXQoX3BDb25zdC5WSURFT19SRUNPUkRfTElNSVQpKTtcbiAgICAgICAgfSBjYXRjaCAodCkge1xuICAgICAgICAgICAgdGhpcy5nYW1lUmVjb3JkZXIgPSBudWxsO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5wYXVzZVZpZGVvUmVjb3JkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBudWxsICE9IHRoaXMuZ2FtZVJlY29yZGVyICYmIHRoaXMubV9iSXNSZWNvcmRpbmcgJiYgKHRoaXMuZ2FtZVJlY29yZGVyLnBhdXNlKCksIHRoaXMuY2xlYXJTdG9wUmVjb3JkVGltZW91dCgpKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnJlc3VtZVZpZGVvUmVjb3JkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBudWxsICE9IHRoaXMuZ2FtZVJlY29yZGVyICYmXG4gICAgICAgICAgICB0aGlzLm1fYklzUmVjb3JkaW5nICYmXG4gICAgICAgICAgICAodGhpcy5nYW1lUmVjb3JkZXIucmVzdW1lKCksXG4gICAgICAgICAgICB0aGlzLnN0YXJ0U3RvcFJlY29yZFRpbWVvdXQoTWF0aC5tYXgoMWUzLCBfcENvbnN0LlZJREVPX1JFQ09SRF9MSU1JVCAtIHRoaXMubV9uUmVjb3JkVCkpKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnN0b3BWaWRlb1JlY29yZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbnVsbCAhPSB0aGlzLmdhbWVSZWNvcmRlciAmJlxuICAgICAgICAgICAgKHRoaXMuY2xlYXJTdG9wUmVjb3JkVGltZW91dCgpLCB0aGlzLmdhbWVSZWNvcmRlci5zdG9wKCksICh0aGlzLm1fYklzUmVjb3JkaW5nID0gITEpKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnN0YXJ0U3RvcFJlY29yZFRpbWVvdXQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0aGlzLm1fYklzUmVjb3JkaW5nICYmXG4gICAgICAgICAgICAoKHRoaXMubV9uQXV0b1N0b3BWaWRlb0lkID0gc2V0VGltZW91dCh0aGlzLmF1dG9TdG9wVmlkZW9SZWNvcmQuYmluZCh0aGlzKSwgdCAtIDFlMykpLFxuICAgICAgICAgICAgKHRoaXMubV9uU3RhcnRSZWNvcmRUID0gbmV3IERhdGUoKS5nZXRUaW1lKCkpKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmNsZWFyU3RvcFJlY29yZFRpbWVvdXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMubV9iSXNSZWNvcmRpbmcgJiZcbiAgICAgICAgICAgICgwICE9PSB0aGlzLm1fbkF1dG9TdG9wVmlkZW9JZCAmJiBjbGVhclRpbWVvdXQodGhpcy5tX25BdXRvU3RvcFZpZGVvSWQpLFxuICAgICAgICAgICAgKHRoaXMubV9uQXV0b1N0b3BWaWRlb0lkID0gMCksXG4gICAgICAgICAgICAodGhpcy5tX25SZWNvcmRUICs9IG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gdGhpcy5tX25TdGFydFJlY29yZFQpLFxuICAgICAgICAgICAgKHRoaXMubV9uU3RhcnRSZWNvcmRUID0gMCkpO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuYXV0b1N0b3BWaWRlb1JlY29yZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5tX25BdXRvU3RvcFZpZGVvSWQgPSAwO1xuICAgICAgICB0aGlzLnN0b3BWaWRlb1JlY29yZCgpO1xuICAgICAgICBzZXRUaW1lb3V0KHRoaXMuc3RhcnRWaWRlb1JlY29yZC5iaW5kKHRoaXMpLCAxMDApO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUub25WaWRlb1JlY29yZFN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLm1fc3RyVmlkZW9QYXRoID0gXCJcIjtcbiAgICAgICAgdGhpcy5tX25SZWNvcmRUID0gMDtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLm9uVmlkZW9SZWNvcmRFbmQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB2YXIgZTtcbiAgICAgICAgbnVsbCAhPSB0ICYmIG51bGwgIT0gdC52aWRlb1BhdGggJiYgKGUgPSB0aGlzLm1fc3RyVmlkZW9QYXRoID0gdC52aWRlb1BhdGgpO1xuICAgICAgICBlICYmIF9ldnRzLmRlZmF1bHQub3BFLmVtaXQoe2FjdGlvbjogX2V2dHMuZGVmYXVsdC5TSE9XVklERU9TSEFSRX0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUub25WaWRlb1JlY29yZEVycm9yID0gZnVuY3Rpb24gKCkge307XG4gICAgdC5wcm90b3R5cGUuaGFzVmlkZW9SZWNvcmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBudWxsICE9IHRoaXMubV9zdHJWaWRlb1BhdGggJiYgXCJcIiAhPT0gdGhpcy5tX3N0clZpZGVvUGF0aDtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnNoYXJlVmlkZW9SZWNvcmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0O1xuICAgICAgICB2YXIgZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICB0ID0gZTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh0aGlzLmhhc1ZpZGVvUmVjb3JkKCkgJiYgdHQuc2hhcmVBcHBNZXNzYWdlKSB7XG4gICAgICAgICAgICB2YXIgbyA9IFtfZW52LmVudi5uYW1lLCBcIuWls+eUn+a4uOaIj+aOqOiNkFwiLCBcIuiEkea0nua4uOaIj1wiLCBcIueDp+iEkeebiuaZulwiXTtcbiAgICAgICAgICAgIHZhciBuID0gX3BDb25zdC5TREtDb25maWcuc2hhcmVEYXRhKCk7XG4gICAgICAgICAgICB0dC5zaGFyZUFwcE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgIHRpdGxlOiBcIuaIkeassuS/ruS7mVwiLFxuICAgICAgICAgICAgICAgIGNoYW5uZWw6IFwidmlkZW9cIixcbiAgICAgICAgICAgICAgICBkZXNjOiBcIuadpeaMkeaImOS4gOS4i1wiLFxuICAgICAgICAgICAgICAgIHF1ZXJ5OiBuLnF1ZXJ5LFxuICAgICAgICAgICAgICAgIGV4dHJhOiB7d2l0aFZpZGVvSWQ6ICEwLCB2aWRlb1BhdGg6IHRoaXMubV9zdHJWaWRlb1BhdGgsIHZpZGVvX3RpdGxlOiBuLnRpdGxlLCB2aWRlb1RvcGljczogb30sXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBfdGlwTWdyLmRlZmF1bHQuaW5zLnNob3dUaXAoXCLliIbkuqvmiJDlip9cIik7XG4gICAgICAgICAgICAgICAgICAgIHQoMSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aXBNZ3IuZGVmYXVsdC5pbnMuc2hvd1RpcChcIuWIhuS6q+Wksei0pVwiKTtcbiAgICAgICAgICAgICAgICAgICAgdCgwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHQoMCk7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUudXBsb2FkQWRFdmVudCA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIHQucHJvdG90eXBlLlBvc3RNZXNzYWdlID0gZnVuY3Rpb24gKHQsIGUsIG8pIHtcbiAgICAgICAgdHQuZ2V0T3BlbkRhdGFDb250ZXh0KCkucG9zdE1lc3NhZ2Uoe0V2ZW46IHQsIFZhbHVlMTogZSwgVmFsdWUyOiBvfSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5TZXRVc2VyQ2xvdWRTdG9yYWdlID0gZnVuY3Rpb24gKHQsIGUsIG8pIHtcbiAgICAgICAgdmFyIG4gPSBuZXcgRGF0ZSgpO1xuICAgICAgICB0dC5zZXRVc2VyQ2xvdWRTdG9yYWdlKHtcbiAgICAgICAgICAgIEtWRGF0YUxpc3Q6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGtleTogXCJsZXZlbFwiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdC50b1N0cmluZygpICsgXCIjXCIgKyBuLmdldFRpbWUoKS50b1N0cmluZygpICsgXCIjXCIgKyBlLnRvU3RyaW5nKCkgKyBcIiNcIiArIG8udG9TdHJpbmcoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoKSB7fSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uICgpIHt9XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuR2V0T3BlbkRhdGFDb250ZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdHQuZ2V0T3BlbkRhdGFDb250ZXh0KCk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5hZGRTaG9ydGN1dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdHQuYWRkU2hvcnRjdXQoe1xuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF9ldnRzLmRlZmF1bHQub3BFLmVtaXQoe2FjdGlvbjogX2V2dHMuZGVmYXVsdC5BRERfREVTS1RPUCwgZGF0YTogITB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX2V2dHMuZGVmYXVsdC5vcEUuZW1pdCh7YWN0aW9uOiBfZXZ0cy5kZWZhdWx0LkFERF9ERVNLVE9QLCBkYXRhOiAhMX0pO1xuICAgICAgICAgICAgICAgIF90aXBNZ3IuZGVmYXVsdC5pbnMuc2hvd1RpcChcIua3u+WKoOWksei0pVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5zaGFyZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICB2YXIgZSA9IF9wQ29uc3QuU0RLQ29uZmlnLnNoYXJlRGF0YSgpO1xuICAgICAgICAgICAgdHQuc2hhcmVBcHBNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICB0aXRsZTogZS50aXRsZSxcbiAgICAgICAgICAgICAgICBpbWFnZVVybDogZS5pbWFnZVVybCxcbiAgICAgICAgICAgICAgICBxdWVyeTogZS5xdWVyeSxcbiAgICAgICAgICAgICAgICBjaGFubmVsOiBcImludml0ZVwiLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHQoZS5kYXRhKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdCgwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5nZXRVc2VySW5mbyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKGUsIG8pIHtcbiAgICAgICAgICAgIGlmICh0dC5jYW5JVXNlKFwiZ2V0VXNlckluZm9cIikpIHtcbiAgICAgICAgICAgICAgICB2YXIgbiA9IHQ7XG4gICAgICAgICAgICAgICAgdHQuZ2V0U2V0dGluZyh7XG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0LmF1dGhTZXR0aW5nW1wic2NvcGUudXNlckluZm9cIl1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IG4uX2dldFVzZXJJbmZvKGUsIG8pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAhMSA9PT0gdC5hdXRoU2V0dGluZ1tcInNjb3BlLnVzZXJJbmZvXCJdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBuLnNob3dSZWZ1c2VUaXAoZSwgbylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IG4uX2dldFVzZXJJbmZvKGUsIG8pO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSBvKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuc2hvd1JlZnVzZVRpcCA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIHRoaXMuc2hvd01vZGFsKHtcbiAgICAgICAgICAgICAgICB0aXRsZTogXCLlj4vmg4Xmj5DnpLpcIixcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIueUs+ivt+S9v+eUqOaCqOeahOeUqOaIt+S/oeaBr++8jOWxleekuuaOkuihjOamnOOAglwiLFxuICAgICAgICAgICAgICAgIGNvbmZpcm1UZXh0OiBcIuWFgeiuuFwiLFxuICAgICAgICAgICAgICAgIGNhbmNlbFRleHQ6IFwi5ouS57udXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICkge1xuICAgICAgICAgICAgdmFyIG8gPSB0aGlzO1xuICAgICAgICAgICAgdHQub3BlblNldHRpbmcoe1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgby5fZ2V0VXNlckluZm8odCwgZSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIGUoKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLl9nZXRVc2VySW5mbyA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIHR0LmdldFVzZXJJbmZvKHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgdChlLnVzZXJJbmZvKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLm5hdmlnYXRlVG9TY2VuZSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZvaWQgMCA9PT0gdCAmJiAodCA9IFwic2lkZWJhclwiKTtcbiAgICAgICAgdHQubmF2aWdhdGVUb1NjZW5lKHtzY2VuZTogdCwgc3VjY2VzczogZnVuY3Rpb24gKCkge30sIGZhaWw6IGZ1bmN0aW9uICgpIHt9fSk7XG4gICAgfTtcbiAgICB0LnByb3RvdHlwZS5yZXBvcnRFdmVudCA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIHZvaWQgMCA9PT0gZSAmJiAoZSA9IHt9KTtcbiAgICAgICAgdHQucmVwb3J0QW5hbHl0aWNzKHQsIGUpO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUuc2V0RnJpZW5kUmFua0RhdGEgPSBmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICB2YXIgbztcbiAgICAgICAgdHQgJiZcbiAgICAgICAgICAgIChudWxsID09PSAobyA9IHR0LnNldEltUmFua0RhdGEpIHx8XG4gICAgICAgICAgICAgICAgdm9pZCAwID09PSBvIHx8XG4gICAgICAgICAgICAgICAgby5jYWxsKHR0LCB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAwLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdC50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICB6b25lSWQ6IGUsXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICgpIHt9LFxuICAgICAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7fVxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLnNob3dGcmllbmRSYW5rID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgaWYgKHR0KVxuICAgICAgICAgICAgaWYgKHR0LmdldEltUmFua0xpc3QpIHtcbiAgICAgICAgICAgICAgICB2YXIgZSA9IHQgPT09IF9wQ29uc3QuU0RLQ29uZmlnLnR0Wm9uZUlkLm5vcm1hbCA/IFwi5YWzXCIgOiBcIuWIhlwiO1xuICAgICAgICAgICAgICAgIHZhciBvID0gdCA9PT0gX3BDb25zdC5TREtDb25maWcudHRab25lSWQubm9ybWFsID8gXCLkuLvnur/mjpLooYxcIiA6IFwi5aW95Y+L6Laj5ZGz6LWb5o6S6KGMXCI7XG4gICAgICAgICAgICAgICAgdmFyIG4gPSAoX3BDb25zdC5TREtDb25maWcudHRab25lSWQubm9ybWFsLCBcImFsbFwiKTtcbiAgICAgICAgICAgICAgICB2YXIgaSA9IHQgPT09IF9wQ29uc3QuU0RLQ29uZmlnLnR0Wm9uZUlkLm5vcm1hbCA/IFwiYWxsXCIgOiBcImZyaWVuZFwiO1xuICAgICAgICAgICAgICAgIHR0LmdldEltUmFua0xpc3Qoe1xuICAgICAgICAgICAgICAgICAgICByZWxhdGlvblR5cGU6IGksXG4gICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAwLFxuICAgICAgICAgICAgICAgICAgICByYW5rVHlwZTogbixcbiAgICAgICAgICAgICAgICAgICAgc3VmZml4OiBlLFxuICAgICAgICAgICAgICAgICAgICByYW5rVGl0bGU6IG8sXG4gICAgICAgICAgICAgICAgICAgIHpvbmVJZDogdCxcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKCkge30sXG4gICAgICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uICgpIHt9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2VcbiAgICAgICAgICAgICAgICB0dC5zaG93TW9kYWwoe1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCLmj5DnpLpcIixcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCLlvZPliY3lrqLmiLfnq6/niYjmnKzov4fkvY7vvIzml6Dms5Xkvb/nlKjor6Xlip/og73vvIzor7fljYfnuqflrqLmiLfnq6/miJblhbPpl63lkI7ph43lkK/mm7TmlrDjgIJcIlxuICAgICAgICAgICAgICAgIH0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUucGF5bWVudCA9IGZ1bmN0aW9uICh0LCBlLCBvLCBuKSB7XG4gICAgICAgIHZhciBpID0gdGhpcztcbiAgICAgICAgdm9pZCAwID09PSB0ICYmICh0ID0gXCIxXCIpO1xuICAgICAgICB2b2lkIDAgPT09IGUgJiYgKGUgPSAxKTtcbiAgICAgICAgdm9pZCAwID09PSBvICYmIChvID0gMCk7XG4gICAgICAgIHZhciByID0gX2lkeC5wbGF0Zm9ybS5nZXRTeXN0ZW1EYXRhKCk7XG4gICAgICAgIHZhciBhID0gXCJhbmRyb2lkXCI7XG4gICAgICAgIHIgJiYgLTEgIT0gci5zeXN0ZW0uaW5kZXhPZihcImlPU1wiKSAmJiAoYSA9IFwiaU9TXCIpO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHIsIHMpIHtcbiAgICAgICAgICAgIGkuY2hlY2tTZXNzaW9uKClcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpID0gX3JlcXVlc3QuZGVmYXVsdC5pbnMub3BlbklkO1xuICAgICAgICAgICAgICAgICAgICB2YXIgYyA9IF90aW1lLmRlZmF1bHQuaW5zLnNlcnZlclRpbWU7XG4gICAgICAgICAgICAgICAgICAgIHZhciBsID0gdCArIGkgKyBjO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdSA9IHt9O1xuICAgICAgICAgICAgICAgICAgICB1LmNwX29yZGVybm8gPSBsO1xuICAgICAgICAgICAgICAgICAgICB1LmNyZWF0aW9uX3RpbWUgPSBjO1xuICAgICAgICAgICAgICAgICAgICB1Lm9wZW5pZCA9IGk7XG4gICAgICAgICAgICAgICAgICAgIHUubW9uZXkgPSBlO1xuICAgICAgICAgICAgICAgICAgICB1LmdpZnRfaWQgPSB0O1xuICAgICAgICAgICAgICAgICAgICB1LmdpZnRfbnVtID0gMTtcbiAgICAgICAgICAgICAgICAgICAgdS5zdGF0dXMgPSAwO1xuICAgICAgICAgICAgICAgICAgICB1LmlzX2RvdWJsZSA9IG87XG4gICAgICAgICAgICAgICAgICAgIHUucGFja2FnZSA9IG47XG4gICAgICAgICAgICAgICAgICAgIHUucGhvbmUgPSBhO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcCA9IHt9O1xuICAgICAgICAgICAgICAgICAgICBwLm9wZW5pZCA9IGk7XG4gICAgICAgICAgICAgICAgICAgIHAuZ2lmdF9pZCA9IHQ7XG4gICAgICAgICAgICAgICAgICAgIHAuZ2lmdF9udW0gPSAxO1xuICAgICAgICAgICAgICAgICAgICBwLm1vbmV5ID0gZTtcbiAgICAgICAgICAgICAgICAgICAgcC5pc19kb3VibGUgPSBvO1xuICAgICAgICAgICAgICAgICAgICBwLnBhY2thZ2UgPSBuO1xuICAgICAgICAgICAgICAgICAgICBwLnBob25lID0gYTtcbiAgICAgICAgICAgICAgICAgICAgX3JlcXVlc3QuZGVmYXVsdC5pbnNcbiAgICAgICAgICAgICAgICAgICAgICAgIC5nZXRVc2VyVG9rZW4oKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwLnRva2VuID0gdDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG8gPSBKU09OLnN0cmluZ2lmeShwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHQucmVxdWVzdEdhbWVQYXltZW50KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGU6IFwiZ2FtZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW52OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVuY3lUeXBlOiBcIkNOWVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhdGZvcm06IGEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXlRdWFudGl0eTogZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHpvbmVJZDogXCIxXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21JZDogbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dHJhSW5mbzogbyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1LnN0YXR1cyA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3JlcXVlc3QuZGVmYXVsdC5pbnMucGF5bWVudFJlc3VsdCh1KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByKDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdS5zdGF0dXMgPSAyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlID0gKHUuZXJyQ29kZSA9ICh0ICYmIHQuZXJyQ29kZSkgfHwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3JlcXVlc3QuZGVmYXVsdC5pbnMucGF5bWVudFJlc3VsdCh1KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzKFwi5pSv5LuY5aSx6LSlOiBcIiArIGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbiAoKSB7fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uICgpIHt9KTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICBzKFwi5pSv5LuY5byC5bi4OiBcIiArIHQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmNoZWNrU2Vzc2lvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKGUsIG8pIHtcbiAgICAgICAgICAgIHR0LmNoZWNrU2Vzc2lvbih7XG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBlKDEpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0LmxvZ2luKDApXG4gICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZSgxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvKHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUub3BlblNlcnZpY2UgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0dC5vcGVuQ3VzdG9tZXJTZXJ2aWNlQ29udmVyc2F0aW9uICYmXG4gICAgICAgICAgICB0dC5vcGVuQ3VzdG9tZXJTZXJ2aWNlQ29udmVyc2F0aW9uKHt0eXBlOiB0LCBzdWNjZXNzOiBmdW5jdGlvbiAoKSB7fSwgZmFpbDogZnVuY3Rpb24gKCkge319KTtcbiAgICB9O1xuICAgIHJldHVybiB0O1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF87XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/time.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '59024eX+axMOIBY16DZlWQV', 'time');
// scripts/time.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _uData = require("uData");

var i = function () {
  function t() {}

  Object.defineProperty(t, "ins", {
    get: function get() {
      this._ins || (this._ins = new t());
      return this._ins;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.sync = function (t) {
    this.serverStartT = t || Date.now();
    this.clientStartT = Date.now();
  };

  Object.defineProperty(t.prototype, "serverTime", {
    get: function get() {
      return Math.floor((this.serverStartT + Date.now() - this.clientStartT) / 1e3);
    },
    enumerable: !1,
    configurable: !0
  });
  Object.defineProperty(t.prototype, "loginTime", {
    get: function get() {
      this.loginT || (this.loginT = _uData["default"].ins.getLocalDataByKey("login_date"));
      return this.loginT;
    },
    enumerable: !1,
    configurable: !0
  });
  Object.defineProperty(t.prototype, "isSameDay", {
    get: function get() {
      if (!t.ins.serverTime || !t.ins.loginTime) return !0;
      var e = new Date(1e3 * t.ins.serverTime);
      var o = new Date(1e3 * t.ins.loginTime);
      return e.getFullYear() == o.getFullYear() && e.getMonth() == o.getMonth() && e.getDate() == o.getDate();
    },
    enumerable: !1,
    configurable: !0
  });
  Object.defineProperty(t.prototype, "nextZeroTime", {
    get: function get() {
      var t = 1e3 * this.serverTime;
      var e = new Date(t);
      e.setDate(e.getDate() + 1);
      e.setHours(0, 0, 0, 0);
      return e.getTime() - t;
    },
    enumerable: !1,
    configurable: !0
  });

  t.getFormatHMS = function (t, e, o) {
    void 0 === e && (e = "HH:MM:SS");
    void 0 === o && (o = !0);
    var n = Math.floor(t / 86400);
    var i = n.toString();
    o && (i = (i = "00" + n).substring(i.length - 2));
    var r = Math.floor(t % 86400 / 3600);
    var a = r.toString();
    o && (a = (a = "00" + r).substring(a.length - 2));
    var s = Math.floor(t % 3600 / 60);
    var c = s.toString();
    o && (c = (c = "00" + s).substring(c.length - 2));
    var l = Math.floor(t % 3600 % 60);
    var u = l.toString();
    o && (u = (u = "00" + l).substring(u.length - 2));
    var p = {
      "D+": i,
      "H+": a,
      "M+": c,
      "S+": u
    };

    for (var d in p) {
      var h = new RegExp("(" + d + ")").exec(e);
      h && (e = e.replace(h[1], p[d]));
    }

    return e;
  };

  t.formatDate2Str = function (t, e) {
    void 0 === e && (e = !1);
    var o;
    var n;
    var i;
    var r = Math.floor(t / 86400);

    if (r > 0) {
      var a = r.toString();
      e && (a = (a = "00" + r).substring(a.length - 2));
      return a + "天";
    }

    if ((o = Math.floor(t % 86400 / 3600)) > 0) {
      var s = o.toString();
      e && (s = (s = "00" + o).substring(s.length - 2));
      return s + "小时";
    }

    if ((n = Math.floor(t % 3600 / 60)) > 0) {
      var c = n.toString();
      e && (c = (c = "00" + n).substring(c.length - 2));
      return c + "分钟";
    }

    if ((i = Math.floor(t % 3600 % 60)) > 0) {
      var l = i.toString();
      e && (l = (l = "00" + i).substring(l.length - 2));
      return l + "秒";
    }

    return "0秒";
  };

  t.prototype.formatDate = function (t) {
    var e = new Date(t);
    var o = e.getFullYear();
    var n = e.getMonth() + 1;
    var i = e.getDate();
    var r = e.getHours();
    var a = e.getMinutes();
    var s = e.getSeconds();
    return o + "-" + (n < 10 ? "0" : "") + n + "-" + (i < 10 ? "0" : "") + i + " " + (r < 10 ? "0" : "") + r + ":" + (a < 10 ? "0" : "") + a + ":" + (s < 10 ? "0" : "") + s;
  };

  return t;
}();

exports["default"] = i;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_contentUs.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '738e8CNRgJIdYoGyBMV/m6N', 'ui_contentUs');
// scripts/ui_contentUs.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _request = require("request");

var _lang = require("lang");

var _tipMgr = require("tipMgr");

var _baseUI = require("baseUI");

var p = cc._decorator;
var d = p.ccclass;
var h = p.property;

var f = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.ediBox = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {};

  e.prototype.init = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.editEnd = function () {
    var t = this;
    _idx.platform.onKeyboardComplete && (this.inCorrect = !0, _idx.platform.onKeyboardComplete(function (e) {
      t.ediBox && (t.ediBox.string = e.value);
      t.inCorrect = !1;
    }));
  };

  e.prototype.editChange = function (t, e) {
    e.string = t;
  };

  e.prototype.feedMsg = function () {
    var t = this;
    this.inCorrect || (this.ediBox.string ? _request["default"].ins.userFeedBack(this.ediBox.string).then(function (e) {
      var o = e && e.msg || _lang.lang[10007];

      _tipMgr["default"].ins.showTip(o, !0);

      t.ediBox.string = "";
    })["catch"](function (t) {
      console.error(t);
    }) : _tipMgr["default"].ins.showTip(_lang.lang[10008]));
  };

  __decorate([h(cc.EditBox)], e.prototype, "ediBox", void 0);

  return __decorate([d], e);
}(_baseUI["default"]);

exports["default"] = f;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfY29udGVudFVzLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9pZHgiLCJyZXF1aXJlIiwiX3JlcXVlc3QiLCJfbGFuZyIsIl90aXBNZ3IiLCJfYmFzZVVJIiwicCIsImNjIiwiX2RlY29yYXRvciIsImQiLCJjY2NsYXNzIiwiaCIsInByb3BlcnR5IiwiZiIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJlZGlCb3giLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJvbkxvYWQiLCJpbml0IiwibGVuZ3RoIiwiaGlkZVRoaXMiLCJoaWRlIiwiZWRpdEVuZCIsInBsYXRmb3JtIiwib25LZXlib2FyZENvbXBsZXRlIiwiaW5Db3JyZWN0Iiwic3RyaW5nIiwiZWRpdENoYW5nZSIsImZlZWRNc2ciLCJpbnMiLCJ1c2VyRmVlZEJhY2siLCJ0aGVuIiwibyIsIm1zZyIsImxhbmciLCJzaG93VGlwIiwiY29uc29sZSIsImVycm9yIiwiX19kZWNvcmF0ZSIsIkVkaXRCb3giXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFsQjs7QUFDQSxJQUFJQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQUlFLEtBQUssR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBbkI7O0FBQ0EsSUFBSUcsT0FBTyxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJSSxPQUFPLEdBQUdKLE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlLLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxV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SixDQUFGLENBQUQsRUFBa0I1QixDQUFDLENBQUNLLFNBQXBCLEVBQStCLFFBQS9CLEVBQXlDLEtBQUssQ0FBOUMsQ0FBVjs7RUFDQSxPQUFPc0IsVUFBVSxDQUFDLENBQUNqQyxDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBNUNPLENBNENMVixPQUFPLFdBNUNGLENBQVI7O0FBNkNBUCxPQUFPLFdBQVAsR0FBa0JlLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9pZHggPSByZXF1aXJlKFwiaWR4XCIpO1xudmFyIF9yZXF1ZXN0ID0gcmVxdWlyZShcInJlcXVlc3RcIik7XG52YXIgX2xhbmcgPSByZXF1aXJlKFwibGFuZ1wiKTtcbnZhciBfdGlwTWdyID0gcmVxdWlyZShcInRpcE1nclwiKTtcbnZhciBfYmFzZVVJID0gcmVxdWlyZShcImJhc2VVSVwiKTtcbnZhciBwID0gY2MuX2RlY29yYXRvcjtcbnZhciBkID0gcC5jY2NsYXNzO1xudmFyIGggPSBwLnByb3BlcnR5O1xudmFyIGYgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5lZGlCb3ggPSBudWxsO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLm9uTG9hZCA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAodmFyIHQgPSBbXSwgZSA9IDA7IGUgPCBhcmd1bWVudHMubGVuZ3RoOyBlKyspIHRbZV0gPSBhcmd1bWVudHNbZV07XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5oaWRlVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5lZGl0RW5kID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IHRoaXM7XG4gICAgICAgIF9pZHgucGxhdGZvcm0ub25LZXlib2FyZENvbXBsZXRlICYmXG4gICAgICAgICAgICAoKHRoaXMuaW5Db3JyZWN0ID0gITApLFxuICAgICAgICAgICAgX2lkeC5wbGF0Zm9ybS5vbktleWJvYXJkQ29tcGxldGUoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICB0LmVkaUJveCAmJiAodC5lZGlCb3guc3RyaW5nID0gZS52YWx1ZSk7XG4gICAgICAgICAgICAgICAgdC5pbkNvcnJlY3QgPSAhMTtcbiAgICAgICAgICAgIH0pKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmVkaXRDaGFuZ2UgPSBmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICBlLnN0cmluZyA9IHQ7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5mZWVkTXNnID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IHRoaXM7XG4gICAgICAgIHRoaXMuaW5Db3JyZWN0IHx8XG4gICAgICAgICAgICAodGhpcy5lZGlCb3guc3RyaW5nXG4gICAgICAgICAgICAgICAgPyBfcmVxdWVzdC5kZWZhdWx0Lmluc1xuICAgICAgICAgICAgICAgICAgICAgIC51c2VyRmVlZEJhY2sodGhpcy5lZGlCb3guc3RyaW5nKVxuICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvID0gKGUgJiYgZS5tc2cpIHx8IF9sYW5nLmxhbmdbMTAwMDddO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfdGlwTWdyLmRlZmF1bHQuaW5zLnNob3dUaXAobywgITApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0LmVkaUJveC5zdHJpbmcgPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IodCk7XG4gICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICA6IF90aXBNZ3IuZGVmYXVsdC5pbnMuc2hvd1RpcChfbGFuZy5sYW5nWzEwMDA4XSkpO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbaChjYy5FZGl0Qm94KV0sIGUucHJvdG90eXBlLCBcImVkaUJveFwiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtkXSwgZSk7XG59KShfYmFzZVVJLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gZjtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/top.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e7643aDbU1EEpPuHwYX4LLj', 'top');
// scripts/top.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _mySafeArea = require("mySafeArea");

var _pConst = require("pConst");

var _res = require("res");

var _time = require("time");

var _uData = require("uData");

var _cfgMgr = require("cfgMgr");

var _lang = require("lang");

var _global = require("global");

var _mailMgr = require("mailMgr");

var _panelMgr = require("panelMgr");

var _taskMgr = require("taskMgr");

var _pInfo = require("pInfo");

var _head = require("head");

var _rewardMgr = require("rewardMgr");

var w = cc._decorator;
var S = w.ccclass;
var T = w.property;
var I = Math.floor;
var D = Math.ceil;

var P = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.countDownNode = null;
    e.coinLbl = null;
    e.cashLbl = null;
    e.powerLbl = null;
    e.powerCdLbl = null;
    e.powerSp = null;
    e.sidebarNode = null;
    e.desktopNode = null;
    e.newGiftBtn = null;
    e.newGiftBtnLight = null;
    e.friendRankBtn = null;
    e.clearBtn = null;
    e.sidebarRedPointNode = null;
    e.mailRedPointLbl = null;
    e.txt_name = null;
    e.deskLb = null;
    e.saveBtn = null;
    e.signRedLb = null;
    e.headComp = null;
    e.serviceNode = null;
    e.taskRedLb = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    console.log("🎮 Top组件onLoad开始");
    this.updateDesktop();
    this.updateSidebar();
    this.updateMail();
    this.updateCoin(); // 💝 游戏进入时立即更新现金余额显示

    console.log("🎮 准备调用updateCash，cashLbl状态:", !!this.cashLbl);
    this.scheduleOnce(this.updateCash.bind(this), 0.1);
    console.log("🎮 scheduleOnce updateCash已设置"); // 💝 多次尝试更新，确保绑定成功后能更新

    this.scheduleOnce(this.updateCash.bind(this), 0.5);
    this.scheduleOnce(this.updateCash.bind(this), 1.0);
    this.updatePower();
    this.upChapter();
    this.loadNewGift();
    this.updateNewGift();
    this.updateHead();
    this.updateFriendRank();
    this.updateSignRed();
    this.upserviceNode();
    this.upDTaskRed();

    _evts["default"].opE.on(this.onOperTap.bind(this));

    _evts["default"].plE.on(this.onOperTap2.bind(this));

    this.clearBtn.destroy();
  };

  e.prototype.start = function () {
    var t = this;
    this.scheduleOnce(function () {
      if (t.node.y -= _mySafeArea.getSafeAreaRect().yMin, t.node.removeComponent(cc.Widget), _global["default"].padScale) {
        var e = (cc.view.getVisibleSize().width - 720) / 2;
        t.node.children[0].x -= e;
        t.node.children[1].x += e;
      } // 💝 UI初始化完成

    });
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].COIN_CHG:
        this.updateCoin();
        break;

      case 'CASH_CHG':
        // 💝 现金余额UI更新
        this.updateCash();
        console.log("💰 卷卷的现金余额更新了: ￥" + _rewardMgr["default"].getCashDisplay());
        break;

      case _evts["default"].POWER_CHG:
        this.updatePower();
        break;

      case _evts["default"].Slider_Chg:
        this.updateSidebar();
        break;

      case _evts["default"].UPDMAIL:
        this.updateMail();
        break;

      case _evts["default"].UPD_NEW_GIFT:
        this.updateNewGift();
        break;

      case _evts["default"].UPD_TOP_HEADINFO:
        this.updateHead();
        break;

      case _evts["default"].ADD_DESKTOP:
        this.addDesktopCb(t.data);
        break;

      case _evts["default"].ALIPAY_MAIN:
        this.getDesktopReward();

      case _evts["default"].Desktop_Chg:
        this.updateDesktop();
        break;

      case _evts["default"].SIGN_RED:
        this.updateSignRed();
        break;

      case _evts["default"].UPD_MAIN_RED:
        this.upDTaskRed();
    }
  };

  e.prototype.onOperTap2 = function (t) {
    t && (t.onHide && this.pause(), t.onShow && this.updatePower());
  };

  e.prototype.updateSignRed = function () {
    this.signRedLb.node.parent.parent.active = !1;
  };

  e.prototype.upDTaskRed = function () {
    var t = _taskMgr["default"].getUnFinishNum();

    var e = this.taskRedLb;
    e && (t > 0 ? (e.node.parent.active = !0, e.string = t + "", e.node.x = _global["default"].getCharXOffset(e.string)) : e.node.parent.active = !1);
  };

  e.prototype.upserviceNode = function () {
    if (this.serviceNode.active = !1, _idx.platform.string() == _pConst.PFCode.Bytedance) {
      var t = _idx.platform.getSystemData();

      t && ("Douyin" != t.appName && "douyin_lite" != t.appName || (this.serviceNode.active = !0));
    }
  };

  e.prototype.updateDesktop = function () {
    var t;
    var e;

    switch (_idx.platform.string()) {
      case _pConst.PFCode.Bytedance:
        if (this.desktopNode.active = !0, _pInfo["default"].ins.getAddDesk()) this.deskLb.node.parent.active = !1;else {
          var o = (null === (e = null === (t = _cfgMgr["default"].serverCfg.add_desktop) || void 0 === t ? void 0 : t.rules) || void 0 === e ? void 0 : e.times) || 50;
          this.deskLb.string = "+" + o;
          this.deskLb.node.parent.active = !0;
        }
        break;

      case _pConst.PFCode.Alipay:
        0 === _uData["default"].ins.getLocalData().aliAddHome || _idx.platform.cDeskCatch ? this.desktopNode.active = !1 : this.desktopNode.active = !0;
        break;

      default:
        this.desktopNode.active = !1;
    }
  };

  e.prototype.updateSidebar = function () {
    this.sidebarNode.active = _idx.platform.sidebarExist;
    var t = _idx.platform.bySlider && !_pInfo["default"].ins.getIsGetSlider();
    this.sidebarRedPointNode.active = t;
    t && this.scheduleOnce(function () {
      _panelMgr["default"].ins.open("ui/ui_sidebar", null);
    });
  };

  e.prototype.updateMail = function () {
    var t = this;

    _mailMgr["default"].ins.getMail(function (e) {
      var o = 0;
      var n = t.mailRedPointLbl;

      if (n && n.isValid) {
        if (e && e.errMsg && "error" === e.errMsg) return void (t.mailRedPointLbl.node.parent.active = !1);

        for (var i in _mailMgr["default"].ins.mailInfo.mail) {
          _mailMgr["default"].ins.mailInfo.mail[i] == _mailMgr.mailState.noRead && o++;
        }

        t.mailRedPointLbl.string = o + "";
        t.mailRedPointLbl.node.parent.active = o > 0;
      }
    });
  };

  e.prototype.updateFriendRank = function () {
    this.friendRankBtn.active = _idx.platform.string() == _pConst.PFCode.Bytedance;
  };

  e.prototype.updateCoin = function () {
    this.coinLbl.string = _pInfo["default"].ins.getCoin() + "";
  };

  e.prototype.updateCash = function () {
    var cashDisplay = _rewardMgr["default"].getCashDisplay();

    console.log("🔍 updateCash调用 - cashLbl存在:", !!this.cashLbl, "现金余额:", cashDisplay);
    console.log("🔍 cashLbl详细信息:", this.cashLbl);

    if (this.cashLbl) {
      console.log("🔍 更新前卷卷现金显示:", this.cashLbl.string);
      this.cashLbl.string = cashDisplay;
      console.log("🔍 更新后卷卷现金显示:", this.cashLbl.string);
      console.log("✅ 卷卷的现金余额UI已更新: ￥" + cashDisplay);
    } else {
      console.log("❌ cashLbl未绑定！需要在Cocos Creator编辑器中将现金Label绑定到cashLbl属性");
      console.log("💰 卷卷的现金余额数据正常: ￥" + cashDisplay + " (但UI无法显示)");
    }
  };

  e.prototype.updatePower = function () {
    this.schedule(this._updatePower, 1, cc.macro.REPEAT_FOREVER);

    this._updatePower();
  };

  e.prototype.pause = function () {
    this.unschedule(this._updatePower);
  };

  e.prototype.loadNewGift = function () {
    var t = this;

    _res["default"].ins.getBundleByString("resSps").then(function (e) {
      e.load("spine/light/action", sp.SkeletonData, function (e, o) {
        if (!e && t.node && t.node.isValid) {
          var n = new cc.Node();
          var i = n.addComponent(sp.Skeleton);
          i.skeletonData = o, i.animation = "animation", n.parent = t.newGiftBtn;
        }
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });

    cc.tween(this.newGiftBtnLight).by(3, {
      angle: -360
    }).repeatForever().start();
    cc.tween(this.newGiftBtn).sequence(cc.tween().to(1, {
      scale: 0.9
    }), cc.tween().to(1, {
      scale: 1
    })).repeatForever().start();
  };

  e.prototype.updateNewGift = function () {
    this.newGiftBtn.active = this.newGiftBtnLight.active = !1;
  };

  e.prototype.updateHead = function () {
    var t = _uData["default"].ins.getName() || "卷卷大王";
    t.length > 7 && (t = t.substring(0, 6) + "...");
    this.txt_name.string = t;

    var e = _uData["default"].ins.getHeadImg();

    this.headComp.loadHeadImg(e);
  };

  e.prototype.upChapter = function () {};

  e.prototype._updatePower = function () {
    if (this.isValid) {
      var t = _pInfo["default"].ins;

      var e = t.getPowerFullTime() - _time["default"].ins.serverTime;

      var o = t.getPower();
      var n = o;
      var i = e > 0;
      var r = _cfgMgr["default"].serverCfg.times.forUser;
      var a = (_uData["default"].ins.getIsNewUser() ? r.new_user.rules.basic_times.val : r.all.rules.basic_times.val) || 100;

      if (i) {
        var s = t.getPerPowerNeedTime();
        n = a - D(e / s);
        var c = e % s;
        var l = I(c / 60);
        var u = I(c % 60);
        var f = l < 10 ? "0" : "";
        var g = u < 10 ? "0" : "";
        this.powerCdLbl.string = f + l + ":" + g + u;
      } else n < a && (n = a), this.unschedule(this._updatePower), _pInfo["default"].ins.setPowerFullTime(0);

      this.countDownNode.active = i;
      n != o && t.setPower(n);
      this.powerLbl.string = n + "/" + a;
    }
  };

  e.prototype.onBtnGetPower = function () {
    _panelMgr["default"].ins.open("ui/ui_getRes", {
      itemId: "times"
    });
  };

  e.prototype.onBtnSet = function () {
    _panelMgr["default"].ins.open("ui/ui_set", null);
  };

  e.prototype.onBtnRecord = function () {
    _panelMgr["default"].ins.open("ui/ui_record", null);
  };

  e.prototype.onBtnRank = function () {
    _panelMgr["default"].ins.open("ui/ui_rank", null);
  };

  e.prototype.onBtnGetCoin = function () {
    _panelMgr["default"].ins.open("ui/ui_getRes", {
      itemId: "coin",
      gType: _pInfo.gameType.normal,
      useTo: _lang.getCoinFor.Main
    });
  };

  e.prototype.onBtnGetCash = function () {
    // 💝 手动测试现金奖励功能（已暂时注释）

    /*
    try {
        console.log("🧪 开始现金奖励测试...");
        
        // 显示当前现金余额
        console.log("当前现金余额:", _rewardMgr.default.getCashDisplay());
        
        // 触发现金奖励（手动测试模式）
        var hasReward = _rewardMgr.default.onPuzzleComplete('easy', true, true);
        
        if (hasReward) {
            console.log("✅ 获得现金奖励！");
            console.log("新的现金余额:", _rewardMgr.default.getCashDisplay());
        } else {
            console.log("⭕ 本次没有触发现金奖励（随机概率）");
        }
        
    } catch (error) {
        console.log("❌ 现金奖励测试失败:", error);
        console.error(error);
    }
    */
    console.log("💝 现金奖励手动测试已暂时禁用");
  };

  e.prototype.onBtnChapter = function () {
    _panelMgr["default"].ins.open("ui/ui_chapter", null);
  };

  e.prototype.onBtnSidebar = function () {
    _panelMgr["default"].ins.open("ui/ui_sidebar", null);
  };

  e.prototype.onBtnEmail = function () {
    _panelMgr["default"].ins.open("ui/ui_mail", null);
  };

  e.prototype.onBtnTip = function () {
    _panelMgr["default"].ins.open("ui/ui_raceTip", {
      pageIdx: 0
    });
  };

  e.prototype.onBtnNewGift = function () {
    _panelMgr["default"].ins.open("ui/ui_newGift", {
      hideCb: null
    });
  };

  e.prototype.onBtnDesktop = function () {
    var t;

    switch (_idx.platform.string()) {
      case _pConst.PFCode.Bytedance:
        _idx.platform.addShortcut();

        break;

      case _pConst.PFCode.Alipay:
        null === (t = _idx.platform.addGamesetlattice) || void 0 === t || t.call(_idx.platform);
    }
  };

  e.prototype.onBtnFriendRank = function () {
    _idx.platform.showFriendRank(_pConst.SDKConfig.ttZoneId.normal);
  };

  e.prototype.onBtnSkin = function () {
    _panelMgr["default"].ins.open("ui/ui_skin", null);
  };

  e.prototype.onBtnSave = function () {
    _panelMgr["default"].ins.open("ui/ui_save", null);
  };

  e.prototype.onBtnSign = function () {
    _panelMgr["default"].ins.open("ui/ui_sevenDay", null);
  };

  e.prototype.onBtnQuest = function () {
    _panelMgr["default"].ins.open("ui/ui_quest", null);
  };

  e.prototype.onBtnService = function () {
    if (_idx.platform.string() == _pConst.PFCode.Bytedance) {
      var t = _idx.platform.getSystemData();

      if (t) {
        var e = 0;

        switch (t.appName) {
          case "Douyin":
            e = 2;
            break;

          case "douyin_lite":
            e = 1;
        }

        e && _idx.platform.openService(e);
      }
    }
  };

  e.prototype.onTest = function () {
    _pInfo["default"].ins.clearDailyData();
  }; // 💝 现金奖励测试方法（通过开发者控制台调用）


  e.prototype.testCashRewardSystem = function () {
    try {
      console.log("🧪=== 现金奖励系统测试开始 ===");
      console.log("当前现金余额:", _rewardMgr["default"].getCashDisplay()); // 测试不同难度

      var difficulties = ['beginner', 'easy', 'medium', 'hard', 'expert'];
      var testResults = [];

      for (var i = 0; i < difficulties.length; i++) {
        var difficulty = difficulties[i];

        var beforeBalance = _rewardMgr["default"].getCash();

        var hasReward = _rewardMgr["default"].onPuzzleComplete(difficulty, true);

        var afterBalance = _rewardMgr["default"].getCash();

        if (hasReward) {
          var rewardAmount = afterBalance - beforeBalance;
          console.log("✅", difficulty, "难度获得奖励:", (rewardAmount / 100).toFixed(2), "元");
          testResults.push({
            difficulty: difficulty,
            reward: rewardAmount
          });
        } else {
          console.log("⭕", difficulty, "难度没有触发奖励");
        }
      }

      console.log("🏆 测试完成！总余额:", _rewardMgr["default"].getCashDisplay());
      console.log("📊 获得奖励的测试:", testResults);
    } catch (error) {
      console.log("❌ 测试失败:", error);
      console.error(error);
    }
  };

  e.prototype.addDesktopCb = function (t) {
    var e = _pInfo["default"].ins.getAddDesk();

    t && !e && (_pInfo["default"].ins.setAddDesk(!0), this.getDesktopReward(), this.updateDesktop());
  };

  e.prototype.getDesktopReward = function () {
    var t;
    var e;
    var o = (null === (e = null === (t = _cfgMgr["default"].serverCfg.add_desktop) || void 0 === t ? void 0 : t.rules) || void 0 === e ? void 0 : e.times) || 50;

    _pInfo["default"].ins.addPower(o);

    var n = this.desktopNode.isValid ? this.desktopNode.position : this.deskTopNodePos;
    var i = this.node.convertToWorldSpaceAR(n);

    _panelMgr["default"].ins.open("ui/ui_flyAni", {
      itemDatas: [{
        itemId: "times",
        worldPos: i,
        value: o
      }]
    });
  };

  __decorate([T(cc.Node)], e.prototype, "countDownNode", void 0);

  __decorate([T(cc.Label)], e.prototype, "coinLbl", void 0);

  __decorate([T(cc.Label)], e.prototype, "cashLbl", void 0);

  __decorate([T(cc.Label)], e.prototype, "powerLbl", void 0);

  __decorate([T(cc.Label)], e.prototype, "powerCdLbl", void 0);

  __decorate([T(cc.Sprite)], e.prototype, "powerSp", void 0);

  __decorate([T(cc.Node)], e.prototype, "sidebarNode", void 0);

  __decorate([T(cc.Node)], e.prototype, "desktopNode", void 0);

  __decorate([T(cc.Node)], e.prototype, "newGiftBtn", void 0);

  __decorate([T(cc.Node)], e.prototype, "newGiftBtnLight", void 0);

  __decorate([T(cc.Node)], e.prototype, "friendRankBtn", void 0);

  __decorate([T(cc.Node)], e.prototype, "clearBtn", void 0);

  __decorate([T(cc.Node)], e.prototype, "sidebarRedPointNode", void 0);

  __decorate([T(cc.Label)], e.prototype, "mailRedPointLbl", void 0);

  __decorate([T(cc.Label)], e.prototype, "txt_name", void 0);

  __decorate([T(cc.Label)], e.prototype, "deskLb", void 0);

  __decorate([T(cc.Node)], e.prototype, "saveBtn", void 0);

  __decorate([T(cc.Label)], e.prototype, "signRedLb", void 0);

  __decorate([T(_head["default"])], e.prototype, "headComp", void 0);

  __decorate([T(cc.Node)], e.prototype, "serviceNode", void 0);

  __decorate([T(cc.Label)], e.prototype, "taskRedLb", void 0);

  return __decorate([S], e);
}(cc.Component);

exports["default"] = P;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/toast.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fc94b5eJWNH+pO/QTHSv3Xi', 'toast');
// scripts/toast.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var n = function () {
  function t() {}

  t.showToast = function () {
    return new Promise(function (t) {
      t(1);
    });
  };

  return t;
}();

exports["default"] = n;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdG9hc3QuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJuIiwidCIsInNob3dUb2FzdCIsIlByb21pc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxDQUFDLEdBQUksWUFBWTtFQUNqQixTQUFTQyxDQUFULEdBQWEsQ0FBRTs7RUFDZkEsQ0FBQyxDQUFDQyxTQUFGLEdBQWMsWUFBWTtJQUN0QixPQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFVRixDQUFWLEVBQWE7TUFDNUJBLENBQUMsQ0FBQyxDQUFELENBQUQ7SUFDSCxDQUZNLENBQVA7RUFHSCxDQUpEOztFQUtBLE9BQU9BLENBQVA7QUFDSCxDQVJPLEVBQVI7O0FBU0FILE9BQU8sV0FBUCxHQUFrQkUsQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIG4gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHQoKSB7fVxuICAgIHQuc2hvd1RvYXN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIHQoMSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIHQ7XG59KSgpO1xuZXhwb3J0cy5kZWZhdWx0ID0gbjtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/slider.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'dfa43OykftLfa6ThTFErZTe', 'slider');
// scripts/slider.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.handle = null;
    e.slideEvents = [];
    e.pro = null;
    e._progress = 0;
    return e;
  }

  __extends(e, t);

  Object.defineProperty(e.prototype, "progress", {
    get: function get() {
      return this._progress;
    },
    set: function set(t) {
      this._progress = cc.misc.clamp01(t);
      this.pro.width = this._progress * this.node.width;
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.onLoad = function () {
    this.handle && this.handle.isValid && this.handle.node.on(cc.Node.EventType.TOUCH_MOVE, this.tM, this);
  };

  e.prototype.init = function (t) {
    this.progress = t;
    this.handle.node.x = this.progress * this.node.width;
  };

  e.prototype.tM = function (t) {
    var e = t.getLocation();
    var o = this.node.convertToNodeSpaceAR(e);
    this.handle.node.x = cc.misc.clampf(o.x, 0, this.node.width);
    this.progress = this.handle.node.x / this.node.width;
    this.slideEvents.length > 0 && cc.Component.EventHandler.emitEvents(this.slideEvents, this);
  };

  __decorate([c(cc.Button)], e.prototype, "handle", void 0);

  __decorate([c([cc.Component.EventHandler])], e.prototype, "slideEvents", void 0);

  __decorate([c(cc.Node)], e.prototype, "pro", void 0);

  return __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcc2xpZGVyLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImEiLCJjYyIsIl9kZWNvcmF0b3IiLCJzIiwiY2NjbGFzcyIsImMiLCJwcm9wZXJ0eSIsImwiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwiaGFuZGxlIiwic2xpZGVFdmVudHMiLCJwcm8iLCJfcHJvZ3Jlc3MiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJnZXQiLCJzZXQiLCJtaXNjIiwiY2xhbXAwMSIsIndpZHRoIiwibm9kZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJvbkxvYWQiLCJpc1ZhbGlkIiwib24iLCJOb2RlIiwiRXZlbnRUeXBlIiwiVE9VQ0hfTU9WRSIsInRNIiwiaW5pdCIsInByb2dyZXNzIiwieCIsImdldExvY2F0aW9uIiwibyIsImNvbnZlcnRUb05vZGVTcGFjZUFSIiwiY2xhbXBmIiwibGVuZ3RoIiwiQ29tcG9uZW50IiwiRXZlbnRIYW5kbGVyIiwiZW1pdEV2ZW50cyIsIl9fZGVjb3JhdGUiLCJCdXR0b24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7QUFDQSxJQUFJQyxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHTCxDQUFDLENBQUNNLFFBQVY7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFJLFVBQVVDLENBQVYsRUFBYTtFQUNsQixTQUFTQyxDQUFULEdBQWE7SUFDVCxJQUFJQSxDQUFDLEdBQUksU0FBU0QsQ0FBVCxJQUFjQSxDQUFDLENBQUNFLEtBQUYsQ0FBUSxJ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LENBQVY7O0VBQ0EyQixVQUFVLENBQUMsQ0FBQ3ZDLENBQUMsQ0FBQ0osRUFBRSxDQUFDNEIsSUFBSixDQUFGLENBQUQsRUFBZXBCLENBQUMsQ0FBQ1EsU0FBakIsRUFBNEIsS0FBNUIsRUFBbUMsS0FBSyxDQUF4QyxDQUFWOztFQUNBLE9BQU8yQixVQUFVLENBQUMsQ0FBQ3pDLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0F2Q08sQ0F1Q0xSLEVBQUUsQ0FBQ3dDLFNBdkNFLENBQVI7O0FBd0NBM0MsT0FBTyxXQUFQLEdBQWtCUyxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBhID0gY2MuX2RlY29yYXRvcjtcbnZhciBzID0gYS5jY2NsYXNzO1xudmFyIGMgPSBhLnByb3BlcnR5O1xudmFyIGwgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5oYW5kbGUgPSBudWxsO1xuICAgICAgICBlLnNsaWRlRXZlbnRzID0gW107XG4gICAgICAgIGUucHJvID0gbnVsbDtcbiAgICAgICAgZS5fcHJvZ3Jlc3MgPSAwO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSwgXCJwcm9ncmVzc1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Byb2dyZXNzO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICB0aGlzLl9wcm9ncmVzcyA9IGNjLm1pc2MuY2xhbXAwMSh0KTtcbiAgICAgICAgICAgIHRoaXMucHJvLndpZHRoID0gdGhpcy5fcHJvZ3Jlc3MgKiB0aGlzLm5vZGUud2lkdGg7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6ICExLFxuICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgfSk7XG4gICAgZS5wcm90b3R5cGUub25Mb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmhhbmRsZSAmJiB0aGlzLmhhbmRsZS5pc1ZhbGlkICYmIHRoaXMuaGFuZGxlLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfTU9WRSwgdGhpcy50TSwgdGhpcyk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdGhpcy5wcm9ncmVzcyA9IHQ7XG4gICAgICAgIHRoaXMuaGFuZGxlLm5vZGUueCA9IHRoaXMucHJvZ3Jlc3MgKiB0aGlzLm5vZGUud2lkdGg7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS50TSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZhciBlID0gdC5nZXRMb2NhdGlvbigpO1xuICAgICAgICB2YXIgbyA9IHRoaXMubm9kZS5jb252ZXJ0VG9Ob2RlU3BhY2VBUihlKTtcbiAgICAgICAgdGhpcy5oYW5kbGUubm9kZS54ID0gY2MubWlzYy5jbGFtcGYoby54LCAwLCB0aGlzLm5vZGUud2lkdGgpO1xuICAgICAgICB0aGlzLnByb2dyZXNzID0gdGhpcy5oYW5kbGUubm9kZS54IC8gdGhpcy5ub2RlLndpZHRoO1xuICAgICAgICB0aGlzLnNsaWRlRXZlbnRzLmxlbmd0aCA+IDAgJiYgY2MuQ29tcG9uZW50LkV2ZW50SGFuZGxlci5lbWl0RXZlbnRzKHRoaXMuc2xpZGVFdmVudHMsIHRoaXMpO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbYyhjYy5CdXR0b24pXSwgZS5wcm90b3R5cGUsIFwiaGFuZGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYyhbY2MuQ29tcG9uZW50LkV2ZW50SGFuZGxlcl0pXSwgZS5wcm90b3R5cGUsIFwic2xpZGVFdmVudHNcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtjKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwicHJvXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW3NdLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSBsO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/tE.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd306dQjHl5AJbe+g7xzVEUS', 'tE');
// scripts/tE.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var n = function () {
  function t() {
    this._1 = [];
    this._2 = [];
  }

  t.prototype.on = function (t) {
    var e = this;

    e._1.push(t);

    return function () {
      return e.off(t);
    };
  };

  t.prototype.once = function (t) {
    var e = this;

    e._2.push(t);

    return function () {
      return e.off(t);
    };
  };

  t.prototype.off = function (t) {
    var e = this;

    var o = e._1.indexOf(t);

    o > -1 && e._1.splice(o, 1);
    (o = e._2.indexOf(t)) > -1 && e._2.splice(o, 1);
  };

  t.prototype.emit = function (t) {
    var e = this;

    e._1.forEach(function (e) {
      return e(t);
    });

    e._2.forEach(function (e) {
      return e(t);
    });

    e._2 = [];
  };

  t.prototype.pipe = function (t) {
    return this.on(function (e) {
      return t.emit(e);
    });
  };

  t.prototype.clear = function () {
    this._1 = [];
    this._2 = [];
  };

  return t;
}();

exports["default"] = n;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdEUuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJuIiwidCIsIl8xIiwiXzIiLCJwcm90b3R5cGUiLCJvbiIsImUiLCJwdXNoIiwib2ZmIiwib25jZSIsIm8iLCJpbmRleE9mIiwic3BsaWNlIiwiZW1pdCIsImZvckVhY2giLCJwaXBlIiwiY2xlYXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxDQUFDLEdBQUksWUFBWTtFQUNqQixTQUFTQyxDQUFULEdBQWE7SUFDVCxLQUFLQyxFQUFMLEdBQVUsRUFBVjtJQUNBLEtBQUtDLEVBQUwsR0FBVSxFQUFWO0VBQ0g7O0VBQ0RGLENBQUMsQ0FBQ0csU0FBRixDQUFZQyxFQUFaLEdBQWlCLFVBQVVKLENBQVYsRUFBYTtJQUMxQixJQUFJSyxDQUFDLEdBQUcsSUFBUjs7SUFDQUEsQ0FBQyxDQUFDSixFQUFGLENBQUtLLElBQUwsQ0FBVU4sQ0FBVjs7SUFDQSxPQUFPLFlBQVk7TUFDZixPQUFPSyxDQUFDLENBQUNFLEdBQUYsQ0FBTVAsQ0FBTixDQUFQO0lBQ0gsQ0FGRDtFQUdILENBTkQ7O0VBT0FBLENBQUMsQ0FBQ0csU0FBRixDQUFZSyxJQUFaLEdBQW1CLFVBQVVSLENBQVYsRUFBYTtJQUM1QixJQUFJSyxDQUFDLEdBQUcsSUFBUjs7SUFDQUEsQ0FBQyxDQUFDSCxFQUFGLENBQUtJLElBQUwsQ0FBVU4sQ0FBVjs7SUFDQSxPQUFPLFlBQVk7TUFDZixPQUFPSyxDQUFDLENBQUNFLEdBQUYsQ0FBTVAsQ0FBTixDQUFQO0lBQ0gsQ0FGRDtFQUdILENBTkQ7O0VBT0FBLENBQUMsQ0FBQ0csU0FBRixDQUFZSSxHQUFaLEdBQWtCLFVBQVVQLENBQVYsRUFBYTtJQUMzQixJQUFJSyxDQUFDLEdBQUcsSUFBUjs7SUFDQSxJQUFJSSxDQUFDLEdBQUdKLENBQUMsQ0FBQ0osRUFBRixDQUFLUyxPQUFMLENBQWFWLENBQWIsQ0FBUjs7SUFDQVMsQ0FBQyxHQUFHLENBQUMsQ0FBTCxJQUFVSixDQUFDLENBQUNKLEVBQUYsQ0FBS1UsTUFBTCxDQUFZRixDQUFaLEVBQWUsQ0FBZixDQUFWO0lBQ0EsQ0FBQ0EsQ0FBQyxHQUFHSixDQUFDLENBQUNILEVBQUYsQ0FBS1EsT0FBTCxDQUFhVixDQUFiLENBQUwsSUFBd0IsQ0FBQyxDQUF6QixJQUE4QkssQ0FBQyxDQUFDSCxFQUFGLENBQUtTLE1BQUwsQ0FBWUYsQ0FBWixFQUFlLENBQWYsQ0FBOUI7RUFDSCxDQUxEOztFQU1BVCxDQUFDLENBQUNHLFNBQUYsQ0FBWVMsSUFBWixHQUFtQixVQUFVWixDQUFWLEVBQWE7SUFDNUIsSUFBSUssQ0FBQyxHQUFHLElBQVI7O0lBQ0FBLENBQUMsQ0FBQ0osRUFBRixDQUFLWSxPQUFMLENBQWEsVUFBVVIsQ0FBVixFQUFhO01BQ3RCLE9BQU9BLENBQUMsQ0FBQ0wsQ0FBRCxDQUFSO0lBQ0gsQ0FGRDs7SUFHQUssQ0FBQyxDQUFDSCxFQUFGLENBQUtXLE9BQUwsQ0FBYSxVQUFVUixDQUFWLEVBQWE7TUFDdEIsT0FBT0EsQ0FBQyxDQUFDTCxDQUFELENBQVI7SUFDSCxDQUZEOztJQUdBSyxDQUFDLENBQUNILEVBQUYsR0FBTyxFQUFQO0VBQ0gsQ0FURDs7RUFVQUYsQ0FBQyxDQUFDRyxTQUFGLENBQVlXLElBQVosR0FBbUIsVUFBVWQsQ0FBVixFQUFhO0lBQzVCLE9BQU8sS0FBS0ksRUFBTCxDQUFRLFVBQVVDLENBQVYsRUFBYTtNQUN4QixPQUFPTCxDQUFDLENBQUNZLElBQUYsQ0FBT1AsQ0FBUCxDQUFQO0lBQ0gsQ0FGTSxDQUFQO0VBR0gsQ0FKRDs7RUFLQUwsQ0FBQyxDQUFDRyxTQUFGLENBQVlZLEtBQVosR0FBb0IsWUFBWTtJQUM1QixLQUFLZCxFQUFMLEdBQVUsRUFBVjtJQUNBLEtBQUtDLEVBQUwsR0FBVSxFQUFWO0VBQ0gsQ0FIRDs7RUFJQSxPQUFPRixDQUFQO0FBQ0gsQ0E3Q08sRUFBUjs7QUE4Q0FILE9BQU8sV0FBUCxHQUFrQkUsQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIG4gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHQoKSB7XG4gICAgICAgIHRoaXMuXzEgPSBbXTtcbiAgICAgICAgdGhpcy5fMiA9IFtdO1xuICAgIH1cbiAgICB0LnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZhciBlID0gdGhpcztcbiAgICAgICAgZS5fMS5wdXNoKHQpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIGUub2ZmKHQpO1xuICAgICAgICB9O1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZhciBlID0gdGhpcztcbiAgICAgICAgZS5fMi5wdXNoKHQpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIGUub2ZmKHQpO1xuICAgICAgICB9O1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUub2ZmID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgICB2YXIgbyA9IGUuXzEuaW5kZXhPZih0KTtcbiAgICAgICAgbyA+IC0xICYmIGUuXzEuc3BsaWNlKG8sIDEpO1xuICAgICAgICAobyA9IGUuXzIuaW5kZXhPZih0KSkgPiAtMSAmJiBlLl8yLnNwbGljZShvLCAxKTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICAgIGUuXzEuZm9yRWFjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGUodCk7XG4gICAgICAgIH0pO1xuICAgICAgICBlLl8yLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBlKHQpO1xuICAgICAgICB9KTtcbiAgICAgICAgZS5fMiA9IFtdO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUucGlwZSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9uKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gdC5lbWl0KGUpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHQucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl8xID0gW107XG4gICAgICAgIHRoaXMuXzIgPSBbXTtcbiAgICB9O1xuICAgIHJldHVybiB0O1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IG47XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_backReward.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'dbd454L8pFK/aIzDSWtQgjM', 'ui_backReward');
// scripts/ui_backReward.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _cfgMgr = require("cfgMgr");

var _item = require("item");

var _bagMgr = require("bagMgr");

var _panelMgr = require("panelMgr");

var _skinMgr = require("skinMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var g = cc._decorator;
var y = g.ccclass;
var m = g.property;

var v = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.rewardItem = null;
    e.rewards = null;
    e.spineNode = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {};

  e.prototype.init = function () {
    var t;
    var e;
    var o = (null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.seven_day_reward) || void 0 === e ? void 0 : e.backtrack) || {
      times: 50
    };
    var n = 0;

    for (var i in o) {
      var r = Number(o[i]);
      var a = this.rewards.children[n];
      a || (a = cc.instantiate(this.rewardItem));
      a.parent = this.rewards;
      var s = a.getComponent(_item["default"]);
      s && s.initByData(i, r);
      var p = {};
      p.itemId = i;
      p.itemNode = a;
      p.value = r;

      _bagMgr["default"].ins.addItem(i, r);

      n++;
    }

    this.loadGirl();
  };

  e.prototype.loadGirl = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        _skinMgr["default"].ins.updateRole(_pInfo["default"].ins.getUsingSkin().role, this.spineNode);

        return [2];
      });
    });
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onBtnGet = function () {
    for (var t = this, e = [], o = 0, n = this.rewards.childrenCount; o < n; o++) {
      var i = this.rewards.children[o];
      var r = i.getComponent(_item["default"]);
      var a = {};
      a.itemId = r.key;
      a.worldPos = i.parent.convertToWorldSpaceAR(i.position);
      a.value = r.count;
      e.push(a);
    }

    _panelMgr["default"].ins.open("ui/ui_flyAni", {
      itemDatas: e,
      hideCb: function hideCb() {
        t.hideThis();
      }
    });
  };

  __decorate([m(cc.Node)], e.prototype, "rewardItem", void 0);

  __decorate([m(cc.Node)], e.prototype, "rewards", void 0);

  __decorate([m(cc.Node)], e.prototype, "spineNode", void 0);

  return __decorate([y], e);
}(_baseUI["default"]);

exports["default"] = v;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_challengeInfo.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c28b4mJ0e5ASrI7YQ9qWxVY', 'ui_challengeInfo');
// scripts/ui_challengeInfo.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _cfgMgr = require("cfgMgr");

var _global = require("global");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var u = cc._decorator;
var p = u.ccclass;
var d = u.property;

var h = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.lvLB = null;
    e.infoLB = null;
    e.sizeLb = null;
    e.diffLb = null;
    e.crossLb = null;
    e.costLB = null;
    e.typeSp = null;
    e.lightNode = null;
    e.tySps = [];
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    cc.tween(this.lightNode).by(3, {
      angle: -360
    }).repeatForever().start();
  };

  e.prototype.init = function (t) {
    var e = t.lvData;
    var o = t.cost;
    var n = t.crossNum;
    this.lvData = e;
    this.cost = o;
    var i = "";
    var r = "";
    var a = 5;

    switch (e.type) {
      case _pInfo.challengeType.worm:
        i = "除虫模式", r = "虫子都是连续格子组成，\n根据提示的数字找出虫子。", this.typeSp.spriteFrame = this.tySps[0], a = e.data.size;
        break;

      case _pInfo.challengeType.tree:
        i = "除草模式", r = "点亮草丛四周的任意格子，\n可以去除草丛。", this.typeSp.spriteFrame = this.tySps[1], a = e.size;
        break;

      case _pInfo.challengeType.ice:
        i = "除冰模式", r = "点亮冰块周围4个格子，\n可以去除冰块。", this.typeSp.spriteFrame = this.tySps[2], a = e.size;
    }

    this.lvLB.string = i;
    this.infoLB.string = r;
    this.crossLb.string = n;
    this.sizeLb.string = a + "x" + a;
    this.diffLb.string = this.getLevelDiffStrByDiff(e.diff);
    this.costLB.string = o + "/" + _pInfo["default"].ins.getPower();
  };

  e.prototype.onBtnStart = function () {
    var t = this.cost;
    var e = Object.assign({}, this.lvData);

    _pInfo["default"].ins.addPower(-t);

    var o = e.date;
    var n = 1e4 * o.year + 100 * o.month + o.day;
    _global["default"].challengeLv = n;

    _pInfo.chgScene(_pInfo.sceneType.game, {
      gameType: _pInfo.gameType.challenge,
      challengeData: e
    });
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.getLevelDiffStrByDiff = function (t) {
    var e = _cfgMgr["default"].serverCfg.difficulty_rules.rules;
    var o = "入门难度";
    var n = 1;

    for (var i in e) {
      if (o = e[i].title, n === t) break;
      n++;
    }

    return o.slice(0, -2);
  };

  __decorate([d(cc.Label)], e.prototype, "lvLB", void 0);

  __decorate([d(cc.Label)], e.prototype, "infoLB", void 0);

  __decorate([d(cc.Label)], e.prototype, "sizeLb", void 0);

  __decorate([d(cc.Label)], e.prototype, "diffLb", void 0);

  __decorate([d(cc.Label)], e.prototype, "crossLb", void 0);

  __decorate([d(cc.Label)], e.prototype, "costLB", void 0);

  __decorate([d(cc.Sprite)], e.prototype, "typeSp", void 0);

  __decorate([d(cc.Node)], e.prototype, "lightNode", void 0);

  __decorate([d([cc.SpriteFrame])], e.prototype, "tySps", void 0);

  return __decorate([p], e);
}(_baseUI["default"]);

exports["default"] = h;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfY2hhbGxlbmdlSW5mby5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfY2ZnTWdyIiwicmVxdWlyZSIsIl9nbG9iYWwiLCJfcEluZm8iLCJfYmFzZVVJIiwidSIsImNjIiwiX2RlY29yYXRvciIsInAiLCJjY2NsYXNzIiwiZCIsInByb3BlcnR5IiwiaCIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJsdkxCIiwiaW5mb0xCIiwic2l6ZUxiIiwiZGlmZkxiIiwiY3Jvc3NMYiIsImNvc3RMQiIsInR5cGVTcCIsImxpZ2h0Tm9kZSIsInR5U3BzIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwib25Mb2FkIiwidHdlZW4iLCJieSIsImFuZ2xlIiwicmVwZWF0Rm9yZXZlciIsInN0YXJ0IiwiaW5pdCIsImx2RGF0YSIsIm8iLCJjb3N0IiwiY3Jvc3NOdW0iLCJpIiwiciIsImEiLCJ0eXBlIiwiY2hhbGxlbmdlVHlwZSIsIndvcm0iLCJzcHJpdGVGcmFtZSIsImRhdGEiLCJzaXplIiwidHJlZSIsImljZSIsInN0cmluZyIsImdldExldmVsRGlmZlN0ckJ5RGlmZiIsImRpZmYiLCJpbnMiLCJnZXRQb3dlciIsIm9uQnRuU3RhcnQiLCJhc3NpZ24iLCJhZGRQb3dlciIsImRhdGUiLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJjaGFsbGVuZ2VMdiIsImNoZ1NjZW5lIiwic2NlbmVUeXBlIiwiZ2FtZSIsImdhbWVUeXBlIiwiY2hhbGxlbmdlIiwiY2hhbGxlbmdlRGF0YSIsImhpZGVUaGlzIiwiaGlkZSIsInNlcnZlckNmZyIsImRpZmZpY3VsdHlfcnVsZXMiLCJydWxlcyIsInRpdGxlIiwic2xpY2UiLCJfX2RlY29yYXRlIiwiTGFiZWwiLCJTcHJpdGUiLCJOb2RlIiwiU3ByaXRlRnJhbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEs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LEVBQThDLEtBQUssQ0FBbkQsQ0FBVjs7RUFDQSxPQUFPaUQsVUFBVSxDQUFDLENBQUNwRSxDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBckZPLENBcUZMVixPQUFPLFdBckZGLENBQVI7O0FBc0ZBTixPQUFPLFdBQVAsR0FBa0JjLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9jZmdNZ3IgPSByZXF1aXJlKFwiY2ZnTWdyXCIpO1xudmFyIF9nbG9iYWwgPSByZXF1aXJlKFwiZ2xvYmFsXCIpO1xudmFyIF9wSW5mbyA9IHJlcXVpcmUoXCJwSW5mb1wiKTtcbnZhciBfYmFzZVVJID0gcmVxdWlyZShcImJhc2VVSVwiKTtcbnZhciB1ID0gY2MuX2RlY29yYXRvcjtcbnZhciBwID0gdS5jY2NsYXNzO1xudmFyIGQgPSB1LnByb3BlcnR5O1xudmFyIGggPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5sdkxCID0gbnVsbDtcbiAgICAgICAgZS5pbmZvTEIgPSBudWxsO1xuICAgICAgICBlLnNpemVMYiA9IG51bGw7XG4gICAgICAgIGUuZGlmZkxiID0gbnVsbDtcbiAgICAgICAgZS5jcm9zc0xiID0gbnVsbDtcbiAgICAgICAgZS5jb3N0TEIgPSBudWxsO1xuICAgICAgICBlLnR5cGVTcCA9IG51bGw7XG4gICAgICAgIGUubGlnaHROb2RlID0gbnVsbDtcbiAgICAgICAgZS50eVNwcyA9IFtdO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLm9uTG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2MudHdlZW4odGhpcy5saWdodE5vZGUpLmJ5KDMsIHthbmdsZTogLTM2MH0pLnJlcGVhdEZvcmV2ZXIoKS5zdGFydCgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZhciBlID0gdC5sdkRhdGE7XG4gICAgICAgIHZhciBvID0gdC5jb3N0O1xuICAgICAgICB2YXIgbiA9IHQuY3Jvc3NOdW07XG4gICAgICAgIHRoaXMubHZEYXRhID0gZTtcbiAgICAgICAgdGhpcy5jb3N0ID0gbztcbiAgICAgICAgdmFyIGkgPSBcIlwiO1xuICAgICAgICB2YXIgciA9IFwiXCI7XG4gICAgICAgIHZhciBhID0gNTtcbiAgICAgICAgc3dpdGNoIChlLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgX3BJbmZvLmNoYWxsZW5nZVR5cGUud29ybTpcbiAgICAgICAgICAgICAgICAoaSA9IFwi6Zmk6Jmr5qih5byPXCIpLFxuICAgICAgICAgICAgICAgICAgICAociA9IFwi6Jmr5a2Q6YO95piv6L+e57ut5qC85a2Q57uE5oiQ77yMXFxu5qC55o2u5o+Q56S655qE5pWw5a2X5om+5Ye66Jmr5a2Q44CCXCIpLFxuICAgICAgICAgICAgICAgICAgICAodGhpcy50eXBlU3Auc3ByaXRlRnJhbWUgPSB0aGlzLnR5U3BzWzBdKSxcbiAgICAgICAgICAgICAgICAgICAgKGEgPSBlLmRhdGEuc2l6ZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIF9wSW5mby5jaGFsbGVuZ2VUeXBlLnRyZWU6XG4gICAgICAgICAgICAgICAgKGkgPSBcIumZpOiNieaooeW8j1wiKSxcbiAgICAgICAgICAgICAgICAgICAgKHIgPSBcIueCueS6ruiNieS4m+Wbm+WRqOeahOS7u+aEj+agvOWtkO+8jFxcbuWPr+S7peWOu+mZpOiNieS4m+OAglwiKSxcbiAgICAgICAgICAgICAgICAgICAgKHRoaXMudHlwZVNwLnNwcml0ZUZyYW1lID0gdGhpcy50eVNwc1sxXSksXG4gICAgICAgICAgICAgICAgICAgIChhID0gZS5zaXplKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgX3BJbmZvLmNoYWxsZW5nZVR5cGUuaWNlOlxuICAgICAgICAgICAgICAgIChpID0gXCLpmaTlhrDmqKHlvI9cIiksXG4gICAgICAgICAgICAgICAgICAgIChyID0gXCLngrnkuq7lhrDlnZflkajlm7Q05Liq5qC85a2Q77yMXFxu5Y+v5Lul5Y676Zmk5Yaw5Z2X44CCXCIpLFxuICAgICAgICAgICAgICAgICAgICAodGhpcy50eXBlU3Auc3ByaXRlRnJhbWUgPSB0aGlzLnR5U3BzWzJdKSxcbiAgICAgICAgICAgICAgICAgICAgKGEgPSBlLnNpemUpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubHZMQi5zdHJpbmcgPSBpO1xuICAgICAgICB0aGlzLmluZm9MQi5zdHJpbmcgPSByO1xuICAgICAgICB0aGlzLmNyb3NzTGIuc3RyaW5nID0gbjtcbiAgICAgICAgdGhpcy5zaXplTGIuc3RyaW5nID0gYSArIFwieFwiICsgYTtcbiAgICAgICAgdGhpcy5kaWZmTGIuc3RyaW5nID0gdGhpcy5nZXRMZXZlbERpZmZTdHJCeURpZmYoZS5kaWZmKTtcbiAgICAgICAgdGhpcy5jb3N0TEIuc3RyaW5nID0gbyArIFwiL1wiICsgX3BJbmZvLmRlZmF1bHQuaW5zLmdldFBvd2VyKCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vbkJ0blN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IHRoaXMuY29zdDtcbiAgICAgICAgdmFyIGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmx2RGF0YSk7XG4gICAgICAgIF9wSW5mby5kZWZhdWx0Lmlucy5hZGRQb3dlcigtdCk7XG4gICAgICAgIHZhciBvID0gZS5kYXRlO1xuICAgICAgICB2YXIgbiA9IDFlNCAqIG8ueWVhciArIDEwMCAqIG8ubW9udGggKyBvLmRheTtcbiAgICAgICAgX2dsb2JhbC5kZWZhdWx0LmNoYWxsZW5nZUx2ID0gbjtcbiAgICAgICAgX3BJbmZvLmNoZ1NjZW5lKF9wSW5mby5zY2VuZVR5cGUuZ2FtZSwge2dhbWVUeXBlOiBfcEluZm8uZ2FtZVR5cGUuY2hhbGxlbmdlLCBjaGFsbGVuZ2VEYXRhOiBlfSk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5oaWRlVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5nZXRMZXZlbERpZmZTdHJCeURpZmYgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB2YXIgZSA9IF9jZmdNZ3IuZGVmYXVsdC5zZXJ2ZXJDZmcuZGlmZmljdWx0eV9ydWxlcy5ydWxlcztcbiAgICAgICAgdmFyIG8gPSBcIuWFpemXqOmavuW6plwiO1xuICAgICAgICB2YXIgbiA9IDE7XG4gICAgICAgIGZvciAodmFyIGkgaW4gZSkge1xuICAgICAgICAgICAgaWYgKCgobyA9IGVbaV0udGl0bGUpLCBuID09PSB0KSkgYnJlYWs7XG4gICAgICAgICAgICBuKys7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG8uc2xpY2UoMCwgLTIpO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbZChjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJsdkxCXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbZChjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJpbmZvTEJcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtkKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcInNpemVMYlwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2QoY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwiZGlmZkxiXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbZChjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJjcm9zc0xiXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbZChjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJjb3N0TEJcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtkKGNjLlNwcml0ZSldLCBlLnByb3RvdHlwZSwgXCJ0eXBlU3BcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtkKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwibGlnaHROb2RlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbZChbY2MuU3ByaXRlRnJhbWVdKV0sIGUucHJvdG90eXBlLCBcInR5U3BzXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW3BdLCBlKTtcbn0pKF9iYXNlVUkuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSBoO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/loading.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8c8e4zCZnxPrIZ17IRm3EJP', 'loading');
// scripts/loading.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.DEFAULTFONT = void 0;

var _errorCode = require("errorCode");

var _idx = require("idx");

var _pConst = require("pConst");

var _request = require("request");

var _res = require("res");

var _time = require("time");

var _uData = require("uData");

var _cfgMgr = require("cfgMgr");

var _global = require("global");

var _bagMgr = require("bagMgr");

var _challengeMgr = require("challengeMgr");

var _levelMgr = require("levelMgr");

var _mailMgr = require("mailMgr");

var _skinMgr = require("skinMgr");

var _taskMgr = require("taskMgr");

var _pInfo = require("pInfo");

var I = cc._decorator;
var D = I.ccclass;
var P = I.property;
cc.macro.ENABLE_MULTI_TOUCH = !1;
cc.assetManager.downloader.maxConcurrency = 1e3;
cc.assetManager.downloader.maxRequestsPerFrame = 1e3;

var k = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bg = null;
    e.bg2 = null;
    e.logo = null;
    e.pro = null;
    e.loginNode = null;
    e.rDown = null;
    e.tip = null;
    e.proLbl = null;
    e.info = null;
    e.isFail = !1;
    e.curPro = 0;
    e.retryTime = 1;
    e.stateStr = "加载中";
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      var e;
      var o;
      var n;
      var i;
      var r;
      var a;
      var c;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            return _global["default"].isReStore ? (_idx.platform.reportEvent(_idx.ERepEvt.reSetData), [2]) : (_idx.platform.reportEvent(_idx.ERepEvt.applaunchShow), t = cc.view.getVisibleSize(), e = t.width, o = t.height, n = o / e, cc.sys.IPAD == cc.sys.platform && _idx.platform.string() == _pConst.PFCode.Bytedance || n < 1.78 && (cc.view.setDesignResolutionSize(720, 1280, cc.ResolutionPolicy.FIXED_HEIGHT), i = cc.view.getVisibleSize(), r = i.width, a = i.height, n = _global["default"].padScale = a / r, (c = new cc.Node("bg2")).color = new cc.Color(80, 80, 80), c.scale = n, this.node.addChild(c), c.setSiblingIndex(0), this.bg2 = c.addComponent(cc.Sprite)), [4, _cfgMgr["default"].init()]);

          case 1:
            return s.sent(), _idx.platform.init(), [2];
        }
      });
    });
  };

  e.prototype.start = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      var e = this;
      return __generator(this, function (n) {
        switch (n.label) {
          case 0:
            return [4, _res["default"].ins.lSF("bg/bg", this.bg)];

          case 1:
            return t = n.sent(), this.bg2 && t && (this.bg2.spriteFrame = t), this.loadOther(), _global["default"].isReStore ? [3, 3] : [4, Promise.all([this.checkSession().then(function () {
              return e.preLogin();
            }).then(function () {
              e.updatePro(10);
            }), this.getPrivacy(), this.getOSSConfig(), this.loadFont().then(function (t) {
              e.updatePro(40);
              exports.DEFAULTFONT = t;
            })])["catch"](function () {})];

          case 2:
            return n.sent(), [3, 5];

          case 3:
            return [4, Promise.all([this.loadFont().then(function (t) {
              e.updatePro(25);
              exports.DEFAULTFONT = t;
            }), this.restore().then(function () {
              e.updatePro(25);
            })])];

          case 4:
            n.sent(), n.label = 5;

          case 5:
            return [4, Promise.all([this.preloadScene(), _levelMgr["default"].ins.init()])["catch"](function () {})];

          case 6:
            return n.sent(), this.isFail ? (this.isFail = !1, this.scheduleOnce(this.start, 1), [2]) : (this.etr(), [2]);
        }
      });
    });
  };

  e.prototype.loadOther = function () {
    var t = this;
    var e = cc.resources;
    e.load("bg/logo_rc", cc.SpriteFrame, function (e, o) {
      var n = t.logo.node;
      !e && n.isValid && (t.logo.spriteFrame = o);
    });
    e.load("bg/rDown", cc.SpriteFrame, function (e, o) {
      !e && t.node && t.node.isValid && (t.rDown.spriteFrame = o);
    });
  };

  e.prototype.getOSSConfig = function () {
    return new Promise(function (t) {
      _global["default"].chapterCount = 18;
      _global["default"].jisawCount = 40;
      t(1); // var e = cc.sys.isBrowser ? _global.OssConfig.configDevUrl : _global.OssConfig.configUrl;
      // cc.assetManager.loadRemote(e, cc.JsonAsset, function (e, o) {
      //     if (!e && o && o.json) {
      //         var n = o.json;
      //         _global.default.chapterCount = n.chapter;
      //         _global.default.jisawCount = n.jigsaw;
      //     }
      //     t(1);
      // });
    });
  };

  e.prototype.getPrivacy = function () {
    var t = this;
    return new Promise(function (e) {
      _idx.platform.string() == _pConst.PFCode.Wechat || _idx.platform.isQQ || _idx.platform.string() == _pConst.PFCode.Alipay ? (t.info.active = !0, _idx.platform.requirePrivacyAuthorize ? _idx.platform.requirePrivacyAuthorize({
        complete: function complete() {
          e(1);
        }
      }) : e(1)) : e(1);
    });
  };

  e.prototype.checkSession = function () {
    if (_idx.platform.isNative && !_idx.platform.isLogin) {
      var t;

      _idx.platform.clearStorage();

      var e = new Promise(function (e) {
        t = e;
      });
      var o = this.loginNode;
      o.active = !0;
      var n = o.addComponent(cc.Button);
      n.transition = cc.Button.Transition.SCALE;
      n.zoomScale = 0.9;
      n.node.on("click", function () {
        _idx.platform.showLogin(t);
      }, this);
      return e;
    }

    return Promise.resolve();
  };

  e.prototype.preLogin = function (t) {
    var e = this;
    this.loginNode.active = !1;
    this.pro.node.active = this.tip.node.active = this.proLbl.node.active = !0;
    return new Promise(function (o) {
      _global["default"].isReStore ? (_idx.platform.initCloud && _idx.platform.initCloud() || Promise.resolve()).then(function (t) {
        _time["default"].ins.sync(t);
      }).then(function () {
        e.loginFinally();
        o(1);
      }) : null != _idx.platform.getStorage("localData") || t ? (console.log("异步login"), (_idx.platform.initCloud && _idx.platform.initCloud() || Promise.resolve()).then(function (t) {
        _time["default"].ins.sync(t);

        return _idx.platform.getCloudData && _idx.platform.getCloudData() || Promise.resolve();
      }).then(function (t) {
        _uData["default"].ins.onLogin(t);

        e.loginFinally();
        e.login().then(function () {
          return e.loginFinally;
        })["catch"](function (t) {
          return console.error(t);
        });
        o(1);
      })) : (console.log("同步login"), e.isSync = !0, e.login().then(function () {
        o(1);
      })["catch"](function (t) {
        return console.error(t);
      }));
    });
  };

  e.prototype.restore = function () {
    var t = this;
    return new Promise(function (e) {
      (_idx.platform.initCloud && _idx.platform.initCloud() || Promise.resolve()).then(function (t) {
        _time["default"].ins.sync(t);
      }).then(function () {
        t.loginFinally();
        e(1);
      });
    });
  };

  e.prototype.login = function () {
    var t;
    var e;
    var o = this;
    var n = new Promise(function (o, n) {
      t = o;
      e = n;
    });

    _idx.platform.login(this.retryTime).then(function (t) {
      var e = t.code;
      var o = t.anonymous_code;
      var n = t.openid;
      var i = t.unionid; // return _request.default.ins.login(e, o, n, i);

      return Promise.resolve({
        "status": 1,
        "msg": "登录成功",
        "data": {
          "id": 6082641,
          "company_id": 8,
          "status": 1,
          "nickname": "卷卷大王",
          "avatar": null,
          "reg_time": 1711775814000,
          "platform": "DEV",
          "app_name": "DEV",
          "from_game_uid": 0,
          "game_id": 10001,
          "login_times": 2535,
          "openid": "dev_ceshi",
          "unionid": null,
          "last_login_time": 1712485967000,
          "anonymous_openid": null,
          "area_code": null,
          "mobile": null,
          "appid": "dev_nonogram",
          "qf_game_uid": null,
          "qf_gamer_token": null,
          "is_new_user": 0,
          "game_uid": 6082641,
          "token": "7d88dab3d09a3529353f2eeba4256732483fffc1",
          "code": "dev_ceshi",
          "session_key": "dev_sk_66127689dfb0e",
          "launch_options": {
            "scene": 0,
            "query": []
          },
          "system_info": null
        },
        "code": 1,
        "server_time": Date.now()
      });
    }).then(function (e) {
      return __awaiter(o, void 0, void 0, function () {
        var o;
        var n;
        var i;
        var r;
        var d;
        var y;
        var v;

        var _;

        var w;
        var S;
        var I;
        var D;
        var P;
        var k;
        var R;
        var N;
        var C;
        var O = this;
        return __generator(this, function (M) {
          switch (M.label) {
            case 0:
              if (0 == e.state) throw _errorCode.errorCode.LOGIN_STATE_ERR;
              if (_idx.platform.hideLoading(), console.log("login成功"), o = _request["default"].ins, n = _uData["default"].ins, i = e.data, _time["default"].ins.sync(e.server_time), o.userToken = i && i.token, o.openId = i && i.openid, r = n.syncLoginData(i), d = r[0], y = r[1], v = function v() {
                return __awaiter(O, void 0, void 0, function () {
                  var e;
                  var n;
                  return __generator(this, function (i) {
                    switch (i.label) {
                      case 0:
                        return cc.resources.load('game_init_config', function (err, json) {
                          var t = json.json; // o
                          // .getJson()
                          // .then(function(t) {

                          _cfgMgr["default"].syncServerCfg(t.data);

                          _bagMgr["default"].ins.initBag(!d && y);

                          _bagMgr["default"].ins.initBag(!d && y);
                        }), // .catch(function(t) {
                        //     return console.error(t);
                        // }),
                        e = _pInfo["default"].ins.getAliAddHome(), _idx.platform.string() === _pConst.PFCode.Alipay && e ? [4, null === (n = _idx.platform.checkDesktopExist) || void 0 === n ? void 0 : n.call(_idx.platform)] : [3, 2];

                      case 1:
                        i.sent(), i.label = 2;

                      case 2:
                        return _mailMgr["default"].ins.getMail(null), this.loginFinally(), t(1), [2];
                    }
                  });
                });
              }, !d || !y) return [3, 7];
              _ = void 0, w = void 0, M.label = 1;

            case 1:
              return M.trys.push([1, 3,, 4]), [4,
              /*o.getServerData("localData")*/
              Promise.resolve()];

            case 2:
              return (I = M.sent()) && (_ = JSON.parse(I.data[0].user_data) || {}), [3, 4];

            case 3:
              return M.sent(), [3, 4];

            case 4:
              return _idx.platform.getCloudData ? [4, _idx.platform.getCloudData()] : [3, 6];

            case 5:
              w = M.sent(), M.label = 6;

            case 6:
              if (D = (null == _ ? void 0 : _.puzzleLvl) || 0, P = (null === (N = null == _ ? void 0 : _.bag) || void 0 === N ? void 0 : N.puzzle_pieces) || 0, k = (null == w ? void 0 : w.puzzleLvl) || 0, R = (null === (C = null == w ? void 0 : w.bag) || void 0 === C ? void 0 : C.puzzle_pieces) || 0, !(S = D > k || P > R || !w ? _ : w)) throw _errorCode.errorCode.CANGET_DATE_ERR;
              return n.onLogin(S), v(), [3, 8];

            case 7:
              n.onLogin(), v(), M.label = 8;

            case 8:
              return [2];
          }
        });
      });
    })["catch"](function (t) {// console.error(t);
      // if ((console.log("登录失败:", JSON.stringify(t)), o.retryTime < 3))
      //     o.isSync && _idx.platform.showLoading("登录中..." + o.retryTime), o.retryTime++, (n = o.login());
      // else {
      // if (o.isSync) {
      //     if ((_idx.platform.hideLoading(), _idx.platform.isNative)) return void(
      // n = o.preLogin(!0)
      // );
      //     _idx.platform
      //         .showModal({
      //             title: "友情提示",
      //             content: "登陆服务器异常，请重试",
      //             confirmText: "确定",
      //             showCancel: !1
      //         })
      //         .then(function() {
      //             _idx.platform.refreshGame();
      //         });
      // }
      // e(t);
      // }
    });

    return n;
  };

  e.prototype.loginFinally = function () {
    _taskMgr["default"].initTask();

    _challengeMgr["default"].ins.initNowMonthData();

    _skinMgr["default"].ins.init();

    this.sceneName = _pInfo["default"].ins.getGuideDone() ? _pInfo.sceneType.main : _pInfo.sceneType.guide;
  };

  e.prototype.loadFont = function () {
    return new Promise(function (t, e) {
      cc.resources.load("font/font", cc.BitmapFont, function (o, n) {
        o ? e(o) : t(n);
      });
    });
  };

  e.prototype.preLoadGuide = function () {
    cc.director.preloadScene(_pInfo.sceneType.guide);
  };

  e.prototype.preloadScene = function () {
    var t = this;
    this.stateStr = "正在进入游戏";
    return new Promise(function (e, o) {
      cc.Tween.stopAllByTag(886);
      var n = 100 - t.curPro;
      cc.director.preloadScene(t.sceneName, function (e, o) {
        t.updatePro2(t.curPro + e / o * n);
      }, function (t) {
        t ? o(t) : e(1);
      });
    });
  };

  e.prototype.updatePro = function (t) {
    this.curPro += t;
    cc.Tween.stopAllByTag(886);
    cc.tween(this.pro).tag(886).to(0.1, {
      progress: this.curPro / 100
    }).start();
  };

  e.prototype.updatePro2 = function (t) {
    this.pro.progress = t / 100;
  };

  e.prototype.update = function () {
    this.proLbl.string = this.stateStr + " (" + Math.ceil(100 * this.pro.progress) + "%)";
  };

  e.prototype.etr = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        _global["default"].isReStore = null;

        _idx.platform.hideLoading();

        _pInfo.chgScene(this.sceneName, {
          noAni: !0,
          cb: function cb() {
            cc.assetManager.loadBundle("sound");
            cc.assetManager.loadBundle("resSps");
            cc.assetManager.loadBundle("prefab", function (t, e) {
              t || _pInfo["default"].ins.isOpenLock && e.preload("prefab/page_race");
            });
            cc.resources.release("bg/bg", cc.SpriteFrame);
            cc.resources.release("bg/logo", cc.SpriteFrame);
            cc.resources.release("bg/down", cc.SpriteFrame);
            cc.resources.release("bg/rDown", cc.SpriteFrame);

            _idx.platform.reportEvent(_idx.ERepEvt.gameLoaded);
          }
        });

        return [2];
      });
    });
  };

  __decorate([P(cc.Sprite)], e.prototype, "bg", void 0);

  __decorate([P(cc.Sprite)], e.prototype, "logo", void 0);

  __decorate([P(cc.ProgressBar)], e.prototype, "pro", void 0);

  __decorate([P(cc.Node)], e.prototype, "loginNode", void 0);

  __decorate([P(cc.Sprite)], e.prototype, "rDown", void 0);

  __decorate([P(cc.Label)], e.prototype, "tip", void 0);

  __decorate([P(cc.Label)], e.prototype, "proLbl", void 0);

  __decorate([P(cc.Node)], e.prototype, "info", void 0);

  return __decorate([D], e);
}(cc.Component);

exports["default"] = k;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_chapterDone.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bcc61uunFpAPIf+ZqAgsiJ/', 'ui_chapterDone');
// scripts/ui_chapterDone.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _levelMgr = require("levelMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var l = cc._decorator;
var u = l.ccclass;
var p = l.property;

var d = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.light = null;
    e.pics = [];
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    t.prototype.onLoad.call(this);
    cc.tween(this.light).by(3, {
      angle: -360
    }).repeatForever().start();
  };

  e.prototype.init = function () {
    for (var t = this, e = [], o = 0; o < arguments.length; o++) {
      e[o] = arguments[o];
    }

    _levelMgr["default"].ins.getchapterBunder().then(function () {
      for (var e = _pInfo["default"].ins.getPuzzleLvl(), o = "" + (Math.ceil(e / 54) - 1 + 100), n = function n(e) {
        _levelMgr["default"].ins.getJigsawIcon(e, o).then(function (o) {
          o && (t.pics[e - 1].spriteFrame = o);
        })["catch"](function () {
          console.error("getJigsawIconErr");
        });
      }, i = 1; i <= 6; i++) {
        n(i);
      }
    })["catch"](function () {
      console.error("getChapterBundleErr");
    });
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  __decorate([p(cc.Node)], e.prototype, "light", void 0);

  __decorate([p([cc.Sprite])], e.prototype, "pics", void 0);

  return __decorate([u], e);
}(_baseUI["default"]);

exports["default"] = d;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfY2hhcHRlckRvbmUuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2xldmVsTWdyIiwicmVxdWlyZSIsIl9wSW5mbyIsIl9iYXNlVUkiLCJsIiwiY2MiLCJfZGVjb3JhdG9yIiwidSIsImNjY2xhc3MiLCJwIiwicHJvcGVydHkiLCJkIiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsImxpZ2h0IiwicGljcyIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsIm9uTG9hZCIsImNhbGwiLCJ0d2VlbiIsImJ5IiwiYW5nbGUiLCJyZXBlYXRGb3JldmVyIiwic3RhcnQiLCJpbml0IiwibyIsImxlbmd0aCIsImlucyIsImdldGNoYXB0ZXJCdW5kZXIiLCJ0aGVuIiwiZ2V0UHV6emxlTHZsIiwiTWF0aCIsImNlaWwiLCJnZXRKaWdzYXdJY29uIiwic3ByaXRlRnJhbWUiLCJjb25zb2xlIiwiZXJyb3IiLCJpIiwiaGlkZVRoaXMiLCJoaWRlIiwiX19kZWNvcmF0ZSIsIk5vZGUiLCJTcHJpdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsU0FBUyxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF2Qjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQXBCOztBQUNBLElBQUlFLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBSUcsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFW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Q0FBQyxDQUFDcEMsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBakI7QUFDSCxDQTlDTyxDQThDTFYsT0FBTyxXQTlDRixDQUFSOztBQStDQUwsT0FBTyxXQUFQLEdBQWtCYSxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfbGV2ZWxNZ3IgPSByZXF1aXJlKFwibGV2ZWxNZ3JcIik7XG52YXIgX3BJbmZvID0gcmVxdWlyZShcInBJbmZvXCIpO1xudmFyIF9iYXNlVUkgPSByZXF1aXJlKFwiYmFzZVVJXCIpO1xudmFyIGwgPSBjYy5fZGVjb3JhdG9yO1xudmFyIHUgPSBsLmNjY2xhc3M7XG52YXIgcCA9IGwucHJvcGVydHk7XG52YXIgZCA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLmxpZ2h0ID0gbnVsbDtcbiAgICAgICAgZS5waWNzID0gW107XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUub25Mb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0LnByb3RvdHlwZS5vbkxvYWQuY2FsbCh0aGlzKTtcbiAgICAgICAgY2MudHdlZW4odGhpcy5saWdodCkuYnkoMywge2FuZ2xlOiAtMzYwfSkucmVwZWF0Rm9yZXZlcigpLnN0YXJ0KCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBmb3IgKHZhciB0ID0gdGhpcywgZSA9IFtdLCBvID0gMDsgbyA8IGFyZ3VtZW50cy5sZW5ndGg7IG8rKykgZVtvXSA9IGFyZ3VtZW50c1tvXTtcbiAgICAgICAgX2xldmVsTWdyLmRlZmF1bHQuaW5zXG4gICAgICAgICAgICAuZ2V0Y2hhcHRlckJ1bmRlcigpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgZm9yIChcbiAgICAgICAgICAgICAgICAgICAgdmFyIGUgPSBfcEluZm8uZGVmYXVsdC5pbnMuZ2V0UHV6emxlTHZsKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBvID0gXCJcIiArIChNYXRoLmNlaWwoZSAvIDU0KSAtIDEgKyAxMDApLFxuICAgICAgICAgICAgICAgICAgICAgICAgbiA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2xldmVsTWdyLmRlZmF1bHQuaW5zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5nZXRKaWdzYXdJY29uKGUsIG8pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvICYmICh0LnBpY3NbZSAtIDFdLnNwcml0ZUZyYW1lID0gbyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiZ2V0Smlnc2F3SWNvbkVyclwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgaSA9IDE7XG4gICAgICAgICAgICAgICAgICAgIGkgPD0gNjtcbiAgICAgICAgICAgICAgICAgICAgaSsrXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICBuKGkpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcImdldENoYXB0ZXJCdW5kbGVFcnJcIik7XG4gICAgICAgICAgICB9KTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmhpZGVUaGlzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW3AoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJsaWdodFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW3AoW2NjLlNwcml0ZV0pXSwgZS5wcm90b3R5cGUsIFwicGljc1wiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFt1XSwgZSk7XG59KShfYmFzZVVJLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gZDtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_flyAni.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '32b780K1TRFS49kf6zFOjY+', 'ui_flyAni');
// scripts/ui_flyAni.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _mySafeArea = require("mySafeArea");

var _res = require("res");

var _vb = require("vb");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var p = cc._decorator;
var d = p.ccclass;
var h = p.property;

var f = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.aniParent = null;
    e.flyPre = null;
    e.coinNode = null;
    e.coinLb = null;
    e.posArrsX = [[0], [0], [-75, 75], [-150, 0, 150], [-225, -75, 75, 225], [-300, -150, 0, 150, 300], [-150, 0, 150, -150, 0, 150], [-150, 0, 150, -225, -75, 75, 225], [-225, -75, 75, 225, -225, -75, 75, 225], [-150, 0, 150, -150, 0, 150, -150, 0, 150], [-150, 0, 150, -225, -75, 75, 225, -150, 0, 150]];
    e.posArrsY = [[0], [0], [0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0], [90, 90, 90, -90, -90, -90], [90, 90, 90, -90, -90, -90, -90], [90, 90, 90, 90, -90, -90, -90, -90], [180, 180, 180, 0, 0, 0, -180, -180, -180], [180, 180, 180, 0, 0, 0, 0, -180, -180, -180]];
    e.nodesArr = [];
    e.itemDatas = null;
    e.hideCb = null;
    e.isShowCoin = !1;
    e.isAni = !1;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    var e = this;
    var o = t.itemDatas;
    var n = t.hideCb;
    var i = t.showCoin;
    o && o.length || this.hide();
    o.length > 10 && (o.length = 10);
    this.hideCb = n;
    this.itemDatas = o;
    var r = this.aniParent;
    this.coinLb.string = i + "";
    this.coinNode.active = !1;
    this.coinNode.y = cc.winSize.height / 2 - 60 - _mySafeArea.getSafeAreaRect().yMin;

    for (var u = function u(t, n) {
      var a = o[t];
      r.convertToNodeSpaceAR(a.worldPos, a.worldPos);
      var u = cc.instantiate(p.flyPre);
      u.getChildByName("lbl").getComponent(cc.Label).string = "x" + a.value;
      u.active = !0;
      u.parent = r;
      u.position = a.worldPos;

      _res["default"].ins.getBundleByString("resSps").then(function (t) {
        t.load("item/" + a.itemId, cc.SpriteFrame, function (t, o) {
          !t && e.node && u && u.isValid && (u.getChildByName("spr").getComponent(cc.Sprite).spriteFrame = o);
        });
      })["catch"](function (t) {
        console.error("RTool.ins.getBundleByString('resSps')", t);
      });

      !i && 0 != i || "coin" != a.itemId || (p.coinNode.active = !0);
      p.nodesArr.push(u);
      var d = p.posArrsX[n];
      var h = p.posArrsY[n];
      var f = cc.v2(d[t], h[t]);
      var g = cc.v2((d[t] + a.worldPos.x) / 2, (Math.abs(a.worldPos.y) + 200) * a.worldPos.y / a.worldPos.y);
      var y = cc.v3(0, -cc.winSize.height / 2);
      var m = cc.v2(d[t] / 2, 500);

      switch (a.itemId) {
        case "coin":
          y = cc.v3(-72, cc.winSize.height / 2), m = cc.v2(d[t] - 200, -500);
          break;

        case "times":
          y = cc.v3(174, cc.winSize.height / 2), m = cc.v2(d[t] + 200, -500);
      }

      cc.tween(u).delay(0.2 * t).bezierTo(0.35, a.worldPos, g, f, cc.easeInOut(1.2)).to(0.04, {
        scale: 0.9
      }).to(0.066, {
        scale: 1.1
      }).to(0.12, {
        scale: 0.95
      }).to(0.053, {
        scale: 1
      }).call(function () {
        t == n - 1 && (e.isAni = !0);
      }).delay(0.2).bezierTo(0.5, f, m, y, cc.easeInOut(0.8)).call(function () {
        _vb["default"].p(_vb.VEnum3.SHORT);

        "coin" == a.itemId && (e.coinLb.string = _pInfo["default"].ins.getCoin() + "");
        u.active = !1;
        t == n - 1 && (e.hideCb && e.hideCb(), e.hide());
      }).start();
    }, p = this, d = 0, h = o.length; d < h; d++) {
      u(d, h);
    }
  };

  e.prototype.skipAni = function () {
    var t = this;

    if (!this.isAni) {
      this.isAni = !0;

      for (var e = this.itemDatas, o = function o(_o, i) {
        var r = e[_o];
        var a = n.nodesArr[_o];
        cc.Tween.stopAllByTarget(a);
        var s = n.posArrsX[i];
        var u = n.posArrsY[i];
        var p = cc.v2(s[_o], u[_o]);
        a.position = p;
        var d = cc.v3(0, -cc.winSize.height / 2);
        var h = cc.v2(s[_o] / 2, 500);

        switch (r.itemId) {
          case "coin":
            d = cc.v3(-72, cc.winSize.height / 2), h = cc.v2(s[_o] - 200, -500);
            break;

          case "times":
            d = cc.v3(174, cc.winSize.height / 2), h = cc.v2(s[_o] + 200, -500);
        }

        n.scheduleOnce(function () {
          cc.tween(a).bezierTo(0.3, p, h, d, cc.easeInOut(0.8)).call(function () {
            _vb["default"].p(_vb.VEnum3.SHORT);

            "coin" == r.itemId && (t.coinLb.string = _pInfo["default"].ins.getCoin() + "");
            a.active = !1;
            _o == i - 1 && (t.hideCb && t.hideCb(), t.hide());
          }).start();
        }, 0.1 * _o);
      }, n = this, i = 0, r = e.length; i < r; i++) {
        o(i, r);
      }
    }
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  __decorate([h(cc.Node)], e.prototype, "aniParent", void 0);

  __decorate([h(cc.Node)], e.prototype, "flyPre", void 0);

  __decorate([h(cc.Node)], e.prototype, "coinNode", void 0);

  __decorate([h(cc.Label)], e.prototype, "coinLb", void 0);

  return __decorate([d], e);
}(_baseUI["default"]);

exports["default"] = f;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_festival.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fd8b2rRJL5Bb4++/HXP0pgn', 'ui_festival');
// scripts/ui_festival.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _mySafeArea = require("mySafeArea");

var _res = require("res");

var _time = require("time");

var _global = require("global");

var _bagMgr = require("bagMgr");

var _festivalMgr = require("festivalMgr");

var _newJigMgr = require("newJigMgr");

var _panelMgr = require("panelMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var _ = cc._decorator;
var b = _.ccclass;
var w = _.property;

var S = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.proLb = null;
    e.taskLb = null;
    e.timeLb = null;
    e.imgNode = null;
    e.tianNode = null;
    e.dayTimeLb = null;
    e.costLb = null;
    e.startBtn = null;
    e.topNode = null;
    e.upEggNode = null;
    e.eggNode = null;
    e.spineNode = null;
    e.jigsawNum = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.node.height = cc.winSize.height;
    this.checkEndTime();
  };

  e.prototype.start = function () {
    var t = this;
    this.initPanel();
    this.upNewJigRed();
    this.scheduleOnce(function () {
      t.adapter();
    });
  };

  e.prototype.adapter = function () {
    var t = _mySafeArea.getSafeAreaRect().yMin;

    this.topNode.y -= t;
  };

  e.prototype.upNewJigRed = function () {
    var t = _newJigMgr["default"].ins.getUnPlacedNum();

    if (t > 0) {
      var e = t > 99 ? "99+" : t + "";
      this.jigsawNum.node.parent.active = !0;
      this.jigsawNum.string = e + "";
      this.jigsawNum.node.x = _global["default"].getCharXOffset(this.jigsawNum.string);
    } else this.jigsawNum.node.parent.active = !1;
  };

  e.prototype.initPanel = function () {
    this.initTask();
    this.initImg();
    this.initBtn();
    this.initReward();
  };

  e.prototype.initTask = function () {
    var t = _festivalMgr["default"].ins;
    var e = t.getNowTaskData();
    var o = e.nums;
    var n = t.getNowTaskPro();
    this.taskLb.string = e.title.format(o);
    this.schedule(this.showTime, 1);
    this.showTime();
    t.isTaskLocked() ? (this.proLb.string = "", this.upEggNode.active = !1) : (this.proLb.string = n + "/" + o, this.upEggNode.active = !0);
  };

  e.prototype.initImg = function () {
    for (var t = _festivalMgr["default"].ins.getFesPuzzleLv() - 1, e = this.imgNode.children, o = 0, n = e.length; o < n; o++) {
      e[o].active = o >= t;
    }

    if (_festivalMgr["default"].ins.isPuzzleMax()) this.spineNode.active = !1;else {
      this.spineNode.active = !0;
      var i = this.imgNode.children[t];
      this.spineNode.position = cc.v3(i.x + this.imgNode.x + 54, i.y + this.imgNode.y - 55);
    }
  };

  e.prototype.initBtn = function () {
    var t = _festivalMgr["default"].ins.getFesLevelCost();

    this.costLb.string = "-" + t;
    this.startBtn.active = !_festivalMgr["default"].ins.isPuzzleMax();
  };

  e.prototype.initReward = function () {
    var t = this.upEggNode;
    if (_festivalMgr["default"].ins.isTaskLocked()) return this.checkShowFinger(!1), this.eggNode.angle = 0, cc.Tween.stopAllByTarget(this.eggNode), void (t.active = !1);
    t.active = !0;
    var e = _festivalMgr["default"].ins;
    var o = e.getNowTaskData().nums;
    e.getNowTaskPro() >= o ? (this.checkShowFinger(!0), cc.Tween.stopAllByTarget(this.eggNode), cc.tween(this.eggNode).sequence(cc.tween().to(0.5, {
      angle: 10
    }), cc.tween().to(1, {
      angle: 0
    }, {
      easing: "elasticOut"
    }).delay(0.5)).repeatForever().start()) : (this.checkShowFinger(!1), this.eggNode.angle = 0, cc.Tween.stopAllByTarget(this.eggNode));
  };

  e.prototype.checkShowFinger = function (t) {
    var e = this;
    t ? this._fingerNode ? this._fingerNode.active = !0 : _res["default"].ins.lPre("prefab/finger").then(function (t) {
      e._fingerNode = cc.instantiate(t);
      e.eggNode.parent.addChild(e._fingerNode);
      var o = cc.v3(0, 105);

      e._fingerNode.setPosition(o);

      e._fingerNode.active = !0;
    })["catch"](function () {}) : this._fingerNode && this._fingerNode.active && (this._fingerNode.active = !1);
  };

  e.prototype.showTime = function () {
    var t = _time["default"].ins.nextZeroTime / 1e3;
    if (t <= 0) return this.initTask(), void this.unschedule(this.showTime);
    this.dayTimeLb.string = _time["default"].getFormatHMS(t);
  };

  e.prototype.checkEndTime = function () {
    var t = _festivalMgr["default"].ins.fesEndTime - _time["default"].ins.serverTime;

    if (t > 0) {
      var e = Math.floor(t / 86400);
      if (e <= 0) this.tianNode.active = !1, this.schedule(this.showEndTime, 1), this.showEndTime();else {
        var o = this.timeLb.string = e + "";
        this.tianNode.active = !0;
        1 == o.length && (this.tianNode.x = 112);
      }
    } else this.timeLb.string = "", this.tianNode.active = !1;
  };

  e.prototype.showEndTime = function () {
    var t = _festivalMgr["default"].ins.fesEndTime - _time["default"].ins.serverTime;
    if (t <= 0) return this.initTask(), this.timeLb.string = "已结束", void this.unschedule(this.showTime);
    this.timeLb.string = _time["default"].getFormatHMS(t);
  };

  e.prototype.hideThis = function () {
    _evts["default"].opE.emit({
      action: _evts["default"].UPD_FES_RED
    });

    this.hide();
  };

  e.prototype.onBtnGet = function () {
    if (_festivalMgr["default"].ins.isTaskLocked()) _tipMgr["default"].ins.showTip("今日任务已完成");else {
      var t = _festivalMgr["default"].ins;
      var e = t.getFesPro();
      var o = t.getNowTaskData();
      var n = o.nums;
      var i = t.getNowTaskPro();
      var r = o.val;
      var a = [];

      for (var c in r) {
        var l = r[c];
        var u = this.imgNode.children[e];
        var p = u.parent.convertToWorldSpaceAR(u.position);
        var f = {};
        f.itemId = c;
        f.worldPos = p;
        f.value = Number(l);
        a.push(f);
      }

      if (i >= n) {
        for (var c in r) {
          l = r[c], _bagMgr["default"].ins.addItem(c, Number(l));
        }

        _panelMgr["default"].ins.open("ui/ui_flyAni", {
          itemDatas: a
        });

        var m = Number(t.getFesPro());

        _idx.platform.reportEvent(_idx.ERepEvt.fesTaskFinish, {
          id: m
        });

        _festivalMgr["default"].ins.finishFesTask();

        this.initPanel();
      } else _panelMgr["default"].ins.open("ui/ui_preReward", {
        itemDatas: a
      });
    }
  };

  e.prototype.onBtnStart = function () {
    var t = _festivalMgr["default"].ins.getFesLevelCost();

    _pInfo["default"].ins.getPower() < t ? _panelMgr["default"].ins.open("ui/ui_getRes", {
      itemId: "times"
    }) : _festivalMgr["default"].ins.isPuzzleLocked() ? _tipMgr["default"].ins.showTip("明天开启") : (_festivalMgr["default"].ins.updPro(_festivalMgr.fesTaskKey.costPower, t), _pInfo["default"].ins.addPower(-t), _pInfo.chgScene(_pInfo.sceneType.game, {
      gameType: _pInfo.gameType.festival
    }));
  };

  e.prototype.onBtnJig = function () {
    this.hideThis();

    _evts["default"].opE.emit({
      action: _evts["default"].MAINJUMP,
      data: 0,
      param: "festival"
    });
  };

  e.prototype.onBtnGo = function () {
    var t = _festivalMgr["default"].ins.getNowTaskData();

    switch (this.hideThis(), t.get_by) {
      case _festivalMgr.fesTaskKey.raceScore:
      case _festivalMgr.fesTaskKey.raceTimes:
        _evts["default"].opE.emit({
          action: _evts["default"].MAINJUMP,
          data: 4
        });

        break;

      case _festivalMgr.fesTaskKey.costPower:
      case _festivalMgr.fesTaskKey.throughMain:
        _global["default"].levelDone ? _panelMgr["default"].ins.open("ui/ui_selectMode", null) : _panelMgr["default"].ins.open("ui/ui_lvInfo", null);
        break;

      case _festivalMgr.fesTaskKey.finishPuzzle:
        _evts["default"].opE.emit({
          action: _evts["default"].MAINJUMP,
          data: 0
        });

    }
  };

  __decorate([w(cc.Label)], e.prototype, "proLb", void 0);

  __decorate([w(cc.Label)], e.prototype, "taskLb", void 0);

  __decorate([w(cc.Label)], e.prototype, "timeLb", void 0);

  __decorate([w(cc.Node)], e.prototype, "imgNode", void 0);

  __decorate([w(cc.Node)], e.prototype, "tianNode", void 0);

  __decorate([w(cc.Label)], e.prototype, "dayTimeLb", void 0);

  __decorate([w(cc.Label)], e.prototype, "costLb", void 0);

  __decorate([w(cc.Node)], e.prototype, "startBtn", void 0);

  __decorate([w(cc.Node)], e.prototype, "topNode", void 0);

  __decorate([w(cc.Node)], e.prototype, "upEggNode", void 0);

  __decorate([w(cc.Node)], e.prototype, "eggNode", void 0);

  __decorate([w(cc.Node)], e.prototype, "spineNode", void 0);

  __decorate([w(cc.Label)], e.prototype, "jigsawNum", void 0);

  return __decorate([b], e);
}(_baseUI["default"]);

exports["default"] = S;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfZmVzdGl2YWwuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2V2dHMiLCJyZXF1aXJlIiwiX2lkeCIsIl9teVNhZmVBcmVhIiwiX3JlcyIsIl90aW1lIiwiX2dsb2JhbCIsIl9iYWdNZ3IiLCJfZmVzdGl2YWxNZ3IiLCJfbmV3SmlnTWdyIiwiX3BhbmVsTWdyIiwiX3RpcE1nciIsIl9wSW5mbyIsIl9iYXNlVUkiLCJfIiwiY2MiLCJfZGVjb3JhdG9yIiwiYiIsImNjY2xhc3MiLCJ3IiwicHJvcGVydHkiLCJTIiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsInByb0xiIiwidGFza0xiIiwidGltZUxiIiwiaW1nTm9kZSIsInRpYW5Ob2RlIiwiZGF5VGltZUxiIiwiY29zdExiIiwic3RhcnRCdG4iLCJ0b3BOb2RlIiwidXBFZ2dOb2RlIiwiZWdnTm9kZSIsInNwaW5lTm9kZSIsImppZ3Nhd051bSIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsIm9uTG9hZCIsIm5vZGUiLCJoZWlnaHQiLCJ3aW5TaXplIiwiY2hlY2tFbmRUaW1lIiwic3RhcnQiLCJpbml0UGFuZWwiLCJ1cE5ld0ppZ1JlZCIsInNjaGVkdWxlT25jZSIsImFkYXB0ZXIiLCJnZXRTYWZlQXJlYVJlY3QiLCJ5TWluIiwieSIsImlucyIsImdldFVuUGxhY2VkTnVtIiwicGFyZW50IiwiYWN0aXZlIiwic3RyaW5nIiwieCIsImdldENoYXJYT2Zmc2V0IiwiaW5pdFRhc2siLCJpbml0SW1nIiwiaW5pdEJ0biIsImluaXRSZXdhcmQiLCJnZXROb3dUYXNrRGF0YSIsIm8iLCJudW1zIiwiZ2V0Tm93VGFza1BybyIsInRpdGxlIiwiZm9ybWF0Iiwic2NoZWR1bGUiLCJzaG93VGltZSIsImlzVGFza0xvY2tlZCIsImdldEZlc1B1enpsZUx2IiwiY2hpbGRyZW4iLCJsZW5ndGgiLCJpc1B1enpsZU1heCIsImkiLCJwb3NpdGlvbiIsInYzIiwiZ2V0RmVzTGV2ZWxDb3N0IiwiY2hlY2tTaG93RmluZ2VyIiwiYW5nbGUiLCJUd2VlbiIsInN0b3BBbGxCeVRhcmdldCIsInR3ZWVuIiwic2VxdWVuY2UiLCJ0byIsImVhc2luZyIsImRlbGF5IiwicmVwZWF0Rm9yZXZlciIsIl9maW5nZXJOb2RlIiwibFByZSIsInRoZW4iLCJpbnN0YW50aWF0ZSIsImFkZENoaWxkIiwic2V0UG9zaXRpb24iLCJuZXh0WmVyb1RpbWUiLCJ1bnNjaGVkdWxlIiwiZ2V0Rm9ybWF0SE1TIiwiZmVzRW5kVGltZSIsInNlcnZlclRpbWUiLCJNYXRoIiwiZmxvb3IiLCJzaG93RW5kVGltZSIsImhpZGVUaGlzIiwib3BFIiwiZW1pdCIsImFjdGlvbiIsIlVQRF9GRVNfUkVEIiwiaGlkZSIsIm9uQnRuR2V0Iiwic2hvd1RpcCIsImdldEZlc1BybyIsInIiLCJ2YWwiLCJhIiwiYyIsImwiLCJ1IiwicCIsImNvbnZlcnRUb1dvcmxkU3BhY2VBUiIsImYiLCJpdGVtSWQiLCJ3b3JsZFBvcyIsIk51bWJlciIsInB1c2giLCJhZGRJdGVtIiwib3BlbiIsIml0ZW1EYXRhcyIsIm0iLCJwbGF0Zm9ybSIsInJlcG9ydEV2ZW50IiwiRVJlcEV2dCIsImZlc1Rhc2tGaW5pc2giLCJpZCIsImZpbmlzaEZlc1Rhc2siLCJvbkJ0blN0YXJ0IiwiZ2V0UG93ZXIiLCJpc1B1enpsZUxvY2tlZCIsInVwZFBybyIsImZlc1Rhc2tLZXkiLCJjb3N0UG93ZXIiLCJhZGRQb3dlciIsImNoZ1NjZW5lIiwic2NlbmVUeXBlIiwiZ2FtZSIsImdhbWVUeXBlIiwiZmVzdGl2YWwiLCJvbkJ0bkppZyIsIk1BSU5KVU1QIiwiZGF0YSIsInBhcmFtIiwib25CdG5HbyIsImdldF9ieSIsInJhY2VTY29yZSIsInJhY2VUaW1lcyIsInRocm91Z2hNYWluIiwibGV2ZWxEb25lIiwiZmluaXNoUHV6emxlIiwiX19kZWNvcmF0ZSIsIkxhYmVsIiwiTm9kZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQW5COztBQUNBLElBQUlDLElBQUksR0FBR0QsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUUsV0FBVyxHQUFHRixPQUFPLENBQUMsWUFBRCxDQUF6Qjs7QUFDQSxJQUFJRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyxLQUFELENBQWxCOztBQUNBLElBQUlJLEtBQUssR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FBbkI7O0FBQ0EsSUFBSUssT0FBTyxHQUFHTCxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJTSxPQUFPLEdBQUdOLE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlPLFlBQVksR0FBR1AsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsSUFBSVEsVUFBVSxHQUFHUixPQUFPLENBQUMsV0FBRCxDQUF4Qjs7QUFDQSxJQUFJUyxTQUFTLEdBQUdULE9BQU8sQ0FBQyxVQUFELENBQXZCOztBQUNBLElBQUlVLE9BQU8sR0FBR1YsT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBSVcsTUFBTSxHQUFHWCxPQUFPLENBQUMsT0FBRCxDQUFwQjs7QUFDQSxJQUFJWSxPQUFPLEdBQUdaLE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlhLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csS0FBRixHQUFVLElBQVY7SUFDQUgsQ0FBQyxDQUFDSSxNQUFGLEdBQVcsSUFBWDtJQUNBSixDQUFDLENBQUNLLE1BQUYsR0FBVyxJQUFYO0lBQ0FMLENBQUMsQ0FBQ00sT0FBRixHQUFZLElBQVo7SUFDQU4sQ0FBQyxDQUFDTyxRQUFGLEdBQWEsSUFBYjtJQUNBUCxDQUFDLENBQUNRLFNBQUYsR0FBYyxJQUFkO0lBQ0FSLENBQUMsQ0FBQ1MsTUFBRixHQUFXLElBQVg7SUFDQVQsQ0FBQyxDQUFDVSxRQUFGLEdBQWEsSUFBYjtJQUNBVixDQUFDLENBQUNXLE9BQUYsR0FBWSxJQUFaO0lBQ0FYLENBQUMsQ0FBQ1ksU0FBRixHQUFjLElBQWQ7SUFDQVosQ0FBQyxDQUFDYSxPQUFGLEdBQVksSUFBWjtJQUNBYixDQUFDLENBQUNjLFNBQUYsR0FBYyxJQUFkO0lBQ0FkLENBQUMsQ0FBQ2UsU0FBRixHQUFjLElBQWQ7SUFDQSxPQUFPZixDQUFQO0VBQ0g7O0VBQ0RnQixTQUFTLENBQUNoQixDQUFELEVBQUlELENBQUosQ0FBVDs7RUFDQUMsQ0FBQyxDQUFDaUIsU0FBRixDQUFZQyxNQUFaLEdBQXFCLFlBQVk7SUFDN0IsS0FBS0MsSUFBTCxDQUFVQyxNQUFWLEdBQW1CNUIsRUFBRSxDQUFDNkIsT0FBSCxDQUFXRCxNQUE5QjtJQUNBLEtBQUtFLFlBQUw7RUFDSCxDQUhEOztFQUlBdEIsQ0FBQyxDQUFDaUIsU0FBRixDQUFZTSxLQUFaLEdBQW9CLFlBQVk7SUFDNUIsSUFBSXhCLENBQUMsR0FBRyxJQUFSO0lBQ0EsS0FBS3lCLFNBQUw7SUFDQSxLQUFLQyxXQUFMO0lBQ0EsS0FBS0MsWUFBTCxDQUFrQixZQUFZO01BQzFCM0IsQ0FBQyxDQUFDNEIsT0FBRjtJQUNILENBRkQ7RUFHSCxDQVBEOztFQVFBM0IsQ0FBQyxDQUFDaUIsU0FBRixDQUFZVSxPQUFaLEdBQXNCLFlBQVk7SUFDOUIsSUFBSTVCLENBQUMsR0FBR25CLFdBQVcsQ0FBQ2dELGVBQVosR0FBOEJDLElBQXRDOztJQUNBLEtBQUtsQixPQUFMLENBQWFtQixDQUFiLElBQWtCL0IsQ0FBbEI7RUFDSCxDQUhEOztFQUlBQyxDQUFDLENBQUNpQixTQUFGLENBQVlRLFdBQVosR0FBMEIsWUFBWTtJQUNsQyxJQUFJMUIsQ0FBQyxHQUFHYixVQUFVLFdBQVYsQ0FBbUI2QyxHQUFuQixDQUF1QkMsY0FBdkIsRUFBUjs7SUFDQSxJQUFJakMsQ0FBQyxHQUFHLENBQVIsRUFBVztNQUNQLElBQUlDLENBQUMsR0FBR0QsQ0FBQyxHQUFHLEVBQUosR0FBUyxLQUFULEdBQWlCQSxDQUFDLEdBQUcsRUFBN0I7TUFDQSxLQUFLZ0IsU0FBTCxDQUFlSSxJQUFmLENBQW9CYyxNQUFwQixDQUEyQkMsTUFBM0IsR0FBb0MsQ0FBQyxDQUFyQztNQUNBLEtBQUtuQixTQUFMLENBQWVvQixNQUFmLEdBQXdCbkMsQ0FBQyxHQUFHLEVBQTVCO01BQ0EsS0FBS2UsU0FBTCxDQUFlSSxJQUFmLENBQW9CaUIsQ0FBcEIsR0FBd0JyRCxPQUFPLFdBQVAsQ0FBZ0JzRCxjQUFoQixDQUErQixLQUFLdEIsU0FBTCxDQUFlb0IsTUFBOUMsQ0FBeEI7SUFDSCxDQUxELE1BS08sS0FBS3BCLFNBQUwsQ0FBZUksSUFBZixDQUFvQmMsTUFBcEIsQ0FBMkJDLE1BQTNCLEdBQW9DLENBQUMsQ0FBckM7RUFDVixDQVJEOztFQVNBbEMsQ0FBQyxDQUFDaUIsU0FBRixDQUFZTyxTQUFaLEdBQXdCLFlBQVk7SUFDaEMsS0FBS2MsUUFBTDtJQUNBLEtBQUtDLE9BQUw7SUFDQSxLQUFLQyxPQUFMO0lBQ0EsS0FBS0MsVUFBTDtFQUNILENBTEQ7O0VBTUF6QyxDQUFDLENBQUNpQixTQUFGLENBQVlxQixRQUFaLEdBQXVCLFlBQVk7SUFDL0IsSUFBSXZDLENBQUMsR0FBR2QsWUFBWSxXQUFaLENBQXFCOEMsR0FBN0I7SUFDQSxJQUFJL0IsQ0FBQyxHQUFHRCxDQUFDLENBQUMyQyxjQUFGLEVBQVI7SUFDQSxJQUFJQyxDQUFDLEdBQUczQyxDQUFDLENBQUM0QyxJQUFWO0lBQ0EsSUFBSXhFLENBQUMsR0FBRzJCLENBQUMsQ0FBQzhDLGFBQUYsRUFBUjtJQUNBLEtBQUt6QyxNQUFMLENBQVkrQixNQUFaLEdBQXFCbkMsQ0FBQyxDQUFDOEMsS0FBRixDQUFRQyxNQUFSLENBQWVKLENBQWYsQ0FBckI7SUFDQSxLQUFLSyxRQUFMLENBQWMsS0FBS0MsUUFBbkIsRUFBNkIsQ0FBN0I7SUFDQSxLQUFLQSxRQUFMO0lBQ0FsRCxDQUFDLENBQUNtRCxZQUFGLE1BQ1EsS0FBSy9DLEtBQUwsQ0FBV2dDLE1BQVgsR0FBb0IsRUFBckIsRUFBMkIsS0FBS3ZCLFNBQUwsQ0FBZXNCLE1BQWYsR0FBd0IsQ0FBQyxDQUQzRCxLQUVRLEtBQUsvQixLQUFMLENBQVdnQyxNQUFYLEdBQW9CL0QsQ0FBQyxHQUFHLEdBQUosR0FBVXVFLENBQS9CLEVBQW9DLEtBQUsvQixTQUFMLENBQWVzQixNQUFmLEdBQXdCLENBQUMsQ0FGcEU7RUFHSCxDQVhEOztFQVlBbEMsQ0FBQyxDQUFDaUIsU0FBRixDQUFZc0IsT0FBWixHQUFzQixZQUFZO0lBQzlCLEtBQ0ksSUFBSXhDLENBQUMsR0FBR2QsWUFBWSxXQUFaLENBQXFCOEMsR0FBckIsQ0FBeUJvQixjQUF6QixLQUE0QyxDQUFwRCxFQUF1RG5ELENBQUMsR0FBRyxLQUFLTSxPQUFMLENBQWE4QyxRQUF4RSxFQUFrRlQsQ0FBQyxHQUFHLENBQXRGLEVBQXlGdkUsQ0FBQyxHQUFHNEIsQ0FBQyxDQUFDcUQsTUFEbkcsRUFFSVYsQ0FBQyxHQUFHdkUsQ0FGUixFQUdJdUUsQ0FBQyxFQUhMO01BS0kzQyxDQUFDLENBQUMyQyxDQUFELENBQUQsQ0FBS1QsTUFBTCxHQUFjUyxDQUFDLElBQUk1QyxDQUFuQjtJQUxKOztJQU1BLElBQUlkLFlBQVksV0FBWixDQUFxQjhDLEdBQXJCLENBQXlCdUIsV0FBekIsRUFBSixFQUE0QyxLQUFLeEMsU0FBTCxDQUFlb0IsTUFBZixHQUF3QixDQUFDLENBQXpCLENBQTVDLEtBQ0s7TUFDRCxLQUFLcEIsU0FBTCxDQUFlb0IsTUFBZixHQUF3QixDQUFDLENBQXpCO01BQ0EsSUFBSXFCLENBQUMsR0FBRyxLQUFLakQsT0FBTCxDQUFhOEMsUUFBYixDQUFzQnJELENBQXRCLENBQVI7TUFDQSxLQUFLZSxTQUFMLENBQWUwQyxRQUFmLEdBQTBCaEUsRUFBRSxDQUFDaUUsRUFBSCxDQUFNRixDQUFDLENBQUNuQixDQUFGLEdBQU0sS0FBSzlCLE9BQUwsQ0FBYThCLENBQW5CLEdBQXVCLEVBQTdCLEVBQWlDbUIsQ0FBQyxDQUFDekIsQ0FBRixHQUFNLEtBQUt4QixPQUFMLENBQWF3QixDQUFuQixHQUF1QixFQUF4RCxDQUExQjtJQUNIO0VBQ0osQ0FiRDs7RUFjQTlCLENBQUMsQ0FBQ2lCLFNBQUYsQ0FBWXVCLE9BQVosR0FBc0IsWUFBWTtJQUM5QixJQUFJekMsQ0FBQyxHQUFHZCxZQUFZLFdBQVosQ0FBcUI4QyxHQUFyQixDQUF5QjJCLGVBQXpCLEVBQVI7O0lBQ0EsS0FBS2pELE1BQUwsQ0FBWTBCLE1BQVosR0FBcUIsTUFBTXBDLENBQTNCO0lBQ0EsS0FBS1csUUFBTCxDQUFjd0IsTUFBZCxHQUF1QixDQUFDakQsWUFBWSxXQUFaLENBQXFCOEMsR0FBckIsQ0FBeUJ1QixXQUF6QixFQUF4QjtFQUNILENBSkQ7O0VBS0F0RCxDQUFDLENBQUNpQixTQUFGLENBQVl3QixVQUFaLEdBQXlCLFlBQVk7SUFDakMsSUFBSTFDLENBQUMsR0FBRyxLQUFLYSxTQUFiO0lBQ0EsSUFBSTNCLFlBQVksV0FBWixDQUFxQjhDLEdBQXJCLENBQXlCbUIsWUFBekIsRUFBSixFQUNJLE9BQ0ksS0FBS1MsZUFBTCxDQUFxQixDQUFDLENBQXRCLEdBQ0MsS0FBSzlDLE9BQUwsQ0FBYStDLEtBQWIsR0FBcUIsQ0FEdEIsRUFFQXBFLEVBQUUsQ0FBQ3FFLEtBQUgsQ0FBU0MsZUFBVCxDQUF5QixLQUFLakQsT0FBOUIsQ0FGQSxFQUdBLE1BQU1kLENBQUMsQ0FBQ21DLE1BQUYsR0FBVyxDQUFDLENBQWxCLENBSko7SUFNSm5DLENBQUMsQ0FBQ21DLE1BQUYsR0FBVyxDQUFDLENBQVo7SUFDQSxJQUFJbEMsQ0FBQyxHQUFHZixZQUFZLFdBQVosQ0FBcUI4QyxHQUE3QjtJQUNBLElBQUlZLENBQUMsR0FBRzNDLENBQUMsQ0FBQzBDLGNBQUYsR0FBbUJFLElBQTNCO0lBQ0E1QyxDQUFDLENBQUM2QyxhQUFGLE1BQXFCRixDQUFyQixJQUNPLEtBQUtnQixlQUFMLENBQXFCLENBQUMsQ0FBdEIsR0FDRG5FLEVBQUUsQ0FBQ3FFLEtBQUgsQ0FBU0MsZUFBVCxDQUF5QixLQUFLakQsT0FBOUIsQ0FEQyxFQUVEckIsRUFBRSxDQUNHdUUsS0FETCxDQUNXLEtBQUtsRCxPQURoQixFQUVLbUQsUUFGTCxDQUdReEUsRUFBRSxDQUFDdUUsS0FBSCxHQUFXRSxFQUFYLENBQWMsR0FBZCxFQUFtQjtNQUFDTCxLQUFLLEVBQUU7SUFBUixDQUFuQixDQUhSLEVBSVFwRSxFQUFFLENBQUN1RSxLQUFILEdBQVdFLEVBQVgsQ0FBYyxDQUFkLEVBQWlCO01BQUNMLEtBQUssRUFBRTtJQUFSLENBQWpCLEVBQTZCO01BQUNNLE1BQU0sRUFBRTtJQUFULENBQTdCLEVBQXFEQyxLQUFyRCxDQUEyRCxHQUEzRCxDQUpSLEVBTUtDLGFBTkwsR0FPSzdDLEtBUEwsRUFITixLQVdPLEtBQUtvQyxlQUFMLENBQXFCLENBQUMsQ0FBdEIsR0FBMkIsS0FBSzlDLE9BQUwsQ0FBYStDLEtBQWIsR0FBcUIsQ0FBaEQsRUFBb0RwRSxFQUFFLENBQUNxRSxLQUFILENBQVNDLGVBQVQsQ0FBeUIsS0FBS2pELE9BQTlCLENBWDNEO0VBWUgsQ0F4QkQ7O0VBeUJBYixDQUFDLENBQUNpQixTQUFGLENBQVkwQyxlQUFaLEdBQThCLFVBQVU1RCxDQUFWLEVBQWE7SUFDdkMsSUFBSUMsQ0FBQyxHQUFHLElBQVI7SUFDQUQsQ0FBQyxHQUNLLEtBQUtzRSxXQUFMLEdBQ0ssS0FBS0EsV0FBTCxDQUFpQm5DLE1BQWpCLEdBQTBCLENBQUMsQ0FEaEMsR0FFSXJELElBQUksV0FBSixDQUFha0QsR0FBYixDQUNLdUMsSUFETCxDQUNVLGVBRFYsRUFFS0MsSUFGTCxDQUVVLFVBQVV4RSxDQUFWLEVBQWE7TUFDZkMsQ0FBQyxDQUFDcUUsV0FBRixHQUFnQjdFLEVBQUUsQ0FBQ2dGLFdBQUgsQ0FBZXpFLENBQWYsQ0FBaEI7TUFDQUMsQ0FBQyxDQUFDYSxPQUFGLENBQVVvQixNQUFWLENBQWlCd0MsUUFBakIsQ0FBMEJ6RSxDQUFDLENBQUNxRSxXQUE1QjtNQUNBLElBQUkxQixDQUFDLEdBQUduRCxFQUFFLENBQUNpRSxFQUFILENBQU0sQ0FBTixFQUFTLEdBQVQsQ0FBUjs7TUFDQXpELENBQUMsQ0FBQ3FFLFdBQUYsQ0FBY0ssV0FBZCxDQUEwQi9CLENBQTFCOztNQUNBM0MsQ0FBQyxDQUFDcUUsV0FBRixDQUFjbkMsTUFBZCxHQUF1QixDQUFDLENBQXhCO0lBQ0gsQ0FSTCxXQVNXLFlBQVksQ0FBRSxDQVR6QixDQUhULEdBYUssS0FBS21DLFdBQUwsSUFBb0IsS0FBS0EsV0FBTCxDQUFpQm5DLE1BQXJDLEtBQWdELEtBQUttQyxXQUFMLENBQWlCbkMsTUFBakIsR0FBMEIsQ0FBQyxDQUEzRSxDQWJOO0VBY0gsQ0FoQkQ7O0VBaUJBbEMsQ0FBQyxDQUFDaUIsU0FBRixDQUFZZ0MsUUFBWixHQUF1QixZQUFZO0lBQy9CLElBQUlsRCxDQUFDLEdBQUdqQixLQUFLLFdBQUwsQ0FBY2lELEdBQWQsQ0FBa0I0QyxZQUFsQixHQUFpQyxHQUF6QztJQUNBLElBQUk1RSxDQUFDLElBQUksQ0FBVCxFQUFZLE9BQU8sS0FBS3VDLFFBQUwsSUFBaUIsS0FBSyxLQUFLc0MsVUFBTCxDQUFnQixLQUFLM0IsUUFBckIsQ0FBN0I7SUFDWixLQUFLekMsU0FBTCxDQUFlMkIsTUFBZixHQUF3QnJELEtBQUssV0FBTCxDQUFjK0YsWUFBZCxDQUEyQjlFLENBQTNCLENBQXhCO0VBQ0gsQ0FKRDs7RUFLQUMsQ0FBQyxDQUFDaUIsU0FBRixDQUFZSyxZQUFaLEdBQTJCLFlBQVk7SUFDbkMsSUFBSXZCLENBQUMsR0FBR2QsWUFBWSxXQUFaLENBQXFCOEMsR0FBckIsQ0FBeUIrQyxVQUF6QixHQUFzQ2hHLEtBQUssV0FBTCxDQUFjaUQsR0FBZCxDQUFrQmdELFVBQWhFOztJQUNBLElBQUloRixDQUFDLEdBQUcsQ0FBUixFQUFXO01BQ1AsSUFBSUMsQ0FBQyxHQUFHZ0YsSUFBSSxDQUFDQyxLQUFMLENBQVdsRixDQUFDLEdBQUcsS0FBZixDQUFSO01BQ0EsSUFBSUMsQ0FBQyxJQUFJLENBQVQsRUFBYSxLQUFLTyxRQUFMLENBQWMyQixNQUFkLEdBQXVCLENBQUMsQ0FBekIsRUFBNkIsS0FBS2MsUUFBTCxDQUFjLEtBQUtrQyxXQUFuQixFQUFnQyxDQUFoQyxDQUE3QixFQUFpRSxLQUFLQSxXQUFMLEVBQWpFLENBQVosS0FDSztRQUNELElBQUl2QyxDQUFDLEdBQUksS0FBS3RDLE1BQUwsQ0FBWThCLE1BQVosR0FBcUJuQyxDQUFDLEdBQUcsRUFBbEM7UUFDQSxLQUFLTyxRQUFMLENBQWMyQixNQUFkLEdBQXVCLENBQUMsQ0FBeEI7UUFDQSxLQUFLUyxDQUFDLENBQUNVLE1BQVAsS0FBa0IsS0FBSzlDLFFBQUwsQ0FBYzZCLENBQWQsR0FBa0IsR0FBcEM7TUFDSDtJQUNKLENBUkQsTUFRUSxLQUFLL0IsTUFBTCxDQUFZOEIsTUFBWixHQUFxQixFQUF0QixFQUE0QixLQUFLNUIsUUFBTCxDQUFjMkIsTUFBZCxHQUF1QixDQUFDLENBQXBEO0VBQ1YsQ0FYRDs7RUFZQWxDLENBQUMsQ0FBQ2lCLFNBQUYsQ0FBWWlFLFdBQVosR0FBMEIsWUFBWTtJQUNsQyxJQUFJbkYsQ0FBQyxHQUFHZCxZQUFZLFdBQVosQ0FBcUI4QyxHQUFyQixDQUF5QitDLFVBQXpCLEdBQXNDaEcsS0FBSyxXQUFMLENBQWNpRCxHQUFkLENBQWtCZ0QsVUFBaEU7SUFDQSxJQUFJaEYsQ0FBQyxJQUFJLENBQVQsRUFBWSxPQUFPLEtBQUt1QyxRQUFMLElBQWtCLEtBQUtqQyxNQUFMLENBQVk4QixNQUFaLEdBQXFCLEtBQXZDLEVBQStDLEtBQUssS0FBS3lDLFVBQUwsQ0FBZ0IsS0FBSzNCLFFBQXJCLENBQTNEO0lBQ1osS0FBSzVDLE1BQUwsQ0FBWThCLE1BQVosR0FBcUJyRCxLQUFLLFdBQUwsQ0FBYytGLFlBQWQsQ0FBMkI5RSxDQUEzQixDQUFyQjtFQUNILENBSkQ7O0VBS0FDLENBQUMsQ0FBQ2lCLFNBQUYsQ0FBWWtFLFFBQVosR0FBdUIsWUFBWTtJQUMvQjFHLEtBQUssV0FBTCxDQUFjMkcsR0FBZCxDQUFrQkMsSUFBbEIsQ0FBdUI7TUFBQ0MsTUFBTSxFQUFFN0csS0FBSyxXQUFMLENBQWM4RztJQUF2QixDQUF2Qjs7SUFDQSxLQUFLQyxJQUFMO0VBQ0gsQ0FIRDs7RUFJQXhGLENBQUMsQ0FBQ2lCLFNBQUYsQ0FBWXdFLFFBQVosR0FBdUIsWUFBWTtJQUMvQixJQUFJeEcsWUFBWSxXQUFaLENBQXFCOEMsR0FBckIsQ0FBeUJtQixZQUF6QixFQUFKLEVBQTZDOUQsT0FBTyxXQUFQLENBQWdCMkMsR0FBaEIsQ0FBb0IyRCxPQUFwQixDQUE0QixTQUE1QixFQUE3QyxLQUNLO01BQ0QsSUFBSTNGLENBQUMsR0FBR2QsWUFBWSxXQUFaLENBQXFCOEMsR0FBN0I7TUFDQSxJQUFJL0IsQ0FBQyxHQUFHRCxDQUFDLENBQUM0RixTQUFGLEVBQVI7TUFDQSxJQUFJaEQsQ0FBQyxHQUFHNUMsQ0FBQyxDQUFDMkMsY0FBRixFQUFSO01BQ0EsSUFBSXRFLENBQUMsR0FBR3VFLENBQUMsQ0FBQ0MsSUFBVjtNQUNBLElBQUlXLENBQUMsR0FBR3hELENBQUMsQ0FBQzhDLGFBQUYsRUFBUjtNQUNBLElBQUkrQyxDQUFDLEdBQUdqRCxDQUFDLENBQUNrRCxHQUFWO01BQ0EsSUFBSUMsQ0FBQyxHQUFHLEVBQVI7O01BQ0EsS0FBSyxJQUFJQyxDQUFULElBQWNILENBQWQsRUFBaUI7UUFDYixJQUFJSSxDQUFDLEdBQUdKLENBQUMsQ0FBQ0csQ0FBRCxDQUFUO1FBQ0EsSUFBSUUsQ0FBQyxHQUFHLEtBQUszRixPQUFMLENBQWE4QyxRQUFiLENBQXNCcEQsQ0FBdEIsQ0FBUjtRQUNBLElBQUlrRyxDQUFDLEdBQUdELENBQUMsQ0FBQ2hFLE1BQUYsQ0FBU2tFLHFCQUFULENBQStCRixDQUFDLENBQUN6QyxRQUFqQyxDQUFSO1FBQ0EsSUFBSTRDLENBQUMsR0FBRyxFQUFSO1FBQ0FBLENBQUMsQ0FBQ0MsTUFBRixHQUFXTixDQUFYO1FBQ0FLLENBQUMsQ0FBQ0UsUUFBRixHQUFhSixDQUFiO1FBQ0FFLENBQUMsQ0FBQzVILEtBQUYsR0FBVStILE1BQU0sQ0FBQ1AsQ0FBRCxDQUFoQjtRQUNBRixDQUFDLENBQUNVLElBQUYsQ0FBT0osQ0FBUDtNQUNIOztNQUNELElBQUk3QyxDQUFDLElBQUluRixDQUFULEVBQVk7UUFDUixLQUFLLElBQUkySCxDQUFULElBQWNILENBQWQ7VUFBa0JJLENBQUMsR0FBR0osQ0FBQyxDQUFDRyxDQUFELENBQU4sRUFBWS9HLE9BQU8sV0FBUCxDQUFnQitDLEdBQWhCLENBQW9CMEUsT0FBcEIsQ0FBNEJWLENBQTVCLEVBQStCUSxNQUFNLENBQUNQLENBQUQsQ0FBckMsQ0FBWjtRQUFqQjs7UUFDQTdHLFNBQVMsV0FBVCxDQUFrQjRDLEdBQWxCLENBQXNCMkUsSUFBdEIsQ0FBMkIsY0FBM0IsRUFBMkM7VUFBQ0MsU0FBUyxFQUFFYjtRQUFaLENBQTNDOztRQUNBLElBQUljLENBQUMsR0FBR0wsTUFBTSxDQUFDeEcsQ0FBQyxDQUFDNEYsU0FBRixFQUFELENBQWQ7O1FBQ0FoSCxJQUFJLENBQUNrSSxRQUFMLENBQWNDLFdBQWQsQ0FBMEJuSSxJQUFJLENBQUNvSSxPQUFMLENBQWFDLGFBQXZDLEVBQXNEO1VBQUNDLEVBQUUsRUFBRUw7UUFBTCxDQUF0RDs7UUFDQTNILFlBQVksV0FBWixDQUFxQjhDLEdBQXJCLENBQXlCbUYsYUFBekI7O1FBQ0EsS0FBSzFGLFNBQUw7TUFDSCxDQVBELE1BT09yQyxTQUFTLFdBQVQsQ0FBa0I0QyxHQUFsQixDQUFzQjJFLElBQXRCLENBQTJCLGlCQUEzQixFQUE4QztRQUFDQyxTQUFTLEVBQUViO01BQVosQ0FBOUM7SUFDVjtFQUNKLENBN0JEOztFQThCQTlGLENBQUMsQ0FBQ2lCLFNBQUYsQ0FBWWtHLFVBQVosR0FBeUIsWUFBWTtJQUNqQyxJQUFJcEgsQ0FBQyxHQUFHZCxZQUFZLFdBQVosQ0FBcUI4QyxHQUFyQixDQUF5QjJCLGVBQXpCLEVBQVI7O0lBQ0FyRSxNQUFNLFdBQU4sQ0FBZTBDLEdBQWYsQ0FBbUJxRixRQUFuQixLQUFnQ3JILENBQWhDLEdBQ01aLFNBQVMsV0FBVCxDQUFrQjRDLEdBQWxCLENBQXNCMkUsSUFBdEIsQ0FBMkIsY0FBM0IsRUFBMkM7TUFBQ0wsTUFBTSxFQUFFO0lBQVQsQ0FBM0MsQ0FETixHQUVNcEgsWUFBWSxXQUFaLENBQXFCOEMsR0FBckIsQ0FBeUJzRixjQUF6QixLQUNBakksT0FBTyxXQUFQLENBQWdCMkMsR0FBaEIsQ0FBb0IyRCxPQUFwQixDQUE0QixNQUE1QixDQURBLElBRUN6RyxZQUFZLFdBQVosQ0FBcUI4QyxHQUFyQixDQUF5QnVGLE1BQXpCLENBQWdDckksWUFBWSxDQUFDc0ksVUFBYixDQUF3QkMsU0FBeEQsRUFBbUV6SCxDQUFuRSxHQUNEVixNQUFNLFdBQU4sQ0FBZTBDLEdBQWYsQ0FBbUIwRixRQUFuQixDQUE0QixDQUFDMUgsQ0FBN0IsQ0FEQyxFQUVEVixNQUFNLENBQUNxSSxRQUFQLENBQWdCckksTUFBTSxDQUFDc0ksU0FBUCxDQUFpQkMsSUFBakMsRUFBdUM7TUFBQ0MsUUFBUSxFQUFFeEksTUFBTSxDQUFDd0ksUUFBUCxDQUFnQkM7SUFBM0IsQ0FBdkMsQ0FKQSxDQUZOO0VBT0gsQ0FURDs7RUFVQTlILENBQUMsQ0FBQ2lCLFNBQUYsQ0FBWThHLFFBQVosR0FBdUIsWUFBWTtJQUMvQixLQUFLNUMsUUFBTDs7SUFDQTFHLEtBQUssV0FBTCxDQUFjMkcsR0FBZCxDQUFrQkMsSUFBbEIsQ0FBdUI7TUFBQ0MsTUFBTSxFQUFFN0csS0FBSyxXQUFMLENBQWN1SixRQUF2QjtNQUFpQ0MsSUFBSSxFQUFFLENBQXZDO01BQTBDQyxLQUFLLEVBQUU7SUFBakQsQ0FBdkI7RUFDSCxDQUhEOztFQUlBbEksQ0FBQyxDQUFDaUIsU0FBRixDQUFZa0gsT0FBWixHQUFzQixZQUFZO0lBQzlCLElBQUlwSSxDQUFDLEdBQUdkLFlBQVksV0FBWixDQUFxQjhDLEdBQXJCLENBQXlCVyxjQUF6QixFQUFSOztJQUNBLFFBQVMsS0FBS3lDLFFBQUwsSUFBaUJwRixDQUFDLENBQUNxSSxNQUE1QjtNQUNJLEtBQUtuSixZQUFZLENBQUNzSSxVQUFiLENBQXdCYyxTQUE3QjtNQUNBLEtBQUtwSixZQUFZLENBQUNzSSxVQUFiLENBQXdCZSxTQUE3QjtRQUNJN0osS0FBSyxXQUFMLENBQWMyRyxHQUFkLENBQWtCQyxJQUFsQixDQUF1QjtVQUFDQyxNQUFNLEVBQUU3RyxLQUFLLFdBQUwsQ0FBY3VKLFFBQXZCO1VBQWlDQyxJQUFJLEVBQUU7UUFBdkMsQ0FBdkI7O1FBQ0E7O01BQ0osS0FBS2hKLFlBQVksQ0FBQ3NJLFVBQWIsQ0FBd0JDLFNBQTdCO01BQ0EsS0FBS3ZJLFlBQVksQ0FBQ3NJLFVBQWIsQ0FBd0JnQixXQUE3QjtRQUNJeEosT0FBTyxXQUFQLENBQWdCeUosU0FBaEIsR0FDTXJKLFNBQVMsV0FBVCxDQUFrQjRDLEdBQWxCLENBQXNCMkUsSUFBdEIsQ0FBMkIsa0JBQTNCLEVBQStDLElBQS9DLENBRE4sR0FFTXZILFNBQVMsV0FBVCxDQUFrQjRDLEdBQWxCLENBQXNCMkUsSUFBdEIsQ0FBMkIsY0FBM0IsRUFBMkMsSUFBM0MsQ0FGTjtRQUdBOztNQUNKLEtBQUt6SCxZQUFZLENBQUNzSSxVQUFiLENBQXdCa0IsWUFBN0I7UUFDSWhLLEtBQUssV0FBTCxDQUFjMkcsR0FBZCxDQUFrQkMsSUFBbEIsQ0FBdUI7VUFBQ0MsTUFBTSxFQUFFN0csS0FBSyxXQUFMLENBQWN1SixRQUF2QjtVQUFpQ0MsSUFBSSxFQUFFO1FBQXZDLENBQXZCOztJQVpSO0VBY0gsQ0FoQkQ7O0VBaUJBUyxVQUFVLENBQUMsQ0FBQzlJLENBQUMsQ0FBQ0osRUFBRSxDQUFDbUosS0FBSixDQUFGLENBQUQsRUFBZ0IzSSxDQUFDLENBQUNpQixTQUFsQixFQUE2QixPQUE3QixFQUFzQyxLQUFLLENBQTNDLENBQVY7O0VBQ0F5SCxVQUFVLENBQUMsQ0FBQzlJLENBQUMsQ0FBQ0osRUFBRSxDQUFDbUosS0FBSixDQUFGLENBQUQsRUFBZ0IzSSxDQUFDLENBQUNpQixTQUFsQixFQUE2QixRQUE3QixFQUF1QyxLQUFLLENBQTVDLENBQVY7O0VBQ0F5SCxVQUFVLENBQUMsQ0FBQzlJLENBQUMsQ0FBQ0osRUFBRSxDQUFDbUosS0FBSixDQUFGLENBQUQsRUFBZ0IzSSxDQUFDLENBQUNpQixTQUFsQixFQUE2QixRQUE3QixFQUF1QyxLQUFLLENBQTVDLENBQVY7O0VBQ0F5SCxVQUFVLENBQUMsQ0FBQzlJLENBQUMsQ0FBQ0osRUFBRSxDQUFDb0osSUFBSixDQUFGLENBQUQsRUFBZTVJLENBQUMsQ0FBQ2lCLFNBQWpCLEVBQTRCLFNBQTVCLEVBQXVDLEtBQUssQ0FBNUMsQ0FBVjs7RUFDQXlILFVBQVUsQ0FBQyxDQUFDOUksQ0FBQyxDQUFDSixFQUFFLENBQUNvSixJQUFKLENBQUYsQ0FBRCxFQUFlNUksQ0FBQyxDQUFDaUIsU0FBakIsRUFBNEIsVUFBNUIsRUFBd0MsS0FBSyxDQUE3QyxDQUFWOztFQUNBeUgsVUFBVSxDQUFDLENBQUM5SSxDQUFDLENBQUNKLEVBQUUsQ0FBQ21KLEtBQUosQ0FBRixDQUFELEVBQWdCM0ksQ0FBQyxDQUFDaUIsU0FBbEIsRUFBNkIsV0FBN0IsRUFBMEMsS0FBSyxDQUEvQyxDQUFWOztFQUNBeUgsVUFBVSxDQUFDLENBQUM5SSxDQUFDLENBQUNKLEVBQUUsQ0FBQ21KLEtBQUosQ0FBRixDQUFELEVBQWdCM0ksQ0FBQyxDQUFDaUIsU0FBbEIsRUFBNkIsUUFBN0IsRUFBdUMsS0FBSyxDQUE1QyxDQUFWOztFQUNBeUgsVUFBVSxDQUFDLENBQUM5SSxDQUFDLENBQUNKLEVBQUUsQ0FBQ29KLElBQUosQ0FBRixDQUFELEVBQWU1SSxDQUFDLENBQUNpQixTQUFqQixFQUE0QixVQUE1QixFQUF3QyxLQUFLLENBQTdDLENBQVY7O0VBQ0F5SCxVQUFVLENBQUMsQ0FBQzlJLENBQUMsQ0FBQ0osRUFBRSxDQUFDb0osSUFBSixDQUFGLENBQUQsRUFBZTVJLENBQUMsQ0FBQ2lCLFNBQWpCLEVBQTRCLFNBQTVCLEVBQXVDLEtBQUssQ0FBNUMsQ0FBVjs7RUFDQXlILFVBQVUsQ0FBQyxDQUFDOUksQ0FBQyxDQUFDSixFQUFFLENBQUNvSixJQUFKLENBQUYsQ0FBRCxFQUFlNUksQ0FBQyxDQUFDaUIsU0FBakIsRUFBNEIsV0FBNUIsRUFBeUMsS0FBSyxDQUE5QyxDQUFWOztFQUNBeUgsVUFBVSxDQUFDLENBQUM5SSxDQUFDLENBQUNKLEVBQUUsQ0FBQ29KLElBQUosQ0FBRixDQUFELEVBQWU1SSxDQUFDLENBQUNpQixTQUFqQixFQUE0QixTQUE1QixFQUF1QyxLQUFLLENBQTVDLENBQVY7O0VBQ0F5SCxVQUFVLENBQUMsQ0FBQzlJLENBQUMsQ0FBQ0osRUFBRSxDQUFDb0osSUFBSixDQUFGLENBQUQsRUFBZTVJLENBQUMsQ0FBQ2lCLFNBQWpCLEVBQTRCLFdBQTVCLEVBQXlDLEtBQUssQ0FBOUMsQ0FBVjs7RUFDQXlILFVBQVUsQ0FBQyxDQUFDOUksQ0FBQyxDQUFDSixFQUFFLENBQUNtSixLQUFKLENBQUYsQ0FBRCxFQUFnQjNJLENBQUMsQ0FBQ2lCLFNBQWxCLEVBQTZCLFdBQTdCLEVBQTBDLEtBQUssQ0FBL0MsQ0FBVjs7RUFDQSxPQUFPeUgsVUFBVSxDQUFDLENBQUNoSixDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBaE9PLENBZ09MVixPQUFPLFdBaE9GLENBQVI7O0FBaU9BZixPQUFPLFdBQVAsR0FBa0J1QixDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfZXZ0cyA9IHJlcXVpcmUoXCJldnRzXCIpO1xudmFyIF9pZHggPSByZXF1aXJlKFwiaWR4XCIpO1xudmFyIF9teVNhZmVBcmVhID0gcmVxdWlyZShcIm15U2FmZUFyZWFcIik7XG52YXIgX3JlcyA9IHJlcXVpcmUoXCJyZXNcIik7XG52YXIgX3RpbWUgPSByZXF1aXJlKFwidGltZVwiKTtcbnZhciBfZ2xvYmFsID0gcmVxdWlyZShcImdsb2JhbFwiKTtcbnZhciBfYmFnTWdyID0gcmVxdWlyZShcImJhZ01nclwiKTtcbnZhciBfZmVzdGl2YWxNZ3IgPSByZXF1aXJlKFwiZmVzdGl2YWxNZ3JcIik7XG52YXIgX25ld0ppZ01nciA9IHJlcXVpcmUoXCJuZXdKaWdNZ3JcIik7XG52YXIgX3BhbmVsTWdyID0gcmVxdWlyZShcInBhbmVsTWdyXCIpO1xudmFyIF90aXBNZ3IgPSByZXF1aXJlKFwidGlwTWdyXCIpO1xudmFyIF9wSW5mbyA9IHJlcXVpcmUoXCJwSW5mb1wiKTtcbnZhciBfYmFzZVVJID0gcmVxdWlyZShcImJhc2VVSVwiKTtcbnZhciBfID0gY2MuX2RlY29yYXRvcjtcbnZhciBiID0gXy5jY2NsYXNzO1xudmFyIHcgPSBfLnByb3BlcnR5O1xudmFyIFMgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5wcm9MYiA9IG51bGw7XG4gICAgICAgIGUudGFza0xiID0gbnVsbDtcbiAgICAgICAgZS50aW1lTGIgPSBudWxsO1xuICAgICAgICBlLmltZ05vZGUgPSBudWxsO1xuICAgICAgICBlLnRpYW5Ob2RlID0gbnVsbDtcbiAgICAgICAgZS5kYXlUaW1lTGIgPSBudWxsO1xuICAgICAgICBlLmNvc3RMYiA9IG51bGw7XG4gICAgICAgIGUuc3RhcnRCdG4gPSBudWxsO1xuICAgICAgICBlLnRvcE5vZGUgPSBudWxsO1xuICAgICAgICBlLnVwRWdnTm9kZSA9IG51bGw7XG4gICAgICAgIGUuZWdnTm9kZSA9IG51bGw7XG4gICAgICAgIGUuc3BpbmVOb2RlID0gbnVsbDtcbiAgICAgICAgZS5qaWdzYXdOdW0gPSBudWxsO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLm9uTG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5ub2RlLmhlaWdodCA9IGNjLndpblNpemUuaGVpZ2h0O1xuICAgICAgICB0aGlzLmNoZWNrRW5kVGltZSgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ID0gdGhpcztcbiAgICAgICAgdGhpcy5pbml0UGFuZWwoKTtcbiAgICAgICAgdGhpcy51cE5ld0ppZ1JlZCgpO1xuICAgICAgICB0aGlzLnNjaGVkdWxlT25jZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0LmFkYXB0ZXIoKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5hZGFwdGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IF9teVNhZmVBcmVhLmdldFNhZmVBcmVhUmVjdCgpLnlNaW47XG4gICAgICAgIHRoaXMudG9wTm9kZS55IC09IHQ7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS51cE5ld0ppZ1JlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSBfbmV3SmlnTWdyLmRlZmF1bHQuaW5zLmdldFVuUGxhY2VkTnVtKCk7XG4gICAgICAgIGlmICh0ID4gMCkge1xuICAgICAgICAgICAgdmFyIGUgPSB0ID4gOTkgPyBcIjk5K1wiIDogdCArIFwiXCI7XG4gICAgICAgICAgICB0aGlzLmppZ3Nhd051bS5ub2RlLnBhcmVudC5hY3RpdmUgPSAhMDtcbiAgICAgICAgICAgIHRoaXMuamlnc2F3TnVtLnN0cmluZyA9IGUgKyBcIlwiO1xuICAgICAgICAgICAgdGhpcy5qaWdzYXdOdW0ubm9kZS54ID0gX2dsb2JhbC5kZWZhdWx0LmdldENoYXJYT2Zmc2V0KHRoaXMuamlnc2F3TnVtLnN0cmluZyk7XG4gICAgICAgIH0gZWxzZSB0aGlzLmppZ3Nhd051bS5ub2RlLnBhcmVudC5hY3RpdmUgPSAhMTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmluaXRQYW5lbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5pbml0VGFzaygpO1xuICAgICAgICB0aGlzLmluaXRJbWcoKTtcbiAgICAgICAgdGhpcy5pbml0QnRuKCk7XG4gICAgICAgIHRoaXMuaW5pdFJld2FyZCgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuaW5pdFRhc2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ID0gX2Zlc3RpdmFsTWdyLmRlZmF1bHQuaW5zO1xuICAgICAgICB2YXIgZSA9IHQuZ2V0Tm93VGFza0RhdGEoKTtcbiAgICAgICAgdmFyIG8gPSBlLm51bXM7XG4gICAgICAgIHZhciBuID0gdC5nZXROb3dUYXNrUHJvKCk7XG4gICAgICAgIHRoaXMudGFza0xiLnN0cmluZyA9IGUudGl0bGUuZm9ybWF0KG8pO1xuICAgICAgICB0aGlzLnNjaGVkdWxlKHRoaXMuc2hvd1RpbWUsIDEpO1xuICAgICAgICB0aGlzLnNob3dUaW1lKCk7XG4gICAgICAgIHQuaXNUYXNrTG9ja2VkKClcbiAgICAgICAgICAgID8gKCh0aGlzLnByb0xiLnN0cmluZyA9IFwiXCIpLCAodGhpcy51cEVnZ05vZGUuYWN0aXZlID0gITEpKVxuICAgICAgICAgICAgOiAoKHRoaXMucHJvTGIuc3RyaW5nID0gbiArIFwiL1wiICsgbyksICh0aGlzLnVwRWdnTm9kZS5hY3RpdmUgPSAhMCkpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuaW5pdEltZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZm9yIChcbiAgICAgICAgICAgIHZhciB0ID0gX2Zlc3RpdmFsTWdyLmRlZmF1bHQuaW5zLmdldEZlc1B1enpsZUx2KCkgLSAxLCBlID0gdGhpcy5pbWdOb2RlLmNoaWxkcmVuLCBvID0gMCwgbiA9IGUubGVuZ3RoO1xuICAgICAgICAgICAgbyA8IG47XG4gICAgICAgICAgICBvKytcbiAgICAgICAgKVxuICAgICAgICAgICAgZVtvXS5hY3RpdmUgPSBvID49IHQ7XG4gICAgICAgIGlmIChfZmVzdGl2YWxNZ3IuZGVmYXVsdC5pbnMuaXNQdXp6bGVNYXgoKSkgdGhpcy5zcGluZU5vZGUuYWN0aXZlID0gITE7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zcGluZU5vZGUuYWN0aXZlID0gITA7XG4gICAgICAgICAgICB2YXIgaSA9IHRoaXMuaW1nTm9kZS5jaGlsZHJlblt0XTtcbiAgICAgICAgICAgIHRoaXMuc3BpbmVOb2RlLnBvc2l0aW9uID0gY2MudjMoaS54ICsgdGhpcy5pbWdOb2RlLnggKyA1NCwgaS55ICsgdGhpcy5pbWdOb2RlLnkgLSA1NSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmluaXRCdG4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ID0gX2Zlc3RpdmFsTWdyLmRlZmF1bHQuaW5zLmdldEZlc0xldmVsQ29zdCgpO1xuICAgICAgICB0aGlzLmNvc3RMYi5zdHJpbmcgPSBcIi1cIiArIHQ7XG4gICAgICAgIHRoaXMuc3RhcnRCdG4uYWN0aXZlID0gIV9mZXN0aXZhbE1nci5kZWZhdWx0Lmlucy5pc1B1enpsZU1heCgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuaW5pdFJld2FyZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSB0aGlzLnVwRWdnTm9kZTtcbiAgICAgICAgaWYgKF9mZXN0aXZhbE1nci5kZWZhdWx0Lmlucy5pc1Rhc2tMb2NrZWQoKSlcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgdGhpcy5jaGVja1Nob3dGaW5nZXIoITEpLFxuICAgICAgICAgICAgICAgICh0aGlzLmVnZ05vZGUuYW5nbGUgPSAwKSxcbiAgICAgICAgICAgICAgICBjYy5Ud2Vlbi5zdG9wQWxsQnlUYXJnZXQodGhpcy5lZ2dOb2RlKSxcbiAgICAgICAgICAgICAgICB2b2lkICh0LmFjdGl2ZSA9ICExKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgdC5hY3RpdmUgPSAhMDtcbiAgICAgICAgdmFyIGUgPSBfZmVzdGl2YWxNZ3IuZGVmYXVsdC5pbnM7XG4gICAgICAgIHZhciBvID0gZS5nZXROb3dUYXNrRGF0YSgpLm51bXM7XG4gICAgICAgIGUuZ2V0Tm93VGFza1BybygpID49IG9cbiAgICAgICAgICAgID8gKHRoaXMuY2hlY2tTaG93RmluZ2VyKCEwKSxcbiAgICAgICAgICAgICAgY2MuVHdlZW4uc3RvcEFsbEJ5VGFyZ2V0KHRoaXMuZWdnTm9kZSksXG4gICAgICAgICAgICAgIGNjXG4gICAgICAgICAgICAgICAgICAudHdlZW4odGhpcy5lZ2dOb2RlKVxuICAgICAgICAgICAgICAgICAgLnNlcXVlbmNlKFxuICAgICAgICAgICAgICAgICAgICAgIGNjLnR3ZWVuKCkudG8oMC41LCB7YW5nbGU6IDEwfSksXG4gICAgICAgICAgICAgICAgICAgICAgY2MudHdlZW4oKS50bygxLCB7YW5nbGU6IDB9LCB7ZWFzaW5nOiBcImVsYXN0aWNPdXRcIn0pLmRlbGF5KDAuNSlcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIC5yZXBlYXRGb3JldmVyKClcbiAgICAgICAgICAgICAgICAgIC5zdGFydCgpKVxuICAgICAgICAgICAgOiAodGhpcy5jaGVja1Nob3dGaW5nZXIoITEpLCAodGhpcy5lZ2dOb2RlLmFuZ2xlID0gMCksIGNjLlR3ZWVuLnN0b3BBbGxCeVRhcmdldCh0aGlzLmVnZ05vZGUpKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmNoZWNrU2hvd0ZpbmdlciA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZhciBlID0gdGhpcztcbiAgICAgICAgdFxuICAgICAgICAgICAgPyB0aGlzLl9maW5nZXJOb2RlXG4gICAgICAgICAgICAgICAgPyAodGhpcy5fZmluZ2VyTm9kZS5hY3RpdmUgPSAhMClcbiAgICAgICAgICAgICAgICA6IF9yZXMuZGVmYXVsdC5pbnNcbiAgICAgICAgICAgICAgICAgICAgICAubFByZShcInByZWZhYi9maW5nZXJcIilcbiAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBlLl9maW5nZXJOb2RlID0gY2MuaW5zdGFudGlhdGUodCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGUuZWdnTm9kZS5wYXJlbnQuYWRkQ2hpbGQoZS5fZmluZ2VyTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvID0gY2MudjMoMCwgMTA1KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZS5fZmluZ2VyTm9kZS5zZXRQb3NpdGlvbihvKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZS5fZmluZ2VyTm9kZS5hY3RpdmUgPSAhMDtcbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoKSB7fSlcbiAgICAgICAgICAgIDogdGhpcy5fZmluZ2VyTm9kZSAmJiB0aGlzLl9maW5nZXJOb2RlLmFjdGl2ZSAmJiAodGhpcy5fZmluZ2VyTm9kZS5hY3RpdmUgPSAhMSk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5zaG93VGltZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSBfdGltZS5kZWZhdWx0Lmlucy5uZXh0WmVyb1RpbWUgLyAxZTM7XG4gICAgICAgIGlmICh0IDw9IDApIHJldHVybiB0aGlzLmluaXRUYXNrKCksIHZvaWQgdGhpcy51bnNjaGVkdWxlKHRoaXMuc2hvd1RpbWUpO1xuICAgICAgICB0aGlzLmRheVRpbWVMYi5zdHJpbmcgPSBfdGltZS5kZWZhdWx0LmdldEZvcm1hdEhNUyh0KTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmNoZWNrRW5kVGltZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSBfZmVzdGl2YWxNZ3IuZGVmYXVsdC5pbnMuZmVzRW5kVGltZSAtIF90aW1lLmRlZmF1bHQuaW5zLnNlcnZlclRpbWU7XG4gICAgICAgIGlmICh0ID4gMCkge1xuICAgICAgICAgICAgdmFyIGUgPSBNYXRoLmZsb29yKHQgLyA4NjQwMCk7XG4gICAgICAgICAgICBpZiAoZSA8PSAwKSAodGhpcy50aWFuTm9kZS5hY3RpdmUgPSAhMSksIHRoaXMuc2NoZWR1bGUodGhpcy5zaG93RW5kVGltZSwgMSksIHRoaXMuc2hvd0VuZFRpbWUoKTtcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBvID0gKHRoaXMudGltZUxiLnN0cmluZyA9IGUgKyBcIlwiKTtcbiAgICAgICAgICAgICAgICB0aGlzLnRpYW5Ob2RlLmFjdGl2ZSA9ICEwO1xuICAgICAgICAgICAgICAgIDEgPT0gby5sZW5ndGggJiYgKHRoaXMudGlhbk5vZGUueCA9IDExMik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSAodGhpcy50aW1lTGIuc3RyaW5nID0gXCJcIiksICh0aGlzLnRpYW5Ob2RlLmFjdGl2ZSA9ICExKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnNob3dFbmRUaW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IF9mZXN0aXZhbE1nci5kZWZhdWx0Lmlucy5mZXNFbmRUaW1lIC0gX3RpbWUuZGVmYXVsdC5pbnMuc2VydmVyVGltZTtcbiAgICAgICAgaWYgKHQgPD0gMCkgcmV0dXJuIHRoaXMuaW5pdFRhc2soKSwgKHRoaXMudGltZUxiLnN0cmluZyA9IFwi5bey57uT5p2fXCIpLCB2b2lkIHRoaXMudW5zY2hlZHVsZSh0aGlzLnNob3dUaW1lKTtcbiAgICAgICAgdGhpcy50aW1lTGIuc3RyaW5nID0gX3RpbWUuZGVmYXVsdC5nZXRGb3JtYXRITVModCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5oaWRlVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX2V2dHMuZGVmYXVsdC5vcEUuZW1pdCh7YWN0aW9uOiBfZXZ0cy5kZWZhdWx0LlVQRF9GRVNfUkVEfSk7XG4gICAgICAgIHRoaXMuaGlkZSgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUub25CdG5HZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfZmVzdGl2YWxNZ3IuZGVmYXVsdC5pbnMuaXNUYXNrTG9ja2VkKCkpIF90aXBNZ3IuZGVmYXVsdC5pbnMuc2hvd1RpcChcIuS7iuaXpeS7u+WKoeW3suWujOaIkFwiKTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgdCA9IF9mZXN0aXZhbE1nci5kZWZhdWx0LmlucztcbiAgICAgICAgICAgIHZhciBlID0gdC5nZXRGZXNQcm8oKTtcbiAgICAgICAgICAgIHZhciBvID0gdC5nZXROb3dUYXNrRGF0YSgpO1xuICAgICAgICAgICAgdmFyIG4gPSBvLm51bXM7XG4gICAgICAgICAgICB2YXIgaSA9IHQuZ2V0Tm93VGFza1BybygpO1xuICAgICAgICAgICAgdmFyIHIgPSBvLnZhbDtcbiAgICAgICAgICAgIHZhciBhID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBjIGluIHIpIHtcbiAgICAgICAgICAgICAgICB2YXIgbCA9IHJbY107XG4gICAgICAgICAgICAgICAgdmFyIHUgPSB0aGlzLmltZ05vZGUuY2hpbGRyZW5bZV07XG4gICAgICAgICAgICAgICAgdmFyIHAgPSB1LnBhcmVudC5jb252ZXJ0VG9Xb3JsZFNwYWNlQVIodS5wb3NpdGlvbik7XG4gICAgICAgICAgICAgICAgdmFyIGYgPSB7fTtcbiAgICAgICAgICAgICAgICBmLml0ZW1JZCA9IGM7XG4gICAgICAgICAgICAgICAgZi53b3JsZFBvcyA9IHA7XG4gICAgICAgICAgICAgICAgZi52YWx1ZSA9IE51bWJlcihsKTtcbiAgICAgICAgICAgICAgICBhLnB1c2goZik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaSA+PSBuKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgYyBpbiByKSAobCA9IHJbY10pLCBfYmFnTWdyLmRlZmF1bHQuaW5zLmFkZEl0ZW0oYywgTnVtYmVyKGwpKTtcbiAgICAgICAgICAgICAgICBfcGFuZWxNZ3IuZGVmYXVsdC5pbnMub3BlbihcInVpL3VpX2ZseUFuaVwiLCB7aXRlbURhdGFzOiBhfSk7XG4gICAgICAgICAgICAgICAgdmFyIG0gPSBOdW1iZXIodC5nZXRGZXNQcm8oKSk7XG4gICAgICAgICAgICAgICAgX2lkeC5wbGF0Zm9ybS5yZXBvcnRFdmVudChfaWR4LkVSZXBFdnQuZmVzVGFza0ZpbmlzaCwge2lkOiBtfSk7XG4gICAgICAgICAgICAgICAgX2Zlc3RpdmFsTWdyLmRlZmF1bHQuaW5zLmZpbmlzaEZlc1Rhc2soKTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRQYW5lbCgpO1xuICAgICAgICAgICAgfSBlbHNlIF9wYW5lbE1nci5kZWZhdWx0Lmlucy5vcGVuKFwidWkvdWlfcHJlUmV3YXJkXCIsIHtpdGVtRGF0YXM6IGF9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgZS5wcm90b3R5cGUub25CdG5TdGFydCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSBfZmVzdGl2YWxNZ3IuZGVmYXVsdC5pbnMuZ2V0RmVzTGV2ZWxDb3N0KCk7XG4gICAgICAgIF9wSW5mby5kZWZhdWx0Lmlucy5nZXRQb3dlcigpIDwgdFxuICAgICAgICAgICAgPyBfcGFuZWxNZ3IuZGVmYXVsdC5pbnMub3BlbihcInVpL3VpX2dldFJlc1wiLCB7aXRlbUlkOiBcInRpbWVzXCJ9KVxuICAgICAgICAgICAgOiBfZmVzdGl2YWxNZ3IuZGVmYXVsdC5pbnMuaXNQdXp6bGVMb2NrZWQoKVxuICAgICAgICAgICAgPyBfdGlwTWdyLmRlZmF1bHQuaW5zLnNob3dUaXAoXCLmmI7lpKnlvIDlkK9cIilcbiAgICAgICAgICAgIDogKF9mZXN0aXZhbE1nci5kZWZhdWx0Lmlucy51cGRQcm8oX2Zlc3RpdmFsTWdyLmZlc1Rhc2tLZXkuY29zdFBvd2VyLCB0KSxcbiAgICAgICAgICAgICAgX3BJbmZvLmRlZmF1bHQuaW5zLmFkZFBvd2VyKC10KSxcbiAgICAgICAgICAgICAgX3BJbmZvLmNoZ1NjZW5lKF9wSW5mby5zY2VuZVR5cGUuZ2FtZSwge2dhbWVUeXBlOiBfcEluZm8uZ2FtZVR5cGUuZmVzdGl2YWx9KSk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vbkJ0bkppZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oaWRlVGhpcygpO1xuICAgICAgICBfZXZ0cy5kZWZhdWx0Lm9wRS5lbWl0KHthY3Rpb246IF9ldnRzLmRlZmF1bHQuTUFJTkpVTVAsIGRhdGE6IDAsIHBhcmFtOiBcImZlc3RpdmFsXCJ9KTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLm9uQnRuR28gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ID0gX2Zlc3RpdmFsTWdyLmRlZmF1bHQuaW5zLmdldE5vd1Rhc2tEYXRhKCk7XG4gICAgICAgIHN3aXRjaCAoKHRoaXMuaGlkZVRoaXMoKSwgdC5nZXRfYnkpKSB7XG4gICAgICAgICAgICBjYXNlIF9mZXN0aXZhbE1nci5mZXNUYXNrS2V5LnJhY2VTY29yZTpcbiAgICAgICAgICAgIGNhc2UgX2Zlc3RpdmFsTWdyLmZlc1Rhc2tLZXkucmFjZVRpbWVzOlxuICAgICAgICAgICAgICAgIF9ldnRzLmRlZmF1bHQub3BFLmVtaXQoe2FjdGlvbjogX2V2dHMuZGVmYXVsdC5NQUlOSlVNUCwgZGF0YTogNH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBfZmVzdGl2YWxNZ3IuZmVzVGFza0tleS5jb3N0UG93ZXI6XG4gICAgICAgICAgICBjYXNlIF9mZXN0aXZhbE1nci5mZXNUYXNrS2V5LnRocm91Z2hNYWluOlxuICAgICAgICAgICAgICAgIF9nbG9iYWwuZGVmYXVsdC5sZXZlbERvbmVcbiAgICAgICAgICAgICAgICAgICAgPyBfcGFuZWxNZ3IuZGVmYXVsdC5pbnMub3BlbihcInVpL3VpX3NlbGVjdE1vZGVcIiwgbnVsbClcbiAgICAgICAgICAgICAgICAgICAgOiBfcGFuZWxNZ3IuZGVmYXVsdC5pbnMub3BlbihcInVpL3VpX2x2SW5mb1wiLCBudWxsKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgX2Zlc3RpdmFsTWdyLmZlc1Rhc2tLZXkuZmluaXNoUHV6emxlOlxuICAgICAgICAgICAgICAgIF9ldnRzLmRlZmF1bHQub3BFLmVtaXQoe2FjdGlvbjogX2V2dHMuZGVmYXVsdC5NQUlOSlVNUCwgZGF0YTogMH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFt3KGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcInByb0xiXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbdyhjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJ0YXNrTGJcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFt3KGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcInRpbWVMYlwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW3coY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJpbWdOb2RlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbdyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcInRpYW5Ob2RlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbdyhjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJkYXlUaW1lTGJcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFt3KGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcImNvc3RMYlwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW3coY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJzdGFydEJ0blwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW3coY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJ0b3BOb2RlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbdyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcInVwRWdnTm9kZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW3coY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJlZ2dOb2RlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbdyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcInNwaW5lTm9kZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW3coY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwiamlnc2F3TnVtXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW2JdLCBlKTtcbn0pKF9iYXNlVUkuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSBTO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_gamesetlattice.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '26dfbJvCClAmpxj5mN5QzJI', 'ui_gamesetlattice');
// scripts/ui_gamesetlattice.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _baseUI = require("baseUI");

var c = cc._decorator;
var l = c.ccclass;
var u = (c.property, function (t) {
  function e() {
    return null !== t && t.apply(this, arguments) || this;
  }

  __extends(e, t);

  e.prototype.init = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }
  };

  e.prototype.onBtnAdd = function () {
    var t;
    null === (t = _idx.platform.addGamesetlattice) || void 0 === t || t.call(_idx.platform);
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  return __decorate([l], e);
}(_baseUI["default"]));
exports["default"] = u;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfZ2FtZXNldGxhdHRpY2UuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2lkeCIsInJlcXVpcmUiLCJfYmFzZVVJIiwiYyIsImNjIiwiX2RlY29yYXRvciIsImwiLCJjY2NsYXNzIiwidSIsInByb3BlcnR5IiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsImluaXQiLCJsZW5ndGgiLCJvbkJ0bkFkZCIsInBsYXRmb3JtIiwiYWRkR2FtZXNldGxhdHRpY2UiLCJjYWxsIiwiaGlkZVRoaXMiLCJoaWRlIiwiX19kZWNvcmF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxLQUFELENBQWxCOztBQUNBLElBQUlDLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBSUUsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsSUFDQUwsQ0FBQyxDQUFDTSxRQUFGLEVBQ0EsVUFBVUMsQ0FBVixFQUFhO0VBQ1YsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsT0FBUSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQW5EO0VBQ0g7O0VBQ0RDLFNBQVMsQ0FBQ0gsQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FDLENBQUMsQ0FBQ0ksU0FBRixDQUFZQyxJQUFaLEdBQW1CLFlBQVk7SUFDM0IsS0FBSyxJQUFJTixDQUFDLEdBQUcsRUFBUixFQUFZQyxDQUFDLEdBQUcsQ0FBckIsRUFBd0JBLENBQUMsR0FBR0UsU0FBUyxDQUFDSSxNQUF0QyxFQUE4Q04sQ0FBQyxFQUEvQztNQUFtREQsQ0FBQyxDQUFDQyxDQUFELENBQUQsR0FBT0UsU0FBUyxDQUFDRixDQUFELENBQWhCO0lBQW5EO0VBQ0gsQ0FGRDs7RUFHQUEsQ0FBQyxDQUFDSSxTQUFGLENBQVlHLFFBQVosR0FBdUIsWUFBWTtJQUMvQixJQUFJUixDQUFKO0lBQ0EsVUFBVUEsQ0FBQyxHQUFHVixJQUFJLENBQUNtQixRQUFMLENBQWNDLGlCQUE1QixLQUFrRCxLQUFLLENBQUwsS0FBV1YsQ0FBN0QsSUFBa0VBLENBQUMsQ0FBQ1csSUFBRixDQUFPckIsSUFBSSxDQUFDbUIsUUFBWixDQUFsRTtFQUNILENBSEQ7O0VBSUFSLENBQUMsQ0FBQ0ksU0FBRixDQUFZTyxRQUFaLEdBQXVCLFlBQVk7SUFDL0IsS0FBS0MsSUFBTDtFQUNILENBRkQ7O0VBR0EsT0FBT0MsVUFBVSxDQUFDLENBQUNsQixDQUFELENBQUQsRUFBTUssQ0FBTixDQUFqQjtBQUNILENBaEJELENBZ0JHVCxPQUFPLFdBaEJWLENBRkMsQ0FBTDtBQW1CQUosT0FBTyxXQUFQLEdBQWtCVSxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfaWR4ID0gcmVxdWlyZShcImlkeFwiKTtcbnZhciBfYmFzZVVJID0gcmVxdWlyZShcImJhc2VVSVwiKTtcbnZhciBjID0gY2MuX2RlY29yYXRvcjtcbnZhciBsID0gYy5jY2NsYXNzO1xudmFyIHUgPVxuICAgIChjLnByb3BlcnR5LFxuICAgIChmdW5jdGlvbiAodCkge1xuICAgICAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICAgICAgcmV0dXJuIChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgfVxuICAgICAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgICAgIGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBmb3IgKHZhciB0ID0gW10sIGUgPSAwOyBlIDwgYXJndW1lbnRzLmxlbmd0aDsgZSsrKSB0W2VdID0gYXJndW1lbnRzW2VdO1xuICAgICAgICB9O1xuICAgICAgICBlLnByb3RvdHlwZS5vbkJ0bkFkZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB0O1xuICAgICAgICAgICAgbnVsbCA9PT0gKHQgPSBfaWR4LnBsYXRmb3JtLmFkZEdhbWVzZXRsYXR0aWNlKSB8fCB2b2lkIDAgPT09IHQgfHwgdC5jYWxsKF9pZHgucGxhdGZvcm0pO1xuICAgICAgICB9O1xuICAgICAgICBlLnByb3RvdHlwZS5oaWRlVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gX19kZWNvcmF0ZShbbF0sIGUpO1xuICAgIH0pKF9iYXNlVUkuZGVmYXVsdCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gdTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_getItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c5238cXPXJEF72dKgiQwbZ5', 'ui_getItem');
// scripts/ui_getItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _res = require("res");

var _cfgMgr = require("cfgMgr");

var _lang = require("lang");

var _bagMgr = require("bagMgr");

var _panelMgr = require("panelMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var g = cc._decorator;
var y = g.ccclass;
var m = g.property;

var v = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.typeSps = [];
    e.getBtnNode = null;
    e.adGetBtn = null;
    e.needGoldLbl = null;
    e.getNumLbl = null;
    e.getNum2Lbl = null;
    e.tipLbl = null;
    e.adNormal = null;
    e.adGray = null;
    e.nowGold = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    var e = this;
    var o = t.itemId;
    var n = t.cb;
    var i = t.closeCb;
    var r = t.gType;
    this.gType = r;
    this.itemId = o;
    this.getCb = n;
    this.closeCb = i;
    var a = _cfgMgr["default"].serverCfg;
    var l = this.data = {};
    var u = "道具";
    var p = "";
    this.tipLbl.node.active = !1;
    this.adNormal.active = !0;
    this.adGray.active = !1;
    var d = a.props.set;

    switch (this.nowGold.string = _pInfo["default"].ins.getCoin() + "", o) {
      case "qw_line_ticket":
        var f = _pInfo["default"].ins.getTicketAdTimes(),
            g = a.qw_line_rules.rules.times.set.ad_times,
            y = g.max_val;

        this.ticketIsMax = f >= y, l.normalGet = l.adGet = g.val, u = "挑战券", this.tipLbl.node.active = !0, this.tipLbl.string = "今日剩余" + (y - f) + "次", this.ticketIsMax ? (this.adGetBtn.enabled = !1, this.adNormal.active = !1, this.adGray.active = !0) : (this.adGetBtn.enabled = !0, this.adNormal.active = !0, this.adGray.active = !1), p = "购买" + u;
        break;

      case "notice":
      case "random_notice":
      case "full_row_col":
        for (var m = 0, v = d; m < v.length; m++) {
          var _ = v[m];

          if (_.key == o) {
            l.needGold = _.price;
            l.normalGet = l.adGet = _.ad_to_nums;
            u = _.title;
            break;
          }
        }

        p = "购买" + u;
        break;

      case "puzzle_pieces":
        for (var b = 5, w = 0, S = d; w < S.length; w++) {
          if ((k = S[w]).key == o) {
            l.needGold = k.price;
            l.normalGet = l.adGet = k.ad_to_nums;
            u = k.title;
            k.daily_limit_times && (b = Number(k.daily_limit_times) || 5);
            break;
          }
        }

        var T = _pInfo["default"].ins.getJigsawAdTimes();

        this.ticketIsMax = T >= b, this.tipLbl.node.active = !0, this.tipLbl.string = "今日剩余" + (b - T) + "次", this.ticketIsMax ? (this.adGetBtn.enabled = !1, this.adNormal.active = !1, this.adGray.active = !0) : (this.adGetBtn.enabled = !0, this.adNormal.active = !0, this.adGray.active = !1), p = "拼图碎片用于拼图玩法，\n可以通过每日任务及主线关卡获得。";
        break;

      case "newYear_pieces":
        for (var I = 5, D = 0, P = d; D < P.length; D++) {
          var k;

          if ((k = P[D]).key == o) {
            l.needGold = k.price;
            l.normalGet = l.adGet = k.ad_to_nums;
            u = k.title;
            k.daily_limit_times && (I = Number(k.daily_limit_times) || 5);
            break;
          }
        }

        l.needGold = 0, l.normalGet = l.adGet = 5, u = "新春拼图碎片";

        var R = _pInfo["default"].ins.getNewJigAdTimes();

        this.ticketIsMax = R >= I, this.tipLbl.node.active = !0, this.tipLbl.string = "今日剩余" + (I - R) + "次", this.ticketIsMax ? (this.adGetBtn.enabled = !1, this.adNormal.active = !1, this.adGray.active = !0) : (this.adGetBtn.enabled = !0, this.adNormal.active = !0, this.adGray.active = !1), p = "新春活动获取";
        break;

      case "puzzle_notice":
        for (var N = 0, C = d; N < C.length; N++) {
          var O = C[N];

          if (O.key == o) {
            l.needGold = O.price;
            l.normalGet = l.adGet = O.ad_to_nums;
            u = O.title;
            break;
          }
        }

        p = "使用提示可以随机拼好一个碎片。";
        break;

      case "puzzle_background":
        for (var M = 0, L = d; M < L.length; M++) {
          var A = L[M];

          if (A.key == o) {
            l.needGold = A.price;
            l.normalGet = l.adGet = A.ad_to_nums;
            u = A.title;
            break;
          }
        }

        p = "开启背景可获得一定时间的背景显示。";
    }

    l.needGold ? this.needGoldLbl.string = l.needGold + "" : (this.getBtnNode.active = !1, this.adGetBtn.node.x = 0);
    this.getNumLbl.string = "x" + l.normalGet;
    this.getNum2Lbl.string = p;

    _res["default"].ins.getBundleByString("resSps").then(function (t) {
      t.load("item/" + o, cc.SpriteFrame, function (t, o) {
        !t && e.node && e.node.isValid && e.typeSps.forEach(function (t) {
          t.spriteFrame = o;
        });
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });

    this.initAdDotEvent();
  };

  e.prototype.initAdDotEvent = function () {
    var t = "拼图";
    _lang.gemeTypeKey[this.gType] && (t = _lang.gemeTypeKey[this.gType]);
    this.adGetBtn.node.adDotData = t + "-道具-" + _lang.reportKey[this.itemId];
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.hide = function () {
    var e;
    null === (e = this.closeCb) || void 0 === e || e.call(this);
    return t.prototype.hide.call(this);
  };

  e.prototype.onGet = function () {
    _pInfo["default"].ins.getCoin() < this.data.needGold ? _panelMgr["default"].ins.open("ui/ui_getRes", {
      itemId: "coin",
      gType: this.gType,
      useTo: _lang.getCoinFor.Item
    }) : (this.getItem(!1), this.buyEventDot("使用元宝"));
  };

  e.prototype.onAdGet = function () {
    this.ticketIsMax ? _tipMgr["default"].ins.showTip("今日已达上限") : (this.getItem(!0), this.buyEventDot("看广告"));
  };

  e.prototype.buyEventDot = function (t) {
    var e = "拼图";
    _lang.gemeTypeKey[this.gType] && (e = _lang.gemeTypeKey[this.gType]);
    !_pInfo["default"].ins.isMaxAdCount() && _idx.platform.reportEvent(_idx.ERepEvt.buyItem, {
      way: t,
      gameType: e,
      itemId: _lang.reportKey[this.itemId]
    });
  };

  e.prototype.getItem = function (t) {
    var e = this;
    var o = this.data;
    var n = t ? o.normalGet : o.adGet;
    var i = this.typeSps[0].node;
    var r = i.parent.convertToWorldSpaceAR(i.position);

    _panelMgr["default"].ins.open("ui/ui_flyAni", {
      itemDatas: [{
        itemId: this.itemId,
        worldPos: r,
        value: n
      }],
      hideCb: function hideCb() {
        var o;

        switch (e.itemId) {
          case "qw_line_ticket":
            _pInfo["default"].ins.addTicketAdTimes(), _bagMgr["default"].ins.addItem(e.itemId, n);
            break;

          case "notice":
          case "random_notice":
          case "full_row_col":
            _bagMgr["default"].ins.addItem(e.itemId, n), t || _pInfo["default"].ins.addCoin(-e.data.needGold);
            break;

          case "puzzle_pieces":
            _pInfo["default"].ins.addJigsawAdTimes(), _bagMgr["default"].ins.addItem(e.itemId, n);
            break;

          case "newYear_pieces":
            _pInfo["default"].ins.addNewJigAdTimes(), _bagMgr["default"].ins.addItem(e.itemId, n);
            break;

          case "puzzle_notice":
          case "puzzle_background":
            _bagMgr["default"].ins.addItem(e.itemId, n);

        }

        null === (o = e.getCb) || void 0 === o || o.call(e);
        e.hideThis();
      }
    });
  };

  __decorate([m([cc.Sprite])], e.prototype, "typeSps", void 0);

  __decorate([m(cc.Node)], e.prototype, "getBtnNode", void 0);

  __decorate([m(cc.Button)], e.prototype, "adGetBtn", void 0);

  __decorate([m(cc.Label)], e.prototype, "needGoldLbl", void 0);

  __decorate([m(cc.Label)], e.prototype, "getNumLbl", void 0);

  __decorate([m(cc.Label)], e.prototype, "getNum2Lbl", void 0);

  __decorate([m(cc.Label)], e.prototype, "tipLbl", void 0);

  __decorate([m(cc.Node)], e.prototype, "adNormal", void 0);

  __decorate([m(cc.Node)], e.prototype, "adGray", void 0);

  __decorate([m(cc.Label)], e.prototype, "nowGold", void 0);

  return __decorate([y], e);
}(_baseUI["default"]);

exports["default"] = v;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfZ2V0SXRlbS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfaWR4IiwicmVxdWlyZSIsIl9yZXMiLCJfY2ZnTWdyIiwiX2xhbmciLCJfYmFnTWdyIiwiX3BhbmVsTWdyIiwiX3RpcE1nciIsIl9wSW5mbyIsIl9iYXNlVUkiLCJnIiwiY2MiLCJfZGVjb3JhdG9yIiwieSIsImNjY2xhc3MiLCJtIiwicHJvcGVydHkiLCJ2IiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsInR5cGVTcHMiLCJnZXRCdG5Ob2RlIiwiYWRHZXRCdG4iLCJuZWVkR29sZExibCIsImdldE51bUxibCIsImdldE51bTJMYmwiLCJ0aXBMYmwiLCJhZE5vcm1hbCIsImFkR3JheSIsIm5vd0dvbGQiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJpbml0IiwibyIsIml0ZW1JZCIsImNiIiwiaSIsImNsb3NlQ2IiLCJyIiwiZ1R5cGUiLCJnZXRDYiIsImEiLCJzZXJ2ZXJDZmciLCJsIiwiZGF0YSIsInUiLCJwIiwibm9kZSIsImFjdGl2ZSIsImQiLCJwcm9wcyIsInNldCIsInN0cmluZyIsImlucyIsImdldENvaW4iLCJmIiwiZ2V0VGlja2V0QWRUaW1lcyIsInF3X2xpbmVfcnVsZXMiLCJydWxlcyIsInRpbWVzIiwiYWRfdGltZXMiLCJtYXhfdmFsIiwidGlja2V0SXNNYXgiLCJub3JtYWxHZXQiLCJhZEdldCIsInZhbCIsImVuYWJsZWQiLCJsZW5ndGgiLCJfIiwia2V5IiwibmVlZEdvbGQiLCJwcmljZSIsImFkX3RvX251bXMiLCJ0aXRsZSIsImIiLCJ3IiwiUyIsImsiLCJkYWlseV9saW1pdF90aW1lcyIsIk51bWJlciIsIlQiLCJnZXRKaWdzYXdBZFRpbWVzIiwiSSIsIkQiLCJQIiwiUiIsImdldE5ld0ppZ0FkVGltZXMiLCJOIiwiQyIsIk8iLCJNIiwiTCIsIkEiLCJ4IiwiZ2V0QnVuZGxlQnlTdHJpbmciLCJ0aGVuIiwibG9hZCIsIlNwcml0ZUZyYW1lIiwiaXNWYWxpZCIsImZvckVhY2giLCJzcHJpdGVGcmFtZSIsImNvbnNvbGUiLCJlcnJvciIsImluaXRBZERvdEV2ZW50IiwiZ2VtZVR5cGVLZXkiLCJhZERvdERhdGEiLCJyZXBvcnRLZXkiLCJoaWRlVGhpcyIsImhpZGUiLCJjYWxsIiwib25HZXQiLCJvcGVuIiwidXNlVG8iLCJnZXRDb2luRm9yIiwiSXRlbSIsImdldEl0ZW0iLCJidXlFdmVudERvdCIsIm9uQWRHZXQiLCJzaG93VGlwIiwiaXNNYXhBZENvdW50IiwicGxhdGZvcm0iLCJyZXBvcnRFdmVudCIsIkVSZXBFdnQiLCJidXlJdGVtIiwid2F5IiwiZ2FtZVR5cGUiLCJwYXJlbnQiLCJjb252ZXJ0VG9Xb3JsZFNwYWNlQVIiLCJwb3NpdGlvbiIsIml0ZW1EYXRhcyIsIndvcmxkUG9zIiwiaGlkZUNiIiwiYWRkVGlja2V0QWRUaW1lcyIsImFkZEl0ZW0iLCJhZGRDb2luIiwiYWRkSmlnc2F3QWRUaW1lcyIsImFkZE5ld0ppZ0FkVGltZXMiLCJfX2RlY29yYXRlIiwiU3ByaXRlIiwiTm9kZSIsIkJ1dHRvbiIsIkxhYmVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsS0FBRCxDQUFsQjs7QUFDQSxJQUFJRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlHLEtBQUssR0FBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBbkI7O0FBQ0EsSUFBSUksT0FBTyxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJ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Q0FBQyxDQUFDSixFQUFFLENBQUNvSSxLQUFKLENBQUYsQ0FBRCxFQUFnQjVILENBQUMsQ0FBQ2MsU0FBbEIsRUFBNkIsUUFBN0IsRUFBdUMsS0FBSyxDQUE1QyxDQUFWOztFQUNBMEcsVUFBVSxDQUFDLENBQUM1SCxDQUFDLENBQUNKLEVBQUUsQ0FBQ2tJLElBQUosQ0FBRixDQUFELEVBQWUxSCxDQUFDLENBQUNjLFNBQWpCLEVBQTRCLFVBQTVCLEVBQXdDLEtBQUssQ0FBN0MsQ0FBVjs7RUFDQTBHLFVBQVUsQ0FBQyxDQUFDNUgsQ0FBQyxDQUFDSixFQUFFLENBQUNrSSxJQUFKLENBQUYsQ0FBRCxFQUFlMUgsQ0FBQyxDQUFDYyxTQUFqQixFQUE0QixRQUE1QixFQUFzQyxLQUFLLENBQTNDLENBQVY7O0VBQ0EwRyxVQUFVLENBQUMsQ0FBQzVILENBQUMsQ0FBQ0osRUFBRSxDQUFDb0ksS0FBSixDQUFGLENBQUQsRUFBZ0I1SCxDQUFDLENBQUNjLFNBQWxCLEVBQTZCLFNBQTdCLEVBQXdDLEtBQUssQ0FBN0MsQ0FBVjs7RUFDQSxPQUFPMEcsVUFBVSxDQUFDLENBQUM5SCxDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBcE9PLENBb09MVixPQUFPLFdBcE9GLENBQVI7O0FBcU9BWCxPQUFPLFdBQVAsR0FBa0JtQixDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfaWR4ID0gcmVxdWlyZShcImlkeFwiKTtcbnZhciBfcmVzID0gcmVxdWlyZShcInJlc1wiKTtcbnZhciBfY2ZnTWdyID0gcmVxdWlyZShcImNmZ01nclwiKTtcbnZhciBfbGFuZyA9IHJlcXVpcmUoXCJsYW5nXCIpO1xudmFyIF9iYWdNZ3IgPSByZXF1aXJlKFwiYmFnTWdyXCIpO1xudmFyIF9wYW5lbE1nciA9IHJlcXVpcmUoXCJwYW5lbE1nclwiKTtcbnZhciBfdGlwTWdyID0gcmVxdWlyZShcInRpcE1nclwiKTtcbnZhciBfcEluZm8gPSByZXF1aXJlKFwicEluZm9cIik7XG52YXIgX2Jhc2VVSSA9IHJlcXVpcmUoXCJiYXNlVUlcIik7XG52YXIgZyA9IGNjLl9kZWNvcmF0b3I7XG52YXIgeSA9IGcuY2NjbGFzcztcbnZhciBtID0gZy5wcm9wZXJ0eTtcbnZhciB2ID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUudHlwZVNwcyA9IFtdO1xuICAgICAgICBlLmdldEJ0bk5vZGUgPSBudWxsO1xuICAgICAgICBlLmFkR2V0QnRuID0gbnVsbDtcbiAgICAgICAgZS5uZWVkR29sZExibCA9IG51bGw7XG4gICAgICAgIGUuZ2V0TnVtTGJsID0gbnVsbDtcbiAgICAgICAgZS5nZXROdW0yTGJsID0gbnVsbDtcbiAgICAgICAgZS50aXBMYmwgPSBudWxsO1xuICAgICAgICBlLmFkTm9ybWFsID0gbnVsbDtcbiAgICAgICAgZS5hZEdyYXkgPSBudWxsO1xuICAgICAgICBlLm5vd0dvbGQgPSBudWxsO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICAgIHZhciBvID0gdC5pdGVtSWQ7XG4gICAgICAgIHZhciBuID0gdC5jYjtcbiAgICAgICAgdmFyIGkgPSB0LmNsb3NlQ2I7XG4gICAgICAgIHZhciByID0gdC5nVHlwZTtcbiAgICAgICAgdGhpcy5nVHlwZSA9IHI7XG4gICAgICAgIHRoaXMuaXRlbUlkID0gbztcbiAgICAgICAgdGhpcy5nZXRDYiA9IG47XG4gICAgICAgIHRoaXMuY2xvc2VDYiA9IGk7XG4gICAgICAgIHZhciBhID0gX2NmZ01nci5kZWZhdWx0LnNlcnZlckNmZztcbiAgICAgICAgdmFyIGwgPSAodGhpcy5kYXRhID0ge30pO1xuICAgICAgICB2YXIgdSA9IFwi6YGT5YW3XCI7XG4gICAgICAgIHZhciBwID0gXCJcIjtcbiAgICAgICAgdGhpcy50aXBMYmwubm9kZS5hY3RpdmUgPSAhMTtcbiAgICAgICAgdGhpcy5hZE5vcm1hbC5hY3RpdmUgPSAhMDtcbiAgICAgICAgdGhpcy5hZEdyYXkuYWN0aXZlID0gITE7XG4gICAgICAgIHZhciBkID0gYS5wcm9wcy5zZXQ7XG4gICAgICAgIHN3aXRjaCAoKCh0aGlzLm5vd0dvbGQuc3RyaW5nID0gX3BJbmZvLmRlZmF1bHQuaW5zLmdldENvaW4oKSArIFwiXCIpLCBvKSkge1xuICAgICAgICAgICAgY2FzZSBcInF3X2xpbmVfdGlja2V0XCI6XG4gICAgICAgICAgICAgICAgdmFyIGYgPSBfcEluZm8uZGVmYXVsdC5pbnMuZ2V0VGlja2V0QWRUaW1lcygpLFxuICAgICAgICAgICAgICAgICAgICBnID0gYS5xd19saW5lX3J1bGVzLnJ1bGVzLnRpbWVzLnNldC5hZF90aW1lcyxcbiAgICAgICAgICAgICAgICAgICAgeSA9IGcubWF4X3ZhbDtcbiAgICAgICAgICAgICAgICAodGhpcy50aWNrZXRJc01heCA9IGYgPj0geSksXG4gICAgICAgICAgICAgICAgICAgIChsLm5vcm1hbEdldCA9IGwuYWRHZXQgPSBnLnZhbCksXG4gICAgICAgICAgICAgICAgICAgICh1ID0gXCLmjJHmiJjliLhcIiksXG4gICAgICAgICAgICAgICAgICAgICh0aGlzLnRpcExibC5ub2RlLmFjdGl2ZSA9ICEwKSxcbiAgICAgICAgICAgICAgICAgICAgKHRoaXMudGlwTGJsLnN0cmluZyA9IFwi5LuK5pel5Ymp5L2ZXCIgKyAoeSAtIGYpICsgXCLmrKFcIiksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGlja2V0SXNNYXhcbiAgICAgICAgICAgICAgICAgICAgICAgID8gKCh0aGlzLmFkR2V0QnRuLmVuYWJsZWQgPSAhMSksICh0aGlzLmFkTm9ybWFsLmFjdGl2ZSA9ICExKSwgKHRoaXMuYWRHcmF5LmFjdGl2ZSA9ICEwKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIDogKCh0aGlzLmFkR2V0QnRuLmVuYWJsZWQgPSAhMCksICh0aGlzLmFkTm9ybWFsLmFjdGl2ZSA9ICEwKSwgKHRoaXMuYWRHcmF5LmFjdGl2ZSA9ICExKSksXG4gICAgICAgICAgICAgICAgICAgIChwID0gXCLotK3kubBcIiArIHUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIm5vdGljZVwiOlxuICAgICAgICAgICAgY2FzZSBcInJhbmRvbV9ub3RpY2VcIjpcbiAgICAgICAgICAgIGNhc2UgXCJmdWxsX3Jvd19jb2xcIjpcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBtID0gMCwgdiA9IGQ7IG0gPCB2Lmxlbmd0aDsgbSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfID0gdlttXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF8ua2V5ID09IG8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGwubmVlZEdvbGQgPSBfLnByaWNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbC5ub3JtYWxHZXQgPSBsLmFkR2V0ID0gXy5hZF90b19udW1zO1xuICAgICAgICAgICAgICAgICAgICAgICAgdSA9IF8udGl0bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwID0gXCLotK3kubBcIiArIHU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwicHV6emxlX3BpZWNlc1wiOlxuICAgICAgICAgICAgICAgIGZvciAodmFyIGIgPSA1LCB3ID0gMCwgUyA9IGQ7IHcgPCBTLmxlbmd0aDsgdysrKVxuICAgICAgICAgICAgICAgICAgICBpZiAoKGsgPSBTW3ddKS5rZXkgPT0gbykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbC5uZWVkR29sZCA9IGsucHJpY2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBsLm5vcm1hbEdldCA9IGwuYWRHZXQgPSBrLmFkX3RvX251bXM7XG4gICAgICAgICAgICAgICAgICAgICAgICB1ID0gay50aXRsZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGsuZGFpbHlfbGltaXRfdGltZXMgJiYgKGIgPSBOdW1iZXIoay5kYWlseV9saW1pdF90aW1lcykgfHwgNSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBUID0gX3BJbmZvLmRlZmF1bHQuaW5zLmdldEppZ3Nhd0FkVGltZXMoKTtcbiAgICAgICAgICAgICAgICAodGhpcy50aWNrZXRJc01heCA9IFQgPj0gYiksXG4gICAgICAgICAgICAgICAgICAgICh0aGlzLnRpcExibC5ub2RlLmFjdGl2ZSA9ICEwKSxcbiAgICAgICAgICAgICAgICAgICAgKHRoaXMudGlwTGJsLnN0cmluZyA9IFwi5LuK5pel5Ymp5L2ZXCIgKyAoYiAtIFQpICsgXCLmrKFcIiksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGlja2V0SXNNYXhcbiAgICAgICAgICAgICAgICAgICAgICAgID8gKCh0aGlzLmFkR2V0QnRuLmVuYWJsZWQgPSAhMSksICh0aGlzLmFkTm9ybWFsLmFjdGl2ZSA9ICExKSwgKHRoaXMuYWRHcmF5LmFjdGl2ZSA9ICEwKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIDogKCh0aGlzLmFkR2V0QnRuLmVuYWJsZWQgPSAhMCksICh0aGlzLmFkTm9ybWFsLmFjdGl2ZSA9ICEwKSwgKHRoaXMuYWRHcmF5LmFjdGl2ZSA9ICExKSksXG4gICAgICAgICAgICAgICAgICAgIChwID0gXCLmi7zlm77noo7niYfnlKjkuo7mi7zlm77njqnms5XvvIxcXG7lj6/ku6XpgJrov4fmr4/ml6Xku7vliqHlj4rkuLvnur/lhbPljaHojrflvpfjgIJcIik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibmV3WWVhcl9waWVjZXNcIjpcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBJID0gNSwgRCA9IDAsIFAgPSBkOyBEIDwgUC5sZW5ndGg7IEQrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaztcbiAgICAgICAgICAgICAgICAgICAgaWYgKChrID0gUFtEXSkua2V5ID09IG8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGwubmVlZEdvbGQgPSBrLnByaWNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbC5ub3JtYWxHZXQgPSBsLmFkR2V0ID0gay5hZF90b19udW1zO1xuICAgICAgICAgICAgICAgICAgICAgICAgdSA9IGsudGl0bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBrLmRhaWx5X2xpbWl0X3RpbWVzICYmIChJID0gTnVtYmVyKGsuZGFpbHlfbGltaXRfdGltZXMpIHx8IDUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKGwubmVlZEdvbGQgPSAwKSwgKGwubm9ybWFsR2V0ID0gbC5hZEdldCA9IDUpLCAodSA9IFwi5paw5pil5ou85Zu+56KO54mHXCIpO1xuICAgICAgICAgICAgICAgIHZhciBSID0gX3BJbmZvLmRlZmF1bHQuaW5zLmdldE5ld0ppZ0FkVGltZXMoKTtcbiAgICAgICAgICAgICAgICAodGhpcy50aWNrZXRJc01heCA9IFIgPj0gSSksXG4gICAgICAgICAgICAgICAgICAgICh0aGlzLnRpcExibC5ub2RlLmFjdGl2ZSA9ICEwKSxcbiAgICAgICAgICAgICAgICAgICAgKHRoaXMudGlwTGJsLnN0cmluZyA9IFwi5LuK5pel5Ymp5L2ZXCIgKyAoSSAtIFIpICsgXCLmrKFcIiksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGlja2V0SXNNYXhcbiAgICAgICAgICAgICAgICAgICAgICAgID8gKCh0aGlzLmFkR2V0QnRuLmVuYWJsZWQgPSAhMSksICh0aGlzLmFkTm9ybWFsLmFjdGl2ZSA9ICExKSwgKHRoaXMuYWRHcmF5LmFjdGl2ZSA9ICEwKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIDogKCh0aGlzLmFkR2V0QnRuLmVuYWJsZWQgPSAhMCksICh0aGlzLmFkTm9ybWFsLmFjdGl2ZSA9ICEwKSwgKHRoaXMuYWRHcmF5LmFjdGl2ZSA9ICExKSksXG4gICAgICAgICAgICAgICAgICAgIChwID0gXCLmlrDmmKXmtLvliqjojrflj5ZcIik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwicHV6emxlX25vdGljZVwiOlxuICAgICAgICAgICAgICAgIGZvciAodmFyIE4gPSAwLCBDID0gZDsgTiA8IEMubGVuZ3RoOyBOKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIE8gPSBDW05dO1xuICAgICAgICAgICAgICAgICAgICBpZiAoTy5rZXkgPT0gbykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbC5uZWVkR29sZCA9IE8ucHJpY2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBsLm5vcm1hbEdldCA9IGwuYWRHZXQgPSBPLmFkX3RvX251bXM7XG4gICAgICAgICAgICAgICAgICAgICAgICB1ID0gTy50aXRsZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHAgPSBcIuS9v+eUqOaPkOekuuWPr+S7pemaj+acuuaLvOWlveS4gOS4queijueJh+OAglwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcInB1enpsZV9iYWNrZ3JvdW5kXCI6XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgTSA9IDAsIEwgPSBkOyBNIDwgTC5sZW5ndGg7IE0rKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgQSA9IExbTV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChBLmtleSA9PSBvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsLm5lZWRHb2xkID0gQS5wcmljZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGwubm9ybWFsR2V0ID0gbC5hZEdldCA9IEEuYWRfdG9fbnVtcztcbiAgICAgICAgICAgICAgICAgICAgICAgIHUgPSBBLnRpdGxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcCA9IFwi5byA5ZCv6IOM5pmv5Y+v6I635b6X5LiA5a6a5pe26Ze055qE6IOM5pmv5pi+56S644CCXCI7XG4gICAgICAgIH1cbiAgICAgICAgbC5uZWVkR29sZFxuICAgICAgICAgICAgPyAodGhpcy5uZWVkR29sZExibC5zdHJpbmcgPSBsLm5lZWRHb2xkICsgXCJcIilcbiAgICAgICAgICAgIDogKCh0aGlzLmdldEJ0bk5vZGUuYWN0aXZlID0gITEpLCAodGhpcy5hZEdldEJ0bi5ub2RlLnggPSAwKSk7XG4gICAgICAgIHRoaXMuZ2V0TnVtTGJsLnN0cmluZyA9IFwieFwiICsgbC5ub3JtYWxHZXQ7XG4gICAgICAgIHRoaXMuZ2V0TnVtMkxibC5zdHJpbmcgPSBwO1xuICAgICAgICBfcmVzLmRlZmF1bHQuaW5zXG4gICAgICAgICAgICAuZ2V0QnVuZGxlQnlTdHJpbmcoXCJyZXNTcHNcIilcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgdC5sb2FkKFwiaXRlbS9cIiArIG8sIGNjLlNwcml0ZUZyYW1lLCBmdW5jdGlvbiAodCwgbykge1xuICAgICAgICAgICAgICAgICAgICAhdCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgZS5ub2RlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBlLm5vZGUuaXNWYWxpZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgZS50eXBlU3BzLmZvckVhY2goZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0LnNwcml0ZUZyYW1lID0gbztcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJSVG9vbC5pbnMuZ2V0QnVuZGxlQnlTdHJpbmcoJ3Jlc1NwcycpXCIsIHQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuaW5pdEFkRG90RXZlbnQoKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmluaXRBZERvdEV2ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IFwi5ou85Zu+XCI7XG4gICAgICAgIF9sYW5nLmdlbWVUeXBlS2V5W3RoaXMuZ1R5cGVdICYmICh0ID0gX2xhbmcuZ2VtZVR5cGVLZXlbdGhpcy5nVHlwZV0pO1xuICAgICAgICB0aGlzLmFkR2V0QnRuLm5vZGUuYWREb3REYXRhID0gdCArIFwiLemBk+WFty1cIiArIF9sYW5nLnJlcG9ydEtleVt0aGlzLml0ZW1JZF07XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5oaWRlVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZTtcbiAgICAgICAgbnVsbCA9PT0gKGUgPSB0aGlzLmNsb3NlQ2IpIHx8IHZvaWQgMCA9PT0gZSB8fCBlLmNhbGwodGhpcyk7XG4gICAgICAgIHJldHVybiB0LnByb3RvdHlwZS5oaWRlLmNhbGwodGhpcyk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vbkdldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3BJbmZvLmRlZmF1bHQuaW5zLmdldENvaW4oKSA8IHRoaXMuZGF0YS5uZWVkR29sZFxuICAgICAgICAgICAgPyBfcGFuZWxNZ3IuZGVmYXVsdC5pbnMub3BlbihcInVpL3VpX2dldFJlc1wiLCB7XG4gICAgICAgICAgICAgICAgICBpdGVtSWQ6IFwiY29pblwiLFxuICAgICAgICAgICAgICAgICAgZ1R5cGU6IHRoaXMuZ1R5cGUsXG4gICAgICAgICAgICAgICAgICB1c2VUbzogX2xhbmcuZ2V0Q29pbkZvci5JdGVtXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICA6ICh0aGlzLmdldEl0ZW0oITEpLCB0aGlzLmJ1eUV2ZW50RG90KFwi5L2/55So5YWD5a6dXCIpKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLm9uQWRHZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMudGlja2V0SXNNYXggPyBfdGlwTWdyLmRlZmF1bHQuaW5zLnNob3dUaXAoXCLku4rml6Xlt7Lovr7kuIrpmZBcIikgOiAodGhpcy5nZXRJdGVtKCEwKSwgdGhpcy5idXlFdmVudERvdChcIueci+W5v+WRilwiKSk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5idXlFdmVudERvdCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZhciBlID0gXCLmi7zlm75cIjtcbiAgICAgICAgX2xhbmcuZ2VtZVR5cGVLZXlbdGhpcy5nVHlwZV0gJiYgKGUgPSBfbGFuZy5nZW1lVHlwZUtleVt0aGlzLmdUeXBlXSk7XG4gICAgICAgICFfcEluZm8uZGVmYXVsdC5pbnMuaXNNYXhBZENvdW50KCkgJiZcbiAgICAgICAgICAgIF9pZHgucGxhdGZvcm0ucmVwb3J0RXZlbnQoX2lkeC5FUmVwRXZ0LmJ1eUl0ZW0sIHtcbiAgICAgICAgICAgICAgICB3YXk6IHQsXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGU6IGUsXG4gICAgICAgICAgICAgICAgaXRlbUlkOiBfbGFuZy5yZXBvcnRLZXlbdGhpcy5pdGVtSWRdXG4gICAgICAgICAgICB9KTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmdldEl0ZW0gPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICAgIHZhciBvID0gdGhpcy5kYXRhO1xuICAgICAgICB2YXIgbiA9IHQgPyBvLm5vcm1hbEdldCA6IG8uYWRHZXQ7XG4gICAgICAgIHZhciBpID0gdGhpcy50eXBlU3BzWzBdLm5vZGU7XG4gICAgICAgIHZhciByID0gaS5wYXJlbnQuY29udmVydFRvV29ybGRTcGFjZUFSKGkucG9zaXRpb24pO1xuICAgICAgICBfcGFuZWxNZ3IuZGVmYXVsdC5pbnMub3BlbihcInVpL3VpX2ZseUFuaVwiLCB7XG4gICAgICAgICAgICBpdGVtRGF0YXM6IFt7aXRlbUlkOiB0aGlzLml0ZW1JZCwgd29ybGRQb3M6IHIsIHZhbHVlOiBufV0sXG4gICAgICAgICAgICBoaWRlQ2I6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbztcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGUuaXRlbUlkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJxd19saW5lX3RpY2tldFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgX3BJbmZvLmRlZmF1bHQuaW5zLmFkZFRpY2tldEFkVGltZXMoKSwgX2JhZ01nci5kZWZhdWx0Lmlucy5hZGRJdGVtKGUuaXRlbUlkLCBuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwibm90aWNlXCI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJyYW5kb21fbm90aWNlXCI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJmdWxsX3Jvd19jb2xcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIF9iYWdNZ3IuZGVmYXVsdC5pbnMuYWRkSXRlbShlLml0ZW1JZCwgbiksIHQgfHwgX3BJbmZvLmRlZmF1bHQuaW5zLmFkZENvaW4oLWUuZGF0YS5uZWVkR29sZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInB1enpsZV9waWVjZXNcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIF9wSW5mby5kZWZhdWx0Lmlucy5hZGRKaWdzYXdBZFRpbWVzKCksIF9iYWdNZ3IuZGVmYXVsdC5pbnMuYWRkSXRlbShlLml0ZW1JZCwgbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIm5ld1llYXJfcGllY2VzXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICBfcEluZm8uZGVmYXVsdC5pbnMuYWRkTmV3SmlnQWRUaW1lcygpLCBfYmFnTWdyLmRlZmF1bHQuaW5zLmFkZEl0ZW0oZS5pdGVtSWQsIG4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJwdXp6bGVfbm90aWNlXCI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJwdXp6bGVfYmFja2dyb3VuZFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2JhZ01nci5kZWZhdWx0Lmlucy5hZGRJdGVtKGUuaXRlbUlkLCBuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbnVsbCA9PT0gKG8gPSBlLmdldENiKSB8fCB2b2lkIDAgPT09IG8gfHwgby5jYWxsKGUpO1xuICAgICAgICAgICAgICAgIGUuaGlkZVRoaXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFttKFtjYy5TcHJpdGVdKV0sIGUucHJvdG90eXBlLCBcInR5cGVTcHNcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFttKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiZ2V0QnRuTm9kZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW20oY2MuQnV0dG9uKV0sIGUucHJvdG90eXBlLCBcImFkR2V0QnRuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbbShjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJuZWVkR29sZExibFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW20oY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwiZ2V0TnVtTGJsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbbShjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJnZXROdW0yTGJsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbbShjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJ0aXBMYmxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFttKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiYWROb3JtYWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFttKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiYWRHcmF5XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbbShjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJub3dHb2xkXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW3ldLCBlKTtcbn0pKF9iYXNlVUkuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSB2O1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/levelMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '14951A6fINDx7WHHNNcam8b', 'levelMgr');
// scripts/levelMgr.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _res = require("res");

var _uData = require("uData");

var _cfgMgr = require("cfgMgr");

var _global = require("global");

var _pInfo = require("pInfo");

var d = cc._decorator;
var h = d.ccclass;
var f = (d.property, function () {
  function t() {
    this._bgId = 0;
    this.oneChapLvlCount = 54;
  }

  var e;
  e = t;
  Object.defineProperty(t, "ins", {
    get: function get() {
      return this._ins || (this._ins = new e());
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.getBgId = function () {
    return 0;
  };

  t.prototype.init = function () {
    return Promise.all([this.updateData(), this.updatePracticeData()]);
  };

  t.prototype.updateData = function () {
    var t = this;

    var e = _pInfo["default"].ins.getPuzzleLvl();

    var o = Math.ceil(e / this.oneChapLvlCount);

    if (o != this.bundleId) {
      this.bundleId = o;
      this.bundle && (this.bundle.releaseAll(), _uData["default"].ins._setLocalAndCloudData());
      var n = Math.floor((e - 1) / 54 % 4);
      (isNaN(n) || n < 0 || n > 3) && (n = 0);
      this._bgId = n;
      cc.assetManager.loadBundle("resSps", function (t, e) {
        var o = _global["default"].padScale ? "ipad/" : "";
        !t && e.load("pages/page_level/" + o + "bg" + n, cc.SpriteFrame);
      });
      var i = this.bundleName = 100 + this.bundleId + "";
      return new Promise(function (e, n) {
        var r = function r() {
          cc.assetManager.loadBundle(i, function (o, i) {
            o ? n() : (t.bundle = i, i.load("data", cc.BufferAsset, function (o, i) {
              o && n();
              t.data = new Uint32Array(i._buffer);
              e(1);
            }));
          });
        };

        o > 18 ? cc.assetManager.loadRemote(_global.OssConfig.levelUrl + i + "/data.bin", cc.BufferAsset, function (n, a) {
          n ? t.data || (i = 101 + (o - 1) % 18 + "", r()) : (t.data = new Uint32Array(a._buffer), e(1));
        }) : r();
      });
    }
  };

  t.prototype.updatePracticeData = function () {
    var t = this;
    return new Promise(function (e, o) {
      cc.assetManager.loadBundle("practice", function (n, i) {
        n ? o() : (i.load("data", cc.BufferAsset, function (e, n) {
          e && o();
          t.practiceData = new Uint32Array(n._buffer);
        }), e(i));
      });
    });
  };

  t.prototype.updateTmpData = function (t) {
    var e = this;
    this.tmpBundleId = t;
    var o = this.tmpBundleName = 100 + t + "";
    return new Promise(function (n, i) {
      var r = function r() {
        cc.assetManager.loadBundle(o, function (t, o) {
          t ? i() : (e.tmpBundle = o, o.load("data", cc.BufferAsset, function (t, o) {
            t && i();
            e.tmpData = new Uint32Array(o._buffer);
            n(1);
          }));
        });
      };

      t > 18 ? cc.assetManager.loadRemote(_global.OssConfig.levelUrl + o + "/data.bin", cc.BufferAsset, function (i, a) {
        i ? e.tmpData || (o = 101 + (t - 1) % 18 + "", r()) : (e.tmpData = new Uint32Array(a._buffer), n(1));
      }) : r();
    });
  };

  t.prototype.getPracticeData = function () {
    var t = this;
    this.practiceData || _res["default"].ins.getBundleByString("practice").then(function (e) {
      var o = e.get("data", cc.BufferAsset);
      t.practiceData = new Uint32Array(o._buffer);
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('practice')", t);
    });
    return this.practiceData;
  };

  t.prototype.getPracticeId = function () {
    this.practiceId ? (this.practiceId++, this.practiceId > this.getPuzzleLvlCount(!0) && (this.practiceId = 2)) : this.practiceId = 2;
    return this.practiceId;
  };

  t.prototype.clearPrcitceId = function () {
    this.practiceId = null;
  };

  t.prototype.getPuzzleSprFrame = function (t) {
    var e = this;
    return new Promise(function (o, n) {
      var i = t;
      var r = (i - 1) % e.oneChapLvlCount + 1 + "";
      i > 972 ? cc.assetManager.loadRemote(_global.OssConfig.levelUrl + (100 + e.bundleId + "/") + r + ".png", cc.SpriteFrame, function (t, e) {
        t ? n() : o(new cc.SpriteFrame(e));
      }) : e.bundle.load(r, cc.SpriteFrame, function (t, e) {
        t ? n() : o(e);
      });
    });
  };

  t.prototype.getPracitceSprfFrame = function (t) {
    return new Promise(function (e, o) {
      _res["default"].ins.getBundleByString("practice").then(function (n) {
        n.load(t + "", cc.SpriteFrame, function (t, n) {
          t ? o() : e(n);
        });
      })["catch"](function (t) {
        console.error("RTool.ins.getBundleByString('resSps')", t);
      });
    });
  };

  t.prototype.getPuzzleDiff = function () {
    return this.getPuzzleInfo().diff;
  };

  t.prototype.getPuzzleLvlCount = function (t) {
    return t ? this.getPracticeData()[1] : this.oneChapLvlCount;
  };

  t.prototype.getPuzzleInfo = function (t, e) {
    var o = t ? this.getPracticeData() : this.data;
    var n = o[0];
    var i = o[1];
    var r = t && e ? e - 1 : (_pInfo["default"].ins.getPuzzleLvl() - 1) % this.oneChapLvlCount;
    var a = o[2 + i + (0 == r ? 0 : o[2 + r - 1] + r)];
    return {
      id: r,
      type: n,
      size: 255 & a,
      diff: a >> 8 & 255
    };
  };

  t.prototype.getPuzzleData = function (t, e) {
    for (var o = t ? this.getPracticeData() : this.data, n = o[1], i = t && e ? e - 1 : (_pInfo["default"].ins.getPuzzleLvl() - 1) % this.oneChapLvlCount, r = 0 == i ? 0 : o[2 + i - 1] + i, a = o[2 + i] + i, s = o[2 + n + r], c = Math.pow(255 & s, 2), l = 2 + n + a + 1, u = [], d = 0, h = 2 + n + r + 1; h < l; h++) {
      for (var f = o[h], g = 0; g < 32; g++) {
        var y = 1 << g & 4294967295;
        if (u[d++] = (f & y) == y ? 1 : 0, d == c) break;
      }

      if (d == c) break;
    }

    return u;
  };

  Object.defineProperty(t.prototype, "levelBundle", {
    get: function get() {
      return this.bundle;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.getJigsawIcon = function (t, e) {
    var o = this;
    void 0 === e && (e = this.bundleName);
    return new Promise(function (n, i) {
      e > "118" ? cc.assetManager.loadRemote(_global.OssConfig.chapterUrl + (e + "/") + t + ".jpg", cc.SpriteFrame, function (t, e) {
        t ? i() : (e.packable = !1, n(new cc.SpriteFrame(e)));
      }) : o.getchapterBunder().then(function (o) {
        o.load(e + "/" + t, cc.SpriteFrame, function (t, e) {
          t ? i() : n(e);
        });
      })["catch"](function (t) {
        console.error("getchapterBunderErr", t);
      });
    });
  };

  t.prototype.releaseJigsawIcon = function (t, e) {
    if (void 0 === e && (e = this.bundleName), !(e > "118")) {
      var o = cc.assetManager.getBundle("chapter");

      if (o) {
        var n = o.get(e + "/" + t, cc.SpriteFrame);
        n && cc.assetManager.releaseAsset(n);
      }
    }
  };

  t.prototype.updateJigsaw = function (t) {
    setTimeout(function () {
      _evts["default"].opE.emit({
        action: _evts["default"].UPDJIGSAW
      });
    }, t);
  };

  t.prototype.updJigAndPop = function (t) {
    setTimeout(function () {
      _evts["default"].opE.emit({
        action: _evts["default"].FINISH_PUZZLELV
      });
    }, t);
  };

  t.prototype.popFestival = function (t) {
    setTimeout(function () {
      _evts["default"].opE.emit({
        action: _evts["default"].POP_FESTIVAL
      });
    }, t);
  };

  t.prototype.getchapterBunder = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t;
      return __generator(this, function (e) {
        switch (e.label) {
          case 0:
            return (t = cc.assetManager.getBundle("chapter")) ? [3, 2] : [4, new Promise(function (t, e) {
              cc.assetManager.loadBundle("chapter", function (o, n) {
                o ? e() : t(n);
              });
            })];

          case 1:
            return [2, e.sent()];

          case 2:
            return [2, t];
        }
      });
    });
  };

  t.prototype.getLevelCost = function () {
    var t = e.ins.getPuzzleDiff();
    var o = _cfgMgr["default"].serverCfg.difficulty_rules.rules;
    var n = 10;
    var i = 1;

    for (var r in o) {
      var a = o[r];
      if (n = Number(a.times_val), i === t) break;
      i++;
    }

    return n;
  };

  t.prototype.getLevelDiffStr = function () {
    var t = e.ins.getPuzzleDiff();
    var o = _cfgMgr["default"].serverCfg.difficulty_rules.rules;
    var n = "入门难度";
    var i = 1;

    for (var r in o) {
      if (n = o[r].title, i === t) break;
      i++;
    }

    return n.slice(0, -2);
  };

  return e = __decorate([h], t);
}());
exports["default"] = f;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcbGV2ZWxNZ3IuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfZXZ0cyIsInJlcXVpcmUiLCJfcmVzIiwiX3VEYXRhIiwiX2NmZ01nciIsIl9nbG9iYWwiLCJfcEluZm8iLCJkIiwiY2MiLCJfZGVjb3JhdG9yIiwiaCIsImNjY2xhc3MiLCJmIiwicHJvcGVydHkiLCJ0IiwiX2JnSWQiLCJvbmVDaGFwTHZsQ291bnQiLCJlIiwiZ2V0IiwiX2lucyIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJwcm90b3R5cGUiLCJnZXRCZ0lkIiwiaW5pdCIsIlByb21pc2UiLCJhbGwiLCJ1cGRhdGVEYXRhIiwidXBkYXRlUHJhY3RpY2VEYXRhIiwiaW5zIiwiZ2V0UHV6emxlTHZsIiwibyIsIk1hdGgiLCJjZWlsIiwiYnVuZGxlSWQiLCJidW5kbGUiLCJyZWxlYXNlQWxsIiwiX3NldExvY2FsQW5kQ2xvdWREYXRhIiwibiIsImZsb29yIiwiaXNOYU4iLCJhc3NldE1hbmFnZXIiLCJsb2FkQnVuZGxlIiwicGFkU2NhbGUiLCJsb2FkIiwiU3ByaXRlRnJhbWUiLCJpIiwiYnVuZGxlTmFtZSIsInIiLCJCdWZmZXJBc3NldCIsImRhdGEiLCJVaW50MzJBcnJheSIsIl9idWZmZXIiLCJsb2FkUmVtb3RlIiwiT3NzQ29uZmlnIiwibGV2ZWxVcmwiLCJhIiwicHJhY3RpY2VEYXRhIiwidXBkYXRlVG1wRGF0YSIsInRtcEJ1bmRsZUlkIiwidG1wQnVuZGxlTmFtZSIsInRtcEJ1bmRsZSIsInRtcERhdGEiLCJnZXRQcmFjdGljZURhdGEiLCJnZXRCdW5kbGVCeVN0cmluZyIsInRoZW4iLCJjb25zb2xlIiwiZXJyb3IiLCJnZXRQcmFjdGljZUlkIiwicHJhY3RpY2VJZCIsImdldFB1enpsZUx2bENvdW50IiwiY2xlYXJQcmNpdGNlSWQiLCJnZXRQdXp6bGVTcHJGcmFtZSIsImdldFByYWNpdGNlU3ByZkZyYW1lIiwiZ2V0UHV6emxlRGlmZiIsImdldFB1enpsZUluZm8iLCJkaWZmIiwiaWQiLCJ0eXBlIiwic2l6ZSIsImdldFB1enpsZURhdGEiLCJzIiwiYyIsInBvdyIsImwiLCJ1IiwiZyIsInkiLCJnZXRKaWdzYXdJY29uIiwiY2hhcHRlclVybCIsInBhY2thYmxlIiwiZ2V0Y2hhcHRlckJ1bmRlciIsInJlbGVhc2VKaWdzYXdJY29uIiwiZ2V0QnVuZGxlIiwicmVsZWFzZUFzc2V0IiwidXBkYXRlSmlnc2F3Iiwic2V0VGltZW91dCIsIm9wRSIsImVtaXQiLCJhY3Rpb24iLCJVUERKSUdTQVciLCJ1cGRKaWdBbmRQb3AiLCJGSU5JU0hfUFVaWkxFTFYiLCJwb3BGZXN0aXZhbCIsIlBPUF9GRVNUSVZBTCIsIl9fYXdhaXRlciIsIl9fZ2VuZXJhdG9yIiwibGFiZWwiLCJzZW50IiwiZ2V0TGV2ZWxDb3N0Iiwic2VydmVyQ2ZnIiwiZGlmZmljdWx0eV9ydWxlcyIsInJ1bGVzIiwiTnVtYmVyIiwidGltZXNfdmFsIiwiZ2V0TGV2ZWxEaWZmU3RyIiwidGl0bGUiLCJzbGljZSIsIl9fZGVjb3JhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQW5COztBQUNBLElBQUlDLElBQUksR0FBR0QsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUUsTUFBTSxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFwQjs7QUFDQSxJQUFJRyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlJLE9BQU8sR0FBR0osT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBSUssTUFBTSxHQUFHTCxPQUFPLENBQUMsT0FBRCxDQUFwQjs7QUFDQSxJQUFJTSxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsSUFBSUMsQ0FBQyxJQUNBTCxDQUFDLENBQUNNLFFBQUYsRUFDQSxZQUFZO0VBQ1QsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsS0FBS0MsS0FBTCxHQUFhLENBQWI7SUFDQSxLQUFLQyxlQUFMLEdBQXVCLEVBQXZCO0VBQ0g7O0VBQ0QsSUFBSUMsQ0FBSjtFQUNBQSxDQUFDLEdBQUdILENBQUo7RUFDQWxCLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQmlCLENBQXRCLEVBQXlCLEtBQXpCLEVBQWdDO0lBQzVCSSxHQUFHLEVBQUUsZUFBWTtNQUNiLE9BQU8sS0FBS0MsSUFBTCxLQUFjLEtBQUtBLElBQUwsR0FBWSxJQUFJRixDQUFKLEVBQTFCLENBQVA7SUFDSCxDQUgyQjtJQUk1QkcsVUFBVSxFQUFFLENBQUMsQ0FKZTtJQUs1QkMsWUFBWSxFQUFFLENBQUM7RUFMYSxDQUFoQzs7RUFPQVAsQ0FBQyxDQUFDUSxTQUFGLENBQVlDLE9BQVosR0FBc0IsWUFBWTtJQUM5QixPQUFPLENBQVA7RUFDSCxDQUZEOztFQUdBVCxDQUFDLENBQUNRLFNBQUYsQ0FBWUUsSUFBWixHQUFtQixZQUFZO0lBQzNCLE9BQU9DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLENBQUMsS0FBS0MsVUFBTCxFQUFELEVBQW9CLEtBQUtDLGtCQUFMLEVBQXBCLENBQVosQ0FBUDtFQUNILENBRkQ7O0VBR0FkLENBQUMsQ0FBQ1EsU0FBRixDQUFZSyxVQUFaLEdBQXlCLFlBQVk7SUFDakMsSUFBSWIsQ0FBQyxHQUFHLElBQVI7O0lBQ0EsSUFBSUcsQ0FBQyxHQUFHWCxNQUFNLFdBQU4sQ0FBZXVCLEdBQWYsQ0FBbUJDLFlBQW5CLEVBQVI7O0lBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxJQUFJLENBQUNDLElBQUwsQ0FBVWhCLENBQUMsR0FBRyxLQUFLRCxlQUFuQixDQUFSOztJQUNBLElBQUllLENBQUMsSUFBSSxLQUFLRyxRQUFkLEVBQXdCO01BQ3BCLEtBQUtBLFFBQUwsR0FBZ0JILENBQWhCO01BQ0EsS0FBS0ksTUFBTCxLQUFnQixLQUFLQSxNQUFMLENBQVlDLFVBQVosSUFBMEJqQyxNQUFNLFdBQU4sQ0FBZTBCLEdBQWYsQ0FBbUJRLHFCQUFuQixFQUExQztNQUNBLElBQUlDLENBQUMsR0FBR04sSUFBSSxDQUFDTyxLQUFMLENBQVksQ0FBQ3RCLENBQUMsR0FBRyxDQUFMLElBQVUsRUFBWCxHQUFpQixDQUE1QixDQUFSO01BQ0EsQ0FBQ3VCLEtBQUssQ0FBQ0YsQ0FBRCxDQUFMLElBQVlBLENBQUMsR0FBRyxDQUFoQixJQUFxQkEsQ0FBQyxHQUFHLENBQTFCLE1BQWlDQSxDQUFDLEdBQUcsQ0FBckM7TUFDQSxLQUFLdkIsS0FBTCxHQUFhdUIsQ0FBYjtNQUNBOUIsRUFBRSxDQUFDaUMsWUFBSCxDQUFnQkMsVUFBaEIsQ0FBMkIsUUFBM0IsRUFBcUMsVUFBVTVCLENBQVYsRUFBYUcsQ0FBYixFQUFnQjtRQUNqRCxJQUFJYyxDQUFDLEdBQUcxQixPQUFPLFdBQVAsQ0FBZ0JzQyxRQUFoQixHQUEyQixPQUEzQixHQUFxQyxFQUE3QztRQUNBLENBQUM3QixDQUFELElBQU1HLENBQUMsQ0FBQzJCLElBQUYsQ0FBTyxzQkFBc0JiLENBQXRCLEdBQTBCLElBQTFCLEdBQWlDTyxDQUF4QyxFQUEyQzlCLEVBQUUsQ0FBQ3FDLFdBQTlDLENBQU47TUFDSCxDQUhEO01BSUEsSUFBSUMsQ0FBQyxHQUFJLEtBQUtDLFVBQUwsR0FBa0IsTUFBTSxLQUFLYixRQUFYLEdBQXNCLEVBQWpEO01BQ0EsT0FBTyxJQUFJVCxPQUFKLENBQVksVUFBVVIsQ0FBVixFQUFhcUIsQ0FBYixFQUFnQjtRQUMvQixJQUFJVSxDQUFDLEdBQUcsU0FBSkEsQ0FBSSxHQUFZO1VBQ2hCeEMsRUFBRSxDQUFDaUMsWUFBSCxDQUFnQkMsVUFBaEIsQ0FBMkJJLENBQTNCLEVBQThCLFVBQVVmLENBQVYsRUFBYWUsQ0FBYixFQUFnQjtZQUMxQ2YsQ0FBQyxHQUNLTyxDQUFDLEVBRE4sSUFFT3hCLENBQUMsQ0FBQ3FCLE1BQUYsR0FBV1csQ0FBWixFQUNEQSxDQUFDLENBQUNGLElBQUYsQ0FBTyxNQUFQLEVBQWVwQyxFQUFFLENBQUN5QyxXQUFsQixFQUErQixVQUFVbEIsQ0FBVixFQUFhZSxDQUFiLEVBQWdCO2NBQzNDZixDQUFDLElBQUlPLENBQUMsRUFBTjtjQUNBeEIsQ0FBQyxDQUFDb0MsSUFBRixHQUFTLElBQUlDLFdBQUosQ0FBZ0JMLENBQUMsQ0FBQ00sT0FBbEIsQ0FBVDtjQUNBbkMsQ0FBQyxDQUFDLENBQUQsQ0FBRDtZQUNILENBSkQsQ0FITCxDQUFEO1VBUUgsQ0FURDtRQVVILENBWEQ7O1FBWUFjLENBQUMsR0FBRyxFQUFKLEdBQ012QixFQUFFLENBQUNpQyxZQUFILENBQWdCWSxVQUFoQixDQUNJaEQsT0FBTyxDQUFDaUQsU0FBUixDQUFrQkMsUUFBbEIsR0FBNkJULENBQTdCLEdBQWlDLFdBRHJDLEVBRUl0QyxFQUFFLENBQUN5QyxXQUZQLEVBR0ksVUFBVVgsQ0FBVixFQUFha0IsQ0FBYixFQUFnQjtVQUNabEIsQ0FBQyxHQUNLeEIsQ0FBQyxDQUFDb0MsSUFBRixLQUFZSixDQUFDLEdBQUcsTUFBTyxDQUFDZixDQUFDLEdBQUcsQ0FBTCxJQUFVLEVBQWpCLEdBQXVCLEVBQTVCLEVBQWlDaUIsQ0FBQyxFQUE3QyxDQURMLElBRU9sQyxDQUFDLENBQUNvQyxJQUFGLEdBQVMsSUFBSUMsV0FBSixDQUFnQkssQ0FBQyxDQUFDSixPQUFsQixDQUFWLEVBQXVDbkMsQ0FBQyxDQUFDLENBQUQsQ0FGOUMsQ0FBRDtRQUdILENBUEwsQ0FETixHQVVNK0IsQ0FBQyxFQVZQO01BV0gsQ0F4Qk0sQ0FBUDtJQXlCSDtFQUNKLENBekNEOztFQTBDQWxDLENBQUMsQ0FBQ1EsU0FBRixDQUFZTSxrQkFBWixHQUFpQyxZQUFZO0lBQ3pDLElBQUlkLENBQUMsR0FBRyxJQUFSO0lBQ0EsT0FBTyxJQUFJVyxPQUFKLENBQVksVUFBVVIsQ0FBVixFQUFhYyxDQUFiLEVBQWdCO01BQy9CdkIsRUFBRSxDQUFDaUMsWUFBSCxDQUFnQkMsVUFBaEIsQ0FBMkIsVUFBM0IsRUFBdUMsVUFBVUosQ0FBVixFQUFhUSxDQUFiLEVBQWdCO1FBQ25EUixDQUFDLEdBQ0tQLENBQUMsRUFETixJQUVNZSxDQUFDLENBQUNGLElBQUYsQ0FBTyxNQUFQLEVBQWVwQyxFQUFFLENBQUN5QyxXQUFsQixFQUErQixVQUFVaEMsQ0FBVixFQUFhcUIsQ0FBYixFQUFnQjtVQUM1Q3JCLENBQUMsSUFBSWMsQ0FBQyxFQUFOO1VBQ0FqQixDQUFDLENBQUMyQyxZQUFGLEdBQWlCLElBQUlOLFdBQUosQ0FBZ0JiLENBQUMsQ0FBQ2MsT0FBbEIsQ0FBakI7UUFDSCxDQUhBLEdBSURuQyxDQUFDLENBQUM2QixDQUFELENBTk4sQ0FBRDtNQU9ILENBUkQ7SUFTSCxDQVZNLENBQVA7RUFXSCxDQWJEOztFQWNBaEMsQ0FBQyxDQUFDUSxTQUFGLENBQVlvQyxhQUFaLEdBQTRCLFVBQVU1QyxDQUFWLEVBQWE7SUFDckMsSUFBSUcsQ0FBQyxHQUFHLElBQVI7SUFDQSxLQUFLMEMsV0FBTCxHQUFtQjdDLENBQW5CO0lBQ0EsSUFBSWlCLENBQUMsR0FBSSxLQUFLNkIsYUFBTCxHQUFxQixNQUFNOUMsQ0FBTixHQUFVLEVBQXhDO0lBQ0EsT0FBTyxJQUFJVyxPQUFKLENBQVksVUFBVWEsQ0FBVixFQUFhUSxDQUFiLEVBQWdCO01BQy9CLElBQUlFLENBQUMsR0FBRyxTQUFKQSxDQUFJLEdBQVk7UUFDaEJ4QyxFQUFFLENBQUNpQyxZQUFILENBQWdCQyxVQUFoQixDQUEyQlgsQ0FBM0IsRUFBOEIsVUFBVWpCLENBQVYsRUFBYWlCLENBQWIsRUFBZ0I7VUFDMUNqQixDQUFDLEdBQ0tnQyxDQUFDLEVBRE4sSUFFTzdCLENBQUMsQ0FBQzRDLFNBQUYsR0FBYzlCLENBQWYsRUFDREEsQ0FBQyxDQUFDYSxJQUFGLENBQU8sTUFBUCxFQUFlcEMsRUFBRSxDQUFDeUMsV0FBbEIsRUFBK0IsVUFBVW5DLENBQVYsRUFBYWlCLENBQWIsRUFBZ0I7WUFDM0NqQixDQUFDLElBQUlnQyxDQUFDLEVBQU47WUFDQTdCLENBQUMsQ0FBQzZDLE9BQUYsR0FBWSxJQUFJWCxXQUFKLENBQWdCcEIsQ0FBQyxDQUFDcUIsT0FBbEIsQ0FBWjtZQUNBZCxDQUFDLENBQUMsQ0FBRCxDQUFEO1VBQ0gsQ0FKRCxDQUhMLENBQUQ7UUFRSCxDQVREO01BVUgsQ0FYRDs7TUFZQXhCLENBQUMsR0FBRyxFQUFKLEdBQ01OLEVBQUUsQ0FBQ2lDLFlBQUgsQ0FBZ0JZLFVBQWhCLENBQ0loRCxPQUFPLENBQUNpRCxTQUFSLENBQWtCQyxRQUFsQixHQUE2QnhCLENBQTdCLEdBQWlDLFdBRHJDLEVBRUl2QixFQUFFLENBQUN5QyxXQUZQLEVBR0ksVUFBVUgsQ0FBVixFQUFhVSxDQUFiLEVBQWdCO1FBQ1pWLENBQUMsR0FDSzdCLENBQUMsQ0FBQzZDLE9BQUYsS0FBZS9CLENBQUMsR0FBRyxNQUFPLENBQUNqQixDQUFDLEdBQUcsQ0FBTCxJQUFVLEVBQWpCLEdBQXVCLEVBQTVCLEVBQWlDa0MsQ0FBQyxFQUFoRCxDQURMLElBRU8vQixDQUFDLENBQUM2QyxPQUFGLEdBQVksSUFBSVgsV0FBSixDQUFnQkssQ0FBQyxDQUFDSixPQUFsQixDQUFiLEVBQTBDZCxDQUFDLENBQUMsQ0FBRCxDQUZqRCxDQUFEO01BR0gsQ0FQTCxDQUROLEdBVU1VLENBQUMsRUFWUDtJQVdILENBeEJNLENBQVA7RUF5QkgsQ0E3QkQ7O0VBOEJBbEMsQ0FBQyxDQUFDUSxTQUFGLENBQVl5QyxlQUFaLEdBQThCLFlBQVk7SUFDdEMsSUFBSWpELENBQUMsR0FBRyxJQUFSO0lBQ0EsS0FBSzJDLFlBQUwsSUFDSXZELElBQUksV0FBSixDQUFhMkIsR0FBYixDQUNLbUMsaUJBREwsQ0FDdUIsVUFEdkIsRUFFS0MsSUFGTCxDQUVVLFVBQVVoRCxDQUFWLEVBQWE7TUFDZixJQUFJYyxDQUFDLEdBQUdkLENBQUMsQ0FBQ0MsR0FBRixDQUFNLE1BQU4sRUFBY1YsRUFBRSxDQUFDeUMsV0FBakIsQ0FBUjtNQUNBbkMsQ0FBQyxDQUFDMkMsWUFBRixHQUFpQixJQUFJTixXQUFKLENBQWdCcEIsQ0FBQyxDQUFDcUIsT0FBbEIsQ0FBakI7SUFDSCxDQUxMLFdBTVcsVUFBVXRDLENBQVYsRUFBYTtNQUNoQm9ELE9BQU8sQ0FBQ0MsS0FBUixDQUFjLHlDQUFkLEVBQXlEckQsQ0FBekQ7SUFDSCxDQVJMLENBREo7SUFVQSxPQUFPLEtBQUsyQyxZQUFaO0VBQ0gsQ0FiRDs7RUFjQTNDLENBQUMsQ0FBQ1EsU0FBRixDQUFZOEMsYUFBWixHQUE0QixZQUFZO0lBQ3BDLEtBQUtDLFVBQUwsSUFDTyxLQUFLQSxVQUFMLElBQW1CLEtBQUtBLFVBQUwsR0FBa0IsS0FBS0MsaUJBQUwsQ0FBdUIsQ0FBQyxDQUF4QixDQUFsQixLQUFpRCxLQUFLRCxVQUFMLEdBQWtCLENBQW5FLENBRDFCLElBRU8sS0FBS0EsVUFBTCxHQUFrQixDQUZ6QjtJQUdBLE9BQU8sS0FBS0EsVUFBWjtFQUNILENBTEQ7O0VBTUF2RCxDQUFDLENBQUNRLFNBQUYsQ0FBWWlELGNBQVosR0FBNkIsWUFBWTtJQUNyQyxLQUFLRixVQUFMLEdBQWtCLElBQWxCO0VBQ0gsQ0FGRDs7RUFHQXZELENBQUMsQ0FBQ1EsU0FBRixDQUFZa0QsaUJBQVosR0FBZ0MsVUFBVTFELENBQVYsRUFBYTtJQUN6QyxJQUFJRyxDQUFDLEdBQUcsSUFBUjtJQUNBLE9BQU8sSUFBSVEsT0FBSixDQUFZLFVBQVVNLENBQVYsRUFBYU8sQ0FBYixFQUFnQjtNQUMvQixJQUFJUSxDQUFDLEdBQUdoQyxDQUFSO01BQ0EsSUFBSWtDLENBQUMsR0FBSSxDQUFDRixDQUFDLEdBQUcsQ0FBTCxJQUFVN0IsQ0FBQyxDQUFDRCxlQUFiLEdBQWdDLENBQWhDLEdBQW9DLEVBQTVDO01BQ0E4QixDQUFDLEdBQUcsR0FBSixHQUNNdEMsRUFBRSxDQUFDaUMsWUFBSCxDQUFnQlksVUFBaEIsQ0FDSWhELE9BQU8sQ0FBQ2lELFNBQVIsQ0FBa0JDLFFBQWxCLElBQThCLE1BQU10QyxDQUFDLENBQUNpQixRQUFSLEdBQW1CLEdBQWpELElBQXdEYyxDQUF4RCxHQUE0RCxNQURoRSxFQUVJeEMsRUFBRSxDQUFDcUMsV0FGUCxFQUdJLFVBQVUvQixDQUFWLEVBQWFHLENBQWIsRUFBZ0I7UUFDWkgsQ0FBQyxHQUFHd0IsQ0FBQyxFQUFKLEdBQVNQLENBQUMsQ0FBQyxJQUFJdkIsRUFBRSxDQUFDcUMsV0FBUCxDQUFtQjVCLENBQW5CLENBQUQsQ0FBWDtNQUNILENBTEwsQ0FETixHQVFNQSxDQUFDLENBQUNrQixNQUFGLENBQVNTLElBQVQsQ0FBY0ksQ0FBZCxFQUFpQnhDLEVBQUUsQ0FBQ3FDLFdBQXBCLEVBQWlDLFVBQVUvQixDQUFWLEVBQWFHLENBQWIsRUFBZ0I7UUFDN0NILENBQUMsR0FBR3dCLENBQUMsRUFBSixHQUFTUCxDQUFDLENBQUNkLENBQUQsQ0FBWDtNQUNILENBRkQsQ0FSTjtJQVdILENBZE0sQ0FBUDtFQWVILENBakJEOztFQWtCQUgsQ0FBQyxDQUFDUSxTQUFGLENBQVltRCxvQkFBWixHQUFtQyxVQUFVM0QsQ0FBVixFQUFhO0lBQzVDLE9BQU8sSUFBSVcsT0FBSixDQUFZLFVBQVVSLENBQVYsRUFBYWMsQ0FBYixFQUFnQjtNQUMvQjdCLElBQUksV0FBSixDQUFhMkIsR0FBYixDQUNLbUMsaUJBREwsQ0FDdUIsVUFEdkIsRUFFS0MsSUFGTCxDQUVVLFVBQVUzQixDQUFWLEVBQWE7UUFDZkEsQ0FBQyxDQUFDTSxJQUFGLENBQU85QixDQUFDLEdBQUcsRUFBWCxFQUFlTixFQUFFLENBQUNxQyxXQUFsQixFQUErQixVQUFVL0IsQ0FBVixFQUFhd0IsQ0FBYixFQUFnQjtVQUMzQ3hCLENBQUMsR0FBR2lCLENBQUMsRUFBSixHQUFTZCxDQUFDLENBQUNxQixDQUFELENBQVg7UUFDSCxDQUZEO01BR0gsQ0FOTCxXQU9XLFVBQVV4QixDQUFWLEVBQWE7UUFDaEJvRCxPQUFPLENBQUNDLEtBQVIsQ0FBYyx1Q0FBZCxFQUF1RHJELENBQXZEO01BQ0gsQ0FUTDtJQVVILENBWE0sQ0FBUDtFQVlILENBYkQ7O0VBY0FBLENBQUMsQ0FBQ1EsU0FBRixDQUFZb0QsYUFBWixHQUE0QixZQUFZO0lBQ3BDLE9BQU8sS0FBS0MsYUFBTCxHQUFxQkMsSUFBNUI7RUFDSCxDQUZEOztFQUdBOUQsQ0FBQyxDQUFDUSxTQUFGLENBQVlnRCxpQkFBWixHQUFnQyxVQUFVeEQsQ0FBVixFQUFhO0lBQ3pDLE9BQU9BLENBQUMsR0FBRyxLQUFLaUQsZUFBTCxHQUF1QixDQUF2QixDQUFILEdBQStCLEtBQUsvQyxlQUE1QztFQUNILENBRkQ7O0VBR0FGLENBQUMsQ0FBQ1EsU0FBRixDQUFZcUQsYUFBWixHQUE0QixVQUFVN0QsQ0FBVixFQUFhRyxDQUFiLEVBQWdCO0lBQ3hDLElBQUljLENBQUMsR0FBR2pCLENBQUMsR0FBRyxLQUFLaUQsZUFBTCxFQUFILEdBQTRCLEtBQUtiLElBQTFDO0lBQ0EsSUFBSVosQ0FBQyxHQUFHUCxDQUFDLENBQUMsQ0FBRCxDQUFUO0lBQ0EsSUFBSWUsQ0FBQyxHQUFHZixDQUFDLENBQUMsQ0FBRCxDQUFUO0lBQ0EsSUFBSWlCLENBQUMsR0FBR2xDLENBQUMsSUFBSUcsQ0FBTCxHQUFTQSxDQUFDLEdBQUcsQ0FBYixHQUFpQixDQUFDWCxNQUFNLFdBQU4sQ0FBZXVCLEdBQWYsQ0FBbUJDLFlBQW5CLEtBQW9DLENBQXJDLElBQTBDLEtBQUtkLGVBQXhFO0lBQ0EsSUFBSXdDLENBQUMsR0FBR3pCLENBQUMsQ0FBQyxJQUFJZSxDQUFKLElBQVMsS0FBS0UsQ0FBTCxHQUFTLENBQVQsR0FBYWpCLENBQUMsQ0FBQyxJQUFJaUIsQ0FBSixHQUFRLENBQVQsQ0FBRCxHQUFlQSxDQUFyQyxDQUFELENBQVQ7SUFDQSxPQUFPO01BQUM2QixFQUFFLEVBQUU3QixDQUFMO01BQVE4QixJQUFJLEVBQUV4QyxDQUFkO01BQWlCeUMsSUFBSSxFQUFFLE1BQU12QixDQUE3QjtNQUFnQ29CLElBQUksRUFBR3BCLENBQUMsSUFBSSxDQUFOLEdBQVc7SUFBakQsQ0FBUDtFQUNILENBUEQ7O0VBUUExQyxDQUFDLENBQUNRLFNBQUYsQ0FBWTBELGFBQVosR0FBNEIsVUFBVWxFLENBQVYsRUFBYUcsQ0FBYixFQUFnQjtJQUN4QyxLQUNJLElBQUljLENBQUMsR0FBR2pCLENBQUMsR0FBRyxLQUFLaUQsZUFBTCxFQUFILEdBQTRCLEtBQUtiLElBQTFDLEVBQ0laLENBQUMsR0FBR1AsQ0FBQyxDQUFDLENBQUQsQ0FEVCxFQUVJZSxDQUFDLEdBQUdoQyxDQUFDLElBQUlHLENBQUwsR0FBU0EsQ0FBQyxHQUFHLENBQWIsR0FBaUIsQ0FBQ1gsTUFBTSxXQUFOLENBQWV1QixHQUFmLENBQW1CQyxZQUFuQixLQUFvQyxDQUFyQyxJQUEwQyxLQUFLZCxlQUZ4RSxFQUdJZ0MsQ0FBQyxHQUFHLEtBQUtGLENBQUwsR0FBUyxDQUFULEdBQWFmLENBQUMsQ0FBQyxJQUFJZSxDQUFKLEdBQVEsQ0FBVCxDQUFELEdBQWVBLENBSHBDLEVBSUlVLENBQUMsR0FBR3pCLENBQUMsQ0FBQyxJQUFJZSxDQUFMLENBQUQsR0FBV0EsQ0FKbkIsRUFLSW1DLENBQUMsR0FBR2xELENBQUMsQ0FBQyxJQUFJTyxDQUFKLEdBQVFVLENBQVQsQ0FMVCxFQU1Ja0MsQ0FBQyxHQUFHbEQsSUFBSSxDQUFDbUQsR0FBTCxDQUFTLE1BQU1GLENBQWYsRUFBa0IsQ0FBbEIsQ0FOUixFQU9JRyxDQUFDLEdBQUcsSUFBSTlDLENBQUosR0FBUWtCLENBQVIsR0FBWSxDQVBwQixFQVFJNkIsQ0FBQyxHQUFHLEVBUlIsRUFTSTlFLENBQUMsR0FBRyxDQVRSLEVBVUlHLENBQUMsR0FBRyxJQUFJNEIsQ0FBSixHQUFRVSxDQUFSLEdBQVksQ0FYeEIsRUFZSXRDLENBQUMsR0FBRzBFLENBWlIsRUFhSTFFLENBQUMsRUFiTCxFQWNFO01BQ0UsS0FBSyxJQUFJRSxDQUFDLEdBQUdtQixDQUFDLENBQUNyQixDQUFELENBQVQsRUFBYzRFLENBQUMsR0FBRyxDQUF2QixFQUEwQkEsQ0FBQyxHQUFHLEVBQTlCLEVBQWtDQSxDQUFDLEVBQW5DLEVBQXVDO1FBQ25DLElBQUlDLENBQUMsR0FBSSxLQUFLRCxDQUFOLEdBQVcsVUFBbkI7UUFDQSxJQUFNRCxDQUFDLENBQUM5RSxDQUFDLEVBQUYsQ0FBRCxHQUFTLENBQUNLLENBQUMsR0FBRzJFLENBQUwsS0FBV0EsQ0FBWCxHQUFlLENBQWYsR0FBbUIsQ0FBN0IsRUFBaUNoRixDQUFDLElBQUkyRSxDQUEzQyxFQUErQztNQUNsRDs7TUFDRCxJQUFJM0UsQ0FBQyxJQUFJMkUsQ0FBVCxFQUFZO0lBQ2Y7O0lBQ0QsT0FBT0csQ0FBUDtFQUNILENBdkJEOztFQXdCQXpGLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQmlCLENBQUMsQ0FBQ1EsU0FBeEIsRUFBbUMsYUFBbkMsRUFBa0Q7SUFDOUNKLEdBQUcsRUFBRSxlQUFZO01BQ2IsT0FBTyxLQUFLaUIsTUFBWjtJQUNILENBSDZDO0lBSTlDZixVQUFVLEVBQUUsQ0FBQyxDQUppQztJQUs5Q0MsWUFBWSxFQUFFLENBQUM7RUFMK0IsQ0FBbEQ7O0VBT0FQLENBQUMsQ0FBQ1EsU0FBRixDQUFZa0UsYUFBWixHQUE0QixVQUFVMUUsQ0FBVixFQUFhRyxDQUFiLEVBQWdCO0lBQ3hDLElBQUljLENBQUMsR0FBRyxJQUFSO0lBQ0EsS0FBSyxDQUFMLEtBQVdkLENBQVgsS0FBaUJBLENBQUMsR0FBRyxLQUFLOEIsVUFBMUI7SUFDQSxPQUFPLElBQUl0QixPQUFKLENBQVksVUFBVWEsQ0FBVixFQUFhUSxDQUFiLEVBQWdCO01BQy9CN0IsQ0FBQyxHQUFHLEtBQUosR0FDTVQsRUFBRSxDQUFDaUMsWUFBSCxDQUFnQlksVUFBaEIsQ0FDSWhELE9BQU8sQ0FBQ2lELFNBQVIsQ0FBa0JtQyxVQUFsQixJQUFnQ3hFLENBQUMsR0FBRyxHQUFwQyxJQUEyQ0gsQ0FBM0MsR0FBK0MsTUFEbkQsRUFFSU4sRUFBRSxDQUFDcUMsV0FGUCxFQUdJLFVBQVUvQixDQUFWLEVBQWFHLENBQWIsRUFBZ0I7UUFDWkgsQ0FBQyxHQUFHZ0MsQ0FBQyxFQUFKLElBQVc3QixDQUFDLENBQUN5RSxRQUFGLEdBQWEsQ0FBQyxDQUFmLEVBQW1CcEQsQ0FBQyxDQUFDLElBQUk5QixFQUFFLENBQUNxQyxXQUFQLENBQW1CNUIsQ0FBbkIsQ0FBRCxDQUE5QixDQUFEO01BQ0gsQ0FMTCxDQUROLEdBUU1jLENBQUMsQ0FDSTRELGdCQURMLEdBRUsxQixJQUZMLENBRVUsVUFBVWxDLENBQVYsRUFBYTtRQUNmQSxDQUFDLENBQUNhLElBQUYsQ0FBTzNCLENBQUMsR0FBRyxHQUFKLEdBQVVILENBQWpCLEVBQW9CTixFQUFFLENBQUNxQyxXQUF2QixFQUFvQyxVQUFVL0IsQ0FBVixFQUFhRyxDQUFiLEVBQWdCO1VBQ2hESCxDQUFDLEdBQUdnQyxDQUFDLEVBQUosR0FBU1IsQ0FBQyxDQUFDckIsQ0FBRCxDQUFYO1FBQ0gsQ0FGRDtNQUdILENBTkwsV0FPVyxVQUFVSCxDQUFWLEVBQWE7UUFDaEJvRCxPQUFPLENBQUNDLEtBQVIsQ0FBYyxxQkFBZCxFQUFxQ3JELENBQXJDO01BQ0gsQ0FUTCxDQVJOO0lBa0JILENBbkJNLENBQVA7RUFvQkgsQ0F2QkQ7O0VBd0JBQSxDQUFDLENBQUNRLFNBQUYsQ0FBWXNFLGlCQUFaLEdBQWdDLFVBQVU5RSxDQUFWLEVBQWFHLENBQWIsRUFBZ0I7SUFDNUMsSUFBSyxLQUFLLENBQUwsS0FBV0EsQ0FBWCxLQUFpQkEsQ0FBQyxHQUFHLEtBQUs4QixVQUExQixHQUF1QyxFQUFFOUIsQ0FBQyxHQUFHLEtBQU4sQ0FBNUMsRUFBMkQ7TUFDdkQsSUFBSWMsQ0FBQyxHQUFHdkIsRUFBRSxDQUFDaUMsWUFBSCxDQUFnQm9ELFNBQWhCLENBQTBCLFNBQTFCLENBQVI7O01BQ0EsSUFBSTlELENBQUosRUFBTztRQUNILElBQUlPLENBQUMsR0FBR1AsQ0FBQyxDQUFDYixHQUFGLENBQU1ELENBQUMsR0FBRyxHQUFKLEdBQVVILENBQWhCLEVBQW1CTixFQUFFLENBQUNxQyxXQUF0QixDQUFSO1FBQ0FQLENBQUMsSUFBSTlCLEVBQUUsQ0FBQ2lDLFlBQUgsQ0FBZ0JxRCxZQUFoQixDQUE2QnhELENBQTdCLENBQUw7TUFDSDtJQUNKO0VBQ0osQ0FSRDs7RUFTQXhCLENBQUMsQ0FBQ1EsU0FBRixDQUFZeUUsWUFBWixHQUEyQixVQUFVakYsQ0FBVixFQUFhO0lBQ3BDa0YsVUFBVSxDQUFDLFlBQVk7TUFDbkJoRyxLQUFLLFdBQUwsQ0FBY2lHLEdBQWQsQ0FBa0JDLElBQWxCLENBQXVCO1FBQUNDLE1BQU0sRUFBRW5HLEtBQUssV0FBTCxDQUFjb0c7TUFBdkIsQ0FBdkI7SUFDSCxDQUZTLEVBRVB0RixDQUZPLENBQVY7RUFHSCxDQUpEOztFQUtBQSxDQUFDLENBQUNRLFNBQUYsQ0FBWStFLFlBQVosR0FBMkIsVUFBVXZGLENBQVYsRUFBYTtJQUNwQ2tGLFVBQVUsQ0FBQyxZQUFZO01BQ25CaEcsS0FBSyxXQUFMLENBQWNpRyxHQUFkLENBQWtCQyxJQUFsQixDQUF1QjtRQUFDQyxNQUFNLEVBQUVuRyxLQUFLLFdBQUwsQ0FBY3NHO01BQXZCLENBQXZCO0lBQ0gsQ0FGUyxFQUVQeEYsQ0FGTyxDQUFWO0VBR0gsQ0FKRDs7RUFLQUEsQ0FBQyxDQUFDUSxTQUFGLENBQVlpRixXQUFaLEdBQTBCLFVBQVV6RixDQUFWLEVBQWE7SUFDbkNrRixVQUFVLENBQUMsWUFBWTtNQUNuQmhHLEtBQUssV0FBTCxDQUFjaUcsR0FBZCxDQUFrQkMsSUFBbEIsQ0FBdUI7UUFBQ0MsTUFBTSxFQUFFbkcsS0FBSyxXQUFMLENBQWN3RztNQUF2QixDQUF2QjtJQUNILENBRlMsRUFFUDFGLENBRk8sQ0FBVjtFQUdILENBSkQ7O0VBS0FBLENBQUMsQ0FBQ1EsU0FBRixDQUFZcUUsZ0JBQVosR0FBK0IsWUFBWTtJQUN2QyxPQUFPYyxTQUFTLENBQUMsSUFBRCxFQUFPLEtBQUssQ0FBWixFQUFlLEtBQUssQ0FBcEIsRUFBdUIsWUFBWTtNQUMvQyxJQUFJM0YsQ0FBSjtNQUNBLE9BQU80RixXQUFXLENBQUMsSUFBRCxFQUFPLFVBQVV6RixDQUFWLEVBQWE7UUFDbEMsUUFBUUEsQ0FBQyxDQUFDMEYsS0FBVjtVQUNJLEtBQUssQ0FBTDtZQUNJLE9BQU8sQ0FBQzdGLENBQUMsR0FBR04sRUFBRSxDQUFDaUMsWUFBSCxDQUFnQm9ELFNBQWhCLENBQTBCLFNBQTFCLENBQUwsSUFDRCxDQUFDLENBQUQsRUFBSSxDQUFKLENBREMsR0FFRCxDQUNJLENBREosRUFFSSxJQUFJcEUsT0FBSixDQUFZLFVBQVVYLENBQVYsRUFBYUcsQ0FBYixFQUFnQjtjQUN4QlQsRUFBRSxDQUFDaUMsWUFBSCxDQUFnQkMsVUFBaEIsQ0FBMkIsU0FBM0IsRUFBc0MsVUFBVVgsQ0FBVixFQUFhTyxDQUFiLEVBQWdCO2dCQUNsRFAsQ0FBQyxHQUFHZCxDQUFDLEVBQUosR0FBU0gsQ0FBQyxDQUFDd0IsQ0FBRCxDQUFYO2NBQ0gsQ0FGRDtZQUdILENBSkQsQ0FGSixDQUZOOztVQVVKLEtBQUssQ0FBTDtZQUNJLE9BQU8sQ0FBQyxDQUFELEVBQUlyQixDQUFDLENBQUMyRixJQUFGLEVBQUosQ0FBUDs7VUFDSixLQUFLLENBQUw7WUFDSSxPQUFPLENBQUMsQ0FBRCxFQUFJOUYsQ0FBSixDQUFQO1FBZlI7TUFpQkgsQ0FsQmlCLENBQWxCO0lBbUJILENBckJlLENBQWhCO0VBc0JILENBdkJEOztFQXdCQUEsQ0FBQyxDQUFDUSxTQUFGLENBQVl1RixZQUFaLEdBQTJCLFlBQVk7SUFDbkMsSUFBSS9GLENBQUMsR0FBR0csQ0FBQyxDQUFDWSxHQUFGLENBQU02QyxhQUFOLEVBQVI7SUFDQSxJQUFJM0MsQ0FBQyxHQUFHM0IsT0FBTyxXQUFQLENBQWdCMEcsU0FBaEIsQ0FBMEJDLGdCQUExQixDQUEyQ0MsS0FBbkQ7SUFDQSxJQUFJMUUsQ0FBQyxHQUFHLEVBQVI7SUFDQSxJQUFJUSxDQUFDLEdBQUcsQ0FBUjs7SUFDQSxLQUFLLElBQUlFLENBQVQsSUFBY2pCLENBQWQsRUFBaUI7TUFDYixJQUFJeUIsQ0FBQyxHQUFHekIsQ0FBQyxDQUFDaUIsQ0FBRCxDQUFUO01BQ0EsSUFBTVYsQ0FBQyxHQUFHMkUsTUFBTSxDQUFDekQsQ0FBQyxDQUFDMEQsU0FBSCxDQUFYLEVBQTJCcEUsQ0FBQyxLQUFLaEMsQ0FBdEMsRUFBMEM7TUFDMUNnQyxDQUFDO0lBQ0o7O0lBQ0QsT0FBT1IsQ0FBUDtFQUNILENBWEQ7O0VBWUF4QixDQUFDLENBQUNRLFNBQUYsQ0FBWTZGLGVBQVosR0FBOEIsWUFBWTtJQUN0QyxJQUFJckcsQ0FBQyxHQUFHRyxDQUFDLENBQUNZLEdBQUYsQ0FBTTZDLGFBQU4sRUFBUjtJQUNBLElBQUkzQyxDQUFDLEdBQUczQixPQUFPLFdBQVAsQ0FBZ0IwRyxTQUFoQixDQUEwQkMsZ0JBQTFCLENBQTJDQyxLQUFuRDtJQUNBLElBQUkxRSxDQUFDLEdBQUcsTUFBUjtJQUNBLElBQUlRLENBQUMsR0FBRyxDQUFSOztJQUNBLEtBQUssSUFBSUUsQ0FBVCxJQUFjakIsQ0FBZCxFQUFpQjtNQUNiLElBQU1PLENBQUMsR0FBR1AsQ0FBQyxDQUFDaUIsQ0FBRCxDQUFELENBQUtvRSxLQUFWLEVBQWtCdEUsQ0FBQyxLQUFLaEMsQ0FBN0IsRUFBaUM7TUFDakNnQyxDQUFDO0lBQ0o7O0lBQ0QsT0FBT1IsQ0FBQyxDQUFDK0UsS0FBRixDQUFRLENBQVIsRUFBVyxDQUFDLENBQVosQ0FBUDtFQUNILENBVkQ7O0VBV0EsT0FBUXBHLENBQUMsR0FBR3FHLFVBQVUsQ0FBQyxDQUFDNUcsQ0FBRCxDQUFELEVBQU1JLENBQU4sQ0FBdEI7QUFDSCxDQTlTRCxFQUZDLENBQUw7QUFpVEFoQixPQUFPLFdBQVAsR0FBa0JjLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfZXZ0cyA9IHJlcXVpcmUoXCJldnRzXCIpO1xudmFyIF9yZXMgPSByZXF1aXJlKFwicmVzXCIpO1xudmFyIF91RGF0YSA9IHJlcXVpcmUoXCJ1RGF0YVwiKTtcbnZhciBfY2ZnTWdyID0gcmVxdWlyZShcImNmZ01nclwiKTtcbnZhciBfZ2xvYmFsID0gcmVxdWlyZShcImdsb2JhbFwiKTtcbnZhciBfcEluZm8gPSByZXF1aXJlKFwicEluZm9cIik7XG52YXIgZCA9IGNjLl9kZWNvcmF0b3I7XG52YXIgaCA9IGQuY2NjbGFzcztcbnZhciBmID1cbiAgICAoZC5wcm9wZXJ0eSxcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICBmdW5jdGlvbiB0KCkge1xuICAgICAgICAgICAgdGhpcy5fYmdJZCA9IDA7XG4gICAgICAgICAgICB0aGlzLm9uZUNoYXBMdmxDb3VudCA9IDU0O1xuICAgICAgICB9XG4gICAgICAgIHZhciBlO1xuICAgICAgICBlID0gdDtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwiaW5zXCIsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9pbnMgfHwgKHRoaXMuX2lucyA9IG5ldyBlKCkpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVudW1lcmFibGU6ICExLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiAhMFxuICAgICAgICB9KTtcbiAgICAgICAgdC5wcm90b3R5cGUuZ2V0QmdJZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9O1xuICAgICAgICB0LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLnVwZGF0ZURhdGEoKSwgdGhpcy51cGRhdGVQcmFjdGljZURhdGEoKV0pO1xuICAgICAgICB9O1xuICAgICAgICB0LnByb3RvdHlwZS51cGRhdGVEYXRhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgICAgICAgdmFyIGUgPSBfcEluZm8uZGVmYXVsdC5pbnMuZ2V0UHV6emxlTHZsKCk7XG4gICAgICAgICAgICB2YXIgbyA9IE1hdGguY2VpbChlIC8gdGhpcy5vbmVDaGFwTHZsQ291bnQpO1xuICAgICAgICAgICAgaWYgKG8gIT0gdGhpcy5idW5kbGVJZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYnVuZGxlSWQgPSBvO1xuICAgICAgICAgICAgICAgIHRoaXMuYnVuZGxlICYmICh0aGlzLmJ1bmRsZS5yZWxlYXNlQWxsKCksIF91RGF0YS5kZWZhdWx0Lmlucy5fc2V0TG9jYWxBbmRDbG91ZERhdGEoKSk7XG4gICAgICAgICAgICAgICAgdmFyIG4gPSBNYXRoLmZsb29yKCgoZSAtIDEpIC8gNTQpICUgNCk7XG4gICAgICAgICAgICAgICAgKGlzTmFOKG4pIHx8IG4gPCAwIHx8IG4gPiAzKSAmJiAobiA9IDApO1xuICAgICAgICAgICAgICAgIHRoaXMuX2JnSWQgPSBuO1xuICAgICAgICAgICAgICAgIGNjLmFzc2V0TWFuYWdlci5sb2FkQnVuZGxlKFwicmVzU3BzXCIsIGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBvID0gX2dsb2JhbC5kZWZhdWx0LnBhZFNjYWxlID8gXCJpcGFkL1wiIDogXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgIXQgJiYgZS5sb2FkKFwicGFnZXMvcGFnZV9sZXZlbC9cIiArIG8gKyBcImJnXCIgKyBuLCBjYy5TcHJpdGVGcmFtZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdmFyIGkgPSAodGhpcy5idW5kbGVOYW1lID0gMTAwICsgdGhpcy5idW5kbGVJZCArIFwiXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAoZSwgbikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNjLmFzc2V0TWFuYWdlci5sb2FkQnVuZGxlKGksIGZ1bmN0aW9uIChvLCBpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IG4oKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICgodC5idW5kbGUgPSBpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpLmxvYWQoXCJkYXRhXCIsIGNjLkJ1ZmZlckFzc2V0LCBmdW5jdGlvbiAobywgaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvICYmIG4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdC5kYXRhID0gbmV3IFVpbnQzMkFycmF5KGkuX2J1ZmZlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUoMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIG8gPiAxOFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBjYy5hc3NldE1hbmFnZXIubG9hZFJlbW90ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9nbG9iYWwuT3NzQ29uZmlnLmxldmVsVXJsICsgaSArIFwiL2RhdGEuYmluXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYy5CdWZmZXJBc3NldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChuLCBhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHQuZGF0YSB8fCAoKGkgPSAxMDEgKyAoKG8gLSAxKSAlIDE4KSArIFwiXCIpLCByKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogKCh0LmRhdGEgPSBuZXcgVWludDMyQXJyYXkoYS5fYnVmZmVyKSksIGUoMSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHIoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdC5wcm90b3R5cGUudXBkYXRlUHJhY3RpY2VEYXRhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChlLCBvKSB7XG4gICAgICAgICAgICAgICAgY2MuYXNzZXRNYW5hZ2VyLmxvYWRCdW5kbGUoXCJwcmFjdGljZVwiLCBmdW5jdGlvbiAobiwgaSkge1xuICAgICAgICAgICAgICAgICAgICBuXG4gICAgICAgICAgICAgICAgICAgICAgICA/IG8oKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAoaS5sb2FkKFwiZGF0YVwiLCBjYy5CdWZmZXJBc3NldCwgZnVuY3Rpb24gKGUsIG4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUgJiYgbygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdC5wcmFjdGljZURhdGEgPSBuZXcgVWludDMyQXJyYXkobi5fYnVmZmVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGUoaSkpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIHQucHJvdG90eXBlLnVwZGF0ZVRtcERhdGEgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgICAgICAgdGhpcy50bXBCdW5kbGVJZCA9IHQ7XG4gICAgICAgICAgICB2YXIgbyA9ICh0aGlzLnRtcEJ1bmRsZU5hbWUgPSAxMDAgKyB0ICsgXCJcIik7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKG4sIGkpIHtcbiAgICAgICAgICAgICAgICB2YXIgciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgY2MuYXNzZXRNYW5hZ2VyLmxvYWRCdW5kbGUobywgZnVuY3Rpb24gKHQsIG8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGkoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogKChlLnRtcEJ1bmRsZSA9IG8pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgby5sb2FkKFwiZGF0YVwiLCBjYy5CdWZmZXJBc3NldCwgZnVuY3Rpb24gKHQsIG8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ICYmIGkoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnRtcERhdGEgPSBuZXcgVWludDMyQXJyYXkoby5fYnVmZmVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuKDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHQgPiAxOFxuICAgICAgICAgICAgICAgICAgICA/IGNjLmFzc2V0TWFuYWdlci5sb2FkUmVtb3RlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfZ2xvYmFsLk9zc0NvbmZpZy5sZXZlbFVybCArIG8gKyBcIi9kYXRhLmJpblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjYy5CdWZmZXJBc3NldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGksIGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGUudG1wRGF0YSB8fCAoKG8gPSAxMDEgKyAoKHQgLSAxKSAlIDE4KSArIFwiXCIpLCByKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAoKGUudG1wRGF0YSA9IG5ldyBVaW50MzJBcnJheShhLl9idWZmZXIpKSwgbigxKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIDogcigpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIHQucHJvdG90eXBlLmdldFByYWN0aWNlRGF0YSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB0ID0gdGhpcztcbiAgICAgICAgICAgIHRoaXMucHJhY3RpY2VEYXRhIHx8XG4gICAgICAgICAgICAgICAgX3Jlcy5kZWZhdWx0Lmluc1xuICAgICAgICAgICAgICAgICAgICAuZ2V0QnVuZGxlQnlTdHJpbmcoXCJwcmFjdGljZVwiKVxuICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG8gPSBlLmdldChcImRhdGFcIiwgY2MuQnVmZmVyQXNzZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdC5wcmFjdGljZURhdGEgPSBuZXcgVWludDMyQXJyYXkoby5fYnVmZmVyKTtcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiUlRvb2wuaW5zLmdldEJ1bmRsZUJ5U3RyaW5nKCdwcmFjdGljZScpXCIsIHQpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByYWN0aWNlRGF0YTtcbiAgICAgICAgfTtcbiAgICAgICAgdC5wcm90b3R5cGUuZ2V0UHJhY3RpY2VJZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMucHJhY3RpY2VJZFxuICAgICAgICAgICAgICAgID8gKHRoaXMucHJhY3RpY2VJZCsrLCB0aGlzLnByYWN0aWNlSWQgPiB0aGlzLmdldFB1enpsZUx2bENvdW50KCEwKSAmJiAodGhpcy5wcmFjdGljZUlkID0gMikpXG4gICAgICAgICAgICAgICAgOiAodGhpcy5wcmFjdGljZUlkID0gMik7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wcmFjdGljZUlkO1xuICAgICAgICB9O1xuICAgICAgICB0LnByb3RvdHlwZS5jbGVhclByY2l0Y2VJZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMucHJhY3RpY2VJZCA9IG51bGw7XG4gICAgICAgIH07XG4gICAgICAgIHQucHJvdG90eXBlLmdldFB1enpsZVNwckZyYW1lID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIHZhciBlID0gdGhpcztcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAobywgbikge1xuICAgICAgICAgICAgICAgIHZhciBpID0gdDtcbiAgICAgICAgICAgICAgICB2YXIgciA9ICgoaSAtIDEpICUgZS5vbmVDaGFwTHZsQ291bnQpICsgMSArIFwiXCI7XG4gICAgICAgICAgICAgICAgaSA+IDk3MlxuICAgICAgICAgICAgICAgICAgICA/IGNjLmFzc2V0TWFuYWdlci5sb2FkUmVtb3RlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfZ2xvYmFsLk9zc0NvbmZpZy5sZXZlbFVybCArICgxMDAgKyBlLmJ1bmRsZUlkICsgXCIvXCIpICsgciArIFwiLnBuZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjYy5TcHJpdGVGcmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKHQsIGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQgPyBuKCkgOiBvKG5ldyBjYy5TcHJpdGVGcmFtZShlKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIDogZS5idW5kbGUubG9hZChyLCBjYy5TcHJpdGVGcmFtZSwgZnVuY3Rpb24gKHQsIGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdCA/IG4oKSA6IG8oZSk7XG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgdC5wcm90b3R5cGUuZ2V0UHJhY2l0Y2VTcHJmRnJhbWUgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChlLCBvKSB7XG4gICAgICAgICAgICAgICAgX3Jlcy5kZWZhdWx0Lmluc1xuICAgICAgICAgICAgICAgICAgICAuZ2V0QnVuZGxlQnlTdHJpbmcoXCJwcmFjdGljZVwiKVxuICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAobikge1xuICAgICAgICAgICAgICAgICAgICAgICAgbi5sb2FkKHQgKyBcIlwiLCBjYy5TcHJpdGVGcmFtZSwgZnVuY3Rpb24gKHQsIG4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ID8gbygpIDogZShuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJSVG9vbC5pbnMuZ2V0QnVuZGxlQnlTdHJpbmcoJ3Jlc1NwcycpXCIsIHQpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICB0LnByb3RvdHlwZS5nZXRQdXp6bGVEaWZmID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHV6emxlSW5mbygpLmRpZmY7XG4gICAgICAgIH07XG4gICAgICAgIHQucHJvdG90eXBlLmdldFB1enpsZUx2bENvdW50ID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIHJldHVybiB0ID8gdGhpcy5nZXRQcmFjdGljZURhdGEoKVsxXSA6IHRoaXMub25lQ2hhcEx2bENvdW50O1xuICAgICAgICB9O1xuICAgICAgICB0LnByb3RvdHlwZS5nZXRQdXp6bGVJbmZvID0gZnVuY3Rpb24gKHQsIGUpIHtcbiAgICAgICAgICAgIHZhciBvID0gdCA/IHRoaXMuZ2V0UHJhY3RpY2VEYXRhKCkgOiB0aGlzLmRhdGE7XG4gICAgICAgICAgICB2YXIgbiA9IG9bMF07XG4gICAgICAgICAgICB2YXIgaSA9IG9bMV07XG4gICAgICAgICAgICB2YXIgciA9IHQgJiYgZSA/IGUgLSAxIDogKF9wSW5mby5kZWZhdWx0Lmlucy5nZXRQdXp6bGVMdmwoKSAtIDEpICUgdGhpcy5vbmVDaGFwTHZsQ291bnQ7XG4gICAgICAgICAgICB2YXIgYSA9IG9bMiArIGkgKyAoMCA9PSByID8gMCA6IG9bMiArIHIgLSAxXSArIHIpXTtcbiAgICAgICAgICAgIHJldHVybiB7aWQ6IHIsIHR5cGU6IG4sIHNpemU6IDI1NSAmIGEsIGRpZmY6IChhID4+IDgpICYgMjU1fTtcbiAgICAgICAgfTtcbiAgICAgICAgdC5wcm90b3R5cGUuZ2V0UHV6emxlRGF0YSA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgICAgICBmb3IgKFxuICAgICAgICAgICAgICAgIHZhciBvID0gdCA/IHRoaXMuZ2V0UHJhY3RpY2VEYXRhKCkgOiB0aGlzLmRhdGEsXG4gICAgICAgICAgICAgICAgICAgIG4gPSBvWzFdLFxuICAgICAgICAgICAgICAgICAgICBpID0gdCAmJiBlID8gZSAtIDEgOiAoX3BJbmZvLmRlZmF1bHQuaW5zLmdldFB1enpsZUx2bCgpIC0gMSkgJSB0aGlzLm9uZUNoYXBMdmxDb3VudCxcbiAgICAgICAgICAgICAgICAgICAgciA9IDAgPT0gaSA/IDAgOiBvWzIgKyBpIC0gMV0gKyBpLFxuICAgICAgICAgICAgICAgICAgICBhID0gb1syICsgaV0gKyBpLFxuICAgICAgICAgICAgICAgICAgICBzID0gb1syICsgbiArIHJdLFxuICAgICAgICAgICAgICAgICAgICBjID0gTWF0aC5wb3coMjU1ICYgcywgMiksXG4gICAgICAgICAgICAgICAgICAgIGwgPSAyICsgbiArIGEgKyAxLFxuICAgICAgICAgICAgICAgICAgICB1ID0gW10sXG4gICAgICAgICAgICAgICAgICAgIGQgPSAwLFxuICAgICAgICAgICAgICAgICAgICBoID0gMiArIG4gKyByICsgMTtcbiAgICAgICAgICAgICAgICBoIDwgbDtcbiAgICAgICAgICAgICAgICBoKytcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGYgPSBvW2hdLCBnID0gMDsgZyA8IDMyOyBnKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHkgPSAoMSA8PCBnKSAmIDQyOTQ5NjcyOTU7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoKHVbZCsrXSA9IChmICYgeSkgPT0geSA/IDEgOiAwKSwgZCA9PSBjKSkgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkID09IGMpIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHU7XG4gICAgICAgIH07XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSwgXCJsZXZlbEJ1bmRsZVwiLCB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5idW5kbGU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW51bWVyYWJsZTogITEsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgICAgIH0pO1xuICAgICAgICB0LnByb3RvdHlwZS5nZXRKaWdzYXdJY29uID0gZnVuY3Rpb24gKHQsIGUpIHtcbiAgICAgICAgICAgIHZhciBvID0gdGhpcztcbiAgICAgICAgICAgIHZvaWQgMCA9PT0gZSAmJiAoZSA9IHRoaXMuYnVuZGxlTmFtZSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKG4sIGkpIHtcbiAgICAgICAgICAgICAgICBlID4gXCIxMThcIlxuICAgICAgICAgICAgICAgICAgICA/IGNjLmFzc2V0TWFuYWdlci5sb2FkUmVtb3RlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfZ2xvYmFsLk9zc0NvbmZpZy5jaGFwdGVyVXJsICsgKGUgKyBcIi9cIikgKyB0ICsgXCIuanBnXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNjLlNwcml0ZUZyYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdCA/IGkoKSA6ICgoZS5wYWNrYWJsZSA9ICExKSwgbihuZXcgY2MuU3ByaXRlRnJhbWUoZSkpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgOiBvXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC5nZXRjaGFwdGVyQnVuZGVyKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG8ubG9hZChlICsgXCIvXCIgKyB0LCBjYy5TcHJpdGVGcmFtZSwgZnVuY3Rpb24gKHQsIGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ID8gaSgpIDogbihlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJnZXRjaGFwdGVyQnVuZGVyRXJyXCIsIHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICB0LnByb3RvdHlwZS5yZWxlYXNlSmlnc2F3SWNvbiA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgICAgICBpZiAoKHZvaWQgMCA9PT0gZSAmJiAoZSA9IHRoaXMuYnVuZGxlTmFtZSksICEoZSA+IFwiMTE4XCIpKSkge1xuICAgICAgICAgICAgICAgIHZhciBvID0gY2MuYXNzZXRNYW5hZ2VyLmdldEJ1bmRsZShcImNoYXB0ZXJcIik7XG4gICAgICAgICAgICAgICAgaWYgKG8pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG4gPSBvLmdldChlICsgXCIvXCIgKyB0LCBjYy5TcHJpdGVGcmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIG4gJiYgY2MuYXNzZXRNYW5hZ2VyLnJlbGVhc2VBc3NldChuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHQucHJvdG90eXBlLnVwZGF0ZUppZ3NhdyA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBfZXZ0cy5kZWZhdWx0Lm9wRS5lbWl0KHthY3Rpb246IF9ldnRzLmRlZmF1bHQuVVBESklHU0FXfSk7XG4gICAgICAgICAgICB9LCB0KTtcbiAgICAgICAgfTtcbiAgICAgICAgdC5wcm90b3R5cGUudXBkSmlnQW5kUG9wID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF9ldnRzLmRlZmF1bHQub3BFLmVtaXQoe2FjdGlvbjogX2V2dHMuZGVmYXVsdC5GSU5JU0hfUFVaWkxFTFZ9KTtcbiAgICAgICAgICAgIH0sIHQpO1xuICAgICAgICB9O1xuICAgICAgICB0LnByb3RvdHlwZS5wb3BGZXN0aXZhbCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBfZXZ0cy5kZWZhdWx0Lm9wRS5lbWl0KHthY3Rpb246IF9ldnRzLmRlZmF1bHQuUE9QX0ZFU1RJVkFMfSk7XG4gICAgICAgICAgICB9LCB0KTtcbiAgICAgICAgfTtcbiAgICAgICAgdC5wcm90b3R5cGUuZ2V0Y2hhcHRlckJ1bmRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgdDtcbiAgICAgICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChlLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICh0ID0gY2MuYXNzZXRNYW5hZ2VyLmdldEJ1bmRsZShcImNoYXB0ZXJcIikpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gWzMsIDJdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAodCwgZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2MuYXNzZXRNYW5hZ2VyLmxvYWRCdW5kbGUoXCJjaGFwdGVyXCIsIGZ1bmN0aW9uIChvLCBuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbyA/IGUoKSA6IHQobik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiwgZS5zZW50KCldO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiwgdF07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICB0LnByb3RvdHlwZS5nZXRMZXZlbENvc3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdCA9IGUuaW5zLmdldFB1enpsZURpZmYoKTtcbiAgICAgICAgICAgIHZhciBvID0gX2NmZ01nci5kZWZhdWx0LnNlcnZlckNmZy5kaWZmaWN1bHR5X3J1bGVzLnJ1bGVzO1xuICAgICAgICAgICAgdmFyIG4gPSAxMDtcbiAgICAgICAgICAgIHZhciBpID0gMTtcbiAgICAgICAgICAgIGZvciAodmFyIHIgaW4gbykge1xuICAgICAgICAgICAgICAgIHZhciBhID0gb1tyXTtcbiAgICAgICAgICAgICAgICBpZiAoKChuID0gTnVtYmVyKGEudGltZXNfdmFsKSksIGkgPT09IHQpKSBicmVhaztcbiAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbjtcbiAgICAgICAgfTtcbiAgICAgICAgdC5wcm90b3R5cGUuZ2V0TGV2ZWxEaWZmU3RyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHQgPSBlLmlucy5nZXRQdXp6bGVEaWZmKCk7XG4gICAgICAgICAgICB2YXIgbyA9IF9jZmdNZ3IuZGVmYXVsdC5zZXJ2ZXJDZmcuZGlmZmljdWx0eV9ydWxlcy5ydWxlcztcbiAgICAgICAgICAgIHZhciBuID0gXCLlhaXpl6jpmr7luqZcIjtcbiAgICAgICAgICAgIHZhciBpID0gMTtcbiAgICAgICAgICAgIGZvciAodmFyIHIgaW4gbykge1xuICAgICAgICAgICAgICAgIGlmICgoKG4gPSBvW3JdLnRpdGxlKSwgaSA9PT0gdCkpIGJyZWFrO1xuICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuLnNsaWNlKDAsIC0yKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIChlID0gX19kZWNvcmF0ZShbaF0sIHQpKTtcbiAgICB9KSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IGY7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_jigTip.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8fafd+wZatAc4UtHon65T2w', 'ui_jigTip');
// scripts/ui_jigTip.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _baseUI = require("baseUI");

var s = cc._decorator;
var c = s.ccclass;
var l = (s.property, function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.okCb = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    var e = t.okCb;
    this.okCb = e;
  };

  e.prototype.onBtnEnsure = function () {
    this.okCb && this.okCb();
    this.hideThis();
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  return __decorate([c], e);
}(_baseUI["default"]));
exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfamlnVGlwLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9iYXNlVUkiLCJyZXF1aXJlIiwicyIsImNjIiwiX2RlY29yYXRvciIsImMiLCJjY2NsYXNzIiwibCIsInByb3BlcnR5IiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsIm9rQ2IiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJpbml0Iiwib25CdG5FbnN1cmUiLCJoaWRlVGhpcyIsImhpZGUiLCJfX2RlY29yYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsSUFDQUwsQ0FBQyxDQUFDTSxRQUFGLEVBQ0EsVUFBVUMsQ0FBVixFQUFhO0VBQ1YsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxJQUFGLEdBQVMsSUFBVDtJQUNBLE9BQU9ILENBQVA7RUFDSDs7RUFDREksU0FBUyxDQUFDSixDQUFELEVBQUlELENBQUosQ0FBVDs7RUFDQUMsQ0FBQyxDQUFDSyxTQUFGLENBQVlDLElBQVosR0FBbUIsVUFBVVAsQ0FBVixFQUFhO0lBQzVCLElBQUlDLENBQUMsR0FBR0QsQ0FBQyxDQUFDSSxJQUFWO0lBQ0EsS0FBS0EsSUFBTCxHQUFZSCxDQUFaO0VBQ0gsQ0FIRDs7RUFJQUEsQ0FBQyxDQUFDSyxTQUFGLENBQVlFLFdBQVosR0FBMEIsWUFBWTtJQUNsQyxLQUFLSixJQUFMLElBQWEsS0FBS0EsSUFBTCxFQUFiO0lBQ0EsS0FBS0ssUUFBTDtFQUNILENBSEQ7O0VBSUFSLENBQUMsQ0FBQ0ssU0FBRixDQUFZRyxRQUFaLEdBQXVCLFlBQVk7SUFDL0IsS0FBS0MsSUFBTDtFQUNILENBRkQ7O0VBR0EsT0FBT0MsVUFBVSxDQUFDLENBQUNmLENBQUQsQ0FBRCxFQUFNSyxDQUFOLENBQWpCO0FBQ0gsQ0FuQkQsQ0FtQkdWLE9BQU8sV0FuQlYsQ0FGQyxDQUFMO0FBc0JBRixPQUFPLFdBQVAsR0FBa0JTLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9iYXNlVUkgPSByZXF1aXJlKFwiYmFzZVVJXCIpO1xudmFyIHMgPSBjYy5fZGVjb3JhdG9yO1xudmFyIGMgPSBzLmNjY2xhc3M7XG52YXIgbCA9XG4gICAgKHMucHJvcGVydHksXG4gICAgKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgICAgIGUub2tDYiA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm4gZTtcbiAgICAgICAgfVxuICAgICAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgICAgIGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgdmFyIGUgPSB0Lm9rQ2I7XG4gICAgICAgICAgICB0aGlzLm9rQ2IgPSBlO1xuICAgICAgICB9O1xuICAgICAgICBlLnByb3RvdHlwZS5vbkJ0bkVuc3VyZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMub2tDYiAmJiB0aGlzLm9rQ2IoKTtcbiAgICAgICAgICAgIHRoaXMuaGlkZVRoaXMoKTtcbiAgICAgICAgfTtcbiAgICAgICAgZS5wcm90b3R5cGUuaGlkZVRoaXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF9fZGVjb3JhdGUoW2NdLCBlKTtcbiAgICB9KShfYmFzZVVJLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IGw7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_chapter.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '361f3jG3WREaI8xtSHb2M8k', 'ui_chapter');
// scripts/ui_chapter.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _mySafeArea = require("mySafeArea");

var _chapterItem = require("chapterItem");

var _global = require("global");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var _chaptBtn = require("chaptBtn");

var d = cc._decorator;
var h = d.ccclass;
var f = d.property;

var g = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.scrollView = null;
    e.chaptPfb = null;
    e.btnView = null;
    e.btnPre = null;
    e.bgNode = null;
    e.bookNode = null;
    e.lineNode = null;
    e.lineNode1 = null;
    e.topNode = null;
    e.closeNode = null;
    e.chapterJigsawPos = {};
    e.itemHeight = 460;
    e.swBtns = [];
    e.endChapterCount = 0;
    e.startIdx = 1;
    e.chapterItem = [];
    e.lastScrollPosition = 0;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t = this;

    if (this.node.height = cc.winSize.height, _global["default"].padScale) {
      this.bgNode.scale = _global["default"].padScale;
      var e = (cc.view.getVisibleSize().width - 720) / 2;
      this.closeNode.x -= e;
    }

    this.onResize();
    this.btnView.content.removeAllChildren();
    this.loadBtns();
    this.initChpaterPos().then(function () {
      return t.initData();
    })["catch"](function (t) {
      console.error("initChpaterPosErr", t);
    });
  };

  e.prototype.onResize = function () {
    this.node.height = cc.winSize.height;

    var t = _mySafeArea.getSafeAreaRect().yMin;

    var e = cc.winSize.height - 1280 - t;
    this.bookNode.height += e;
    this.lineNode.height += e;
    this.lineNode1.height += e;
    this.btnView.content.height += e;
    this.scrollView.content.height += e;
    this.btnView.node.height += e;
    this.scrollView.node.height += e;
    this.btnView.content.parent.height += e;
    this.scrollView.content.parent.height += e;
  };

  e.prototype.start = function () {
    var t = this;
    this.scheduleOnce(function () {
      t.topNode.y -= _mySafeArea.getSafeAreaRect().yMin / 2;
      t.topNode.removeComponent(cc.Widget);
    });
  };

  e.prototype.init = function () {};

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.loadBtns = function () {
    for (var t = this, e = _global["default"].chapterCount, o = Math.ceil(e / 10), n = e % 10, i = function i(e) {
      var i = cc.instantiate(r.btnPre);
      i.parent = r.btnView.content;
      i.active = !0;
      var a = i.getComponent(_chaptBtn["default"]);
      var s = 1 + 10 * e;
      var c = 10 * (e + 1);
      n && (c = s + n - 1);
      var l = s + "-" + (e === o - 1 ? c : 10 * (e + 1));
      a.setLb(l);
      a.setState(!1);
      r.swBtns.push(a);
      i.on("click", function () {
        t.btnClick(e);
      }, r);
    }, r = this, a = 0; a < o; a++) {
      i(a);
    }

    var s = _pInfo["default"].ins.getPuzzleLvl();

    var u = Math.ceil(s / 54);
    var d = Math.ceil(u / 10);
    this.startIdx = 1 + 10 * (d - 1);
    this.swBtns[d - 1].setState(!0);
    var h = 10;
    var f = u % 10;
    f && (h = f);
    var g = (h - 1) * this.itemHeight;
    this.scrollView.scrollToOffset(cc.v2(0, g));
    var y = 10 * d;
    this.endChapterCount = Math.min(y, e);
    var m = this.endChapterCount - this.startIdx + 1;
    this.scrollView.content.setContentSize(cc.size(560, this.itemHeight * m));
  };

  e.prototype.btnClick = function (t) {
    if (!this.swBtns[t].getState()) {
      for (var e = 0, o = this.swBtns.length; e < o; e++) {
        this.swBtns[e].setState(!1);
      }

      this.swBtns[t].setState(!0);
      this.startIdx = 1 + 10 * t;
      var n = 10 * (t + 1);
      this.endChapterCount = Math.min(n, _global["default"].chapterCount);
      var i = this.endChapterCount - this.startIdx + 1;
      this.scrollView.content.setContentSize(cc.size(560, this.itemHeight * i));
      this.scrollView.stopAutoScroll();
      this.scrollView.scrollToTop();
      this.initData();
    }
  };

  e.prototype.initData = function () {
    var t = this;
    this.scrollView.content.children.forEach(function (e) {
      t.chapterItem.push(e);
    });
    this.scrollView.content.removeAllChildren();
    this.loadItem(this.startIdx, 0);
  };

  e.prototype.loadItem = function (t, e) {
    if (t <= this.endChapterCount) {
      var o = this.chapterItem.shift();
      o || (o = cc.instantiate(this.chaptPfb));
      this.scrollView.content.addChild(o);
      o.name = "chapter_" + t;
      o.opacity = 0;
      o.position = cc.v3(0, -this.itemHeight * e);
      o.getComponent(_chapterItem["default"]).init(t, this.chapterJigsawPos);
      t++;
      e++;
      this.scheduleOnce(this.loadItem.bind(this, t, e), 0);
    } else {
      for (var n = this.scrollView.content, i = 0; i < n.children.length; i++) {
        var r = n.children[i];
        r.active = !0;
        r.opacity = 255;
        this.showChgAni;
      }

      this.lastScrollPosition = 0;
      this.pageScroll(!1);
      this.showChgAni || (this.showChgAni = !0);
    }
  };

  e.prototype.pageScroll = function (t) {
    void 0 === t && (t = !0);
    var e = this.scrollView.content.children;
    var o = this.scrollView.getScrollOffset().y;

    if (!(t && Math.abs(o - this.lastScrollPosition) < 1)) {
      for (var n = this.itemHeight, i = this.scrollView.content.parent.height, r = 0; r < e.length; r++) {
        var a = e[r];
        var s = a.convertToWorldSpaceAR(cc.Vec2.ZERO);
        (s = this.scrollView.content.parent.convertToNodeSpaceAR(s)).y + n < -i || s.y - n > 0 ? a.children[0].active = !1 : a.children[0].active = !0;
      }

      this.lastScrollPosition = o;
    }
  };

  e.prototype.initChpaterPos = function () {
    var t;
    var e = this;
    var o = new Promise(function (e) {
      t = e;
    });
    cc.assetManager.loadRemote(_global.OssConfig.chapterUrl + "pos.json", cc.JsonAsset, function (o, n) {
      var i = [[[-40, 127], [129, 127], [-88, -28], [195, -60], [-224, -128], [49, -128]], [[-195, 134], [192, 119], [144, -71], [53, 34], [-40, -81], [-209, -44]], [[-133, 59], [40, 62], [210, 95], [-191, -104], [-28, -98], [181, -95]], [[-167, 122], [-24, 39], [136, 122], [-198, -42], [35, -80], [191, -112]], [[20, 98], [-89, -44], [22, -40], [149, -75], [-193, -128], [15, -138]], [[-80, 30], [101, 132], [-216, -72], [-95, -123], [32, -91], [184, -66]], [[-90, 29], [76, 126], [79, -22], [-199, -112], [-51, -122], [197, -95]], [[-117, 125], [162, 110], [-217, -119], [-79, -101], [57, -118], [162, -126]], [[-129, 71], [162, 62], [-2, -37], [150.5, -101.6], [-9, -136.4], [-177, -136]], [[-183, -56], [22, -70], [-81, -121], [188, -130], [-74, 114], [73, -149]], [[-135, 96], [14, 51], [188, 58], [-169, -134], [-3, -97], [187, -124]], [[209, -84], [-205, 97], [-173, -136], [172, 56], [68, -21], [-118, -15]], [[-198, -108], [32, -139], [183, -107], [-159, 133], [15, -14], [180, 97]], [[-7, -51], [-35, 121], [-196, 24], [-159, -117], [154, -136], [149, 99]], [[172, -116], [13, 42], [-152, 98], [-145, -127], [164, 124], [31, -122]], [[121, -115], [-5, 80], [-165, -122], [202, 28], [-183, 116], [-173, -8.4]], [[156, -25], [-206, -126], [-21.5, 103.4], [5, -114], [-92, -34], [-198, 3]], [[-112, 84], [142, 93], [-189, -97], [185, -57], [53, -99], [-58, -90]]];
      !o && n && n.json && Array.isArray(n.json) && e.node && i.push.apply(i, n.json);
      var r = e.chapterJigsawPos;
      var a = 1;
      i.forEach(function (t) {
        t.forEach(function (t) {
          r[9 * a] = cc.v2(t[0], t[1]), a++;
        });
      });
      t(1);
    });
    return o;
  };

  e.prototype.showLoadAni = function (t) {
    cc.tween(t).to(0.5, {
      x: 0
    }, {
      easing: "backInOut"
    }).start();
  };

  e.prototype.showChangegAni = function (t) {
    cc.tween(t).to(0.2, {
      opacity: 255
    }).start();
  };

  __decorate([f(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([f(cc.Prefab)], e.prototype, "chaptPfb", void 0);

  __decorate([f(cc.ScrollView)], e.prototype, "btnView", void 0);

  __decorate([f(cc.Node)], e.prototype, "btnPre", void 0);

  __decorate([f(cc.Node)], e.prototype, "bgNode", void 0);

  __decorate([f(cc.Node)], e.prototype, "bookNode", void 0);

  __decorate([f(cc.Node)], e.prototype, "lineNode", void 0);

  __decorate([f(cc.Node)], e.prototype, "lineNode1", void 0);

  __decorate([f(cc.Node)], e.prototype, "topNode", void 0);

  __decorate([f(cc.Node)], e.prototype, "closeNode", void 0);

  return __decorate([h], e);
}(_baseUI["default"]);

exports["default"] = g;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_jigFinish.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6948fUS92JKPqR9GQdGftvI', 'ui_jigFinish');
// scripts/ui_jigFinish.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _res = require("res");

var _global = require("global");

var _jigsawMgr = require("jigsawMgr");

var _newJigMgr = require("newJigMgr");

var _panelMgr = require("panelMgr");

var _baseUI = require("baseUI");

var h = cc._decorator;
var f = h.ccclass;
var g = h.property;

var y = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.finishSpr = null;
    e.lightNode = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    cc.tween(this.lightNode).by(3, {
      angle: -360
    }).repeatForever().start();
  };

  e.prototype.init = function (t) {
    var e = this;
    var o = t.themeId;
    var n = t.themeType;
    var i = o + 1;
    var r = "pintu_" + i;
    1 === n ? _jigsawMgr["default"].ins : 2 === n && (_newJigMgr["default"].ins, r = "fes_" + i);
    1 === n ? i < 61 ? _res["default"].ins.getBundleByString("jigsaw").then(function (t) {
      t.load(r, cc.SpriteFrame, function (t, o) {
        !t && e.node && e.node.isValid && (e.finishSpr.spriteFrame = o);
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('jigsaw')", t);
    }) : cc.assetManager.loadRemote(_global.OssConfig.jigswawUrl + r + ".jpg", {
      ext: _global.headImgExt
    }, function (t, o) {
      !t && e.node && e.node.isValid && (e.finishSpr.spriteFrame = new cc.SpriteFrame(o));
    }) : _res["default"].ins.getBundleByString("jigsaw").then(function (t) {
      t.load(r, cc.SpriteFrame, function (t, o) {
        !t && e.node && e.node.isValid && (e.finishSpr.spriteFrame = o);
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('jigsaw')", t);
    });
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onBtnBack = function () {
    _panelMgr["default"].ins.closeAllPanel();

    _evts["default"].opE.emit({
      action: _evts["default"].MAINJUMP,
      data: 2
    });

    _evts["default"].opE.emit({
      action: _evts["default"].UPDJIGSAWGAME
    });
  };

  e.prototype.onBtnNext = function () {
    _panelMgr["default"].ins.closeAllPanel();

    _evts["default"].opE.emit({
      action: _evts["default"].UPDJIGSAWGAME
    });
  };

  __decorate([g(cc.Sprite)], e.prototype, "finishSpr", void 0);

  __decorate([g(cc.Node)], e.prototype, "lightNode", void 0);

  return __decorate([f], e);
}(_baseUI["default"]);

exports["default"] = y;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/page_level.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '14ce18JY+pOW5bs9htHgdMC', 'page_level');
// scripts/page_level.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _res = require("res");

var _cfgMgr = require("cfgMgr");

var _lang = require("lang");

var _global = require("global");

var _festivalMgr = require("festivalMgr");

var _levelMgr = require("levelMgr");

var _panelMgr = require("panelMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var _levelItem = require("levelItem");

var m = cc._decorator;
var v = m.ccclass;
var _ = m.property;

var b = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bg = null;
    e.content = null;
    e.levelItemPrefab = null;
    e.lockedSp = null;
    e.unlockSp = null;
    e.startBtnLbl = null;
    e.jigsawPfb = null;
    e.bgSpr = null;
    e.startNode = null;
    e.startNodeGray = null;
    e.chaLb = null;
    e.secLb = null;
    e.secPro = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t = this;

    _res["default"].ins.getBundleByString("resSps").then(function (e) {
      var o = _global["default"].padScale ? "ipad/" : "";
      e.load("pages/page_level/" + o + "bg" + _levelMgr["default"].ins.getBgId(), cc.SpriteFrame, function (e, o) {
        t.node && t.node.isValid && !e && (t.bg.spriteFrame = o);
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });

    _global["default"].padScale && (this.bg.node.width = 1080);
    this.halfHeight = cc.view.getVisibleSize().height / 2;
    this.upChapter();
    this.checkStartBtn();
    this.initScrollView();
    this.initLvl();

    _evts["default"].opE.on(this.onOperTap.bind(this));

    this.onE();
  };

  e.prototype.start = function () {
    var t = this;
    _global["default"].padScale && this.scheduleOnce(function () {
      var e = (cc.view.getVisibleSize().width - 720) / 2;
      t.chaLb.node.parent.x -= e;
    });
  };

  e.prototype.upChapter = function () {
    var t = _pInfo["default"].ins.getPuzzleLvl();

    var e = Math.ceil(t / 54);
    this.chaLb.string = "第" + e + "章";
    var o = t - 54 * (e - 1) - 1;
    _global["default"].levelDone && (o = 54);
    this.secLb.string = o + "/54";
    var n = o / 54;
    this.secPro.fillRange = n;
  };

  e.prototype.checkStartBtn = function () {
    var t = _pInfo["default"].ins.isMianLocked();

    this.startNodeGray.active = t;
    this.startNode.active = !t;
    _global["default"].levelDone ? this.startBtnLbl.node.parent.active = !1 : this.startBtnLbl.node.parent.active = !0;
  };

  e.prototype.initScrollView = function () {
    for (var t = Math.floor, e = cc.instantiate, o = [45, -57, -160, -147, -113, 18, 37, -36, -102, 14, 55, 88, 12, -52], n = [35, 110, 186, 288, 391, 423, 545, 648, 746, 806, 911, 1014, 1093, 1188], i = _levelMgr["default"].ins.getPuzzleLvlCount(), r = this.levelItemPrefab, a = this.lockedSp, s = this.unlockSp, c = this.content, l = (_pInfo["default"].ins.getPuzzleLvl() - 1) % i, p = _global["default"].levelDone, h = 0, f = 5; h < i; h++, f++) {
      14 == f && (f = 0);
      var m = t((h + 5) / 14);
      var v = o[f];

      var _ = n[f] + 1280 * m;

      var b = e(r);
      b.name = "level_" + (h + 1);
      b.setParent(c);
      b.setPosition(v, _);
      b.active = !1;
      var w = b.getComponent(_levelItem["default"]);
      w.setLvlLbl(h + 1 + "");
      w.sp.spriteFrame = h < l || p ? s : a; // 💝 允许点击任何已解锁的关卡

      var levelNumber = h + 1;
      var isUnlocked = h < l || p;

      if (isUnlocked) {
        // 为已解锁关卡添加点击事件处理
        b.off('click');
        b.on('click', function () {
          console.log('🎯 选择关卡:', levelNumber); // 设置当前要玩的关卡

          _global["default"].selectedLevel = levelNumber; // 触发开始游戏

          this.onStart.call(this);
        }.bind(this)); // 确保有Button组件用于点击

        var buttonComp = b.getComponent(cc.Button);

        if (!buttonComp) {
          buttonComp = b.addComponent(cc.Button);
          buttonComp.transition = cc.Button.Transition.SCALE;
          buttonComp.zoomScale = 0.9;
        }
      }

      l !== h || p || cc.tween(b).sequence(cc.tween().to(1, {
        scale: 1.1
      }), cc.tween().to(1, {
        scale: 0.9
      })).repeatForever().start();
      (h + 1) % 9 == 0 && this.addJigsaw(v, _, h, l);
    }
  };

  e.prototype.initLvl = function () {
    var t = _levelMgr["default"].ins.getPuzzleLvlCount();

    var e = (_pInfo["default"].ins.getPuzzleLvl() - 1) % t;
    this.startBtnLbl.string = "-" + _levelMgr["default"].ins.getLevelCost();
    var o = this.content;
    var n = 0;

    if (0 != e) {
      var i = o.children;
      var r = i[1].position.y;
      n = i[e].position.y - r;
    }

    n = (n = -this.halfHeight - n) < -4980 ? -4980 : n;
    o.setPosition(0, n);
    this.onScrollForItemVis();
  };

  e.prototype.onScrollForItemVis = function () {
    for (var t = this.content, e = t.position.y, o = this.halfHeight, n = t.children, i = 1, r = n.length; i < r; i++) {
      var a = n[i];
      var s = a.position.y + e;
      a.active = -o < s && s < o;
    }

    for (var c = this.content.children[0].children, l = (i = 0, c.length); i < l; i++) {
      var u = c[i];
      s = u.position.y + e;
      u.active = -o < s && s < o;
    }
  };

  e.prototype.onStart = function () {
    if (_pInfo["default"].ins.isMianLocked()) {
      var t = _cfgMgr["default"].serverCfg.lock_rules.main_line_lock.main_line_val;

      _tipMgr["default"].ins.showTip(_lang.lang[30001].format(t));
    } else {
      var e = _levelMgr["default"].ins.getLevelCost();

      _pInfo["default"].ins.getPower() < e ? _panelMgr["default"].ins.open("ui/ui_getRes", {
        itemId: "times"
      }) : this.startSelectedLevel();
    }
  }; // 💝 新增：开始选择的关卡


  e.prototype.startSelectedLevel = function () {
    // 如果有选择的关卡，设置为当前关卡
    if (_global["default"].selectedLevel) {
      console.log('🚀 开始选择的关卡:', _global["default"].selectedLevel); // 临时保存原始关卡进度

      if (!_global["default"].originalLevel) {
        _global["default"].originalLevel = _pInfo["default"].ins.getPuzzleLvl();
      } // 设置选择的关卡为当前关卡


      _pInfo["default"].ins.setPuzzleLvl(_global["default"].selectedLevel); // 清除选择的关卡


      _global["default"].selectedLevel = null;
    } // 继续原来的游戏开始流程


    if (_global["default"].levelDone) {
      _panelMgr["default"].ins.open("ui/ui_selectMode", null);
    } else {
      _panelMgr["default"].ins.open("ui/ui_lvInfo", null);
    }
  };

  e.prototype.addJigsaw = function (t, e, o, n) {
    var i = cc.instantiate(this.jigsawPfb);
    var r = this.content.children[0].childrenCount;
    var a = [218, -206, 132, -172, 194, 115][r];
    var s = [1188, 1838, 2835, 3532, 4548, 5364][r];
    i.off("click", this.onBtnChapter, this);
    i.on("click", this.onBtnChapter, this);
    i.setPosition(a, s);
    i.active = !1;
    i.setParent(this.content.children[0]);
    i.name = "jigsaw_" + this.content.children[0].childrenCount;
    var c;
    var l = i.children[1].getComponent(cc.Sprite);
    var p = Math.ceil((o + 1) / 9);

    _levelMgr["default"].ins.getJigsawIcon(p).then(function (t) {
      t && (l.spriteFrame = t);
    })["catch"](function () {
      console.error("getJigsawIconErr");
    });

    0 == n || "number" == typeof _global["default"].puzzlv && (_global["default"].puzzlv = _global["default"].puzzlv % _levelMgr["default"].ins.getPuzzleLvlCount(), n = _global["default"].puzzlv);
    c = _global["default"].levelDone ? 9 : n >= 9 * p ? 9 : n > 9 * p - 9 ? n % 9 : 0;
    l.getMaterial(0).setProperty("height", c);
  };

  e.prototype.onBtnChapter = function () {
    _panelMgr["default"].ins.open("ui/ui_chapter", null);
  };

  e.prototype.onE = function () {
    var t = _pInfo["default"].ins.getPuzzleLvl();

    this.checkShowFinger(t <= 3);
  };

  e.prototype.onD = function () {
    this.checkShowFinger(!1);
  };

  e.prototype.checkShowFinger = function (t) {
    var e = this;
    t ? this._fingerNode ? this._fingerNode.active = !0 : _res["default"].ins.lPre("prefab/finger").then(function (t) {
      e._fingerNode = cc.instantiate(t);
      e.node.getChildByName("startBtn").addChild(e._fingerNode);
      var o = cc.v3(80, 0);

      e._fingerNode.setPosition(o);

      e._fingerNode.active = !0;
    })["catch"](function () {
      console.error("getPrefabErr");
    }) : this._fingerNode && this._fingerNode.active && (this._fingerNode.active = !1);
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].UPDJIGSAW:
        this.checkJigsaw();
        break;

      case _evts["default"].FINISH_PUZZLELV:
        this.checkAndPop();
        break;

      case _evts["default"].POP_FESTIVAL:
        this.popFestival();
        break;

      case _evts["default"].UPDATA_LEVEL_TMP:
        this.updateLvlTmp();
    }
  };

  e.prototype.updateLvlTmp = function () {
    _global["default"].levelTmp;
  };

  e.prototype.checkAndPop = function () {
    this.checkJigsaw();
    this.scheduleOnce(function () {
      _global["default"].levelDone ? _panelMgr["default"].ins.open("ui/ui_selectMode", null) : 1 == _pInfo["default"].ins.getPuzzleLvl() % 54 ? _panelMgr["default"].ins.open("ui/ui_chapterDone", {}) : _panelMgr["default"].ins.open("ui/ui_lvInfo", {
        isShow: !0
      });
    }, 0);
  };

  e.prototype.popFestival = function () {
    !_festivalMgr["default"].ins.isFesEnd() && _festivalMgr["default"].ins.fesTaskDatas && _panelMgr["default"].ins.open("ui/ui_festival", null);
  };

  e.prototype.checkJigsaw = function () {
    if ("number" == typeof _global["default"].puzzlv) {
      var t = (_pInfo["default"].ins.getPuzzleLvl() - 1) % _levelMgr["default"].ins.getPuzzleLvlCount();

      if (t) {
        if (_global["default"].puzzlv != t || 1 == t) {
          var e = this.content.getChildByName("level_" + t);
          var o = Math.ceil(t / 9);
          var n = this.content.children[0].getChildByName("jigsaw_" + o);
          var i = cc.instantiate(e);
          i.setParent(e.parent);
          i.setPosition(e.position);
          var r = cc.v2(i.x, i.y);
          var a = cc.v2(n.x, n.y);
          var s = t % 9 || 9;
          var c = Math.floor((s - 1) / 3);
          var l = (s - 1) % 3;
          a.x += (l - 1) * n.width * n.scale / 3;
          a.y += (1 - c) * n.width * n.scale / 3;
          var p = a.add(r).multiplyScalar(0.7);
          cc.tween(i).bezierTo(1, r, p, a).call(function () {
            i.active = !1;
            setTimeout(function () {
              i.destroy();
            }, 100);
            n.children[1].getComponent(cc.Sprite).getMaterial(0).setProperty("height", s);
          }).start();
        }

        _global["default"].puzzlv = null;
      }
    }
  };

  e.prototype.onDestroy = function () {
    _evts["default"].opE.off(this.onOperTap.bind(this));

    this.onD();

    for (var t = _levelMgr["default"].ins.getPuzzleLvlCount(), e = 0, o = 5; e < t; e++, o++) {
      (e + 1) % 9 == 0 && this.releaseJigsaw(e);
    }

    cc.assetManager.releaseAsset(this.bgSpr.spriteFrame);
  };

  e.prototype.releaseJigsaw = function (t) {
    var e = Math.ceil((t + 1) / 9);

    _levelMgr["default"].ins.releaseJigsawIcon(e);
  };

  e.prototype.onBtnFes = function () {
    _panelMgr["default"].ins.open("ui/ui_festival", null);
  };

  __decorate([_(cc.Sprite)], e.prototype, "bg", void 0);

  __decorate([_(cc.Node)], e.prototype, "content", void 0);

  __decorate([_(cc.Prefab)], e.prototype, "levelItemPrefab", void 0);

  __decorate([_(cc.SpriteFrame)], e.prototype, "lockedSp", void 0);

  __decorate([_(cc.SpriteFrame)], e.prototype, "unlockSp", void 0);

  __decorate([_(cc.Label)], e.prototype, "startBtnLbl", void 0);

  __decorate([_(cc.Prefab)], e.prototype, "jigsawPfb", void 0);

  __decorate([_(cc.Sprite)], e.prototype, "bgSpr", void 0);

  __decorate([_(cc.Node)], e.prototype, "startNode", void 0);

  __decorate([_(cc.Node)], e.prototype, "startNodeGray", void 0);

  __decorate([_(cc.Label)], e.prototype, "chaLb", void 0);

  __decorate([_(cc.Label)], e.prototype, "secLb", void 0);

  __decorate([_(cc.Sprite)], e.prototype, "secPro", void 0);

  return __decorate([v], e);
}(cc.Component);

exports["default"] = b;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_luckyGift.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6d3d4wIWL9INoHkuewVRpux', 'ui_luckyGift');
// scripts/ui_luckyGift.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _cfgMgr = require("cfgMgr");

var _baseUI = require("baseUI");

var _com = require("com");

var _pInfo = require("pInfo");

var _bagMgr = require("bagMgr");

var _panelMgr = require("panelMgr");

var d = cc._decorator;
var h = d.ccclass;
var f = d.property;

var g = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.giftsNode = null;
    e.btn_start = null;
    e.pointerNode = null;
    e.labTip = null;
    e.proGiftNode = null;
    e.giftsDatas = null;
    e.isCurPlayAni = !1;
    e.drawedTime = 0;
    e.nowHaveTime = !1;
    e.crossedLevel = 0;
    e.proMax = 10;
    e.proGift = null;
    e.proGiftDatas = [];
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {
    this.giftsDatas = _cfgMgr["default"].serverCfg.lucky_gift.rules;
    this.pointRots = [0, 22, 67, 112, 157, 202, 247, 292, 337];
    this.isCurPlayAni = !1;
    this.proMax = 10;
    this.proGiftDatas = [];
    this.proGift = [2, 3, 5, 7, 9];
    this.initData();
    this.initPro();
    this.initInfo();
    this.initItems();
  };

  e.prototype.initData = function () {
    var t = _pInfo["default"].ins;
    this.drawedTime = t.getLuckTimes();
    this.nowHaveTime = t.getLuckyState();
    this.crossedLevel = t.getRecordData().main.wTimes;
  };

  e.prototype.initPro = function () {};

  e.prototype.updatePro = function () {};

  e.prototype.initInfo = function () {
    if (this.nowHaveTime) this.btn_start.enabled = !0, this.labTip.node.active = !1;else {
      this.btn_start.enabled = !1;
      this.labTip.node.active = !0;
      var t = 2 - this.crossedLevel % 2;
      this.labTip.string = "(再通过" + t + "关即可抽奖)";
    }
  };

  e.prototype.initItems = function () {
    for (var t = 1; t <= 8; t++) {
      var e = this.giftsDatas[t - 1];
      var o = this.giftsNode.getChildByName("" + t);
      o.getChildByName("light").active = !1;
      o.getChildByName("lab").getComponent(cc.Label).string = e.title;
    }
  };

  e.prototype.getProGift = function () {};

  e.prototype.onBtnStart = function () {
    var t = this;

    if (!this.isCurPlayAni) {
      var e = _com["default"].ins.rad(1, 8);

      this.playAni(e, !0, function () {
        _pInfo["default"].ins.addLuckyTimes();

        t.initData();
        t.addGoodToData(t.giftsDatas[e - 1], t.giftsNode.getChildByName("" + e).getChildByName("spr"));
        t.getProGift();
        t.updatePro(t.drawedTime, t.proMax);
        t.initInfo();
      });
    }
  };

  e.prototype.addGoodToData = function (t, e) {
    switch (t.props) {
      case "notice":
      case "full_row_col":
      case "random_notice":
        _bagMgr["default"].ins.addItem(t.props, t.val);

        break;

      case "times":
        _pInfo["default"].ins.addPower(t.val);

        break;

      case "coin":
        _pInfo["default"].ins.addCoin(t.val);

    }

    var o = e.parent.convertToWorldSpaceAR(e.position);

    _panelMgr["default"].ins.open("ui/ui_flyAni", {
      itemDatas: [{
        itemId: t.props,
        worldPos: o,
        value: t.val
      }]
    });
  };

  e.prototype.playAni = function (t, e, o) {
    var n = this;

    if (!this.isCurPlayAni) {
      if (this.isCurPlayAni = !0, !e) return this.actionIndex(t), this.pointerNode.angle = -this.pointRots[t], void (this.isCurPlayAni = !1);
      var i = t;
      var r = 0;

      var a = function a() {
        if (r += 1, n.actionIndex(r), r > 15) {
          var t = 0;

          var e = function e() {
            t += 1;
            n.actionIndex(t);
            t > i && (n.blingbling(i, function () {
              n.isCurPlayAni = !1;
              o && o();
            }), n.unschedule(e));
          };

          n.unschedule(a);
          n.schedule(e, 0.1);
        }
      };

      this.schedule(a, 0.1);
      this.pointerNode.angle = 0;
      var s = 720 + this.pointRots[t];
      var c = 1.8 + 0.1 * t;
      cc.tween(this.pointerNode).to(c, {
        angle: -s
      }).call(function () {}).start();
    }
  };

  e.prototype.actionIndex = function (t) {
    this.hideAllGiftLight();
    var e = t % 8;
    0 == e && (e = 8);
    this.giftsNode.getChildByName("" + e).getChildByName("light").active = !0;
  };

  e.prototype.blingbling = function (t, e) {
    var o = this;

    if (this.hideAllGiftLight(), t) {
      var n = 0;

      var i = function i() {
        n += 1;
        o.giftsNode.getChildByName("" + t).getChildByName("light").active = n % 2 != 0;
        n > 20 && (o.actionIndex(t), e && e(), o.unschedule(i));
      };

      this.schedule(i, 0.05);
    }
  };

  e.prototype.hideAllGiftLight = function () {
    for (var t = 1; t <= 8; t++) {
      this.giftsNode.getChildByName("" + t).getChildByName("light").active = !1;
    }
  };

  e.prototype.hideThis = function () {
    this.isCurPlayAni || this.hide();
  };

  __decorate([f(cc.Node)], e.prototype, "giftsNode", void 0);

  __decorate([f(cc.Button)], e.prototype, "btn_start", void 0);

  __decorate([f(cc.Node)], e.prototype, "pointerNode", void 0);

  __decorate([f(cc.Label)], e.prototype, "labTip", void 0);

  __decorate([f(cc.Node)], e.prototype, "proGiftNode", void 0);

  return __decorate([h], e);
}(_baseUI["default"]);

exports["default"] = g;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_newGift.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '73028GmA1pEwZDKXT2TiRed', 'ui_newGift');
// scripts/ui_newGift.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _cfgMgr = require("cfgMgr");

var _item = require("item");

var _bagMgr = require("bagMgr");

var _panelMgr = require("panelMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var f = cc._decorator;
var g = f.ccclass;
var y = f.property;

var m = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.itemsNode = null;
    e.itemPre = null;
    e.bgSpr = null;
    e.adGetBtn = null;
    e.hideCb = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function () {
    var t = this;

    _cfgMgr["default"].serverCfg.props.set.forEach(function (e) {
      if (Number(e.init_val) > 0) {
        var o = cc.instantiate(t.itemPre);
        o.active = !0, o.parent = t.itemsNode, o.getComponent(_item["default"]).initByData(e.key, e.init_val);
      }
    });

    this.adGetBtn.node.adDotData = "新手礼包";
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onAdGet = function () {
    this.getItem();
  };

  e.prototype.getItem = function () {
    for (var t = this, e = [], o = 0, n = this.itemsNode.childrenCount; o < n; o++) {
      var i = this.itemsNode.children[o];
      var r = i.parent.convertToWorldSpaceAR(i.position);
      var h = {};
      h.itemId = i.getComponent(_item["default"]).key;
      h.worldPos = r;
      h.value = i.getComponent(_item["default"]).count;
      e.push(h);
    }

    _cfgMgr["default"].serverCfg.props.set.forEach(function (t) {
      _bagMgr["default"].ins.addItem(t.key, t.init_val, !0);
    });

    !_pInfo["default"].ins.isMaxAdCount() && _idx.platform.reportEvent(_idx.ERepEvt.newGiftGet);

    _pInfo["default"].ins.setIsGetNewGif(!0);

    _panelMgr["default"].ins.open("ui/ui_flyAni", {
      itemDatas: e,
      hideCb: function hideCb() {
        _evts["default"].opE.emit({
          action: _evts["default"].UPD_NEW_GIFT
        });

        t.hideThis();
      }
    });
  };

  e.prototype.onDestroy = function () {
    cc.assetManager.releaseAsset(this.bgSpr.spriteFrame);
  };

  __decorate([y(cc.Node)], e.prototype, "itemsNode", void 0);

  __decorate([y(cc.Node)], e.prototype, "itemPre", void 0);

  __decorate([y(cc.Sprite)], e.prototype, "bgSpr", void 0);

  __decorate([y(cc.Button)], e.prototype, "adGetBtn", void 0);

  return __decorate([g], e);
}(_baseUI["default"]);

exports["default"] = m;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_jigsaw.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f553dAxt3lMRq5VspifJTH7', 'ui_jigsaw');
// scripts/ui_jigsaw.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _jigsaw = require("jigsaw");

var _global = require("global");

var _baseUI = require("baseUI");

var u = cc._decorator;
var p = u.ccclass;
var d = u.property;

var h = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.jigsawPre = null;
    e.bgNode = null;
    e.closeNode = null;
    e.jigsawItem = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    if (this.node.height = cc.winSize.height, _global["default"].padScale) {
      this.bgNode.scale = _global["default"].padScale;
      var t = (cc.view.getVisibleSize().width - 720) / 2;
      this.closeNode.x -= t;
    }

    this.node.on(cc.Node.EventType.TOUCH_START, this.onTBe, this);
    this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTM, this);
    this.node.on(cc.Node.EventType.TOUCH_END, this.onTE, this);
    this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTC, this);
  };

  e.prototype.start = function () {};

  e.prototype.init = function (t) {
    var e = t.theme_id;
    var o = t.themeType;
    var n = cc.instantiate(this.jigsawPre);
    n.parent = this.node;
    n.position = cc.v3(0, 0);
    this.jigsawItem = n.getComponent(_jigsaw["default"]);
    this.jigsawItem.initItem(e, o);
  };

  e.prototype.onTBe = function (t) {
    var e = this.jigsawItem;
    e && e.node.active && e.onTBe(t);
  };

  e.prototype.onTM = function (t) {
    var e = this.jigsawItem;
    e && e.onTM(t);
  };

  e.prototype.onTE = function (t) {
    var e = this.jigsawItem;
    e && e.onTE(t);
  };

  e.prototype.onTC = function (t) {
    var e = this.jigsawItem;
    e && e.onTC(t);
  };

  e.prototype.hideThis = function () {
    this.hide();

    _evts["default"].opE.emit({
      action: _evts["default"].UPDJIGSAWGAME
    });
  };

  e.prototype.onDestroy = function () {};

  __decorate([d(cc.Prefab)], e.prototype, "jigsawPre", void 0);

  __decorate([d(cc.Node)], e.prototype, "bgNode", void 0);

  __decorate([d(cc.Node)], e.prototype, "closeNode", void 0);

  return __decorate([p], e);
}(_baseUI["default"]);

exports["default"] = h;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_getHeart.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd77caujPdlLWI+2MbwefgBC', 'ui_getHeart');
// scripts/ui_getHeart.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _cfgMgr = require("cfgMgr");

var _lang = require("lang");

var _panelMgr = require("panelMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var d = cc._decorator;
var h = d.ccclass;
var f = d.property;

var g = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.curConsLbls = null;
    e.restLifeLbls = null;
    e.needGoldLbl = null;
    e.normalNode = null;
    e.adNode = null;
    e.needGold = 300;
    e.eventFunc = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    t.prototype.onLoad.call(this);
    var e = this.needGold;

    try {
      e = this.needGold = _cfgMgr["default"].serverCfg.qw_line_rules.rules.relive.set.coin.val || 300;
    } catch (o) {}

    this.needGoldLbl.string = e + "";
  };

  e.prototype.init = function (t) {
    var e = t.time;
    var o = t.cb;
    var n = t.closeCb;
    var i = t.gType;
    (this.normalNode.active = i != _pInfo.gameType.race && i != _pInfo.gameType.challenge) || (this.restLifeLbls.node.y = 30);
    this.curConsLbls.string = "当前连胜：" + _pInfo["default"].ins.getConsWinTimes();
    e < 0 ? this.restLifeLbls.node.active = !1 : this.restLifeLbls.string = "剩余复活次数：" + e;
    this.getCb = o;
    this.closeCb = n;
    this.gType = i;
    this.initAdDotEvent(i);
  };

  e.prototype.initAdDotEvent = function (t) {
    switch (t) {
      case _pInfo.gameType.challenge:
        this.adNode.adDotData = "每日挑战-复活";
        break;

      case _pInfo.gameType.normal:
        this.adNode.adDotData = "主线-复活";
        break;

      case _pInfo.gameType.practice:
        this.adNode.adDotData = "练习模式-复活";
        break;

      case _pInfo.gameType.race:
        this.adNode.adDotData = "趣味赛-复活";
    }
  };

  e.prototype.onGet = function () {
    var t = _pInfo["default"].ins;
    t.getCoin() < this.needGold ? _panelMgr["default"].ins.open("ui/ui_getRes", {
      itemId: "coin",
      gType: this.gType,
      useTo: _lang.getCoinFor.Rebirth
    }) : (t.addCoin(-this.needGold), this.hideThis(), this.getCb(), this.eventDot("使用元宝"));
  };

  e.prototype.onAdGet = function () {
    this.hideThis();
    this.getCb();
    this.eventDot("看广告");
  };

  e.prototype.eventDot = function (t) {
    var e = "使用元宝" == t;
    this.gType == _pInfo.gameType.normal ? (e || !_pInfo["default"].ins.isMaxAdCount()) && _idx.platform.reportEvent(_idx.ERepEvt.dungeonReview, {
      way: t
    }) : this.gType == _pInfo.gameType.race && (e || !_pInfo["default"].ins.isMaxAdCount()) && _idx.platform.reportEvent(_idx.ERepEvt.raceReview, {
      way: t
    });
  };

  e.prototype.onClose = function () {
    this.hideThis();
    this.closeCb();
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  __decorate([f(cc.Label)], e.prototype, "curConsLbls", void 0);

  __decorate([f(cc.Label)], e.prototype, "restLifeLbls", void 0);

  __decorate([f(cc.Label)], e.prototype, "needGoldLbl", void 0);

  __decorate([f(cc.Node)], e.prototype, "normalNode", void 0);

  __decorate([f(cc.Node)], e.prototype, "adNode", void 0);

  return __decorate([h], e);
}(_baseUI["default"]);

exports["default"] = g;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_getReward.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e7f52YMQ3lPSrhdMRaASNUv', 'ui_getReward');
// scripts/ui_getReward.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _res = require("res");

var _bagMgr = require("bagMgr");

var _festivalMgr = require("festivalMgr");

var _levelMgr = require("levelMgr");

var _panelMgr = require("panelMgr");

var _pInfo = require("pInfo");

var _game = require("game");

var _baseUI = require("baseUI");

var _rewardMgr = require("rewardMgr"); // 💝 现金奖励管理器


var f = cc._decorator;
var g = f.ccclass;
var y = f.property;

var m = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.rew1Lbl = null;
    e.rew2Lbl = null;
    e.rew3Lbl = null;
    e.rew4Lbl = null;
    e.adGetBtn = null;
    e.typeSps = []; // 💝 现金奖励状态（复用原有UI结构）

    e.hasCashReward = false; // 是否有现金奖励

    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    var e = this;
    var o = t.gold;
    this.goldNum = o;
    var n = this.pieceNum = 1; // 💝 添加空指针保护和错误捕获

    try {
      console.log("🔍 开始Label检查...");
      if (this.rew1Lbl) this.rew1Lbl.string = "x" + o;
      if (this.rew2Lbl) this.rew2Lbl.string = "x" + n;
      if (this.rew3Lbl) this.rew3Lbl.string = "x" + 10 * o;

      if (this.rew4Lbl) {
        this.rew4Lbl.string = "x" + 10 * n;
      } else {
        console.log("ℹ️ rew4Lbl不存在（用户已改为现金奖励单一显示）");
      }

      console.log("✅ Label设置完成 - rew1:", !!this.rew1Lbl, "rew2:", !!this.rew2Lbl, "rew3:", !!this.rew3Lbl, "rew4:", !!this.rew4Lbl);
    } catch (error) {
      console.log("❌ Label设置失败:", error);
      console.log("🔍 Label状态:", {
        rew1: !!this.rew1Lbl,
        rew2: !!this.rew2Lbl,
        rew3: !!this.rew3Lbl,
        rew4: !!this.rew4Lbl
      });
    }

    this.initAdDotEvent(); // 💝 检查并设置现金奖励显示

    this.setupCashReward();
    var i;
    var r = _game["default"].type;
    i = r !== _pInfo.gameType.festival || _festivalMgr["default"].ins.isJigsawMax() ? "puzzle_pieces" : "newYear_pieces";

    _res["default"].ins.getBundleByString("resSps").then(function (t) {
      t.load("item/" + i, cc.SpriteFrame, function (t, o) {
        !t && e.node && e.node.isValid && e.typeSps.forEach(function (t) {
          if (t && t.spriteFrame !== undefined) {
            t.spriteFrame = o;
          }
        });
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });
  };

  e.prototype.tempGet = function (t) {
    var e = t ? 10 : 1;

    var o = _pInfo["default"].ins.getCoin();

    _pInfo["default"].ins.addCoin(this.goldNum * e);

    var n;
    n = _game["default"].type !== _pInfo.gameType.festival || _festivalMgr["default"].ins.isJigsawMax() ? "puzzle_pieces" : "newYear_pieces";

    _bagMgr["default"].ins.addItem(n, e);

    var i = this.goldNum * e;
    var r = e;
    var a = this.rew1Lbl.node;
    var h = this.rew2Lbl.node;
    var f = this.node;
    var g = f.convertToWorldSpaceAR(a.position);
    var y = f.convertToWorldSpaceAR(h.position);

    _panelMgr["default"].ins.open("ui/ui_flyAni", {
      itemDatas: [{
        itemId: "coin",
        worldPos: g,
        value: i
      }, {
        itemId: n,
        worldPos: y,
        value: r
      }],
      hideCb: function hideCb() {
        _pInfo.chgScene(_pInfo.sceneType.main, {
          cb: _levelMgr["default"].ins.updJigAndPop
        });
      },
      showCoin: o
    });

    this.hideThis();
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onGet = function () {
    // 💝 检查是否为现金奖励模式
    if (this.hasCashReward) {
      // 现金奖励模式下，单倍也是领取现金
      console.log("💰 领取单倍现金奖励: ¥" + this.cashAmount); // 💝 现金在游戏完成时已经添加了，这里只是确认领取

      try {
        if (typeof window !== 'undefined' && window.alert) {
          window.alert("💝 卷卷领取了￥" + this.cashAmount + "现金奖励！棒棒哒！");
        }
      } catch (alertError) {
        console.log("Alert显示失败:", alertError);
      }

      _rewardMgr["default"].showLoveSupportMessage();

      _rewardMgr["default"].clearCashRewardFlag();

      this.hideThis();
    } else {
      // 💝 如果不是现金奖励但有待处理标记，也要清除
      if (_rewardMgr["default"].hasPendingCashReward()) {
        _rewardMgr["default"].clearCashRewardFlag();
      }

      this.tempGet(!1);
    }
  };

  e.prototype.onAdGet = function () {
    console.log("🔘 点击领取奖金按钮");
    console.log("🔍 当前hasCashReward状态:", this.hasCashReward);
    console.log("🔍 当前cashAmount:", this.cashAmount); // 💝 检查是否为现金奖励模式

    if (this.hasCashReward) {
      console.log("💰 执行现金奖励逻辑");
      this.onGetCashReward();
    } else {
      console.log("🎮 执行游戏道具奖励逻辑");
      this.tempGet(!0);
    }
  };

  e.prototype.initAdDotEvent = function () {
    _game["default"].type !== _pInfo.gameType.festival || _festivalMgr["default"].ins.isJigsawMax() ? this.adGetBtn.node.adDotData = "主线十倍奖励" : this.adGetBtn.node.adDotData = "活动十倍奖励";
  }; // 💝 设置现金奖励显示（复用原有UI结构）


  e.prototype.setupCashReward = function () {
    try {
      console.log("🔍 开始检查现金奖励..."); // 检查是否刚刚获得了现金奖励

      var hasRecentReward = _rewardMgr["default"].getLastRewardInfo();

      console.log("🎯 getLastRewardInfo返回:", hasRecentReward);

      if (hasRecentReward) {
        console.log("💰 检测到现金奖励: ¥" + hasRecentReward.amount); // 设置现金奖励状态

        this.hasCashReward = true;
        this.cashAmount = hasRecentReward.amount; // 修改现金奖励显示（用户已将右侧改为单一现金奖励显示）

        if (this.rew3Lbl) {
          this.rew3Lbl.string = "+¥" + hasRecentReward.amount;
          console.log("💰 rew3Lbl设置为现金奖励: +¥" + hasRecentReward.amount);
        } // rew4Lbl已删除，不再设置


        console.log("✅ 现金奖励UI已设置: " + (this.rew3Lbl ? this.rew3Lbl.string : "rew3Lbl未绑定"));
        console.log("✅ hasCashReward状态:", this.hasCashReward);
        console.log("✅ cashAmount:", this.cashAmount);
      } else {
        console.log("💰 无现金奖励，使用原有逻辑");
        this.hasCashReward = false; // 恢复原有的游戏道具显示逻辑已经在init中处理了
      }
    } catch (error) {
      console.log("❌ 设置现金奖励失败:", error);
      this.hasCashReward = false;
    }
  }; // 💝 领取现金奖励


  e.prototype.onGetCashReward = function () {
    try {
      console.log("💰 点击领取现金奖励: ¥" + this.cashAmount); // 💝 现金在游戏完成时已经添加了，这里只是确认领取
      // 显示奖励领取成功提示

      try {
        if (typeof window !== 'undefined' && window.alert) {
          window.alert("🎉 恭喜卷卷！￥" + this.cashAmount + "现金奖励已成功领取！");
        } else {
          var _tipMgr = require("tipMgr");

          _tipMgr["default"].ins.showTip("卷卷获得￥" + this.cashAmount + "奖励！", false);
        }
      } catch (tipError) {
        console.log("提示显示失败:", tipError);
      } // 显示菌子支持消息


      _rewardMgr["default"].showLoveSupportMessage(); // 💝 清除现金奖励标记，防止第二次弹窗


      _rewardMgr["default"].clearCashRewardFlag(); // 关闭弹窗


      this.hideThis();
      console.log("🎉 现金奖励确认完成！（余额已在游戏完成时更新）");
    } catch (error) {
      console.log("❌ 领取现金奖励失败:", error);
    }
  };

  __decorate([y(cc.Label)], e.prototype, "rew1Lbl", void 0);

  __decorate([y(cc.Label)], e.prototype, "rew2Lbl", void 0);

  __decorate([y(cc.Label)], e.prototype, "rew3Lbl", void 0);

  __decorate([y(cc.Label)], e.prototype, "rew4Lbl", void 0);

  __decorate([y(cc.Button)], e.prototype, "adGetBtn", void 0);

  __decorate([y([cc.Sprite])], e.prototype, "typeSps", void 0);

  return __decorate([g], e);
}(_baseUI["default"]);

exports["default"] = m;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_deskReward.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8ad3bzV0+JPOLqI0/63veUG', 'ui_deskReward');
// scripts/ui_deskReward.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _pConst = require("pConst");

var _res = require("res");

var _cfgMgr = require("cfgMgr");

var _panelMgr = require("panelMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var f = cc._decorator;
var g = f.ccclass;
var y = f.property;

var m = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.iconSpr = null;
    e.deskSpr = null;
    e.numLb = null;
    e.infoLb = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    _evts["default"].opE.on(this.onOperTap.bind(this));
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].ADD_DESKTOP:
        this.addDesktopCb(t.data);
    }
  };

  e.prototype.init = function () {
    var t;
    var e;
    var o = this;

    _res["default"].ins.l("pages/page_level/zhuxian_07_3", cc.SpriteFrame, "resSps").then(function (t) {
      o.node && o.node.isValid && (o.deskSpr.spriteFrame = t);
    })["catch"](function () {
      console.error("getResSpErr");
    });

    var n = (null === (e = null === (t = _cfgMgr["default"].serverCfg.add_desktop) || void 0 === t ? void 0 : t.rules) || void 0 === e ? void 0 : e.times) || 50;
    this.numLb.string = "+" + n;
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onBtnAdd = function () {
    switch (_idx.platform.string()) {
      case _pConst.PFCode.Bytedance:
        _idx.platform.addShortcut();

    }
  };

  e.prototype.addDesktopCb = function (t) {
    var e;
    var o;

    var n = _pInfo["default"].ins.getAddDesk();

    if (t && !n) {
      _pInfo["default"].ins.setAddDesk(!0);

      var i = (null === (o = null === (e = _cfgMgr["default"].serverCfg.add_desktop) || void 0 === e ? void 0 : e.rules) || void 0 === o ? void 0 : o.times) || 50;

      _pInfo["default"].ins.addPower(i);

      var r = this.numLb.node;
      var a = r.parent.convertToWorldSpaceAR(r.position);

      _panelMgr["default"].ins.open("ui/ui_flyAni", {
        itemDatas: [{
          itemId: "times",
          worldPos: a,
          value: i
        }]
      });

      this.hideThis();
    }
  };

  e.prototype.onDestroy = function () {
    cc.assetManager.releaseAsset(this.iconSpr.spriteFrame);
  };

  __decorate([y(cc.Sprite)], e.prototype, "iconSpr", void 0);

  __decorate([y(cc.Sprite)], e.prototype, "deskSpr", void 0);

  __decorate([y(cc.Label)], e.prototype, "numLb", void 0);

  __decorate([y(cc.Label)], e.prototype, "infoLb", void 0);

  return __decorate([g], e);
}(_baseUI["default"]);

exports["default"] = m;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_mail.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e7ea9rOEC9HW6BXUtMwquOJ', 'ui_mail');
// scripts/ui_mail.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _lang = require("lang");

var _mailItem = require("mailItem");

var _mailMgr = require("mailMgr");

var _panelMgr = require("panelMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var f = cc._decorator;
var g = f.ccclass;
var y = f.property;

var m = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.scrollView = null;
    e.mailPfb = null;
    e.emptyNode = null;
    e.getAllNode = null;
    e.eventFunc = null;
    e.isLoad = !1;
    e._mailItem = [];
    e.lastScrollPosition = 0;
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {};

  e.prototype.init = function () {
    for (var t = this, e = [], o = 0; o < arguments.length; o++) {
      e[o] = arguments[o];
    }

    _mailMgr["default"].ins.getMail(this.updMail.bind(this));

    this.scrollView.node.on("scrolling", function () {
      t.pageScroll();
    }, this);
  };

  e.prototype.updMail = function () {
    var t = this;

    if (!this.isLoad && this.scrollView) {
      this.isLoad = !0;
      var e = this.scrollView.content;
      e.children.forEach(function (e) {
        t._mailItem.push(e);
      });
      e.removeAllChildren();
      var o = _mailMgr["default"].ins.mailInfo.mail;
      var n = Object.keys(o);

      if (this.emptyNode.active = 0 == n.length, n.length) {
        for (var i = this.mailPfb, r = _mailMgr["default"].ins, a = 0; a < n.length; a++) {
          var s = n[a];

          if (r.serverMail[s]) {
            var u = r.mailInfo.mail[s];

            var p = this._mailItem.shift();

            p || (p = cc.instantiate(i));
            this.scrollView.content.addChild(p, 0);
            p.active = !1;
            p.getComponent(_mailItem["default"]).init(Number(s), u);
          }
        }

        this.isLoad = !1;
        this.lastScrollPosition = 0;
        this.updState({
          type: "load"
        });
        this.scheduleOnce(this.pageScroll.bind(this, !1), 0);
      } else this.isLoad = !1;
    }
  };

  e.prototype.pageScroll = function (t) {
    void 0 === t && (t = !0);
    var e = this.scrollView.content.children;
    var o = this.scrollView.getScrollOffset().y;

    if (!(t && Math.abs(o - this.lastScrollPosition) < 1)) {
      for (var n = this.scrollView.content.parent.height / 2, i = 0; i < e.length; i++) {
        var r = e[i];
        var a = r.convertToWorldSpaceAR(cc.Vec2.ZERO);
        (a = this.scrollView.content.parent.convertToNodeSpaceAR(a)).y + r.height / 2 < -n || a.y - r.height / 2 > n ? r.children[0].active = !1 : r.children[0].active = !0;
      }

      this.lastScrollPosition = o;
    }
  };

  e.prototype.showLoadAni = function (t) {
    cc.tween(t).to(0.5, {
      x: 0
    }, {
      easing: "backInOut"
    }).start();
  };

  e.prototype.showChangegAni = function (t) {
    cc.tween(t).to(0.2, {
      opacity: 255
    }).start();
  };

  e.prototype.chgAni = function (t, e) {
    void 0 === e && (e = 0);
    t.active = !0;
    this.showChgAni ? (t.opacity = 0, this.scheduleOnce(this.showChangegAni.bind(this, t), 0.1 * (e + 1))) : (t.x = (cc.winSize.width + t.width) / 2, this.scheduleOnce(this.showLoadAni.bind(this, t), 0.05 * e));
  };

  e.prototype.mailSort = function () {
    this.scrollView.content.children.sort(function (t, e) {
      return t.getComponent(_mailItem["default"]).state - e.getComponent(_mailItem["default"]).state;
    });
    this.scrollView.content.getComponent(cc.Layout).updateLayout();
  };

  e.prototype.getItemById = function (t) {
    for (var e = this.scrollView.content.children, o = 0; o < e.length; o++) {
      var n = e[o].getComponent(_mailItem["default"]);
      if (t === n.id) return {
        item: n,
        index: o
      };
    }
  };

  e.prototype.updState = function (t) {
    var e = this;
    var o = this.scrollView.content;
    var n = _mailMgr["default"].ins.serverMail;
    if (t) if ("keyAward" === t.type) o.children.forEach(function (t, o) {
      var i = t.getComponent(_mailItem["default"]);
      n[i.id].props && i.state !== _mailMgr.mailState.award && (i.updateState(_mailMgr.mailState.award), e.chgAni(t, o));
    });else if ("load" === t.type) this.mailSort(), o.children.forEach(function (t, o) {
      e.chgAni(t, o);
    });else if ("keyDelete" === t.type) {
      var i = [];
      o.children.forEach(function (t, e) {
        var o = t.getComponent(_mailItem["default"]);
        o.state === _mailMgr.mailState.award && i.push({
          node: o.node,
          index: e
        });
      });
      i.forEach(function (t) {
        o.children.splice(t.index, 1);
        t.node.destroy();
        o.getComponent(cc.Layout).updateLayout();
      });
    } else if ("read" === t.type) {
      if (t.id) {
        var r = this.getItemById(t.id);
        var a = _mailMgr["default"].ins.mailInfo.mail[t.id];
        r && r.item && (r.item.updateState(a), this.chgAni(r.item.node), this.mailSort());
      }
    } else if ("delete" === t.type) {
      var s = this.getItemById(t.id);
      s && s.item.node.destroy();
      this.scheduleOnce(function () {
        o.children.splice(s.index, 1);
        e.mailSort();
      });
    }
    this.scheduleOnce(function () {
      e.emptyNode.active = 0 == e.scrollView.content.children.length, e.pageScroll.bind(e, !1);
    });
    this.showChgAni || (this.showChgAni = !0);
  };

  e.prototype.keyDelete = function () {
    if (!this.isLoad) {
      var t = 0;
      Object.values(_mailMgr["default"].ins.mailInfo.mail).forEach(function (e) {
        e === _mailMgr.mailState.award && t++;
      });
      t <= 0 ? _tipMgr["default"].ins.showTip(_lang.lang[10005]) : _mailMgr["default"].ins.deleteMail();
    }
  };

  e.prototype.keyAward = function () {
    if (!this.isLoad) if (Object.keys(_mailMgr["default"].ins.mailInfo.mail).length <= 0) _tipMgr["default"].ins.showTip(_lang.lang[10006]);else {
      var t = _pInfo["default"].ins.Mail;
      var e = _mailMgr["default"].ins;
      var o = {};

      for (var n in t.mail) {
        if (t.mail[n] !== _mailMgr.mailState.award) {
          var i = e.serverMail;

          if (n && i[n]) {
            var r = JSON.parse(i[n].props);

            for (var a in r) {
              r.hasOwnProperty(a) && (o[a] ? o[a] += Number(r[a]) : o[a] = Number(r[a]));
            }
          }
        }
      }

      if (_mailMgr["default"].ins.getAward()) {
        var c = [];
        var h = this.getAllNode.parent.convertToWorldSpaceAR(this.getAllNode.position);

        for (var f in o) {
          var g = o[f];
          var y = {};
          y.itemId = f;
          y.worldPos = h;
          y.value = g;
          c.push(y);
        }

        c.length && (c.length > 10 && (c.length = 10), _panelMgr["default"].ins.open("ui/ui_flyAni", {
          itemDatas: c
        }));
      } else _tipMgr["default"].ins.showTip(_lang.lang[10006]);
    }
  };

  e.prototype.onLoad = function () {
    this.eventFunc = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eventFunc);
  };

  e.prototype.onDestroy = function () {
    _evts["default"].opE.off(this.eventFunc);

    this.eventFunc = null;
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].UPDMAIL:
        this.updState(t.data);
    }
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  __decorate([y(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([y(cc.Prefab)], e.prototype, "mailPfb", void 0);

  __decorate([y(cc.Node)], e.prototype, "emptyNode", void 0);

  __decorate([y(cc.Node)], e.prototype, "getAllNode", void 0);

  return __decorate([g], e);
}(_baseUI["default"]);

exports["default"] = m;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_raceTip.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '62b5dz26olNypR9n2CUV7P8', 'ui_raceTip');
// scripts/ui_raceTip.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _res = require("res");

var _panelMgr = require("panelMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var _chaptBtn = require("chaptBtn");

var p = cc._decorator;
var d = p.ccclass;
var h = p.property;

var f = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.btnsNode = null;
    e.pageNodes = null;
    e.pageBaseTipSps = [];
    e.pageBaseScorll = null;
    e.pageBaseSlider = null;
    e.pageTutoTipSps = [];
    e.pageTutoScorll = null;
    e.pageTutoSlider = null;
    e.btnsComp = [];
    e.curPageIdx = 1;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    for (var t = this, e = function e(_e, n, i) {
      var r = n[_e].getComponent(_chaptBtn["default"]);

      r.setState(!1);
      i.push(r);

      n[_e].on("click", function () {
        t.chgViewData(_e);
      }, o);
    }, o = this, n = 0, i = this.btnsNode.children, r = this.btnsComp, s = i.length; n < s; n++) {
      e(n, i, r);
    }

    this.pageBaseSlider.y = 0;
    this.pageBaseScorll.scrollToTop();
    this.pageBaseScorll.node.on("scrolling", this.scrollCbBase.bind(this), this);

    var c = function c(e) {
      var o = e + 1;

      _res["default"].ins.getBundleByString("resSps").then(function (n) {
        n.load("raceTip/img_bz_bznr" + o, cc.SpriteFrame, function (o, n) {
          !o && t.node && t.node.isValid && (t.pageBaseTipSps[e].spriteFrame = n);
        });
      })["catch"](function (t) {
        console.error("RTool.ins.getBundleByString('resSps')", t);
      });
    };

    for (n = 0; n < 4; n++) {
      c(n);
    }

    this.pageTutoSlider.y = 0;
    this.pageTutoScorll.scrollToTop();
    this.pageTutoScorll.node.on("scrolling", this.scrollCbTuto.bind(this), this);

    var l = function l(e) {
      var o = e + 1;

      _res["default"].ins.getBundleByString("resSps").then(function (n) {
        n.load("raceTip/img_bz_jcjc" + o, cc.SpriteFrame, function (o, n) {
          !o && t.node && t.node.isValid && (t.pageTutoTipSps[e].spriteFrame = n);
        });
      })["catch"](function (t) {
        console.error("RTool.ins.getBundleByString('resSps')", t);
      });
    };

    for (n = 0; n < 3; n++) {
      l(n);
    }

    this.chgViewData(0);
  };

  e.prototype.init = function (t) {
    var e = t.pageIdx;
    var o = t.closeCb;
    this.closeCb = o;
    this.chgViewData(e);
  };

  e.prototype.chgViewData = function (t) {
    var e = this.curPageIdx;

    if (e != t) {
      this.pageNodes.children[0].active = !1;
      this.pageNodes.children[1].active = !1;
      this.pageNodes.children[2].active = !1;
      this.pageNodes.children[t].active = !0;
      var o = this.btnsComp;
      o[e].setState(!1);
      o[t].setState(!0);
      this.curPageIdx = t;
    }
  };

  e.prototype.scrollCbBase = function () {
    var t = this.pageBaseScorll.getMaxScrollOffset();
    var e = (this.pageBaseScorll.getContentPosition().y - 300) / t.y;
    e = (e = e > 1 ? 1 : e) < 0 ? 0 : e;
    this.pageBaseSlider.y = 556 * -e;
  };

  e.prototype.scrollCbTuto = function () {
    var t = this.pageTutoScorll.getMaxScrollOffset();
    var e = (this.pageTutoScorll.getContentPosition().y - 300) / t.y;
    e = (e = e > 1 ? 1 : e) < 0 ? 0 : e;
    this.pageTutoSlider.y = 556 * -e;
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.hide = function () {
    var e;
    null === (e = this.closeCb) || void 0 === e || e.call(this);
    return t.prototype.hide.call(this);
  };

  e.prototype.onBtnGuide = function () {
    _pInfo.chgScene(_pInfo.sceneType.guide);
  };

  e.prototype.onBtnTrain = function () {
    _pInfo.chgScene(_pInfo.sceneType.game, {
      gameType: _pInfo.gameType.practice
    });
  };

  e.prototype.onBtnContact = function () {
    _panelMgr["default"].ins.open("ui/ui_contentUs", null);
  };

  e.prototype.onDestroy = function () {
    _res["default"].ins.getBundleByString("resSps").then(function (t) {
      for (var e = 0; e < 4; e++) {
        var o = e + 1;
        cc.assetManager.releaseAsset(t.get("raceTip/img_bz_bznr" + o, cc.SpriteFrame));
      }

      for (e = 0; e < 3; e++) {
        o = e + 1, cc.assetManager.releaseAsset(t.get("raceTip/img_bz_jcjc" + o, cc.SpriteFrame));
      }
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });
  };

  __decorate([h(cc.Node)], e.prototype, "btnsNode", void 0);

  __decorate([h(cc.Node)], e.prototype, "pageNodes", void 0);

  __decorate([h([cc.Sprite])], e.prototype, "pageBaseTipSps", void 0);

  __decorate([h(cc.ScrollView)], e.prototype, "pageBaseScorll", void 0);

  __decorate([h(cc.Node)], e.prototype, "pageBaseSlider", void 0);

  __decorate([h([cc.Sprite])], e.prototype, "pageTutoTipSps", void 0);

  __decorate([h(cc.ScrollView)], e.prototype, "pageTutoScorll", void 0);

  __decorate([h(cc.Node)], e.prototype, "pageTutoSlider", void 0);

  return __decorate([d], e);
}(_baseUI["default"]);

exports["default"] = f;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_lvInfo.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e1b77tK3Q9Hy5iP5k4ikNUN', 'ui_lvInfo');
// scripts/ui_lvInfo.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _global = require("global");

var _festivalMgr = require("festivalMgr");

var _levelMgr = require("levelMgr");

var _panelMgr = require("panelMgr");

var _pInfo = require("pInfo");

var _main = require("main");

var _baseUI = require("baseUI");

var h = cc._decorator;
var f = h.ccclass;
var g = h.property;

var y = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.lvLB = null;
    e.numLv = null;
    e.diffLb = null;
    e.curLB = null;
    e.costLBL = null;
    e.costLBR = null;
    e.jigsawSp = null;
    e.kuangSp = null;
    e.matArr = [];
    e.aniSpr = null;
    e.boomSpine = null;
    e.isShow = !1;
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {};

  e.prototype.init = function () {
    for (var t, e = [], o = 0; o < arguments.length; o++) {
      e[o] = arguments[o];
    }

    this.isShow = (null === (t = e[0]) || void 0 === t ? void 0 : t.isShow) || !1;
    this.kuangSp.setMaterial(0, this.matArr[0]);
    this.showLvInfo();
  };

  e.prototype.showLvInfo = function () {
    var t = this;
    var e = _pInfo["default"].ins;
    var o = _levelMgr["default"].ins;
    var n = e.getPuzzleLvl();
    var i = n - 54 * (Math.ceil(n / 54) - 1);
    this.lvLB.string = "第" + i + "关";
    var r = o.getPuzzleInfo().size;
    this.numLv.string = r + "x" + r;
    this.diffLb.string = o.getLevelDiffStr();
    this.curLB.string = e.getConsWinTimes() + "";
    this.costLBL.string = o.getLevelCost() + "/";
    this.costLBR.string = "" + e.getPower();
    var a = new cc.Color(251, 234, 168);
    this.costLBR.node.color = o.getLevelCost() > e.getPower() ? cc.Color.RED : a;

    var s = _pInfo["default"].ins.getPuzzleLvl();

    if (s % 9 == 1 && (this.isShow = !1), this.isShow) {
      var l = this.updJigsaw(s - 1);
      this.scheduleOnce(function () {
        t.showPopAni(l);
      }, 0.34);
    } else this.updJigsaw(s);
  };

  e.prototype.updJigsaw = function (t) {
    var e;
    var o = this;

    var n = (t - 1) % _levelMgr["default"].ins.getPuzzleLvlCount();

    var i = Math.ceil(n / 9) || 1;
    e = 9 == (e = n >= 9 * i ? 9 : n > 9 * i - 9 ? n % 9 : 0) ? 0 : e;

    _levelMgr["default"].ins.getJigsawIcon(i).then(function (t) {
      t && (o.jigsawSp.spriteFrame = t);
    })["catch"](function () {
      console.error("getIconErr");
    });

    this.jigsawSp.getMaterial(0).setProperty("height", e);
    return e;
  };

  e.prototype.showPopAni = function (t) {
    var e = this;

    _levelMgr["default"].ins.getPuzzleSprFrame(_pInfo["default"].ins.getPuzzleLvl() - 1).then(function (o) {
      if (e.node) {
        e.aniSpr.spriteFrame = o;
        var n = t % 3;
        var i = Math.floor(t / 3);
        var r = e.aniSpr.node;
        r.x += 40 * n;
        r.y -= 40 * i;
        r.scale = 0.1;
        cc.tween(r).to(0.02, {
          scale: 1.1
        }).to(0.06, {
          scale: 0.7
        }).to(0.1, {
          scale: 1
        }).delay(0.7).call(function () {
          e.boomSpine.node.active = !0;
          e.aniSpr.spriteFrame = null;

          var t = _pInfo["default"].ins.getPuzzleLvl();

          e.updJigsaw(t);
        }).start();
      }
    });
  };

  e.prototype.onBtnStart = function () {
    var t = _levelMgr["default"].ins.getLevelCost();

    if (_pInfo["default"].ins.getPower() < t) _panelMgr["default"].ins.open("ui/ui_getRes", {
      itemId: "times"
    });else {
      var e = this.costLBL.node.convertToWorldSpaceAR(cc.Vec3.ZERO);
      var o = _main["default"].ins;
      o && (o.blockComp.enabled = !0);
      o.usePower(-t, e);
      _global["default"].puzzlv = _pInfo["default"].ins.getPuzzleLvl() - 1;

      _festivalMgr["default"].ins.updPro(_festivalMgr.fesTaskKey.costPower, t);
    }
  };

  e.prototype.hideThis = function () {
    this.kuangSp.setMaterial(0, this.matArr[1]);
    this.hide();
  };

  __decorate([g(cc.Label)], e.prototype, "lvLB", void 0);

  __decorate([g(cc.Label)], e.prototype, "numLv", void 0);

  __decorate([g(cc.Label)], e.prototype, "diffLb", void 0);

  __decorate([g(cc.Label)], e.prototype, "curLB", void 0);

  __decorate([g(cc.Label)], e.prototype, "costLBL", void 0);

  __decorate([g(cc.Label)], e.prototype, "costLBR", void 0);

  __decorate([g(cc.Sprite)], e.prototype, "jigsawSp", void 0);

  __decorate([g(cc.Sprite)], e.prototype, "kuangSp", void 0);

  __decorate([g(cc.Material)], e.prototype, "matArr", void 0);

  __decorate([g(cc.Sprite)], e.prototype, "aniSpr", void 0);

  __decorate([g(sp.Skeleton)], e.prototype, "boomSpine", void 0);

  return __decorate([f], e);
}(_baseUI["default"]);

exports["default"] = y;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_preReward.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b1e17kl/lRDSpgVpOh23ktk', 'ui_preReward');
// scripts/ui_preReward.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _item = require("item");

var _baseUI = require("baseUI");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.itemsNode = null;
    e.itemPre = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    var e = this;
    t.itemDatas.forEach(function (t) {
      if (Number(t.value) > 0) {
        var o = cc.instantiate(e.itemPre);
        o.active = !0;
        o.parent = e.itemsNode;
        o.getComponent(_item["default"]).initByData(t.itemId, t.value);
      }
    });
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.getItem = function () {};

  __decorate([u(cc.Node)], e.prototype, "itemsNode", void 0);

  __decorate([u(cc.Node)], e.prototype, "itemPre", void 0);

  return __decorate([l], e);
}(_baseUI["default"]);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfcHJlUmV3YXJkLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9pdGVtIiwicmVxdWlyZSIsIl9iYXNlVUkiLCJjIiwiY2MiLCJfZGVjb3JhdG9yIiwibCIsImNjY2xhc3MiLCJ1IiwicHJvcGVydHkiLCJwIiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsIml0ZW1zTm9kZSIsIml0ZW1QcmUiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJpbml0IiwiaXRlbURhdGFzIiwiZm9yRWFjaCIsIk51bWJlciIsIm8iLCJpbnN0YW50aWF0ZSIsImFjdGl2ZSIsInBhcmVudCIsImdldENvbXBvbmVudCIsImluaXRCeURhdGEiLCJpdGVtSWQiLCJoaWRlVGhpcyIsImhpZGUiLCJnZXRJdGVtIiwiX19kZWNvcmF0ZSIsIk5vZGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsS0FBSyxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFuQjs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlFLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csU0FBRixHQUFjLElBQWQ7SUFDQUgsQ0FBQyxDQUFDSSxPQUFGLEdBQVksSUFBWjtJQUNBLE9BQU9KLENBQVA7RUFDSDs7RUFDREssU0FBUyxDQUFDTCxDQUFELEVBQUlELENBQUosQ0FBVDs7RUFDQUMsQ0FBQyxDQUFDTSxTQUFGLENBQVlDLElBQVosR0FBbUIsVUFBVVIsQ0FBVixFQUFhO0lBQzVCLElBQUlDLENBQUMsR0FBRyxJQUFSO0lBQ0FELENBQUMsQ0FBQ1MsU0FBRixDQUFZQyxPQUFaLENBQW9CLFVBQVVWLENBQVYsRUFBYTtNQUM3QixJQUFJVyxNQUFNLENBQUNYLENBQUMsQ0FBQ1osS0FBSCxDQUFOLEdBQWtCLENBQXRCLEVBQXlCO1FBQ3JCLElBQUl3QixDQUFDLEdBQUduQixFQUFFLENBQUNvQixXQUFILENBQWVaLENBQUMsQ0FBQ0ksT0FBakIsQ0FBUjtRQUNBTyxDQUFDLENBQUNFLE1BQUYsR0FBVyxDQUFDLENBQVo7UUFDQUYsQ0FBQyxDQUFDRyxNQUFGLEdBQVdkLENBQUMsQ0FBQ0csU0FBYjtRQUNBUSxDQUFDLENBQUNJLFlBQUYsQ0FBZTNCLEtBQUssV0FBcEIsRUFBOEI0QixVQUE5QixDQUF5Q2pCLENBQUMsQ0FBQ2tCLE1BQTNDLEVBQW1EbEIsQ0FBQyxDQUFDWixLQUFyRDtNQUNIO0lBQ0osQ0FQRDtFQVFILENBVkQ7O0VBV0FhLENBQUMsQ0FBQ00sU0FBRixDQUFZWSxRQUFaLEdBQXVCLFlBQVk7SUFDL0IsS0FBS0MsSUFBTDtFQUNILENBRkQ7O0VBR0FuQixDQUFDLENBQUNNLFNBQUYsQ0FBWWMsT0FBWixHQUFzQixZQUFZLENBQUUsQ0FBcEM7O0VBQ0FDLFVBQVUsQ0FBQyxDQUFDekIsQ0FBQyxDQUFDSixFQUFFLENBQUM4QixJQUFKLENBQUYsQ0FBRCxFQUFldEIsQ0FBQyxDQUFDTSxTQUFqQixFQUE0QixXQUE1QixFQUF5QyxLQUFLLENBQTlDLENBQVY7O0VBQ0FlLFVBQVUsQ0FBQyxDQUFDekIsQ0FBQyxDQUFDSixFQUFFLENBQUM4QixJQUFKLENBQUYsQ0FBRCxFQUFldEIsQ0FBQyxDQUFDTSxTQUFqQixFQUE0QixTQUE1QixFQUF1QyxLQUFLLENBQTVDLENBQVY7O0VBQ0EsT0FBT2UsVUFBVSxDQUFDLENBQUMzQixDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBMUJPLENBMEJMVixPQUFPLFdBMUJGLENBQVI7O0FBMkJBSixPQUFPLFdBQVAsR0FBa0JZLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9pdGVtID0gcmVxdWlyZShcIml0ZW1cIik7XG52YXIgX2Jhc2VVSSA9IHJlcXVpcmUoXCJiYXNlVUlcIik7XG52YXIgYyA9IGNjLl9kZWNvcmF0b3I7XG52YXIgbCA9IGMuY2NjbGFzcztcbnZhciB1ID0gYy5wcm9wZXJ0eTtcbnZhciBwID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuaXRlbXNOb2RlID0gbnVsbDtcbiAgICAgICAgZS5pdGVtUHJlID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgfVxuICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICBlLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgICB0Lml0ZW1EYXRhcy5mb3JFYWNoKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICBpZiAoTnVtYmVyKHQudmFsdWUpID4gMCkge1xuICAgICAgICAgICAgICAgIHZhciBvID0gY2MuaW5zdGFudGlhdGUoZS5pdGVtUHJlKTtcbiAgICAgICAgICAgICAgICBvLmFjdGl2ZSA9ICEwO1xuICAgICAgICAgICAgICAgIG8ucGFyZW50ID0gZS5pdGVtc05vZGU7XG4gICAgICAgICAgICAgICAgby5nZXRDb21wb25lbnQoX2l0ZW0uZGVmYXVsdCkuaW5pdEJ5RGF0YSh0Lml0ZW1JZCwgdC52YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuaGlkZVRoaXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaGlkZSgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuZ2V0SXRlbSA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIF9fZGVjb3JhdGUoW3UoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJpdGVtc05vZGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFt1KGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiaXRlbVByZVwiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtsXSwgZSk7XG59KShfYmFzZVVJLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gcDtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/uData.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '86181ZnrptJ9In2AI14myYD', 'uData');
// scripts/uData.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _cfgMgr = require("cfgMgr");

var _global = require("global");

var _bagMgr = require("bagMgr");

var _taskMgr = require("taskMgr");

var _pInfo = require("pInfo");

var _adC = require("adC");

var _evts = require("evts");

var _idx = require("idx");

var _numberUtils = require("NumberUtils");

var _pConst = require("pConst");

var _request = require("request");

var _time = require("time");

var g = function () {
  function t() {
    this.basic = {
      name: "",
      uid: 0,
      userId: "123",
      openId: "test2",
      sessionKey: "",
      headImg: "",
      isAuth: null,
      isNew: null,
      anonymous_openid: null
    };
    this.setting = {
      effectSound: !0,
      bgmSound: !0,
      vibrate: !0,
      effectVolume: 0.5,
      bgmVolume: 0.5,
      tip: !0
    };
    this.localData = null;
    this.network = {
      networkType: "none"
    };
    this.launchOption = {
      scene: 0,
      query: {}
    };
    this.flushTimeoutKeys = {};
    this.enterAt = Date.now();
    this.loginAt = null;
  }

  Object.defineProperty(t, "ins", {
    get: function get() {
      this._ins || (this._ins = new t());
      return this._ins;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.onLogin = function (t) {
    var e;
    var o;
    var n = this;

    if (!this.loginAt) {
      var i;
      this.loadSetting();
      var r = this.getLocalData();

      if (t) {
        var a = t.puzzleLvl || 0;
        var s = (null === (e = null == t ? void 0 : t.bag) || void 0 === e ? void 0 : e.puzzle_pieces) || 0;
        var p = (null == r ? void 0 : r.puzzleLvl) || 0;
        var d = (null === (o = null == r ? void 0 : r.bag) || void 0 === o ? void 0 : o.puzzle_pieces) || 0;
        (a > p || s > d || !r.guideDone) && this.setLocalData(t);
      }

      this.loginAt = _time["default"].ins.serverTime;
      var h = this.basic;

      if (h.recordFlag = null !== (i = h.recordFlag) && void 0 !== i ? i : {}, null == this.getLocalDataByKey("register_date")) {
        var g = new Date();
        this.setLocalData({
          register_date: g.getTime()
        });

        _idx.platform.reportEvent(_idx.ERepEvt.createNewRole);
      } else _idx.platform.reportEvent(_idx.ERepEvt.login);

      this.getLocalDataByKey("login_date") || this.setLocalData({
        login_date: this.loginAt - 864e5
      });
      this.checkNewDay();

      _idx.platform.preloadVideo(_adC.VEnum[60]);

      var y = (_time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3)) % 60;
      0 != y && (y = 60 - y);
      setTimeout(function () {
        n.checkNewDay(), setInterval(function () {
          n.checkNewDay();
        }, 6e4);
      }, 1e3 * y);

      _evts["default"].plE.on(this.onOperTap.bind(this));
    }
  };

  t.prototype.onOperTap = function (t) {
    (null == t ? void 0 : t.onHide) && this.timeId && this._setLocalAndCloudData();
  };

  t.prototype.checkNewDay = function (t) {
    if (void 0 === t && (t = !0), !t || !_time["default"].ins.isSameDay) {
      _taskMgr["default"].taskReset();

      _pInfo["default"].ins.clearDailyData();

      var e = _cfgMgr["default"].serverCfg.qw_line_rules.rules.times.set.basic_times.val;

      _bagMgr["default"].ins.chgItemCount("qw_line_ticket", Number(e));

      _evts["default"].opE.emit({
        action: _evts["default"].UPD_MAIN_RED
      });

      this.loginAt = _time["default"].ins.serverTime;
      _time["default"].ins.loginT = _time["default"].ins.serverTime;
      var o = this.getLocalDataByKey("login_date");

      if (_time["default"].ins.serverTime - o >= 1728e5 && (_global["default"].twoDaysLeft = !0), this.setLocalData({
        login_date: this.loginAt
      }), t && !this.basic.isNew) {
        var c = 1e3 * _numberUtils["default"].RandomInt(1, 30);

        this.timeId = setTimeout(this._setLocalAndCloudData.bind(this), c);
      }

      _evts["default"].opE.emit({
        action: _evts["default"].UPD_PANEL
      });
    }
  };

  t.prototype.loadSetting = function () {
    var t = this;
    var e = Object.keys(this.setting);
    var o = this.setting;
    this.setting = _idx.platform.getStorage("setting") || this.setting;
    e.forEach(function (e) {
      var n;
      null == t.setting[e] && t.setSetting(((n = {})[e] = o[e], n));
    });
  };

  t.prototype.setSetting = function (t, e) {
    void 0 === e && (e = !0);
    this.setting = Object.assign(Object.assign({}, this.setting), t);

    _evts["default"].usE.emit({
      userData: this,
      kind: "setting"
    });

    e && _idx.platform.setStorage("setting", this.setting);
  };

  t.prototype.getSetting = function () {
    return this.setting;
  };

  t.prototype.setLocalData = function (t, e) {
    void 0 === e && (e = 10);
    var o = this.getLocalData();
    var n = this.localData = Object.assign(Object.assign({}, o), t);

    _idx.platform.setStorage("localData", this.localData);

    n && !this.timeId && (this.timeId = setTimeout(this._setLocalAndCloudData.bind(this), 1e3 * e));
  };

  t.prototype._setLocalAndCloudData = function () {// var t;
    // var e;
    // var o = this.localData;
    // if (o) {
    //     clearTimeout(this.timeId);
    //     this.timeId = null;
    //     var i =
    //         (null ===
    //             (e = null === (t = _cfgMgr.default.serverCfg) || void 0 === t ? void 0 : t.upload_user_backup) ||
    //         void 0 === e
    //             ? void 0
    //             : e.val) || 5;
    //     o.puzzleLvl > i && _request.default.ins.updateServerData(this.localData, "localData");
    //     _idx.platform.setCloudData && _idx.platform.setCloudData(JSON.stringify(this.localData));
    // }
  };

  t.prototype.restoreData = function (t) {
    t && (this.localData = t, _bagMgr["default"].ins.clearItem(), _idx.platform.setStorage("localData", this.localData), this.checkNewDay(), this._setLocalAndCloudData(), _global["default"].isReStore = 1, cc.game.restart());
  };

  t.prototype.getLocalData = function () {
    null == this.localData && (this.localData = _idx.platform.getStorage("localData") || {});
    return this.localData;
  };

  t.prototype.getLocalDataByKey = function (t) {
    return null == this.localData ? null : this.localData[t];
  };

  Object.defineProperty(t.prototype, "fakeUID", {
    get: function get() {
      return 10005 + 2 * this.basic.uid;
    },
    enumerable: !1,
    configurable: !0
  });

  t.prototype.setUserId = function (t) {
    this.basic.userId = t;
  };

  t.prototype.getUserId = function () {
    return this.basic.userId;
  };

  t.prototype.getUid = function () {
    return this.basic.uid;
  };

  t.prototype.setName = function (t) {
    this.basic.name = t;
  };

  t.prototype.getName = function () {
    return this.basic.name;
  };

  t.prototype.setHeadImg = function (t) {
    this.basic.headImg = t;
  };

  t.prototype.getHeadImg = function () {
    return this.basic.headImg;
  };

  t.prototype.setIsAuth = function (t) {
    this.basic.isAuth = t;
  };

  t.prototype.getIsAuth = function () {
    return this.basic.isAuth;
  };

  t.prototype.getIsNewUser = function () {
    return this.basic.isNew;
  };

  t.prototype.syncLaunchOption = function (t) {
    if (this.launchOption.query = {}, this.launchOption = Object.assign(Object.assign({}, this.launchOption), t), null == this.getLocalDataByKey("register_date")) {
      var e = this.getLaunchParam("ad_type", "");

      if ("" !== e) {
        this.setLocalData({
          ad_type: e
        });
        var o = this.getLaunchParam("addict_type", "");
        "" !== o && this.setLocalData({
          addict_type: o
        });
        var n = this.getLaunchParam("clickid", "");
        "" !== n && this.setLocalData({
          clickid: n
        });
      }
    }
  };

  t.prototype.getLaunchParam = function (t, e) {
    if (null == this.launchOption) return e;
    var o = this.launchOption[t];
    return null == o && null != this.launchOption.query && null != this.launchOption.query[t] ? o = this.launchOption.query[t] : e;
  };

  t.prototype.getLaunchOption = function () {
    return this.launchOption;
  };

  t.prototype.delayFlush = function (t, e, o) {
    void 0 === o && (o = 0);
    var n = this;
    var i = this.flushTimeoutKeys[e];
    i ? 0 === o && (clearTimeout(i), this.flushTimeoutKeys[e] = null, _idx.platform.setStorage(e, t)) : this.flushTimeoutKeys[e] = setTimeout(function () {
      n.flushTimeoutKeys[e] = null;

      _idx.platform.setStorage(e, t);
    }, 1e3 * o);
  };

  t.prototype.syncLoginData = function (t) {
    void 0 === t && (t = {});
    var e = this.basic;
    e.name = t.nickname;
    e.headImg = t.avatar;
    e.uid = t.game_uid;
    e.openId = t.openid;
    e.sessionKey = t.session_key;
    e.anonymous_openid = t.anonymous_openid;
    e.isNew = t.is_new_user;

    _evts["default"].opE.emit({
      action: _evts["default"].UPD_TOP_HEADINFO
    });

    var o = !t.is_register;

    var n = null == _idx.platform.getStorage("localData");

    _pConst.SDKConfig.comQuery = "from_game_uid=" + t.game_uid + "&share_time=";
    return [false, n];
  };

  return t;
}();

exports["default"] = g;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_rank.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '26842+g3mFAKqs5eUSbH3PX', 'ui_rank');
// scripts/ui_rank.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a;
var s;

var _idx = require("idx");

var _mySafeArea = require("mySafeArea");

var _request = require("request");

var _res = require("res");

var _time = require("time");

var _uData = require("uData");

var _lang = require("lang");

var _global = require("global");

var _rankMgr = require("rankMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var _rankItem = require("rankItem");

var w = cc._decorator;
var S = w.ccclass;
var T = w.property;

(function (t) {
  t[t.mian = 0] = "mian", t[t.daily = 1] = "daily", t[t.race = 2] = "race";
})(a || (a = {}));

(function (t) {
  t[t.score = 0] = "score";
  t[t.win = 1] = "win";
})(s || (s = {}));

var I = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.scrollView = null;
    e.dataTagBtnsSps = [];
    e.levelTagBtnsSps = [];
    e.dayTypeBtnsSps = [];
    e.viewItem = null;
    e.rankTop = [];
    e.myRank = null;
    e.topNode = null;
    e.loadingNode = null;
    e.closeNode = null;
    e.bgSpr = null;
    e.type = _rankMgr.rankType.Total;
    e.tag = _rankMgr.rankTag.mainScore;
    e.levelTag = a.mian;
    e.dataTag = s.score;
    e.last_view_inner_y = -1;
    e.THEME_H = 122;
    e.top_offest = 61;
    e.itemCount = 0;
    e.items = [];
    e.rankData = [];
    e.playAni = !0;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    if (this.node.height = cc.winSize.height, _global["default"].padScale) {
      this.bgSpr.node.scale = _global["default"].padScale;
      var t = (cc.view.getVisibleSize().width - 720) / 2;
      this.closeNode.x -= t;
    }

    var e = this.node.height - 1280;
    this.scrollView.node.height += e;
    this.scrollView.node.getChildByName("view").height += e;
    this.scrollView.vertical = !1;
    var o = _time["default"].ins.serverTime || Math.floor(new Date().getTime() / 1e3);

    if (o - _pInfo["default"].ins.getRankLastTimeData() >= 3600) {
      _pInfo["default"].ins.setRankLastTimeData(o);

      var n = _idx.platform.getUserInfo();

      var i = this.myRank.getComponent(_rankItem["default"]);
      n ? n.then(function (t) {
        _request["default"].ins.updateUserInfo(t);

        i.setHeadSp(_uData["default"].ins.getHeadImg());
      }, function () {
        i.setDefaultHead();
      }) : i.setDefaultHead();
    }
  };

  e.prototype.start = function () {
    var t = this;
    this.scheduleOnce(function () {
      var e = _mySafeArea.getSafeAreaRect().yMin;

      t.topNode.y -= e;
      t.scrollView.node.y -= e / 2;
      t.scrollView.node.getChildByName("view").height -= e;
      t.scrollView.content.y -= e / 2;
      t.scrollView.node.on("scrolling", function () {
        t.RefreshThemesVisible();
      }, t);
      t.loadingNode.position = t.scrollView.node.position;
      t.initData();

      _rankMgr["default"].ins.uploadRankData();
    });
  };

  e.prototype.initData = function () {
    this.refreshData();
  };

  e.prototype.refreshData = function () {
    this.levelTag === a.mian ? this.dataTag === s.score ? this.tag = _rankMgr.rankTag.mainScore : this.tag = _rankMgr.rankTag.mainWin : this.levelTag === a.daily && (this.dataTag === s.score ? this.tag = _rankMgr.rankTag.dailyScore : this.tag = _rankMgr.rankTag.dailyWin);
    this.getRankdata();
  };

  e.prototype.getRankdata = function () {
    var t = this;

    _rankMgr["default"].ins.getRankDataByType(this.tag, this.type).then(function (e) {
      t.dealData(e.data);
    }, function () {
      t.dealData([]);
    });
  };

  e.prototype.dealData = function (t) {
    this.node && (this.loadingNode.active = !1);
    var e = !1;
    var o = [];
    var n = _rankMgr["default"].ins.getMyRankDataByTag(this.tag, this.type) || 0;
    if (t) for (var i in o = o.concat(t)) {
      if ((r = o[i]).game_uid == _uData["default"].ins.getUid()) {
        r.nickname = _uData["default"].ins.getName();
        r.sort_value = n;
        r.game_uid = _uData["default"].ins.getUid();
        r.avatar = _uData["default"].ins.getHeadImg();
        e = !0;
        break;
      }
    }

    if (!e) {
      var r = {
        nickname: _uData["default"].ins.getName(),
        sort_value: n,
        game_uid: _uData["default"].ins.getUid(),
        avatar: _uData["default"].ins.getHeadImg()
      };
      o.push(r);
    }

    o.sort(function (t, e) {
      return e.sort_value - t.sort_value;
    });
    this.rankData = o;
    this.refreshPanel();
  };

  e.prototype.refreshPanel = function () {
    this.setMySelf();
    this.itemCount = 97;
    var t = this.THEME_H * this.itemCount + this.top_offest;
    this.scrollView.content.setContentSize(cc.size(cc.winSize.width, t));
    this.last_view_inner_y = -1;
    this.scrollView.stopAutoScroll();
    this.scrollView.scrollToTop();

    for (var e = 0; e < 3; e++) {
      var o = this.rankData[e];
      var n = this.rankTop[e];
      this.setRankTop(n, o);
    }

    this.RefreshThemesVisible();
  };

  e.prototype.RefreshThemesVisible = function (t) {
    var e = this;
    void 0 === t && (t = 0);
    var o = this.scrollView.getContentPosition();

    if (!(Math.abs(this.last_view_inner_y - o.y) < 0.01)) {
      this.last_view_inner_y = o.y;

      for (var n, i, r, a, s, c, l = function l() {
        n = -d * u.THEME_H - u.top_offest;
        i = u.scrollView.content.convertToWorldSpaceAR(cc.v2(0, n));
        r = u.node.convertToNodeSpaceAR(i);
        a = r.y < -p || r.y + u.THEME_H > p;
        s = d;
        var t = d + 3;
        var o = u.rankData[t];
        if (a) u.items[s] && (u.items[s].active = !1);else if (u.items[s]) {
          u.setItemInfo(u.items[s], t, o);
          var l = u.playAni;
          if (l) return u.items[s].x = 0, u.items[s].opacity = 0, u.scheduleOnce(function () {
            e.items[s].active = !0;
            e.last_view_inner_y = -1;
            e.RefreshThemesVisible(d + 1);
            l && e.showChgAni(e.items[s]);
          }, 0.06), "break";
          u.items[s].x = 0;
          u.items[s].opacity = 255;
          u.items[s].active = !0;
        } else {
          (c = cc.instantiate(u.viewItem)).active = !0;
          c.position = cc.v3(0, -d * u.THEME_H - u.top_offest);
          c.parent = u.scrollView.content;
          u.items[s] = c;
          u.setItemInfo(c, t, o);
          var h = u.playAni;
          if (h) return c.x = (cc.winSize.width + u.items[s].width) / 2, c.opacity = 255, u.scheduleOnce(function () {
            e.last_view_inner_y = -1;
            e.RefreshThemesVisible(d + 1);
            h && e.showLoadAni(c);
          }, 0.02), "break";
          c.opacity = 255;
          c.x = 0;
        }
        u.playAni = !1;
        d === u.itemCount - 1 && u.scheduleOnce(function () {
          e.scrollView.vertical = !0;
        }, 0.5);
      }, u = this, p = this.scrollView.node.height / 4 * 3, d = t; d < this.itemCount && "break" !== l(); d++) {
        ;
      }
    }
  };

  e.prototype.setRankTop = function (t, e) {
    var o = t.getComponent(_rankItem["default"]);
    e ? (o.setRankData(e), o.setGameUid(e.game_uid), o.setScore(e.sort_value), e.game_uid == _uData["default"].ins.getUid() ? (o.setSkin(_pInfo["default"].ins.getUsingSkin(), !1, !0), o.setNickName(_uData["default"].ins.getName()), o.setHeadSp(_uData["default"].ins.getHeadImg())) : (o.setSkin(null == e ? void 0 : e.uSkin, !1, !0), o.setNickName(e.nickname), e.avatar ? o.setHeadSp(e.avatar) : o.setDefaultHead())) : (o.setNickName("暂无"), o.setScore("0"), o.setDefaultHead());
  };

  e.prototype.setItemInfo = function (t, e, o, n) {
    void 0 === n && (n = !1);
    var i = t.getComponent(_rankItem["default"]);
    i.setIdx(Number(e) + 1 + "");
    o ? (i.setRankData(o), i.setGameUid(o.game_uid), i.setScore(o.sort_value), o.game_uid == _uData["default"].ins.getUid() ? (i.setSkin(_pInfo["default"].ins.getUsingSkin(), n), i.setNickName(_uData["default"].ins.getName()), i.setHeadSp(_uData["default"].ins.getHeadImg())) : (i.setSkin(null == o ? void 0 : o.uSkin), i.setNickName(o.nickname), o.avatar ? i.setHeadSp(o.avatar) : i.setDefaultHead())) : (i.setNickName("暂无"), i.setScore("0"), i.setDefaultHead());
  };

  e.prototype.setMySelf = function () {
    var t = this.rankData;

    for (var e in t) {
      var o = t[e];
      if (o.game_uid == _uData["default"].ins.getUid() && Number(e) < 100) return void this.setItemInfo(this.myRank, e, o, !0);
    }

    var n = _rankMgr["default"].ins.getMyRankDataByTag(this.tag, this.type);

    var i = this.myRank.getComponent(_rankItem["default"]);
    i.setSkin(_pInfo["default"].ins.getUsingSkin(), !0);
    i.setGameUid(_uData["default"].ins.getUid().toString());
    i.setIdx("99+");
    i.setNickName(_uData["default"].ins.getName());
    i.setScore(n + "");
    _uData["default"].ins.getHeadImg() ? i.setHeadSp(_uData["default"].ins.getHeadImg()) : i.setDefaultHead();
  };

  e.prototype.setHeadOnLine = function (t, e) {
    var o = this;
    cc.assetManager.loadRemote(e, function (e, n) {
      !e && o.node && o.node.isValid && (t.spriteFrame = new cc.SpriteFrame(n));
    });
  };

  e.prototype.setDefaultHead = function (t) {
    var e = this;

    _res["default"].ins.getBundleByString("resSps").then(function (o) {
      o.load("common/head_1", cc.SpriteFrame, function (o, n) {
        !o && e.node && e.node.isValid && (t.spriteFrame = n);
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });
  };

  e.prototype.showLoadAni = function (t) {
    cc.tween(t).to(0.5, {
      x: 0
    }, {
      easing: "backInOut"
    }).start();
  };

  e.prototype.showChgAni = function (t) {
    cc.tween(t).to(0.5, {
      opacity: 255
    }).start();
  };

  e.prototype.onBtnChgDayType = function () {
    this.initAni();
    this.type == _rankMgr.rankType.Total ? (this.type = _rankMgr.rankType.Today, this.refreshData(), this.dayTypeBtnsSps[0].active = !1, this.dayTypeBtnsSps[1].active = !0) : this.type == _rankMgr.rankType.Today && (this.type = _rankMgr.rankType.Total, this.refreshData(), this.dayTypeBtnsSps[0].active = !0, this.dayTypeBtnsSps[1].active = !1);
  };

  e.prototype.onBtnMain = function () {
    this.levelTag !== a.mian && (this.initAni(), this.levelTag = a.mian, this.refreshData(), this.chgLevelTagBtns(!0));
  };

  e.prototype.onBtnDaily = function () {
    _tipMgr["default"].ins.showTip(_lang.lang[10004]);
  };

  e.prototype.chgLevelTagBtns = function (t) {
    this.levelTagBtnsSps[0].active = t;
    this.levelTagBtnsSps[1].active = !t;
    this.levelTagBtnsSps[2].active = !t;
    this.levelTagBtnsSps[3].active = t;
  };

  e.prototype.onBtnChgDataType = function () {
    this.initAni();
    this.dataTag == s.score ? (this.dataTag = s.win, this.refreshData(), this.dataTagBtnsSps[0].active = !1, this.dataTagBtnsSps[1].active = !0) : this.dataTag == s.win && (this.dataTag = s.score, this.refreshData(), this.dataTagBtnsSps[0].active = !0, this.dataTagBtnsSps[1].active = !1);
  };

  e.prototype.initAni = function () {
    this.unscheduleAllCallbacks();

    for (var t = 0, e = this.items.length; t < e; t++) {
      var o = this.items[t];
      cc.Tween.stopAllByTarget(o);
      o && (o.opacity = 0);
    }

    this.scrollView.stopAutoScroll();
    this.scrollView.scrollToTop();
    this.scrollView.vertical = !1;
    this.playAni = !0;
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onDestroy = function () {
    cc.assetManager.releaseAsset(this.bgSpr.spriteFrame);
  };

  __decorate([T(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([T([cc.Node])], e.prototype, "dataTagBtnsSps", void 0);

  __decorate([T([cc.Node])], e.prototype, "levelTagBtnsSps", void 0);

  __decorate([T([cc.Node])], e.prototype, "dayTypeBtnsSps", void 0);

  __decorate([T(cc.Node)], e.prototype, "viewItem", void 0);

  __decorate([T([cc.Node])], e.prototype, "rankTop", void 0);

  __decorate([T(cc.Node)], e.prototype, "myRank", void 0);

  __decorate([T(cc.Node)], e.prototype, "topNode", void 0);

  __decorate([T(cc.Node)], e.prototype, "loadingNode", void 0);

  __decorate([T(cc.Node)], e.prototype, "closeNode", void 0);

  __decorate([T(cc.Sprite)], e.prototype, "bgSpr", void 0);

  return __decorate([S], e);
}(_baseUI["default"]);

exports["default"] = I;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_quest.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '70d40ATM1ZE3biriQn1uJF2', 'ui_quest');
// scripts/ui_quest.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _mySafeArea = require("mySafeArea");

var _time = require("time");

var _cfgMgr = require("cfgMgr");

var _lang = require("lang");

var _questItem = require("questItem");

var _global = require("global");

var _taskMgr = require("taskMgr");

var _tipMgr = require("tipMgr");

var _loading = require("loading");

var _baseUI = require("baseUI");

var m = cc._decorator;
var v = m.ccclass;
var _ = m.property;

var b = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.content = null;
    e.questItem = null;
    e.tLable = null;
    e.btnspf = [];
    e.btnsp = [];
    e.scrollView = null;
    e.top = null;
    e.bgNode = null;
    e.topBgSp = null;
    e.topBgSp1 = null;
    e._taskTyp = _taskMgr.taskChannel.daily;
    e.questPool = new cc.NodePool(_questItem["default"]);
    e.lastScrollPosition = 0;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t = this;
    this.node.height = cc.winSize.height;
    this.taskTyp = _taskMgr.taskChannel.daily;
    this.tLable.font = _loading.DEFAULTFONT;
    _global["default"].padScale && (this.bgNode.scale = _global["default"].padScale);
    this.scrollView.node.on("scrolling", function () {
      t.pageScroll(!0);
    }, this);
    this.onResize();
  };

  e.prototype.start = function () {};

  e.prototype.loadItem = function (t, e, o) {
    var n = this.questItem;

    if (t < o.length) {
      var i = o[t];
      (a = this.questPool.get()) || (a = cc.instantiate(n));
      this.content.addChild(a);
      a.active = !1;
      a.zIndex = 0;
      a.getComponent(_questItem["default"]).init(e[i.key]);
      t++;
      this.scheduleOnce(this.loadItem.bind(this, t, e, o), 0);
    } else {
      this.content.children.sort(function (t, e) {
        var o = t.getComponent(_questItem["default"]).taskData.data.state;
        var n = e.getComponent(_questItem["default"]).taskData.data.state;
        return o == n ? 0 : o == _taskMgr.taskState.Finish ? -1 : n == _taskMgr.taskState.Finish ? 1 : o == _taskMgr.taskState.Rewared ? 1 : n == _taskMgr.taskState.Rewared ? -1 : void 0;
      });

      for (var r = 0; r < this.content.children.length; r++) {
        var a;
        (a = this.content.children[r]).active = !0;
        this.showChgAni || (a.opacity = 0, this.scheduleOnce(this.showChangegAni.bind(this, a), 0.1 * (r + 1)));
      }

      this.lastScrollPosition = 0;
      this.scheduleOnce(this.pageScroll.bind(this, !1), 0);
      this.showChgAni || (this.showChgAni = !0);
    }
  };

  e.prototype.initView = function () {
    var t = this;
    this.countTaskUpdTime();
    var e = _cfgMgr["default"].serverCfg[this._taskTyp];

    var o = _taskMgr["default"].getTaskByType(this._taskTyp);

    this.content.children.forEach(function (e) {
      t.despawnNode(e);
    });
    this.content.removeAllChildren();
    var n = null == e ? void 0 : e.rules;
    this.loadItem(0, o, n);
  };

  e.prototype.updTask = function () {
    this.initView();
  };

  e.prototype.countTaskUpdTime = function () {
    var t = _time["default"].ins.nextZeroTime / 1e3;
    this.tLable.string = _time["default"].getFormatHMS(t);
    t <= 0 && this.initView();
  };

  e.prototype.onEnable = function () {
    var t = this;

    _evts["default"].opE.on(this.onOperTap.bind(this));

    this.schedule(this.countTaskUpdTime, 1, cc.macro.REPEAT_FOREVER);
    this.initView();
    this.scheduleOnce(function () {
      t.top.y -= _mySafeArea.getSafeAreaRect().yMin;
    });
  };

  e.prototype.onDisable = function () {
    _evts["default"].opE.off(this.onOperTap.bind(this));

    this.unschedule(this.countTaskUpdTime);
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].UPD_PANEL:
        this.updTask();
    }
  };

  e.prototype.pageSwitch = function (t, e) {
    this._taskTyp != e && (e != _taskMgr.taskChannel.achieve ? (this.taskTyp = e, this.initView()) : _tipMgr["default"].ins.showTip(_lang.lang[10004]));
  };

  Object.defineProperty(e.prototype, "taskTyp", {
    set: function set(t) {
      this._taskTyp = t;
      var e = t == _taskMgr.taskChannel.daily ? 0 : 1;
      this.btnsp[0].spriteFrame = this.btnspf[e];
      this.btnsp[1].spriteFrame = this.btnspf[1 ^ e];
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.despawnNode = function (t) {
    this.questPool.put(t);
  };

  e.prototype.onResize = function () {
    this.node.height = cc.winSize.height;

    var t = _mySafeArea.getSafeAreaRect().yMin;

    var e = cc.winSize.height - 1280 - t;
    this.scrollView.node.height += e;
    this.scrollView.content.height += e;
    this.scrollView.content.parent.height += e;
    this.topBgSp.height += e;
    this.topBgSp1.height += e;
  };

  e.prototype.pageScroll = function (t) {
    void 0 === t && (t = !0);
    var e = this.content.children;
    var o = this.scrollView.getScrollOffset().y;

    if (!(t && Math.abs(o - this.lastScrollPosition) < 1)) {
      for (var n = this.content.parent.height, i = 0; i < e.length; i++) {
        var r = e[i];
        var a = r.convertToWorldSpaceAR(cc.Vec2.ZERO);
        (a = this.content.parent.convertToNodeSpaceAR(a)).y + 110 < -n || a.y - 110 > 0 ? r.children[0].active = !1 : r.children[0].active = !0;
      }

      this.lastScrollPosition = o;
    }
  };

  e.prototype.showChangegAni = function (t) {
    cc.tween(t).to(0.2, {
      opacity: 255
    }).start();
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  __decorate([_(cc.Node)], e.prototype, "content", void 0);

  __decorate([_(cc.Prefab)], e.prototype, "questItem", void 0);

  __decorate([_(cc.Label)], e.prototype, "tLable", void 0);

  __decorate([_(cc.SpriteFrame)], e.prototype, "btnspf", void 0);

  __decorate([_(cc.Sprite)], e.prototype, "btnsp", void 0);

  __decorate([_(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([_(cc.Node)], e.prototype, "top", void 0);

  __decorate([_(cc.Node)], e.prototype, "bgNode", void 0);

  __decorate([_(cc.Node)], e.prototype, "topBgSp", void 0);

  __decorate([_(cc.Node)], e.prototype, "topBgSp1", void 0);

  return __decorate([v], e);
}(_baseUI["default"]);

exports["default"] = b;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_privacy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a457crloztMaIIPhRnZ7Hh/', 'ui_privacy');
// scripts/ui_privacy.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _panelMgr = require("panelMgr");

var _baseUI = require("baseUI");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.btnService = null;
    e.btnPrivacy = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function () {
    var t = this.btnService.node;
    var e = this.btnPrivacy.node;
    t.active = e.active = !0;
    t.on(cc.Node.EventType.TOUCH_END, function () {
      return _panelMgr["default"].ins.open("ui/ui_info", {
        type: 1
      });
    }, this);
    e.on(cc.Node.EventType.TOUCH_END, function () {
      return _panelMgr["default"].ins.open("ui/ui_info", {
        type: 2
      });
    }, this);
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  __decorate([u(cc.Label)], e.prototype, "btnService", void 0);

  __decorate([u(cc.Label)], e.prototype, "btnPrivacy", void 0);

  return __decorate([l], e);
}(_baseUI["default"]);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfcHJpdmFjeS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfcGFuZWxNZ3IiLCJyZXF1aXJlIiwiX2Jhc2VVSSIsImMiLCJjYyIsIl9kZWNvcmF0b3IiLCJsIiwiY2NjbGFzcyIsInUiLCJwcm9wZXJ0eSIsInAiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwiYnRuU2VydmljZSIsImJ0blByaXZhY3kiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJpbml0Iiwibm9kZSIsImFjdGl2ZSIsIm9uIiwiTm9kZSIsIkV2ZW50VHlwZSIsIlRPVUNIX0VORCIsImlucyIsIm9wZW4iLCJ0eXBlIiwiaGlkZVRoaXMiLCJoaWRlIiwiX19kZWNvcmF0ZSIsIkxhYmVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdkI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJRSxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHTCxDQUFDLENBQUNNLFFBQVY7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFJLFVBQVVDLENBQVYsRUFBYTtFQUNsQixTQUFTQyxDQUFULEdBQWE7SUFDVCxJQUFJQSxDQUFDLEdBQUksU0FBU0QsQ0FBVCxJQUFjQSxDQUFDLENBQUNFLEtBQUYsQ0FBUSxJQUFSLEVBQWNDLFNBQWQsQ0FBZixJQUE0QyxJQUFwRDtJQUNBRixDQUFDLENBQUNHLFVBQUYsR0FBZSxJQUFmO0lBQ0FILENBQUMsQ0FBQ0ksVUFBRixHQUFlLElBQWY7SUFDQSxPQUFPSixDQUFQO0VBQ0g7O0VBQ0RLLFNBQVMsQ0FBQ0wsQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FDLENBQUMsQ0FBQ00sU0FBRixDQUFZQyxJQUFaLEdBQW1CLFlBQVk7SUFDM0IsSUFBSVIsQ0FBQyxHQUFHLEtBQUtJLFVBQUwsQ0FBZ0JLLElBQXhCO0lBQ0EsSUFBSVIsQ0FBQyxHQUFHLEtBQUtJLFVBQUwsQ0FBZ0JJLElBQXhCO0lBQ0FULENBQUMsQ0FBQ1UsTUFBRixHQUFXVCxDQUFDLENBQUNTLE1BQUYsR0FBVyxDQUFDLENBQXZCO0lBQ0FWLENBQUMsQ0FBQ1csRUFBRixDQUNJbEIsRUFBRSxDQUFDbUIsSUFBSCxDQUFRQyxTQUFSLENBQWtCQyxTQUR0QixFQUVJLFlBQVk7TUFDUixPQUFPekIsU0FBUyxXQUFULENBQWtCMEIsR0FBbEIsQ0FBc0JDLElBQXRCLENBQTJCLFlBQTNCLEVBQXlDO1FBQUNDLElBQUksRUFBRTtNQUFQLENBQXpDLENBQVA7SUFDSCxDQUpMLEVBS0ksSUFMSjtJQU9BaEIsQ0FBQyxDQUFDVSxFQUFGLENBQ0lsQixFQUFFLENBQUNtQixJQUFILENBQVFDLFNBQVIsQ0FBa0JDLFNBRHRCLEVBRUksWUFBWTtNQUNSLE9BQU96QixTQUFTLFdBQVQsQ0FBa0IwQixHQUFsQixDQUFzQkMsSUFBdEIsQ0FBMkIsWUFBM0IsRUFBeUM7UUFBQ0MsSUFBSSxFQUFFO01BQVAsQ0FBekMsQ0FBUDtJQUNILENBSkwsRUFLSSxJQUxKO0VBT0gsQ0FsQkQ7O0VBbUJBaEIsQ0FBQyxDQUFDTSxTQUFGLENBQVlXLFFBQVosR0FBdUIsWUFBWTtJQUMvQixLQUFLQyxJQUFMO0VBQ0gsQ0FGRDs7RUFHQUMsVUFBVSxDQUFDLENBQUN2QixDQUFDLENBQUNKLEVBQUUsQ0FBQzRCLEtBQUosQ0FBRixDQUFELEVBQWdCcEIsQ0FBQyxDQUFDTSxTQUFsQixFQUE2QixZQUE3QixFQUEyQyxLQUFLLENBQWhELENBQVY7O0VBQ0FhLFVBQVUsQ0FBQyxDQUFDdkIsQ0FBQyxDQUFDSixFQUFFLENBQUM0QixLQUFKLENBQUYsQ0FBRCxFQUFnQnBCLENBQUMsQ0FBQ00sU0FBbEIsRUFBNkIsWUFBN0IsRUFBMkMsS0FBSyxDQUFoRCxDQUFWOztFQUNBLE9BQU9hLFVBQVUsQ0FBQyxDQUFDekIsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBakI7QUFDSCxDQWpDTyxDQWlDTFYsT0FBTyxXQWpDRixDQUFSOztBQWtDQUosT0FBTyxXQUFQLEdBQWtCWSxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfcGFuZWxNZ3IgPSByZXF1aXJlKFwicGFuZWxNZ3JcIik7XG52YXIgX2Jhc2VVSSA9IHJlcXVpcmUoXCJiYXNlVUlcIik7XG52YXIgYyA9IGNjLl9kZWNvcmF0b3I7XG52YXIgbCA9IGMuY2NjbGFzcztcbnZhciB1ID0gYy5wcm9wZXJ0eTtcbnZhciBwID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuYnRuU2VydmljZSA9IG51bGw7XG4gICAgICAgIGUuYnRuUHJpdmFjeSA9IG51bGw7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSB0aGlzLmJ0blNlcnZpY2Uubm9kZTtcbiAgICAgICAgdmFyIGUgPSB0aGlzLmJ0blByaXZhY3kubm9kZTtcbiAgICAgICAgdC5hY3RpdmUgPSBlLmFjdGl2ZSA9ICEwO1xuICAgICAgICB0Lm9uKFxuICAgICAgICAgICAgY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfcGFuZWxNZ3IuZGVmYXVsdC5pbnMub3BlbihcInVpL3VpX2luZm9cIiwge3R5cGU6IDF9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aGlzXG4gICAgICAgICk7XG4gICAgICAgIGUub24oXG4gICAgICAgICAgICBjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9wYW5lbE1nci5kZWZhdWx0Lmlucy5vcGVuKFwidWkvdWlfaW5mb1wiLCB7dHlwZTogMn0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRoaXNcbiAgICAgICAgKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmhpZGVUaGlzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW3UoY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwiYnRuU2VydmljZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW3UoY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwiYnRuUHJpdmFjeVwiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtsXSwgZSk7XG59KShfYmFzZVVJLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gcDtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_save.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '37480ahHE1HO633f+vRt0/d', 'ui_save');
// scripts/ui_save.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _request = require("request");

var _time = require("time");

var _uData = require("uData");

var _panelMgr = require("panelMgr");

var _tipMgr = require("tipMgr");

var _baseUI = require("baseUI");

var h = cc._decorator;
var f = h.ccclass;
var g = h.property;

var y = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.timeLb = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {};

  e.prototype.init = function () {
    var t = this;
    this.timeLb.string = "暂无数据";

    _request["default"].ins.getServerData("").then(function (e) {
      t.rePanel(e);
    })["catch"](function () {
      t.rePanel(null);
    });
  };

  e.prototype.rePanel = function (t) {
    if (this.userDatas = t, t && t.data) {
      var e = t.data;
      var o = e[0];
      var n = e[1];
      var i = (null == o ? void 0 : o.update_at) || 0;
      var r = (null == n ? void 0 : n.update_at) || 0;
      var a = Math.max(i, r);

      if (a) {
        var s = _time["default"].ins.formatDate(a);

        this.timeLb.string = s;
      } else this.timeLb.string = "暂无数据";
    } else this.timeLb.string = "暂无数据";
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onBtnSave = function () {
    _idx.platform.showLoading("存档中...");

    _request["default"].ins.updateServerData(_uData["default"].ins.getLocalData(), "backData").then(function (t) {
      _idx.platform.hideLoading();

      t.status ? _tipMgr["default"].ins.showTip("存档成功", !0) : _tipMgr["default"].ins.showTip("网络拥堵，请稍后再试！", !0);
    })["catch"](function () {
      _idx.platform.hideLoading();

      _tipMgr["default"].ins.showTip("网络拥堵，请稍后再试！", !0);
    });
  };

  e.prototype.onBtnBack = function () {
    this.userDatas ? _panelMgr["default"].ins.open("ui/ui_saveRestore", {
      userDatas: this.userDatas.data
    }) : _tipMgr["default"].ins.showTip("暂无数据", !0);
  };

  __decorate([g(cc.Label)], e.prototype, "timeLb", void 0);

  return __decorate([f], e);
}(_baseUI["default"]);

exports["default"] = y;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfc2F2ZS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfaWR4IiwicmVxdWlyZSIsIl9yZXF1ZXN0IiwiX3RpbWUiLCJfdURhdGEiLCJfcGFuZWxNZ3IiLCJfdGlwTWdyIiwiX2Jhc2VVSSIsImgiLCJjYyIsIl9kZWNvcmF0b3IiLCJmIiwiY2NjbGFzcyIsImciLCJwcm9wZXJ0eSIsInkiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwidGltZUxiIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwib25Mb2FkIiwiaW5pdCIsInN0cmluZyIsImlucyIsImdldFNlcnZlckRhdGEiLCJ0aGVuIiwicmVQYW5lbCIsInVzZXJEYXRhcyIsImRhdGEiLCJvIiwiaSIsInVwZGF0ZV9hdCIsInIiLCJhIiwiTWF0aCIsIm1heCIsInMiLCJmb3JtYXREYXRlIiwiaGlkZVRoaXMiLCJoaWRlIiwib25CdG5TYXZlIiwicGxhdGZvcm0iLCJzaG93TG9hZGluZyIsInVwZGF0ZVNlcnZlckRhdGEiLCJnZXRMb2NhbERhdGEiLCJoaWRlTG9hZGluZyIsInN0YXR1cyIsInNob3dUaXAiLCJvbkJ0bkJhY2siLCJvcGVuIiwiX19kZWNvcmF0ZSIsIkxhYmVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFJRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQW5COztBQUNBLElBQUlHLE1BQU0sR0FBR0gsT0FBTyxDQUFDLE9BQUQsQ0FBcEI7O0FBQ0EsSUFBSUksU0FBUyxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF2Qjs7QUFDQSxJQUFJSyxPQUFPLEdBQUdMLE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlNLE9BQU8sR0FBR04sT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBSU8sQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLElBQUlDLENBQUMsR0FBSSxVQUFVQyxDQUFWLEVBQWE7RUFDbEIsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxNQUFGLEdBQVcsSUFBWDtJQUNBLE9BQU9ILENBQVA7RUFDSDs7RUFDREksU0FBUyxDQUFDSixDQUFELEVBQUlELENBQUosQ0FBVDs7RUFDQUMsQ0FBQyxDQUFDSyxTQUFGLENBQVlDLE1BQVosR0FBcUIsWUFBWSxDQUFFLENBQW5DOztFQUNBTixDQUFDLENBQUNLLFNBQUYsQ0FBWUUsSUFBWixHQUFtQixZQUFZO0lBQzNCLElBQUlSLENBQUMsR0FBRyxJQUFSO0lBQ0EsS0FBS0ksTUFBTCxDQUFZSyxNQUFaLEdBQXFCLE1BQXJCOztJQUNBdkIsUUFBUSxXQUFSLENBQWlCd0IsR0FBakIsQ0FDS0MsYUFETCxDQUNtQixFQURuQixFQUVLQyxJQUZMLENBRVUsVUFBVVgsQ0FBVixFQUFhO01BQ2ZELENBQUMsQ0FBQ2EsT0FBRixDQUFVWixDQUFWO0lBQ0gsQ0FKTCxXQUtXLFlBQVk7TUFDZkQsQ0FBQyxDQUFDYSxPQUFGLENBQVUsSUFBVjtJQUNILENBUEw7RUFRSCxDQVhEOztFQVlBWixDQUFDLENBQUNLLFNBQUYsQ0FBWU8sT0FBWixHQUFzQixVQUFVYixDQUFWLEVBQWE7SUFDL0IsSUFBTSxLQUFLYyxTQUFMLEdBQWlCZCxDQUFsQixFQUFzQkEsQ0FBQyxJQUFJQSxDQUFDLENBQUNlLElBQWxDLEVBQXlDO01BQ3JDLElBQUlkLENBQUMsR0FBR0QsQ0FBQyxDQUFDZSxJQUFWO01BQ0EsSUFBSUMsQ0FBQyxHQUFHZixDQUFDLENBQUMsQ0FBRCxDQUFUO01BQ0EsSUFBSXRCLENBQUMsR0FBR3NCLENBQUMsQ0FBQyxDQUFELENBQVQ7TUFDQSxJQUFJZ0IsQ0FBQyxHQUFHLENBQUMsUUFBUUQsQ0FBUixHQUFZLEtBQUssQ0FBakIsR0FBcUJBLENBQUMsQ0FBQ0UsU0FBeEIsS0FBc0MsQ0FBOUM7TUFDQSxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxRQUFReEMsQ0FBUixHQUFZLEtBQUssQ0FBakIsR0FBcUJBLENBQUMsQ0FBQ3VDLFNBQXhCLEtBQXNDLENBQTlDO01BQ0EsSUFBSUUsQ0FBQyxHQUFHQyxJQUFJLENBQUNDLEdBQUwsQ0FBU0wsQ0FBVCxFQUFZRSxDQUFaLENBQVI7O01BQ0EsSUFBSUMsQ0FBSixFQUFPO1FBQ0gsSUFBSUcsQ0FBQyxHQUFHcEMsS0FBSyxXQUFMLENBQWN1QixHQUFkLENBQWtCYyxVQUFsQixDQUE2QkosQ0FBN0IsQ0FBUjs7UUFDQSxLQUFLaEIsTUFBTCxDQUFZSyxNQUFaLEdBQXFCYyxDQUFyQjtNQUNILENBSEQsTUFHTyxLQUFLbkIsTUFBTCxDQUFZSyxNQUFaLEdBQXFCLE1BQXJCO0lBQ1YsQ0FYRCxNQVdPLEtBQUtMLE1BQUwsQ0FBWUssTUFBWixHQUFxQixNQUFyQjtFQUNWLENBYkQ7O0VBY0FSLENBQUMsQ0FBQ0ssU0FBRixDQUFZbUIsUUFBWixHQUF1QixZQUFZO0lBQy9CLEtBQUtDLElBQUw7RUFDSCxDQUZEOztFQUdBekIsQ0FBQyxDQUFDSyxTQUFGLENBQVlxQixTQUFaLEdBQXdCLFlBQVk7SUFDaEMzQyxJQUFJLENBQUM0QyxRQUFMLENBQWNDLFdBQWQsQ0FBMEIsUUFBMUI7O0lBQ0EzQyxRQUFRLFdBQVIsQ0FBaUJ3QixHQUFqQixDQUNLb0IsZ0JBREwsQ0FDc0IxQyxNQUFNLFdBQU4sQ0FBZXNCLEdBQWYsQ0FBbUJxQixZQUFuQixFQUR0QixFQUN5RCxVQUR6RCxFQUVLbkIsSUFGTCxDQUVVLFVBQVVaLENBQVYsRUFBYTtNQUNmaEIsSUFBSSxDQUFDNEMsUUFBTCxDQUFjSSxXQUFkOztNQUNBaEMsQ0FBQyxDQUFDaUMsTUFBRixHQUNNM0MsT0FBTyxXQUFQLENBQWdCb0IsR0FBaEIsQ0FBb0J3QixPQUFwQixDQUE0QixNQUE1QixFQUFvQyxDQUFDLENBQXJDLENBRE4sR0FFTTVDLE9BQU8sV0FBUCxDQUFnQm9CLEdBQWhCLENBQW9Cd0IsT0FBcEIsQ0FBNEIsYUFBNUIsRUFBMkMsQ0FBQyxDQUE1QyxDQUZOO0lBR0gsQ0FQTCxXQVFXLFlBQVk7TUFDZmxELElBQUksQ0FBQzRDLFFBQUwsQ0FBY0ksV0FBZDs7TUFDQTFDLE9BQU8sV0FBUCxDQUFnQm9CLEdBQWhCLENBQW9Cd0IsT0FBcEIsQ0FBNEIsYUFBNUIsRUFBMkMsQ0FBQyxDQUE1QztJQUNILENBWEw7RUFZSCxDQWREOztFQWVBakMsQ0FBQyxDQUFDSyxTQUFGLENBQVk2QixTQUFaLEdBQXdCLFlBQVk7SUFDaEMsS0FBS3JCLFNBQUwsR0FDTXpCLFNBQVMsV0FBVCxDQUFrQnFCLEdBQWxCLENBQXNCMEIsSUFBdEIsQ0FBMkIsbUJBQTNCLEVBQWdEO01BQUN0QixTQUFTLEVBQUUsS0FBS0EsU0FBTCxDQUFlQztJQUEzQixDQUFoRCxDQUROLEdBRU16QixPQUFPLFdBQVAsQ0FBZ0JvQixHQUFoQixDQUFvQndCLE9BQXBCLENBQTRCLE1BQTVCLEVBQW9DLENBQUMsQ0FBckMsQ0FGTjtFQUdILENBSkQ7O0VBS0FHLFVBQVUsQ0FBQyxDQUFDeEMsQ0FBQyxDQUFDSixFQUFFLENBQUM2QyxLQUFKLENBQUYsQ0FBRCxFQUFnQnJDLENBQUMsQ0FBQ0ssU0FBbEIsRUFBNkIsUUFBN0IsRUFBdUMsS0FBSyxDQUE1QyxDQUFWOztFQUNBLE9BQU8rQixVQUFVLENBQUMsQ0FBQzFDLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0EzRE8sQ0EyRExWLE9BQU8sV0EzREYsQ0FBUjs7QUE0REFULE9BQU8sV0FBUCxHQUFrQmlCLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9pZHggPSByZXF1aXJlKFwiaWR4XCIpO1xudmFyIF9yZXF1ZXN0ID0gcmVxdWlyZShcInJlcXVlc3RcIik7XG52YXIgX3RpbWUgPSByZXF1aXJlKFwidGltZVwiKTtcbnZhciBfdURhdGEgPSByZXF1aXJlKFwidURhdGFcIik7XG52YXIgX3BhbmVsTWdyID0gcmVxdWlyZShcInBhbmVsTWdyXCIpO1xudmFyIF90aXBNZ3IgPSByZXF1aXJlKFwidGlwTWdyXCIpO1xudmFyIF9iYXNlVUkgPSByZXF1aXJlKFwiYmFzZVVJXCIpO1xudmFyIGggPSBjYy5fZGVjb3JhdG9yO1xudmFyIGYgPSBoLmNjY2xhc3M7XG52YXIgZyA9IGgucHJvcGVydHk7XG52YXIgeSA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLnRpbWVMYiA9IG51bGw7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUub25Mb2FkID0gZnVuY3Rpb24gKCkge307XG4gICAgZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgICB0aGlzLnRpbWVMYi5zdHJpbmcgPSBcIuaaguaXoOaVsOaNrlwiO1xuICAgICAgICBfcmVxdWVzdC5kZWZhdWx0Lmluc1xuICAgICAgICAgICAgLmdldFNlcnZlckRhdGEoXCJcIilcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgdC5yZVBhbmVsKGUpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdC5yZVBhbmVsKG51bGwpO1xuICAgICAgICAgICAgfSk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5yZVBhbmVsID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgaWYgKCgodGhpcy51c2VyRGF0YXMgPSB0KSwgdCAmJiB0LmRhdGEpKSB7XG4gICAgICAgICAgICB2YXIgZSA9IHQuZGF0YTtcbiAgICAgICAgICAgIHZhciBvID0gZVswXTtcbiAgICAgICAgICAgIHZhciBuID0gZVsxXTtcbiAgICAgICAgICAgIHZhciBpID0gKG51bGwgPT0gbyA/IHZvaWQgMCA6IG8udXBkYXRlX2F0KSB8fCAwO1xuICAgICAgICAgICAgdmFyIHIgPSAobnVsbCA9PSBuID8gdm9pZCAwIDogbi51cGRhdGVfYXQpIHx8IDA7XG4gICAgICAgICAgICB2YXIgYSA9IE1hdGgubWF4KGksIHIpO1xuICAgICAgICAgICAgaWYgKGEpIHtcbiAgICAgICAgICAgICAgICB2YXIgcyA9IF90aW1lLmRlZmF1bHQuaW5zLmZvcm1hdERhdGUoYSk7XG4gICAgICAgICAgICAgICAgdGhpcy50aW1lTGIuc3RyaW5nID0gcztcbiAgICAgICAgICAgIH0gZWxzZSB0aGlzLnRpbWVMYi5zdHJpbmcgPSBcIuaaguaXoOaVsOaNrlwiO1xuICAgICAgICB9IGVsc2UgdGhpcy50aW1lTGIuc3RyaW5nID0gXCLmmoLml6DmlbDmja5cIjtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmhpZGVUaGlzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLm9uQnRuU2F2ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX2lkeC5wbGF0Zm9ybS5zaG93TG9hZGluZyhcIuWtmOaho+S4rS4uLlwiKTtcbiAgICAgICAgX3JlcXVlc3QuZGVmYXVsdC5pbnNcbiAgICAgICAgICAgIC51cGRhdGVTZXJ2ZXJEYXRhKF91RGF0YS5kZWZhdWx0Lmlucy5nZXRMb2NhbERhdGEoKSwgXCJiYWNrRGF0YVwiKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICBfaWR4LnBsYXRmb3JtLmhpZGVMb2FkaW5nKCk7XG4gICAgICAgICAgICAgICAgdC5zdGF0dXNcbiAgICAgICAgICAgICAgICAgICAgPyBfdGlwTWdyLmRlZmF1bHQuaW5zLnNob3dUaXAoXCLlrZjmoaPmiJDlip9cIiwgITApXG4gICAgICAgICAgICAgICAgICAgIDogX3RpcE1nci5kZWZhdWx0Lmlucy5zaG93VGlwKFwi572R57uc5oul5aC177yM6K+356iN5ZCO5YaN6K+V77yBXCIsICEwKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF9pZHgucGxhdGZvcm0uaGlkZUxvYWRpbmcoKTtcbiAgICAgICAgICAgICAgICBfdGlwTWdyLmRlZmF1bHQuaW5zLnNob3dUaXAoXCLnvZHnu5zmi6XloLXvvIzor7fnqI3lkI7lho3or5XvvIFcIiwgITApO1xuICAgICAgICAgICAgfSk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vbkJ0bkJhY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMudXNlckRhdGFzXG4gICAgICAgICAgICA/IF9wYW5lbE1nci5kZWZhdWx0Lmlucy5vcGVuKFwidWkvdWlfc2F2ZVJlc3RvcmVcIiwge3VzZXJEYXRhczogdGhpcy51c2VyRGF0YXMuZGF0YX0pXG4gICAgICAgICAgICA6IF90aXBNZ3IuZGVmYXVsdC5pbnMuc2hvd1RpcChcIuaaguaXoOaVsOaNrlwiLCAhMCk7XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtnKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcInRpbWVMYlwiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtmXSwgZSk7XG59KShfYmFzZVVJLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0geTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_info.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '68903bM3tFJxIGiJX3VlM6L', 'ui_info');
// scripts/ui_info.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _baseUI = require("baseUI");

var s = cc._decorator;
var c = s.ccclass;
var l = s.property;

var u = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.title = null;
    e.content = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    var e = this;
    var o = t.type;
    this.title.string = 1 == o ? "用户协议" : "隐私政策";
    cc.assetManager.loadBundle("other", function (t, n) {
      t || n.load(o + "", cc.TextAsset, function (t, o) {
        var n = e.content;
        !t && n && n.isValid && (n.string = o.text);
      });
    });
  };

  e.prototype.hideThis = function () {
    t.prototype.hide.call(this);
  };

  __decorate([l(cc.Label)], e.prototype, "title", void 0);

  __decorate([l(cc.Label)], e.prototype, "content", void 0);

  return __decorate([c], e);
}(_baseUI["default"]);

exports["default"] = u;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfaW5mby5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfYmFzZVVJIiwicmVxdWlyZSIsInMiLCJjYyIsIl9kZWNvcmF0b3IiLCJjIiwiY2NjbGFzcyIsImwiLCJwcm9wZXJ0eSIsInUiLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwidGl0bGUiLCJjb250ZW50IiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwiaW5pdCIsIm8iLCJ0eXBlIiwic3RyaW5nIiwiYXNzZXRNYW5hZ2VyIiwibG9hZEJ1bmRsZSIsImxvYWQiLCJUZXh0QXNzZXQiLCJpc1ZhbGlkIiwidGV4dCIsImhpZGVUaGlzIiwiaGlkZSIsImNhbGwiLCJfX2RlY29yYXRlIiwiTGFiZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJQyxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFBWDtBQUNBLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHTCxDQUFDLENBQUNNLFFBQVY7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFJLFVBQVVDLENBQVYsRUFBYTtFQUNsQixTQUFTQyxDQUFULEdBQWE7SUFDVCxJQUFJQSxDQUFDLEdBQUksU0FBU0QsQ0FBVCxJQUFjQSxDQUFDLENBQUNFLEtBQUYsQ0FBUSxJQUFSLEVBQWNDLFNBQWQsQ0FBZixJQUE0QyxJQUFwRDtJQUNBRixDQUFDLENBQUNHLEtBQUYsR0FBVSxJQUFWO0lBQ0FILENBQUMsQ0FBQ0ksT0FBRixHQUFZLElBQVo7SUFDQSxPQUFPSixDQUFQO0VBQ0g7O0VBQ0RLLFNBQVMsQ0FBQ0wsQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FDLENBQUMsQ0FBQ00sU0FBRixDQUFZQyxJQUFaLEdBQW1CLFVBQVVSLENBQVYsRUFBYTtJQUM1QixJQUFJQyxDQUFDLEdBQUcsSUFBUjtJQUNBLElBQUlRLENBQUMsR0FBR1QsQ0FBQyxDQUFDVSxJQUFWO0lBQ0EsS0FBS04sS0FBTCxDQUFXTyxNQUFYLEdBQW9CLEtBQUtGLENBQUwsR0FBUyxNQUFULEdBQWtCLE1BQXRDO0lBQ0FoQixFQUFFLENBQUNtQixZQUFILENBQWdCQyxVQUFoQixDQUEyQixPQUEzQixFQUFvQyxVQUFVYixDQUFWLEVBQWFmLENBQWIsRUFBZ0I7TUFDaERlLENBQUMsSUFDR2YsQ0FBQyxDQUFDNkIsSUFBRixDQUFPTCxDQUFDLEdBQUcsRUFBWCxFQUFlaEIsRUFBRSxDQUFDc0IsU0FBbEIsRUFBNkIsVUFBVWYsQ0FBVixFQUFhUyxDQUFiLEVBQWdCO1FBQ3pDLElBQUl4QixDQUFDLEdBQUdnQixDQUFDLENBQUNJLE9BQVY7UUFDQSxDQUFDTCxDQUFELElBQU1mLENBQU4sSUFBV0EsQ0FBQyxDQUFDK0IsT0FBYixLQUF5Qi9CLENBQUMsQ0FBQzBCLE1BQUYsR0FBV0YsQ0FBQyxDQUFDUSxJQUF0QztNQUNILENBSEQsQ0FESjtJQUtILENBTkQ7RUFPSCxDQVhEOztFQVlBaEIsQ0FBQyxDQUFDTSxTQUFGLENBQVlXLFFBQVosR0FBdUIsWUFBWTtJQUMvQmxCLENBQUMsQ0FBQ08sU0FBRixDQUFZWSxJQUFaLENBQWlCQyxJQUFqQixDQUFzQixJQUF0QjtFQUNILENBRkQ7O0VBR0FDLFVBQVUsQ0FBQyxDQUFDeEIsQ0FBQyxDQUFDSixFQUFFLENBQUM2QixLQUFKLENBQUYsQ0FBRCxFQUFnQnJCLENBQUMsQ0FBQ00sU0FBbEIsRUFBNkIsT0FBN0IsRUFBc0MsS0FBSyxDQUEzQyxDQUFWOztFQUNBYyxVQUFVLENBQUMsQ0FBQ3hCLENBQUMsQ0FBQ0osRUFBRSxDQUFDNkIsS0FBSixDQUFGLENBQUQsRUFBZ0JyQixDQUFDLENBQUNNLFNBQWxCLEVBQTZCLFNBQTdCLEVBQXdDLEtBQUssQ0FBN0MsQ0FBVjs7RUFDQSxPQUFPYyxVQUFVLENBQUMsQ0FBQzFCLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0ExQk8sQ0EwQkxYLE9BQU8sV0ExQkYsQ0FBUjs7QUEyQkFGLE9BQU8sV0FBUCxHQUFrQlcsQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgX2Jhc2VVSSA9IHJlcXVpcmUoXCJiYXNlVUlcIik7XG52YXIgcyA9IGNjLl9kZWNvcmF0b3I7XG52YXIgYyA9IHMuY2NjbGFzcztcbnZhciBsID0gcy5wcm9wZXJ0eTtcbnZhciB1ID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUudGl0bGUgPSBudWxsO1xuICAgICAgICBlLmNvbnRlbnQgPSBudWxsO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICAgIHZhciBvID0gdC50eXBlO1xuICAgICAgICB0aGlzLnRpdGxlLnN0cmluZyA9IDEgPT0gbyA/IFwi55So5oi35Y2P6K6uXCIgOiBcIumakOengeaUv+etllwiO1xuICAgICAgICBjYy5hc3NldE1hbmFnZXIubG9hZEJ1bmRsZShcIm90aGVyXCIsIGZ1bmN0aW9uICh0LCBuKSB7XG4gICAgICAgICAgICB0IHx8XG4gICAgICAgICAgICAgICAgbi5sb2FkKG8gKyBcIlwiLCBjYy5UZXh0QXNzZXQsIGZ1bmN0aW9uICh0LCBvKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuID0gZS5jb250ZW50O1xuICAgICAgICAgICAgICAgICAgICAhdCAmJiBuICYmIG4uaXNWYWxpZCAmJiAobi5zdHJpbmcgPSBvLnRleHQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmhpZGVUaGlzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0LnByb3RvdHlwZS5oaWRlLmNhbGwodGhpcyk7XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtsKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbbChjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJjb250ZW50XCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW2NdLCBlKTtcbn0pKF9iYXNlVUkuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSB1O1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_record.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5877d5aWgxD8Ls2f4nI5Jen', 'ui_record');
// scripts/ui_record.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _baseUI = require("baseUI");

var _pInfo = require("pInfo");

var _chaptBtn = require("chaptBtn");

var l = cc._decorator;
var u = l.ccclass;
var p = l.property;

var d = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.view = null;
    e.viewItem = null;
    e.btnsNode = null;
    e.nameStrs = {
      main: {
        gTimes: "游戏次数",
        wTimes: "胜利次数",
        heWins: "最高连胜",
        winRate: "胜率"
      },
      daily: {
        gTimes: "游戏次数",
        wTimes: "胜利次数",
        winRate: "胜率"
      },
      race: {
        gTimes: "游戏次数",
        tPoints: "总积分",
        hePoints: "最高积分"
      }
    };
    e.allData = {};
    e.btnsComp = [];
    e.rowSpace = 108;
    e.top_offest = 50;
    e.curPageIdx = 1;
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {
    for (var t = this, e = _pInfo["default"].ins.getRecordData(), o = function o(e, _o, i) {
      var r = _o[e].getComponent(_chaptBtn["default"]);

      r.setState(!1);
      i.push(r);

      _o[e].on("click", function () {
        t.chgViewData(e);
      }, n);
    }, n = this, i = 0, r = this.btnsNode.children, a = this.btnsComp, l = r.length; i < l; i++) {
      o(i, r, a);
    }

    this.allData = Object.assign({}, e);
    this.chgViewData(0);
  };

  e.prototype.chgViewData = function (t) {
    var e = this.curPageIdx;

    if (e != t) {
      var o;
      var n = {};
      var i = {};

      switch (t) {
        case 0:
          n = this.allData.main, i = this.nameStrs.main, o = n.wTimes / n.gTimes * 100 || 0, n.winRate = o.toFixed(0) + "%";
          break;

        case 1:
          n = this.allData.daily, i = this.nameStrs.daily, o = n.wTimes / n.gTimes * 100 || 0, n.winRate = o.toFixed(0) + "%";
          break;

        case 2:
          n = this.allData.race, i = this.nameStrs.race;
      }

      this.initListView(n, i);
      var r = this.btnsComp;
      r[e].setState(!1);
      r[t].setState(!0);
      this.curPageIdx = t;
    }
  };

  e.prototype.initListView = function (t, e) {
    for (var o = 0, n = this.view.content.childrenCount; o < n; o++) {
      this.view.content.children[o].active = !1;
    }

    var i = 0;

    for (var r in e) {
      var a;
      var s = e[r];
      var c = t[r] || 0;
      "feTime" == r && (c = this.timeFormat(c));
      this.view.content.childrenCount > i ? ((a = this.view.content.children[i]).active = !0, a.getChildByName("name").getComponent(cc.Label).string = s, a.getChildByName("num").getComponent(cc.Label).string = c) : ((a = cc.instantiate(this.viewItem)).parent = this.view.content, a.y = -i * this.rowSpace - this.top_offest, a.active = !0, a.getChildByName("name").getComponent(cc.Label).string = s, a.getChildByName("num").getComponent(cc.Label).string = c);
      i++;
    }
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.timeFormat = function (t, e) {
    void 0 === e && (e = !0);
    var o = this.PrefixInteger;

    if (t < 86400) {
      var n = o(Math.floor(t / 3600), 2);
      var i = o(Math.floor(t % 3600 / 60), 2);
      var r = o(t % 60, 2);
      return e && "00" == n ? i + ":" + r : n + ":" + i + ":" + r;
    }

    return Math.floor(t / 86400) + "d " + o(Math.floor(t % 86400 / 3600), 2) + ":" + o(Math.floor(t % 3600 / 60), 2) + ":" + o(t % 60, 2);
  };

  e.prototype.PrefixInteger = function (t, e) {
    return (t / Math.pow(10, e)).toFixed(e).substring(2);
  };

  __decorate([p(cc.ScrollView)], e.prototype, "view", void 0);

  __decorate([p(cc.Node)], e.prototype, "viewItem", void 0);

  __decorate([p(cc.Node)], e.prototype, "btnsNode", void 0);

  return __decorate([u], e);
}(_baseUI["default"]);

exports["default"] = d;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_set.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c09d2zIpI5PIYKJIScOxgZY', 'ui_set');
// scripts/ui_set.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _uData = require("uData");

var _baseUI = require("baseUI");

var _swBtn = require("swBtn");

var _sound = require("sound");

var _global = require("global");

var _res = require("res");

var _pConst = require("pConst");

var _panelMgr = require("panelMgr");

var _slider = require("slider");

var y = cc._decorator;
var m = y.ccclass;
var v = y.property;

var _ = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.audioBtn = null;
    e.musicBtn = null;
    e.vibrateBtn = null;
    e.headImg = null;
    e.txt_name = null;
    e.txt_lv = null;
    e.versionLbl = null;
    e.btnService = null;
    e.btnPrivacy = null;
    e.bgmSlider = null;
    e.effSlider = null;
    e.isMusic = !0;
    e.isAudio = !0;
    e.isVb = !0;
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {
    var t = _uData["default"].ins.getSetting();

    this.isAudio = t.effectSound;
    this.isMusic = t.bgmSound;
    this.isVb = t.vibrate;
    this.upAudioBtn();
    this.updateMusicBtn();
    this.upVbBtn();
    this.initData();
    this.initSlider();
    var e = _idx.platform.version;

    if (e && (this.versionLbl.string = "v " + e), _idx.platform.string() == _pConst.PFCode.Wechat || _idx.platform.isQQ) {
      var o = this.btnService.node;
      var n = this.btnPrivacy.node;
      o.active = n.active = !0;
      o.on(cc.Node.EventType.TOUCH_END, function () {
        return _panelMgr["default"].ins.open("ui/ui_info", {
          type: 1
        });
      }, this);
      n.on(cc.Node.EventType.TOUCH_END, function () {
        return _panelMgr["default"].ins.open("ui/ui_info", {
          type: 2
        });
      }, this);
    }
  };

  e.prototype.initData = function () {
    var t = this;
    this.txt_name.string = _uData["default"].ins.getName();

    var e = _uData["default"].ins.getHeadImg();

    e ? cc.assetManager.loadRemote(e, {
      ext: _global.headImgExt
    }, function (e, o) {
      t.node && t.node.isValid && (e ? t.setDefaultHead() : t.headImg.spriteFrame = new cc.SpriteFrame(o));
    }) : this.setDefaultHead();
  };

  e.prototype.setDefaultHead = function () {
    var t = this;

    _res["default"].ins.getBundleByString("resSps").then(function (e) {
      e.load("common/head_1", cc.SpriteFrame, function (e, o) {
        !e && t.node && t.node.isValid && (t.headImg.spriteFrame = o);
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });
  };

  e.prototype.onAudioBtnTap = function () {
    this.isAudio = !this.isAudio;
    this.upAudioBtn();

    _uData["default"].ins.setSetting({
      effectSound: this.isAudio
    });
  };

  e.prototype.upAudioBtn = function () {
    null != this.audioBtn && this.audioBtn.setState(this.isAudio);
  };

  e.prototype.onMusicBtnTap = function () {
    this.isMusic = !this.isMusic;

    _uData["default"].ins.setSetting({
      bgmSound: this.isMusic
    });

    this.updateMusicBtn();
  };

  e.prototype.updateMusicBtn = function () {
    _sound["default"].ins[this.isMusic ? "playBGM" : "stopBGM"]();

    null != this.musicBtn && this.musicBtn.setState(this.isMusic);
  };

  e.prototype.onVibrateBtnTap = function () {
    this.isVb = !this.isVb;
    this.upVbBtn();

    _uData["default"].ins.setSetting({
      vibrate: this.isVb
    });
  };

  e.prototype.upVbBtn = function () {
    null != this.vibrateBtn && this.vibrateBtn.setState(this.isVb);
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.initSlider = function () {
    var t = _uData["default"].ins.getSetting();

    var e = t.effectVolume;
    var o = t.bgmVolume;
    this.bgmSlider.init(o);
    this.effSlider.init(e);
  };

  e.prototype.onSliderChange = function (t, e) {
    var o;
    if ("bgmVolume" !== e && "effectVolume" !== e) return console.error("slider参数错了!!!!");

    _uData["default"].ins.setSetting(((o = {})[e] = t.progress, o));

    _sound["default"].ins[e] = t.progress;
  };

  e.prototype.onBtnSkin = function () {};

  __decorate([v(_swBtn["default"])], e.prototype, "audioBtn", void 0);

  __decorate([v(_swBtn["default"])], e.prototype, "musicBtn", void 0);

  __decorate([v(_swBtn["default"])], e.prototype, "vibrateBtn", void 0);

  __decorate([v(cc.Sprite)], e.prototype, "headImg", void 0);

  __decorate([v(cc.Label)], e.prototype, "txt_name", void 0);

  __decorate([v(cc.Label)], e.prototype, "txt_lv", void 0);

  __decorate([v(cc.Label)], e.prototype, "versionLbl", void 0);

  __decorate([v(cc.Label)], e.prototype, "btnService", void 0);

  __decorate([v(cc.Label)], e.prototype, "btnPrivacy", void 0);

  __decorate([v(_slider["default"])], e.prototype, "bgmSlider", void 0);

  __decorate([v(_slider["default"])], e.prototype, "effSlider", void 0);

  return __decorate([m], e);
}(_baseUI["default"]);

exports["default"] = _;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_selectMode.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b76f4TM2JlHOpD2hjHeOUlQ', 'ui_selectMode');
// scripts/ui_selectMode.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var _cfgMgr = require("cfgMgr");

var _panelMgr = require("panelMgr");

var _main = require("main");

var _festivalMgr = require("festivalMgr");

var d = cc._decorator;
var h = d.ccclass;
var f = d.property;

var g = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.costNums = [];
    e.btnsNode = [];
    e.costs = [];
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {
    this.initData();
  };

  e.prototype.initData = function () {
    var t = _cfgMgr["default"].serverCfg.difficulty_rules.rules;
    var e = [];
    var o = 10;

    for (var n in t) {
      var i = t[n];
      o = Number(i.times_val);
      e.push(o);
    }

    this.costNums[0].string = e[0];
    this.costNums[1].string = e[2];
    this.costNums[2].string = e[3];
    this.costs = [e[0], e[2], e[3]];
  };

  e.prototype.onBtnStart = function (t, e) {
    var o = 5 * Number(e);
    var n = this.costs[Number(e) - 1];
    if (_pInfo["default"].ins.getPower() < n) _panelMgr["default"].ins.open("ui/ui_getRes", {
      itemId: "times"
    });else {
      var i = this.btnsNode[Number(e) - 1].convertToWorldSpaceAR(cc.Vec3.ZERO);
      var r = _main["default"].ins;
      r && (r.blockComp.enabled = !0);

      _festivalMgr["default"].ins.updPro(_festivalMgr.fesTaskKey.costPower, n);

      r.usePower(-n, i, o);
    }
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  __decorate([f([cc.Label])], e.prototype, "costNums", void 0);

  __decorate([f([cc.Node])], e.prototype, "btnsNode", void 0);

  return __decorate([h], e);
}(_baseUI["default"]);

exports["default"] = g;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfc2VsZWN0TW9kZS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfcEluZm8iLCJyZXF1aXJlIiwiX2Jhc2VVSSIsIl9jZmdNZ3IiLCJfcGFuZWxNZ3IiLCJfbWFpbiIsIl9mZXN0aXZhbE1nciIsImQiLCJjYyIsIl9kZWNvcmF0b3IiLCJoIiwiY2NjbGFzcyIsImYiLCJwcm9wZXJ0eSIsImciLCJ0IiwiZSIsImFwcGx5IiwiYXJndW1lbnRzIiwiY29zdE51bXMiLCJidG5zTm9kZSIsImNvc3RzIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwic3RhcnQiLCJpbml0RGF0YSIsInNlcnZlckNmZyIsImRpZmZpY3VsdHlfcnVsZXMiLCJydWxlcyIsIm8iLCJpIiwiTnVtYmVyIiwidGltZXNfdmFsIiwicHVzaCIsInN0cmluZyIsIm9uQnRuU3RhcnQiLCJpbnMiLCJnZXRQb3dlciIsIm9wZW4iLCJpdGVtSWQiLCJjb252ZXJ0VG9Xb3JsZFNwYWNlQVIiLCJWZWMzIiwiWkVSTyIsInIiLCJibG9ja0NvbXAiLCJlbmFibGVkIiwidXBkUHJvIiwiZmVzVGFza0tleSIsImNvc3RQb3dlciIsInVzZVBvd2VyIiwiaGlkZVRoaXMiLCJoaWRlIiwiX19kZWNvcmF0ZSIsIkxhYmVsIiwiTm9kZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXBCOztBQUNBLElBQUlDLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBSUUsT0FBTyxHQUFHRixPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFD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V0FBTCxDQUFjK0IsR0FBdEI7TUFDQU8sQ0FBQyxLQUFLQSxDQUFDLENBQUNDLFNBQUYsQ0FBWUMsT0FBWixHQUFzQixDQUFDLENBQTVCLENBQUQ7O01BQ0F2QyxZQUFZLFdBQVosQ0FBcUI4QixHQUFyQixDQUF5QlUsTUFBekIsQ0FBZ0N4QyxZQUFZLENBQUN5QyxVQUFiLENBQXdCQyxTQUF4RCxFQUFtRXJELENBQW5FOztNQUNBZ0QsQ0FBQyxDQUFDTSxRQUFGLENBQVcsQ0FBQ3RELENBQVosRUFBZW1DLENBQWYsRUFBa0JELENBQWxCO0lBQ0g7RUFDSixDQVhEOztFQVlBYixDQUFDLENBQUNPLFNBQUYsQ0FBWTJCLFFBQVosR0FBdUIsWUFBWTtJQUMvQixLQUFLQyxJQUFMO0VBQ0gsQ0FGRDs7RUFHQUMsVUFBVSxDQUFDLENBQUN4QyxDQUFDLENBQUMsQ0FBQ0osRUFBRSxDQUFDNkMsS0FBSixDQUFELENBQUYsQ0FBRCxFQUFrQnJDLENBQUMsQ0FBQ08sU0FBcEIsRUFBK0IsVUFBL0IsRUFBMkMsS0FBSyxDQUFoRCxDQUFWOztFQUNBNkIsVUFBVSxDQUFDLENBQUN4QyxDQUFDLENBQUMsQ0FBQ0osRUFBRSxDQUFDOEMsSUFBSixDQUFELENBQUYsQ0FBRCxFQUFpQnRDLENBQUMsQ0FBQ08sU0FBbkIsRUFBOEIsVUFBOUIsRUFBMEMsS0FBSyxDQUEvQyxDQUFWOztFQUNBLE9BQU82QixVQUFVLENBQUMsQ0FBQzFDLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0E1Q08sQ0E0Q0xkLE9BQU8sV0E1Q0YsQ0FBUjs7QUE2Q0FKLE9BQU8sV0FBUCxHQUFrQmdCLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF9wSW5mbyA9IHJlcXVpcmUoXCJwSW5mb1wiKTtcbnZhciBfYmFzZVVJID0gcmVxdWlyZShcImJhc2VVSVwiKTtcbnZhciBfY2ZnTWdyID0gcmVxdWlyZShcImNmZ01nclwiKTtcbnZhciBfcGFuZWxNZ3IgPSByZXF1aXJlKFwicGFuZWxNZ3JcIik7XG52YXIgX21haW4gPSByZXF1aXJlKFwibWFpblwiKTtcbnZhciBfZmVzdGl2YWxNZ3IgPSByZXF1aXJlKFwiZmVzdGl2YWxNZ3JcIik7XG52YXIgZCA9IGNjLl9kZWNvcmF0b3I7XG52YXIgaCA9IGQuY2NjbGFzcztcbnZhciBmID0gZC5wcm9wZXJ0eTtcbnZhciBnID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuY29zdE51bXMgPSBbXTtcbiAgICAgICAgZS5idG5zTm9kZSA9IFtdO1xuICAgICAgICBlLmNvc3RzID0gW107XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaW5pdERhdGEoKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmluaXREYXRhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IF9jZmdNZ3IuZGVmYXVsdC5zZXJ2ZXJDZmcuZGlmZmljdWx0eV9ydWxlcy5ydWxlcztcbiAgICAgICAgdmFyIGUgPSBbXTtcbiAgICAgICAgdmFyIG8gPSAxMDtcbiAgICAgICAgZm9yICh2YXIgbiBpbiB0KSB7XG4gICAgICAgICAgICB2YXIgaSA9IHRbbl07XG4gICAgICAgICAgICBvID0gTnVtYmVyKGkudGltZXNfdmFsKTtcbiAgICAgICAgICAgIGUucHVzaChvKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvc3ROdW1zWzBdLnN0cmluZyA9IGVbMF07XG4gICAgICAgIHRoaXMuY29zdE51bXNbMV0uc3RyaW5nID0gZVsyXTtcbiAgICAgICAgdGhpcy5jb3N0TnVtc1syXS5zdHJpbmcgPSBlWzNdO1xuICAgICAgICB0aGlzLmNvc3RzID0gW2VbMF0sIGVbMl0sIGVbM11dO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUub25CdG5TdGFydCA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIHZhciBvID0gNSAqIE51bWJlcihlKTtcbiAgICAgICAgdmFyIG4gPSB0aGlzLmNvc3RzW051bWJlcihlKSAtIDFdO1xuICAgICAgICBpZiAoX3BJbmZvLmRlZmF1bHQuaW5zLmdldFBvd2VyKCkgPCBuKSBfcGFuZWxNZ3IuZGVmYXVsdC5pbnMub3BlbihcInVpL3VpX2dldFJlc1wiLCB7aXRlbUlkOiBcInRpbWVzXCJ9KTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgaSA9IHRoaXMuYnRuc05vZGVbTnVtYmVyKGUpIC0gMV0uY29udmVydFRvV29ybGRTcGFjZUFSKGNjLlZlYzMuWkVSTyk7XG4gICAgICAgICAgICB2YXIgciA9IF9tYWluLmRlZmF1bHQuaW5zO1xuICAgICAgICAgICAgciAmJiAoci5ibG9ja0NvbXAuZW5hYmxlZCA9ICEwKTtcbiAgICAgICAgICAgIF9mZXN0aXZhbE1nci5kZWZhdWx0Lmlucy51cGRQcm8oX2Zlc3RpdmFsTWdyLmZlc1Rhc2tLZXkuY29zdFBvd2VyLCBuKTtcbiAgICAgICAgICAgIHIudXNlUG93ZXIoLW4sIGksIG8pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5oaWRlVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtmKFtjYy5MYWJlbF0pXSwgZS5wcm90b3R5cGUsIFwiY29zdE51bXNcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtmKFtjYy5Ob2RlXSldLCBlLnByb3RvdHlwZSwgXCJidG5zTm9kZVwiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtoXSwgZSk7XG59KShfYmFzZVVJLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gZztcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_saveConfirm.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd358aGT1ddJ576hGkYJRnVO', 'ui_saveConfirm');
// scripts/ui_saveConfirm.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _time = require("time");

var _uData = require("uData");

var _baseUI = require("baseUI");

var l = cc._decorator;
var u = l.ccclass;
var p = l.property;

var d = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.timeLb = null;
    e.lvL = null;
    e.coinNumL = null;
    e.powerL = null;
    e.item1L = null;
    e.item2L = null;
    e.item3L = null;
    e.lvR = null;
    e.coinNumR = null;
    e.powerR = null;
    e.item1R = null;
    e.item2R = null;
    e.item3R = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {};

  e.prototype.init = function (t) {
    var e;
    var o;
    var n;
    var i;
    var r;
    var c;
    var l = t.cData;
    this.timeLb.string = _time["default"].ins.formatDate(l.update_at);
    var u = this.chooseData = JSON.parse(l.user_data);

    var p = _uData["default"].ins.getLocalData();

    u && (this.lvL.string = (null == u ? void 0 : u.puzzleLvl) || 0, this.coinNumL.string = (null == u ? void 0 : u.coin) || 0, this.powerL.string = (null == u ? void 0 : u.power) || 0, this.item1L.string = (null === (e = null == u ? void 0 : u.bag) || void 0 === e ? void 0 : e.random_notice) || 0, this.item2L.string = (null === (o = null == u ? void 0 : u.bag) || void 0 === o ? void 0 : o.full_row_col) || 0, this.item3L.string = (null === (n = null == u ? void 0 : u.bag) || void 0 === n ? void 0 : n.notice) || 0);
    p && (this.lvR.string = (null == p ? void 0 : p.puzzleLvl) || 0, this.coinNumR.string = (null == p ? void 0 : p.coin) || 0, this.powerR.string = (null == p ? void 0 : p.power) || 0, this.item1R.string = (null === (i = null == p ? void 0 : p.bag) || void 0 === i ? void 0 : i.random_notice) || 0, this.item2R.string = (null === (r = null == p ? void 0 : p.bag) || void 0 === r ? void 0 : r.full_row_col) || 0, this.item3R.string = (null === (c = null == p ? void 0 : p.bag) || void 0 === c ? void 0 : c.notice) || 0);
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onBtnRestore = function () {
    this.chooseData && _uData["default"].ins.restoreData(this.chooseData);
  };

  __decorate([p(cc.Label)], e.prototype, "timeLb", void 0);

  __decorate([p(cc.Label)], e.prototype, "lvL", void 0);

  __decorate([p(cc.Label)], e.prototype, "coinNumL", void 0);

  __decorate([p(cc.Label)], e.prototype, "powerL", void 0);

  __decorate([p(cc.Label)], e.prototype, "item1L", void 0);

  __decorate([p(cc.Label)], e.prototype, "item2L", void 0);

  __decorate([p(cc.Label)], e.prototype, "item3L", void 0);

  __decorate([p(cc.Label)], e.prototype, "lvR", void 0);

  __decorate([p(cc.Label)], e.prototype, "coinNumR", void 0);

  __decorate([p(cc.Label)], e.prototype, "powerR", void 0);

  __decorate([p(cc.Label)], e.prototype, "item1R", void 0);

  __decorate([p(cc.Label)], e.prototype, "item2R", void 0);

  __decorate([p(cc.Label)], e.prototype, "item3R", void 0);

  return __decorate([u], e);
}(_baseUI["default"]);

exports["default"] = d;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_rePlayRace.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c4091qoo9VDMa2r6HVCvPb+', 'ui_rePlayRace');
// scripts/ui_rePlayRace.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _uData = require("uData");

var _lang = require("lang");

var _rankMgr = require("rankMgr");

var _raceRankItem = require("raceRankItem");

var _ui_rePlay = require("ui_rePlay");

var h = cc._decorator;
var f = h.ccclass;
var g = h.property;

var y = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.scrollRank = null;
    e.selfRank = null;
    e.idxIconArr = [];
    e.rankLb = null;
    e.rankItem = null;
    e.rankLength = 10;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    t.prototype.onLoad.call(this);
    this.rankLb.string = _lang.lang[40003];
    this.rankItem = this.scrollRank.content.children[0];
  };

  e.prototype.init = function (e) {
    var o = e.curScore;
    var n = e.continueCb;
    return __awaiter(this, void 0, void 0, function () {
      var e;
      var i;
      var r;
      var a;
      var l;
      var d;
      var h;
      var f;
      var g;
      var y;
      var m;
      var v;

      var _;

      var b;
      var w = this;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            return t.prototype.init.call(this, {
              curScore: o,
              continueCb: n
            }), [4, _rankMgr["default"].ins.getYdayRaceData()];

          case 1:
            for (e = s.sent(), i = [], e.data && (i = [].concat(e.data)), r = this.rankLength - 1, a = this.getRandomScoreArr(), l = [], d = _uData["default"].ins, h = {
              nick: d.getName(),
              score: o,
              idx: "",
              headUrl: d.getHeadImg()
            }, i.sort(function () {
              return Math.random() - 0.5;
            }), f = 0, g = 0; g < i.length && !(g >= r); g++) {
              y = i[g], m = d.getUid(), y.game_uid != m && (f++, l.push({
                nick: y.nickname,
                score: a[g].toString(),
                idx: "",
                headUrl: y.avatar
              }));
            }

            if (l.length < r) for (v = r - l.length, _ = 0; _ < v; _++) {
              b = "卷卷大王" + this.getRandString(), l.push({
                nick: b,
                score: a[f + _].toString(),
                idx: "",
                headUrl: ""
              });
            }
            return l.push(h), l.sort(function (t, e) {
              return parseInt(e.score) - parseInt(t.score);
            }), l.forEach(function (t, e) {
              t.idx = (e + 1).toString();
              var o = null;
              w.scrollRank.content.childrenCount > e ? o = w.scrollRank.content.children[e] : (o = cc.instantiate(w.rankItem), w.scrollRank.content.addChild(o));
              o.x = (cc.winSize.width + o.width) / 2;
              w.scheduleOnce(function () {
                w.showLoadAni(o);
              }, 0.05 * e);
              o.getComponent(_raceRankItem["default"]).initItem(t, w.idxIconArr[e]);
            }), this.selfRank.getComponent(_raceRankItem["default"]).initItem(h, this.idxIconArr[h.idx]), [2];
        }
      });
    });
  };

  e.prototype.showLoadAni = function (t) {
    cc.tween(t).to(0.5, {
      x: 0
    }, {
      easing: "backInOut"
    }).start();
  };

  e.prototype.getRandomScoreArr = function () {
    for (var t = [], e = this.rankLength - 1, o = 0; o < e; o++) {
      var n = void 0;
      var i = void 0;
      o < 7 ? (n = 100 * (7 - o), i = 100 * (8 - o)) : o >= 7 && o <= 8 && (n = -20 * (o - 8), i = -80 * o + 660);
      var r = Math.floor(Math.random() * (i - n)) + n;
      t.push(r);
    }

    return t;
  };

  e.prototype.getRandString = function () {
    for (var t = [], e = 0; e < 4; e++) {
      var o;
      var n = Math.floor(3 * Math.random());
      o = 0 === n ? Math.floor(26 * Math.random()) + 65 : 1 === n ? Math.floor(26 * Math.random()) + 97 : Math.floor(10 * Math.random()) + 48;
      t.push(o);
    }

    return String.fromCharCode.apply(String, t);
  };

  __decorate([g(cc.ScrollView)], e.prototype, "scrollRank", void 0);

  __decorate([g(_raceRankItem["default"])], e.prototype, "selfRank", void 0);

  __decorate([g([cc.SpriteFrame])], e.prototype, "idxIconArr", void 0);

  __decorate([g(cc.Label)], e.prototype, "rankLb", void 0);

  return __decorate([f], e);
}(_ui_rePlay["default"]);

exports["default"] = y;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_skin.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd45c3iSApZP3p940Sl9LSeE', 'ui_skin');
// scripts/ui_skin.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _baseUI = require("baseUI");

var _pInfo = require("pInfo");

var _uData = require("uData");

var _chgBtn = require("chgBtn");

var _skinContent = require("skinContent");

var _head = require("head");

var _res = require("res");

var _skinMgr = require("skinMgr");

var _evts = require("evts");

var g = cc._decorator;
var y = g.ccclass;
var m = g.property;

var v = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.scrollView = null;
    e.btnsNode = null;
    e.headComp = null;
    e.pNameTxt = null;
    e.bgSp = null;
    e.roleNode = null;
    e.curPageIdx = 1;
    e.contentArr = [];
    e.btnsComp = [];
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    var t = this;
    this.eventFunc = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eventFunc);

    this.scrollView.content.parent.children.forEach(function (e) {
      t.contentArr.push(e.getComponent(_skinContent["default"]));
      e.active = !1;
    });

    for (var e = function e(_e, n, i) {
      i.push(n[_e].getComponent(_chgBtn["default"]));

      n[_e].on("click", function () {
        t.chgViewData(_e);
      }, o);
    }, o = this, n = 0, i = this.btnsNode.children, r = this.btnsComp, a = i.length; n < a; n++) {
      e(n, i, r);
    }
  };

  e.prototype.start = function () {
    this.chgViewData(0);

    _res["default"].ins.getBundleByString("resSps").then(function (t) {
      t.preloadDir("game/skin");
    });

    _res["default"].ins.getBundleByString("prefab").then(function (t) {
      t.preloadDir("skin");
    });
  };

  e.prototype.onDestroy = function () {
    _evts["default"].opE.off(this.eventFunc);

    this.eventFunc = null;
  };

  e.prototype.init = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }

    var o = _pInfo["default"].ins.getUsingSkin();

    var n = _uData["default"].ins.getHeadImg();

    if (this.pNameTxt.string = _uData["default"].ins.getName(), this.headComp.loadHeadImg(n), o) for (var i in o) {
      var r = i;
      var a = o[i];
      this.updateShow(r, a);
    }
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.chgViewData = function (t) {
    var e = this.curPageIdx;

    if (e != t) {
      var o = {
        0: _skinMgr.SkinIdEnum.bg,
        1: _skinMgr.SkinIdEnum.headFrame,
        2: _skinMgr.SkinIdEnum.nameFrame,
        3: _skinMgr.SkinIdEnum.role
      };

      var n = _skinMgr["default"].ins.getSkinConfig(o[t]);

      this.contentArr[t].initContent(n);
      this.changeBtnState(e, t);
      this.changeContentState(e, t);
      this.curPageIdx = t;
    }
  };

  e.prototype.changeBtnState = function (t, e) {
    var o = this.btnsComp;
    o[t].setState(!1);
    o[e].setState(!0);
  };

  e.prototype.changeContentState = function (t, e) {
    var o = this.contentArr;
    var n = this.scrollView;
    o[t].node.active = !1;
    o[e].node.active = !0;
    n.content = o[e].node;
    n.scrollToTop(0.1);
  };

  e.prototype.onOperTap = function (t) {
    if ((null == t ? void 0 : t.action) === _evts["default"].SKIN_CHG && t.data && t.data.isUse) {
      var e = t.data;
      var o = e.skinId;
      var n = e.ref;
      this.updateShow(o, n);
    }
  };

  e.prototype.updateShow = function (t, e) {
    switch (t) {
      case _skinMgr.SkinIdEnum.bg:
        _skinMgr["default"].ins.updateBg(e, this.bgSp);

        break;

      case _skinMgr.SkinIdEnum.role:
        _skinMgr["default"].ins.updateRole(e, this.roleNode);

    }
  };

  __decorate([m(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([m(cc.Node)], e.prototype, "btnsNode", void 0);

  __decorate([m(_head["default"])], e.prototype, "headComp", void 0);

  __decorate([m(cc.Label)], e.prototype, "pNameTxt", void 0);

  __decorate([m(cc.Sprite)], e.prototype, "bgSp", void 0);

  __decorate([m(cc.Node)], e.prototype, "roleNode", void 0);

  return __decorate([y], e);
}(_baseUI["default"]);

exports["default"] = v;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/uvAni.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '41094vwy3ZOuZaeoTXDRToI', 'uvAni');
// scripts/uvAni.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = (a.property, function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bgMat = null;
    e.time = 0;
    e._speed = 0.5;
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {
    var t = this.getComponent(cc.Sprite);
    this.bgMat = t.getMaterial(0);
    this.time = 0;
  };

  Object.defineProperty(e.prototype, "speed", {
    set: function set(t) {
      this._speed = t;
    },
    enumerable: !1,
    configurable: !0
  });
  Object.defineProperty(e.prototype, "stop", {
    set: function set(t) {
      this.isStop = t;
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.update = function (t) {
    this.isStop || (this.time += t * this._speed, this.bgMat.setProperty("time", this.time));
  };

  return __decorate([s], e);
}(cc.Component));
exports["default"] = c;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdXZBbmkuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYSIsImNjIiwiX2RlY29yYXRvciIsInMiLCJjY2NsYXNzIiwiYyIsInByb3BlcnR5IiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsImJnTWF0IiwidGltZSIsIl9zcGVlZCIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsInN0YXJ0IiwiZ2V0Q29tcG9uZW50IiwiU3ByaXRlIiwiZ2V0TWF0ZXJpYWwiLCJzZXQiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwiaXNTdG9wIiwidXBkYXRlIiwic2V0UHJvcGVydHkiLCJfX2RlY29yYXRlIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsSUFDQUwsQ0FBQyxDQUFDTSxRQUFGLEVBQ0EsVUFBVUMsQ0FBVixFQUFhO0VBQ1YsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxLQUFGLEdBQVUsSUFBVjtJQUNBSCxDQUFDLENBQUNJLElBQUYsR0FBUyxDQUFUO0lBQ0FKLENBQUMsQ0FBQ0ssTUFBRixHQUFXLEdBQVg7SUFDQSxPQUFPTCxDQUFQO0VBQ0g7O0VBQ0RNLFNBQVMsQ0FBQ04sQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FDLENBQUMsQ0FBQ08sU0FBRixDQUFZQyxLQUFaLEdBQW9CLFlBQVk7SUFDNUIsSUFBSVQsQ0FBQyxHQUFHLEtBQUtVLFlBQUwsQ0FBa0JoQixFQUFFLENBQUNpQixNQUFyQixDQUFSO0lBQ0EsS0FBS1AsS0FBTCxHQUFhSixDQUFDLENBQUNZLFdBQUYsQ0FBYyxDQUFkLENBQWI7SUFDQSxLQUFLUCxJQUFMLEdBQVksQ0FBWjtFQUNILENBSkQ7O0VBS0FoQixNQUFNLENBQUNDLGNBQVAsQ0FBc0JXLENBQUMsQ0FBQ08sU0FBeEIsRUFBbUMsT0FBbkMsRUFBNEM7SUFDeENLLEdBQUcsRUFBRSxhQUFVYixDQUFWLEVBQWE7TUFDZCxLQUFLTSxNQUFMLEdBQWNOLENBQWQ7SUFDSCxDQUh1QztJQUl4Q2MsVUFBVSxFQUFFLENBQUMsQ0FKMkI7SUFLeENDLFlBQVksRUFBRSxDQUFDO0VBTHlCLENBQTVDO0VBT0ExQixNQUFNLENBQUNDLGNBQVAsQ0FBc0JXLENBQUMsQ0FBQ08sU0FBeEIsRUFBbUMsTUFBbkMsRUFBMkM7SUFDdkNLLEdBQUcsRUFBRSxhQUFVYixDQUFWLEVBQWE7TUFDZCxLQUFLZ0IsTUFBTCxHQUFjaEIsQ0FBZDtJQUNILENBSHNDO0lBSXZDYyxVQUFVLEVBQUUsQ0FBQyxDQUowQjtJQUt2Q0MsWUFBWSxFQUFFLENBQUM7RUFMd0IsQ0FBM0M7O0VBT0FkLENBQUMsQ0FBQ08sU0FBRixDQUFZUyxNQUFaLEdBQXFCLFVBQVVqQixDQUFWLEVBQWE7SUFDOUIsS0FBS2dCLE1BQUwsS0FBaUIsS0FBS1gsSUFBTCxJQUFhTCxDQUFDLEdBQUcsS0FBS00sTUFBdkIsRUFBZ0MsS0FBS0YsS0FBTCxDQUFXYyxXQUFYLENBQXVCLE1BQXZCLEVBQStCLEtBQUtiLElBQXBDLENBQWhEO0VBQ0gsQ0FGRDs7RUFHQSxPQUFPYyxVQUFVLENBQUMsQ0FBQ3ZCLENBQUQsQ0FBRCxFQUFNSyxDQUFOLENBQWpCO0FBQ0gsQ0FoQ0QsQ0FnQ0dQLEVBQUUsQ0FBQzBCLFNBaENOLENBRkMsQ0FBTDtBQW1DQTdCLE9BQU8sV0FBUCxHQUFrQk8sQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgYSA9IGNjLl9kZWNvcmF0b3I7XG52YXIgcyA9IGEuY2NjbGFzcztcbnZhciBjID1cbiAgICAoYS5wcm9wZXJ0eSxcbiAgICAoZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICAgICAgZS5iZ01hdCA9IG51bGw7XG4gICAgICAgICAgICBlLnRpbWUgPSAwO1xuICAgICAgICAgICAgZS5fc3BlZWQgPSAwLjU7XG4gICAgICAgICAgICByZXR1cm4gZTtcbiAgICAgICAgfVxuICAgICAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgICAgIGUucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHQgPSB0aGlzLmdldENvbXBvbmVudChjYy5TcHJpdGUpO1xuICAgICAgICAgICAgdGhpcy5iZ01hdCA9IHQuZ2V0TWF0ZXJpYWwoMCk7XG4gICAgICAgICAgICB0aGlzLnRpbWUgPSAwO1xuICAgICAgICB9O1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsIFwic3BlZWRcIiwge1xuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3NwZWVkID0gdDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiAhMSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSwgXCJzdG9wXCIsIHtcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlzU3RvcCA9IHQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW51bWVyYWJsZTogITEsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgICAgIH0pO1xuICAgICAgICBlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgdGhpcy5pc1N0b3AgfHwgKCh0aGlzLnRpbWUgKz0gdCAqIHRoaXMuX3NwZWVkKSwgdGhpcy5iZ01hdC5zZXRQcm9wZXJ0eShcInRpbWVcIiwgdGhpcy50aW1lKSk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfX2RlY29yYXRlKFtzXSwgZSk7XG4gICAgfSkoY2MuQ29tcG9uZW50KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_sevenDay.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c6f14ub1LFHhI8ElFgzZRTz', 'ui_sevenDay');
// scripts/ui_sevenDay.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _pConst = require("pConst");

var _request = require("request");

var _cfgMgr = require("cfgMgr");

var _bagMgr = require("bagMgr");

var _panelMgr = require("panelMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var _dayReward = require("dayReward");

var m = cc._decorator;
var v = m.ccclass;
var _ = m.property;

var b = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.dayNodes = [];
    e.getBtnNode = null;
    e.hasGetNode = null;
    e.reciveReward = {};
    e.aniData = [];
    e.canRecive = !1;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {};

  e.prototype.init = function () {
    for (var t = _pInfo["default"].ins.getSevenDays(), e = _pInfo["default"].ins.getSevenReward(), o = _cfgMgr["default"].serverCfg.seven_day_reward.rules, n = {}, i = 0, r = this.dayNodes.length; i < r; i++) {
      var a = o[i].val;
      var s = this.dayNodes[i];
      if (s.initItem(a), s.setDefault(), 6 === i && s.setCanRecive(), i < t && (s.setCanRecive(), i < e && s.setRecived()), t > i && i >= e) for (var c in this.aniData = this.aniData.concat(s.aniDatas), this.canRecive = !0, a) {
        var l = a[c];
        n[c] ? n[c] += l : n[c] = l;
      }
    }

    this.reciveReward = n;
    this.checkBtns();
  };

  e.prototype.checkBtns = function () {
    this.getBtnNode.active = this.canRecive;
    this.hasGetNode.active = !this.canRecive;
  };

  e.prototype.onBtnGet = function () {
    var t = this;

    if (this.canRecive) {
      this.canRecive = !1;
      this.checkBtns();

      for (var e = [], o = 0, n = this.aniData.length; o < n; o++) {
        var i = this.aniData[o];
        var r = {};
        var u = i.itemId;
        var g = Number(i.value);
        r.itemId = u;
        r.worldPos = i.itemNode.parent.convertToWorldSpaceAR(i.itemNode.position);
        r.value = g;
        e.push(r);

        _bagMgr["default"].ins.addItem(u, g);
      }

      var y = _pInfo["default"].ins.getSevenDays();

      _pInfo["default"].ins.setSevenReward(y);

      _evts["default"].opE.emit({
        action: _evts["default"].SIGN_RED
      });

      var m = _pInfo["default"].ins.getSevenReward();

      for (o = 0, n = this.dayNodes.length; o < n; o++) {
        var v = this.dayNodes[o];
        v.setDefault();
        6 === o && v.setCanRecive();
        o < y && (v.setCanRecive(), o < m && v.setRecived());
      }

      if (_idx.platform.string() == _pConst.PFCode.Bytedance) {
        var _ = _idx.platform.getSystemData();

        if (_) {
          var b = 0;

          switch (_.appName) {
            case "Douyin":
              b = 1;
              break;

            case "douyin_lite":
              b = 2;
          }

          var w = -1 != _.system.indexOf("iOS");

          b && y < 7 && !w && _request["default"].ins.sendSevenCard(b, y + 1);
        }
      }

      _panelMgr["default"].ins.open("ui/ui_flyAni", {
        itemDatas: e,
        hideCb: function hideCb() {
          t.hideThis();
        }
      });
    } else _tipMgr["default"].ins.showTip("已领取");
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  __decorate([_([_dayReward["default"]])], e.prototype, "dayNodes", void 0);

  __decorate([_(cc.Node)], e.prototype, "getBtnNode", void 0);

  __decorate([_(cc.Node)], e.prototype, "hasGetNode", void 0);

  return __decorate([v], e);
}(_baseUI["default"]);

exports["default"] = b;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_userInfo.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9f7e3P8qDRIJYoimVo/XyP9', 'ui_userInfo');
// scripts/ui_userInfo.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _request = require("request");

var _uData = require("uData");

var _head = require("head");

var _skinMgr = require("skinMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var d = cc._decorator;
var h = d.ccclass;
var f = d.property;

var g = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.lsTxt = null;
    e.raceScoreTxt = null;
    e.normalScoreTxt = null;
    e.jigsawTxt = null;
    e.achiTxt = null;
    e.headTxt = null;
    e.bgTxt = null;
    e.nameTxt = null;
    e.roleTxt = null;
    e.headComp = null;
    e.pNameTxt = null;
    e.nameSpr = null;
    e.bgSpr = null;
    e.girlNode = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    var e;
    var o = this;
    var n = t.gameUid;
    var i = t.baseData;
    var r = {};
    var c = _uData["default"].ins;
    var l = _pInfo["default"].ins;
    var p = "";
    var d = "";
    n == c.getUid() ? (p = c.getName(), d = c.getHeadImg(), r.recordData = JSON.parse(JSON.stringify(l.getRecordData())), r.jigFin = l.getHasFinJig(), r.mySkin = l.getMySkin(), r.uSkin = l.getUsingSkin(), this.rePanel(r)) : (i && (p = i.nickname, d = i.avatar, r.uSkin = null === (e = null == i ? void 0 : i.extra_data) || void 0 === e ? void 0 : e.usingSkin), _request["default"].ins.getUserDataByUid(n).then(function (t) {
      if (t && o.node && o.node.isValid) {
        var e = t.data;
        e && (r.recordData = null == e ? void 0 : e.recordData, r.jigFin = null == e ? void 0 : e.hasFinJig, r.mySkin = null == e ? void 0 : e.mySkin);
        o.rePanel(r);
      }
    }));
    var h = p;
    h.length > 7 && (h = h.substring(0, 6) + "...");
    this.pNameTxt.string = h;
    this.headComp.loadHeadImg(d);
  };

  e.prototype.rePanel = function (t) {
    var e;
    var o;
    var n;
    var i;
    var r;
    var a;
    var s;
    var c;
    var u;
    var p;
    var d;
    var h;
    var f;
    var g;
    var y;
    var m;
    var v;

    var _;

    if (t) {
      var b = _skinMgr["default"].ins;
      var w = (null === (e = null == t ? void 0 : t.uSkin) || void 0 === e ? void 0 : e.headFrame) || 1;
      b.updateHeadFrame(w, this.headComp.bg);
      var S = (null === (o = null == t ? void 0 : t.uSkin) || void 0 === o ? void 0 : o.nameFrame) || 1;
      b.updateNameFrame(S, this.nameSpr);
      var T = (null === (n = null == t ? void 0 : t.uSkin) || void 0 === n ? void 0 : n.bg) || 1;
      b.updateBg(T, this.bgSpr);
      var I = (null === (i = null == t ? void 0 : t.uSkin) || void 0 === i ? void 0 : i.role) || 1;
      b.updateRole(I, this.girlNode);
      this.headTxt.string = (null === (a = null === (r = null == t ? void 0 : t.mySkin) || void 0 === r ? void 0 : r.headFrame) || void 0 === a ? void 0 : a.length) || 1;
      this.bgTxt.string = (null === (c = null === (s = null == t ? void 0 : t.mySkin) || void 0 === s ? void 0 : s.bg) || void 0 === c ? void 0 : c.length) || 1;
      this.nameTxt.string = (null === (p = null === (u = null == t ? void 0 : t.mySkin) || void 0 === u ? void 0 : u.nameFrame) || void 0 === p ? void 0 : p.length) || 1;
      this.roleTxt.string = (null === (h = null === (d = null == t ? void 0 : t.mySkin) || void 0 === d ? void 0 : d.role) || void 0 === h ? void 0 : h.length) || 1;
      this.lsTxt.string = (null === (g = null === (f = null == t ? void 0 : t.recordData) || void 0 === f ? void 0 : f.main) || void 0 === g ? void 0 : g.heWins) || 0;
      this.raceScoreTxt.string = (null === (m = null === (y = null == t ? void 0 : t.recordData) || void 0 === y ? void 0 : y.race) || void 0 === m ? void 0 : m.hePoints) || 0;
      this.normalScoreTxt.string = (null === (_ = null === (v = null == t ? void 0 : t.recordData) || void 0 === v ? void 0 : v.main) || void 0 === _ ? void 0 : _.tPoints) || 0;
      var D = 0;
      if (t.jigFin) for (var P in t.jigFin) {
        t.jigFin[P] && D++;
      }
      this.jigsawTxt.string = "" + D;
      this.achiTxt.string = "0";
    }
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  __decorate([f(cc.Label)], e.prototype, "lsTxt", void 0);

  __decorate([f(cc.Label)], e.prototype, "raceScoreTxt", void 0);

  __decorate([f(cc.Label)], e.prototype, "normalScoreTxt", void 0);

  __decorate([f(cc.Label)], e.prototype, "jigsawTxt", void 0);

  __decorate([f(cc.Label)], e.prototype, "achiTxt", void 0);

  __decorate([f(cc.Label)], e.prototype, "headTxt", void 0);

  __decorate([f(cc.Label)], e.prototype, "bgTxt", void 0);

  __decorate([f(cc.Label)], e.prototype, "nameTxt", void 0);

  __decorate([f(cc.Label)], e.prototype, "roleTxt", void 0);

  __decorate([f(_head["default"])], e.prototype, "headComp", void 0);

  __decorate([f(cc.Label)], e.prototype, "pNameTxt", void 0);

  __decorate([f(cc.Sprite)], e.prototype, "nameSpr", void 0);

  __decorate([f(cc.Sprite)], e.prototype, "bgSpr", void 0);

  __decorate([f(cc.Node)], e.prototype, "girlNode", void 0);

  return __decorate([h], e);
}(_baseUI["default"]);

exports["default"] = g;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_reiGift.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9a9f1ncodlJC6kx1e5N1SaD', 'ui_reiGift');
// scripts/ui_reiGift.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _cfgMgr = require("cfgMgr");

var _item = require("item");

var _bagMgr = require("bagMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var p = cc._decorator;
var d = p.ccclass;
var h = p.property;

var f = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.itemSc = null;
    e.itemPre = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    var e;
    var o;
    var n;
    var i;
    var r;
    var u;
    var p = t.serPacks;
    var d = {};
    var h = {};
    var f = null === (o = null === (e = _cfgMgr["default"].serverCfg) || void 0 === e ? void 0 : e.shop_config) || void 0 === o ? void 0 : o.gift;
    var g = {};
    if (f) for (var y in f) {
      var m = f[y];
      g[m.key] = m;
      d[m.key] = m;
    }
    var v = null === (i = null === (n = _cfgMgr["default"].serverCfg) || void 0 === n ? void 0 : n.buy_stamina) || void 0 === i ? void 0 : i.stamina;
    if (v) for (var y in v) {
      (b = v[y]) && (g[b.key] = b, h[b.key] = b);
    }

    var _ = null === (u = null === (r = _cfgMgr["default"].serverCfg) || void 0 === r ? void 0 : r.buy_gold_coins) || void 0 === u ? void 0 : u.gold_coins;

    if (_) for (var y in _) {
      var b;
      (b = _[y]) && (g[b.key] = b, h[b.key] = b);
    }
    this.itemSc.node.width = 530;

    for (var w = 0, S = p.length; w < S; w++) {
      var T = p[w];

      if (T) {
        var I = g[null == T ? void 0 : T.gift_id];
        var D = d[null == T ? void 0 : T.gift_id];
        var P = h[null == T ? void 0 : T.gift_id];
        if (D && _pInfo["default"].ins.addShopRecord(null == T ? void 0 : T.gift_id), P && _pInfo["default"].ins.addShopUnreset(null == T ? void 0 : T.gift_id), I && I.props) for (var k = 0; k < T.gift_num; k++) {
          for (var y in I.props) {
            var R = I.props[y];
            T.is_double && (R *= 2);

            _bagMgr["default"].ins.addItem(y, R);

            var N = cc.instantiate(this.itemPre);
            N.active = !0;
            this.itemSc.content.addChild(N);
            N.getComponent(_item["default"]).initByData(y, R);
          }
        }
      }
    }

    var C = this.itemSc.content.children[0].width * this.itemSc.content.childrenCount;
    this.itemSc.node.x = C > this.itemSc.node.width ? -262 : (this.itemSc.node.width - C) / 2 - 262;
    C = Math.min(C, 530);
    this.itemSc.node.width = C;
    this.itemSc.scrollToLeft();
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  __decorate([h(cc.ScrollView)], e.prototype, "itemSc", void 0);

  __decorate([h(cc.Node)], e.prototype, "itemPre", void 0);

  return __decorate([d], e);
}(_baseUI["default"]);

exports["default"] = f;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_sidebar.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd0be4dW861Nob8k4ZQf0SYa', 'ui_sidebar');
// scripts/ui_sidebar.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _res = require("res");

var _panelMgr = require("panelMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var d = cc._decorator;
var h = d.ccclass;
var f = d.property;

var g = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.getBtn = null;
    e.intoBtn = null;
    e.tipNode = null;
    e.exampleNode = null;
    e.exampleSpr = null;
    e.exampleTxtNode = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {};

  e.prototype.start = function () {
    this.loadSp();
  };

  e.prototype.init = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }

    this.updateSliderStatus();
  };

  e.prototype.loadSp = function () {
    var t = this;
    var e = null;
    var o = cc.sys.platform === cc.sys.ALIPAY_GAME ? "ali" : "tt";
    this.exampleTxtNode.active = cc.sys.platform == cc.sys.ALIPAY_GAME;

    _res["default"].ins.getBundleByString("resSps").then(function (n) {
      n.loadDir("platform/" + o, cc.SpriteFrame, function (o, n) {
        !o && t.node && t.node.isValid && n.forEach(function (o) {
          if (-1 !== o.name.indexOf("txt")) ;else if (-1 !== o.name.indexOf("exa")) if (cc.sys.platform === cc.sys.BYTEDANCE_GAME) e = cc.v3(0, 90, 0), t.exampleSpr.spriteFrame = o, t.exampleSpr.node.position = e;else if (cc.sys.platform === cc.sys.ALIPAY_GAME) if (e = cc.v3(-132, 35, 0), -1 !== o.name.indexOf("exa1")) t.exampleSpr.spriteFrame = o, t.exampleSpr.node.position = e;else {
            var n = new cc.Node();
            n.addComponent(cc.Sprite).spriteFrame = o;
            n.parent = t.exampleNode;
            e.x += 264;
            n.position = e;
          }
        });
      });
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });
  };

  e.prototype.updateSliderStatus = function () {
    var t = this.bySlider = _idx.platform.bySlider;
    this.getBtn.active = t;
    this.intoBtn.active = !t;
    _pInfo["default"].ins.getIsGetSlider() ? (this.getBtn.active = !1, this.intoBtn.active = !1, this.tipNode.active = !0) : this.tipNode.active = !1;
  };

  e.prototype.onGet = function () {
    var t = this;

    _pInfo["default"].ins.addCoin(20);

    _pInfo["default"].ins.setIsGetSlider(!0);

    var e = this.getBtn.parent.convertToWorldSpaceAR(this.getBtn.position);

    _panelMgr["default"].ins.open("ui/ui_flyAni", {
      itemDatas: [{
        itemId: "coin",
        worldPos: e,
        value: 20
      }],
      hideCb: function hideCb() {
        t.hideThis();

        _evts["default"].opE.emit({
          action: _evts["default"].Slider_Chg
        });
      }
    });
  };

  e.prototype.onInto = function () {
    _idx.platform.navigateToScene();

    this.hideThis();
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onDestroy = function () {};

  __decorate([f(cc.Node)], e.prototype, "getBtn", void 0);

  __decorate([f(cc.Node)], e.prototype, "intoBtn", void 0);

  __decorate([f(cc.Node)], e.prototype, "tipNode", void 0);

  __decorate([f(cc.Node)], e.prototype, "exampleNode", void 0);

  __decorate([f(cc.Sprite)], e.prototype, "exampleSpr", void 0);

  __decorate([f(cc.Node)], e.prototype, "exampleTxtNode", void 0);

  return __decorate([h], e);
}(_baseUI["default"]);

exports["default"] = g;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfc2lkZWJhci5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfZXZ0cyIsInJlcXVpcmUiLCJfaWR4IiwiX3JlcyIsIl9wYW5lbE1nciIsIl9wSW5mbyIsIl9iYXNlVUkiLCJkIiwiY2MiLCJfZGVjb3JhdG9yIiwiaCIsImNjY2xhc3MiLCJmIiwicHJvcGVydHkiLCJnIiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsImdldEJ0biIsImludG9CdG4iLCJ0aXBOb2RlIiwiZXhhbXBsZU5vZGUiLCJleGFtcGxlU3ByIiwiZXhhbXBsZVR4dE5vZGUiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJvbkxvYWQiLCJzdGFydCIsImxvYWRTcCIsImluaXQiLCJsZW5ndGgiLCJ1cGRhdGVTbGlkZXJTdGF0dXMiLCJvIiwic3lzIiwicGxhdGZvcm0iLCJBTElQQVlfR0FNRSIsImFjdGl2ZSIsImlucyIsImdldEJ1bmRsZUJ5U3RyaW5nIiwidGhlbiIsImxvYWREaXIiLCJTcHJpdGVGcmFtZSIsIm5vZGUiLCJpc1ZhbGlkIiwiZm9yRWFjaCIsIm5hbWUiLCJpbmRleE9mIiwiQllURURBTkNFX0dBTUUiLCJ2MyIsInNwcml0ZUZyYW1lIiwicG9zaXRpb24iLCJOb2RlIiwiYWRkQ29tcG9uZW50IiwiU3ByaXRlIiwicGFyZW50IiwieCIsImNvbnNvbGUiLCJlcnJvciIsImJ5U2xpZGVyIiwiZ2V0SXNHZXRTbGlkZXIiLCJvbkdldCIsImFkZENvaW4iLCJzZXRJc0dldFNsaWRlciIsImNvbnZlcnRUb1dvcmxkU3BhY2VBUiIsIm9wZW4iLCJpdGVtRGF0YXMiLCJpdGVtSWQiLCJ3b3JsZFBvcyIsImhpZGVDYiIsImhpZGVUaGlzIiwib3BFIiwiZW1pdCIsImFjdGlvbiIsIlNsaWRlcl9DaGciLCJvbkludG8iLCJuYXZpZ2F0ZVRvU2NlbmUiLCJoaWRlIiwib25EZXN0cm95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QUFWOztFQUNBcUQsVUFBVSxDQUFDLENBQUNuRSxDQUFDLENBQUNKLEVBQUUsQ0FBQzRDLElBQUosQ0FBRixDQUFELEVBQWVwQyxDQUFDLENBQUNVLFNBQWpCLEVBQTRCLFNBQTVCLEVBQXVDLEtBQUssQ0FBNUMsQ0FBVjs7RUFDQXFELFVBQVUsQ0FBQyxDQUFDbkUsQ0FBQyxDQUFDSixFQUFFLENBQUM0QyxJQUFKLENBQUYsQ0FBRCxFQUFlcEMsQ0FBQyxDQUFDVSxTQUFqQixFQUE0QixTQUE1QixFQUF1QyxLQUFLLENBQTVDLENBQVY7O0VBQ0FxRCxVQUFVLENBQUMsQ0FBQ25FLENBQUMsQ0FBQ0osRUFBRSxDQUFDNEMsSUFBSixDQUFGLENBQUQsRUFBZXBDLENBQUMsQ0FBQ1UsU0FBakIsRUFBNEIsYUFBNUIsRUFBMkMsS0FBSyxDQUFoRCxDQUFWOztFQUNBcUQsVUFBVSxDQUFDLENBQUNuRSxDQUFDLENBQUNKLEVBQUUsQ0FBQzhDLE1BQUosQ0FBRixDQUFELEVBQWlCdEMsQ0FBQyxDQUFDVSxTQUFuQixFQUE4QixZQUE5QixFQUE0QyxLQUFLLENBQWpELENBQVY7O0VBQ0FxRCxVQUFVLENBQUMsQ0FBQ25FLENBQUMsQ0FBQ0osRUFBRSxDQUFDNEMsSUFBSixDQUFGLENBQUQsRUFBZXBDLENBQUMsQ0FBQ1UsU0FBakIsRUFBNEIsZ0JBQTVCLEVBQThDLEtBQUssQ0FBbkQsQ0FBVjs7RUFDQSxPQUFPcUQsVUFBVSxDQUFDLENBQUNyRSxDQUFELENBQUQsRUFBTU0sQ0FBTixDQUFqQjtBQUNILENBNUZPLENBNEZMVixPQUFPLFdBNUZGLENBQVI7O0FBNkZBUixPQUFPLFdBQVAsR0FBa0JnQixDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfZXZ0cyA9IHJlcXVpcmUoXCJldnRzXCIpO1xudmFyIF9pZHggPSByZXF1aXJlKFwiaWR4XCIpO1xudmFyIF9yZXMgPSByZXF1aXJlKFwicmVzXCIpO1xudmFyIF9wYW5lbE1nciA9IHJlcXVpcmUoXCJwYW5lbE1nclwiKTtcbnZhciBfcEluZm8gPSByZXF1aXJlKFwicEluZm9cIik7XG52YXIgX2Jhc2VVSSA9IHJlcXVpcmUoXCJiYXNlVUlcIik7XG52YXIgZCA9IGNjLl9kZWNvcmF0b3I7XG52YXIgaCA9IGQuY2NjbGFzcztcbnZhciBmID0gZC5wcm9wZXJ0eTtcbnZhciBnID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuZ2V0QnRuID0gbnVsbDtcbiAgICAgICAgZS5pbnRvQnRuID0gbnVsbDtcbiAgICAgICAgZS50aXBOb2RlID0gbnVsbDtcbiAgICAgICAgZS5leGFtcGxlTm9kZSA9IG51bGw7XG4gICAgICAgIGUuZXhhbXBsZVNwciA9IG51bGw7XG4gICAgICAgIGUuZXhhbXBsZVR4dE5vZGUgPSBudWxsO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLm9uTG9hZCA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIGUucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmxvYWRTcCgpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZm9yICh2YXIgdCA9IFtdLCBlID0gMDsgZSA8IGFyZ3VtZW50cy5sZW5ndGg7IGUrKykgdFtlXSA9IGFyZ3VtZW50c1tlXTtcbiAgICAgICAgdGhpcy51cGRhdGVTbGlkZXJTdGF0dXMoKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmxvYWRTcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgICB2YXIgZSA9IG51bGw7XG4gICAgICAgIHZhciBvID0gY2Muc3lzLnBsYXRmb3JtID09PSBjYy5zeXMuQUxJUEFZX0dBTUUgPyBcImFsaVwiIDogXCJ0dFwiO1xuICAgICAgICB0aGlzLmV4YW1wbGVUeHROb2RlLmFjdGl2ZSA9IGNjLnN5cy5wbGF0Zm9ybSA9PSBjYy5zeXMuQUxJUEFZX0dBTUU7XG4gICAgICAgIF9yZXMuZGVmYXVsdC5pbnNcbiAgICAgICAgICAgIC5nZXRCdW5kbGVCeVN0cmluZyhcInJlc1Nwc1wiKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgICAgICAgICBuLmxvYWREaXIoXCJwbGF0Zm9ybS9cIiArIG8sIGNjLlNwcml0ZUZyYW1lLCBmdW5jdGlvbiAobywgbikge1xuICAgICAgICAgICAgICAgICAgICAhbyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgdC5ub2RlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICB0Lm5vZGUuaXNWYWxpZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgbi5mb3JFYWNoKGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKC0xICE9PSBvLm5hbWUuaW5kZXhPZihcInR4dFwiKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoLTEgIT09IG8ubmFtZS5pbmRleE9mKFwiZXhhXCIpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2Muc3lzLnBsYXRmb3JtID09PSBjYy5zeXMuQllURURBTkNFX0dBTUUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZSA9IGNjLnYzKDAsIDkwLCAwKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHQuZXhhbXBsZVNwci5zcHJpdGVGcmFtZSA9IG8pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICh0LmV4YW1wbGVTcHIubm9kZS5wb3NpdGlvbiA9IGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChjYy5zeXMucGxhdGZvcm0gPT09IGNjLnN5cy5BTElQQVlfR0FNRSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoKGUgPSBjYy52MygtMTMyLCAzNSwgMCkpLCAtMSAhPT0gby5uYW1lLmluZGV4T2YoXCJleGExXCIpKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAodC5leGFtcGxlU3ByLnNwcml0ZUZyYW1lID0gbyksICh0LmV4YW1wbGVTcHIubm9kZS5wb3NpdGlvbiA9IGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG4gPSBuZXcgY2MuTm9kZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG4uYWRkQ29tcG9uZW50KGNjLlNwcml0ZSkuc3ByaXRlRnJhbWUgPSBvO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG4ucGFyZW50ID0gdC5leGFtcGxlTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnggKz0gMjY0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG4ucG9zaXRpb24gPSBlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIlJUb29sLmlucy5nZXRCdW5kbGVCeVN0cmluZygncmVzU3BzJylcIiwgdCk7XG4gICAgICAgICAgICB9KTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnVwZGF0ZVNsaWRlclN0YXR1cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSAodGhpcy5ieVNsaWRlciA9IF9pZHgucGxhdGZvcm0uYnlTbGlkZXIpO1xuICAgICAgICB0aGlzLmdldEJ0bi5hY3RpdmUgPSB0O1xuICAgICAgICB0aGlzLmludG9CdG4uYWN0aXZlID0gIXQ7XG4gICAgICAgIF9wSW5mby5kZWZhdWx0Lmlucy5nZXRJc0dldFNsaWRlcigpXG4gICAgICAgICAgICA/ICgodGhpcy5nZXRCdG4uYWN0aXZlID0gITEpLCAodGhpcy5pbnRvQnRuLmFjdGl2ZSA9ICExKSwgKHRoaXMudGlwTm9kZS5hY3RpdmUgPSAhMCkpXG4gICAgICAgICAgICA6ICh0aGlzLnRpcE5vZGUuYWN0aXZlID0gITEpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUub25HZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ID0gdGhpcztcbiAgICAgICAgX3BJbmZvLmRlZmF1bHQuaW5zLmFkZENvaW4oMjApO1xuICAgICAgICBfcEluZm8uZGVmYXVsdC5pbnMuc2V0SXNHZXRTbGlkZXIoITApO1xuICAgICAgICB2YXIgZSA9IHRoaXMuZ2V0QnRuLnBhcmVudC5jb252ZXJ0VG9Xb3JsZFNwYWNlQVIodGhpcy5nZXRCdG4ucG9zaXRpb24pO1xuICAgICAgICBfcGFuZWxNZ3IuZGVmYXVsdC5pbnMub3BlbihcInVpL3VpX2ZseUFuaVwiLCB7XG4gICAgICAgICAgICBpdGVtRGF0YXM6IFt7aXRlbUlkOiBcImNvaW5cIiwgd29ybGRQb3M6IGUsIHZhbHVlOiAyMH1dLFxuICAgICAgICAgICAgaGlkZUNiOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdC5oaWRlVGhpcygpO1xuICAgICAgICAgICAgICAgIF9ldnRzLmRlZmF1bHQub3BFLmVtaXQoe2FjdGlvbjogX2V2dHMuZGVmYXVsdC5TbGlkZXJfQ2hnfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUub25JbnRvID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfaWR4LnBsYXRmb3JtLm5hdmlnYXRlVG9TY2VuZSgpO1xuICAgICAgICB0aGlzLmhpZGVUaGlzKCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5oaWRlVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vbkRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICBfX2RlY29yYXRlKFtmKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiZ2V0QnRuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbZihjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcImludG9CdG5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtmKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwidGlwTm9kZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2YoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJleGFtcGxlTm9kZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2YoY2MuU3ByaXRlKV0sIGUucHJvdG90eXBlLCBcImV4YW1wbGVTcHJcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtmKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiZXhhbXBsZVR4dE5vZGVcIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gX19kZWNvcmF0ZShbaF0sIGUpO1xufSkoX2Jhc2VVSS5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGc7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/wormSp.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5d0d4CPN3hK1I6Lx4gDVS6P', 'wormSp');
// scripts/wormSp.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _com = require("com");

var s = cc._decorator;
var c = s.ccclass;
var l = s.property;

var u = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.spine = null;
    e.countLbl = null;
    e.idles = ["", "2", "3"];
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.spine.setCompleteListener(this._playIdle.bind(this));

    this._playIdle();
  };

  e.prototype.init = function (t) {
    this.curCount = 0;
    this.maxCount = t;
    this.countLbl.string = this.curCount + "/" + this.maxCount;
  };

  e.prototype.addCount = function () {
    var t = this.curCount = this.curCount + 1;
    t == this.maxCount && this.playDone();
    this.countLbl.string = t + "/" + this.maxCount;
  };

  e.prototype._playIdle = function () {
    this.isDone || (this.spine.animation = "idle" + this.idles[_com["default"].ins.rad(0, 2)]);
  };

  e.prototype.playDone = function () {
    this.isDone = !0;
    var t = this.spine;
    t.loop = !1;
    t.animation = "xiaoshi";
  };

  __decorate([l(sp.Skeleton)], e.prototype, "spine", void 0);

  __decorate([l(cc.Label)], e.prototype, "countLbl", void 0);

  return __decorate([c], e);
}(cc.Component);

exports["default"] = u;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcd29ybVNwLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9jb20iLCJyZXF1aXJlIiwicyIsImNjIiwiX2RlY29yYXRvciIsImMiLCJjY2NsYXNzIiwibCIsInByb3BlcnR5IiwidSIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJzcGluZSIsImNvdW50TGJsIiwiaWRsZXMiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJvbkxvYWQiLCJzZXRDb21wbGV0ZUxpc3RlbmVyIiwiX3BsYXlJZGxlIiwiYmluZCIsImluaXQiLCJjdXJDb3VudCIsIm1heENvdW50Iiwic3RyaW5nIiwiYWRkQ291bnQiLCJwbGF5RG9uZSIsImlzRG9uZSIsImFuaW1hdGlvbiIsImlucyIsInJhZCIsImxvb3AiLCJfX2RlY29yYXRlIiwic3AiLCJTa2VsZXRvbiIsIkxhYmVsIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLElBQUlDLENBQUMsR0FBSSxVQUFVQyxDQUFWLEVBQWE7RUFDbEIsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxLQUFGLEdBQVUsSUFBVjtJQUNBSCxDQUFDLENBQUNJLFFBQUYsR0FBYSxJQUFiO0lBQ0FKLENBQUMsQ0FBQ0ssS0FBRixHQUFVLENBQUMsRUFBRCxFQUFLLEdBQUwsRUFBVSxHQUFWLENBQVY7SUFDQSxPQUFPTCxDQUFQO0VBQ0g7O0VBQ0RNLFNBQVMsQ0FBQ04sQ0FBRCxFQUFJRCxDQUFKLENBQVQ7O0VBQ0FDLENBQUMsQ0FBQ08sU0FBRixDQUFZQyxNQUFaLEdBQXFCLFlBQVk7SUFDN0IsS0FBS0wsS0FBTCxDQUFXTSxtQkFBWCxDQUErQixLQUFLQyxTQUFMLENBQWVDLElBQWYsQ0FBb0IsSUFBcEIsQ0FBL0I7O0lBQ0EsS0FBS0QsU0FBTDtFQUNILENBSEQ7O0VBSUFWLENBQUMsQ0FBQ08sU0FBRixDQUFZSyxJQUFaLEdBQW1CLFVBQVViLENBQVYsRUFBYTtJQUM1QixLQUFLYyxRQUFMLEdBQWdCLENBQWhCO0lBQ0EsS0FBS0MsUUFBTCxHQUFnQmYsQ0FBaEI7SUFDQSxLQUFLSyxRQUFMLENBQWNXLE1BQWQsR0FBdUIsS0FBS0YsUUFBTCxHQUFnQixHQUFoQixHQUFzQixLQUFLQyxRQUFsRDtFQUNILENBSkQ7O0VBS0FkLENBQUMsQ0FBQ08sU0FBRixDQUFZUyxRQUFaLEdBQXVCLFlBQVk7SUFDL0IsSUFBSWpCLENBQUMsR0FBSSxLQUFLYyxRQUFMLEdBQWdCLEtBQUtBLFFBQUwsR0FBZ0IsQ0FBekM7SUFDQWQsQ0FBQyxJQUFJLEtBQUtlLFFBQVYsSUFBc0IsS0FBS0csUUFBTCxFQUF0QjtJQUNBLEtBQUtiLFFBQUwsQ0FBY1csTUFBZCxHQUF1QmhCLENBQUMsR0FBRyxHQUFKLEdBQVUsS0FBS2UsUUFBdEM7RUFDSCxDQUpEOztFQUtBZCxDQUFDLENBQUNPLFNBQUYsQ0FBWUcsU0FBWixHQUF3QixZQUFZO0lBQ2hDLEtBQUtRLE1BQUwsS0FBZ0IsS0FBS2YsS0FBTCxDQUFXZ0IsU0FBWCxHQUF1QixTQUFTLEtBQUtkLEtBQUwsQ0FBV2hCLElBQUksV0FBSixDQUFhK0IsR0FBYixDQUFpQkMsR0FBakIsQ0FBcUIsQ0FBckIsRUFBd0IsQ0FBeEIsQ0FBWCxDQUFoRDtFQUNILENBRkQ7O0VBR0FyQixDQUFDLENBQUNPLFNBQUYsQ0FBWVUsUUFBWixHQUF1QixZQUFZO0lBQy9CLEtBQUtDLE1BQUwsR0FBYyxDQUFDLENBQWY7SUFDQSxJQUFJbkIsQ0FBQyxHQUFHLEtBQUtJLEtBQWI7SUFDQUosQ0FBQyxDQUFDdUIsSUFBRixHQUFTLENBQUMsQ0FBVjtJQUNBdkIsQ0FBQyxDQUFDb0IsU0FBRixHQUFjLFNBQWQ7RUFDSCxDQUxEOztFQU1BSSxVQUFVLENBQUMsQ0FBQzNCLENBQUMsQ0FBQzRCLEVBQUUsQ0FBQ0MsUUFBSixDQUFGLENBQUQsRUFBbUJ6QixDQUFDLENBQUNPLFNBQXJCLEVBQWdDLE9BQWhDLEVBQXlDLEtBQUssQ0FBOUMsQ0FBVjs7RUFDQWdCLFVBQVUsQ0FBQyxDQUFDM0IsQ0FBQyxDQUFDSixFQUFFLENBQUNrQyxLQUFKLENBQUYsQ0FBRCxFQUFnQjFCLENBQUMsQ0FBQ08sU0FBbEIsRUFBNkIsVUFBN0IsRUFBeUMsS0FBSyxDQUE5QyxDQUFWOztFQUNBLE9BQU9nQixVQUFVLENBQUMsQ0FBQzdCLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0FuQ08sQ0FtQ0xSLEVBQUUsQ0FBQ21DLFNBbkNFLENBQVI7O0FBb0NBeEMsT0FBTyxXQUFQLEdBQWtCVyxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfY29tID0gcmVxdWlyZShcImNvbVwiKTtcbnZhciBzID0gY2MuX2RlY29yYXRvcjtcbnZhciBjID0gcy5jY2NsYXNzO1xudmFyIGwgPSBzLnByb3BlcnR5O1xudmFyIHUgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5zcGluZSA9IG51bGw7XG4gICAgICAgIGUuY291bnRMYmwgPSBudWxsO1xuICAgICAgICBlLmlkbGVzID0gW1wiXCIsIFwiMlwiLCBcIjNcIl07XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUub25Mb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnNwaW5lLnNldENvbXBsZXRlTGlzdGVuZXIodGhpcy5fcGxheUlkbGUuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuX3BsYXlJZGxlKCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdGhpcy5jdXJDb3VudCA9IDA7XG4gICAgICAgIHRoaXMubWF4Q291bnQgPSB0O1xuICAgICAgICB0aGlzLmNvdW50TGJsLnN0cmluZyA9IHRoaXMuY3VyQ291bnQgKyBcIi9cIiArIHRoaXMubWF4Q291bnQ7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5hZGRDb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHQgPSAodGhpcy5jdXJDb3VudCA9IHRoaXMuY3VyQ291bnQgKyAxKTtcbiAgICAgICAgdCA9PSB0aGlzLm1heENvdW50ICYmIHRoaXMucGxheURvbmUoKTtcbiAgICAgICAgdGhpcy5jb3VudExibC5zdHJpbmcgPSB0ICsgXCIvXCIgKyB0aGlzLm1heENvdW50O1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuX3BsYXlJZGxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmlzRG9uZSB8fCAodGhpcy5zcGluZS5hbmltYXRpb24gPSBcImlkbGVcIiArIHRoaXMuaWRsZXNbX2NvbS5kZWZhdWx0Lmlucy5yYWQoMCwgMildKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnBsYXlEb25lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmlzRG9uZSA9ICEwO1xuICAgICAgICB2YXIgdCA9IHRoaXMuc3BpbmU7XG4gICAgICAgIHQubG9vcCA9ICExO1xuICAgICAgICB0LmFuaW1hdGlvbiA9IFwieGlhb3NoaVwiO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbbChzcC5Ta2VsZXRvbildLCBlLnByb3RvdHlwZSwgXCJzcGluZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2woY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwiY291bnRMYmxcIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gX19kZWNvcmF0ZShbY10sIGUpO1xufSkoY2MuQ29tcG9uZW50KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHU7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_skinInfo.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7c070pF1aJJsYPevQtZg0rw', 'ui_skinInfo');
// scripts/ui_skinInfo.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _uData = require("uData");

var _lang = require("lang");

var _head = require("head");

var _skinMgr = require("skinMgr");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var _baseUI = require("baseUI");

var h = cc._decorator;
var f = h.ccclass;
var g = h.property;

var y = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.skinName = null;
    e.skinDesc = null;
    e.buyBtn = null;
    e.videoBtn = null;
    e.useBtn = null;
    e.headComp = null;
    e.bgSp = null;
    e.nameFrameSp = null;
    e.roleNode = null;
    e.frameBg = null;
    e.needCoin = null;
    e.needPro = null;
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {};

  e.prototype.init = function (t) {
    var e;
    var o = this;
    var n = t.ref;
    var i = t.skinId;
    var r = t.showNode;
    var s = t.unlockState;

    var c = _skinMgr["default"].ins.getSkinData(i, n);

    var u = c.name;
    var p = c.desc;
    var d = c.unlockType;
    var h = c.unlockValue;

    switch (this.skinName.string = u, this.skinDesc.string = p, this.skinId = i, this.ref = n, this.unlockValue = h, this.headComp.node.parent.active = i === _skinMgr.SkinIdEnum.headFrame, this.bgSp.node.active = i === _skinMgr.SkinIdEnum.bg, this.roleNode.active = i === _skinMgr.SkinIdEnum.role, this.nameFrameSp.node.parent.active = i === _skinMgr.SkinIdEnum.nameFrame, this.buyBtn.active = 2 === d && s === _skinMgr.SkinState.lock, this.videoBtn.active = 1 === d && s === _skinMgr.SkinState.lock, this.useBtn.active = _skinMgr.SkinState.using !== s && _skinMgr.SkinState.lock !== s, d) {
      case _skinMgr.SkinUnlockType.coin:
        this.setCoin();
        break;

      case _skinMgr.SkinUnlockType.video:
        this.setVideoPro();
    }

    var f = null === (e = r.getComponent(cc.Sprite)) || void 0 === e ? void 0 : e.spriteFrame;

    switch (i) {
      case _skinMgr.SkinIdEnum.role:
        this.roleNode.removeAllChildren();
        var g = cc.instantiate(r);
        g.y = -100, this.roleNode.addChild(g);
        break;

      case _skinMgr.SkinIdEnum.bg:
        this.bgSp.spriteFrame = f;
        break;

      case _skinMgr.SkinIdEnum.nameFrame:
        this.nameFrameSp.spriteFrame = f;
        break;

      case _skinMgr.SkinIdEnum.headFrame:
        var y = _uData["default"].ins.getHeadImg();

        this.headComp.loadHeadImg(y, n);
    }

    this.scheduleOnce(function () {
      o.setCloseBtnPos();
    });
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.setCoin = function () {
    this.needCoin.string = this.unlockValue.toString();
  };

  e.prototype.setVideoPro = function () {
    var t = _pInfo["default"].ins.getSkinAdPro(this.skinId, this.ref);

    void 0 !== t && (this.needPro.string = t + "/" + this.unlockValue, t >= this.unlockValue && (_skinMgr["default"].ins.addSkin(this.skinId, this.ref), this.videoBtn.active = !1, this.useBtn.active = !0));
  };

  e.prototype.setCloseBtnPos = function () {
    this.closeBtn.node.x = this.frameBg.width / 2 + this.frameBg.x - this.closeBtn.node.width / 2 - 15;
    this.closeBtn.node.y = this.frameBg.height / 2 + this.frameBg.y - this.closeBtn.node.height / 2 - 15;
  };

  e.prototype.onBtnUseSkin = function () {
    this.hide();

    _skinMgr["default"].ins.usingSkin(this.skinId, this.ref);
  };

  e.prototype.onBtnCoin = function () {
    _pInfo["default"].ins.getCoin() >= this.unlockValue ? (_pInfo["default"].ins.addCoin(-this.unlockValue), _skinMgr["default"].ins.addSkin(this.skinId, this.ref), this.buyBtn.active = !1, this.useBtn.active = !0, _tipMgr["default"].ins.showTip("购买成功")) : _tipMgr["default"].ins.showTip(_lang.lang[10001]);
  };

  e.prototype.onBtnVideo = function () {
    _pInfo["default"].ins.addSkinAdPro(this.skinId, this.ref);

    this.setVideoPro();
  };

  __decorate([g(cc.Label)], e.prototype, "skinName", void 0);

  __decorate([g(cc.Label)], e.prototype, "skinDesc", void 0);

  __decorate([g(cc.Node)], e.prototype, "buyBtn", void 0);

  __decorate([g(cc.Node)], e.prototype, "videoBtn", void 0);

  __decorate([g(cc.Node)], e.prototype, "useBtn", void 0);

  __decorate([g(_head["default"])], e.prototype, "headComp", void 0);

  __decorate([g(cc.Sprite)], e.prototype, "bgSp", void 0);

  __decorate([g(cc.Sprite)], e.prototype, "nameFrameSp", void 0);

  __decorate([g(cc.Node)], e.prototype, "roleNode", void 0);

  __decorate([g(cc.Node)], e.prototype, "frameBg", void 0);

  __decorate([g(cc.Label)], e.prototype, "needCoin", void 0);

  __decorate([g(cc.Label)], e.prototype, "needPro", void 0);

  return __decorate([f], e);
}(_baseUI["default"]);

exports["default"] = y;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfc2tpbkluZm8uanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX3VEYXRhIiwicmVxdWlyZSIsIl9sYW5nIiwiX2hlYWQiLCJfc2tpbk1nciIsIl90aXBNZ3IiLCJfcEluZm8iLCJfYmFzZVVJIiwiaCIsImNjIiwiX2RlY29yYXRvciIsImYiLCJjY2NsYXNzIiwiZyIsInByb3BlcnR5IiwieSIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJza2luTmFtZSIsInNraW5EZXNjIiwiYnV5QnRuIiwidmlkZW9CdG4iLCJ1c2VCdG4iLCJoZWFkQ29tcCIsImJnU3AiLCJuYW1lRnJhbWVTcCIsInJvbGVOb2RlIiwiZnJhbWVCZyIsIm5lZWRDb2luIiwibmVlZFBybyIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsInN0YXJ0IiwiaW5pdCIsIm8iLCJyZWYiLCJpIiwic2tpbklkIiwiciIsInNob3dOb2RlIiwicyIsInVubG9ja1N0YXRlIiwiYyIsImlucyIsImdldFNraW5EYXRhIiwidSIsIm5hbWUiLCJwIiwiZGVzYyIsImQiLCJ1bmxvY2tUeXBlIiwidW5sb2NrVmFsdWUiLCJzdHJpbmciLCJub2RlIiwicGFyZW50IiwiYWN0aXZlIiwiU2tpbklkRW51bSIsImhlYWRGcmFtZSIsImJnIiwicm9sZSIsIm5hbWVGcmFtZSIsIlNraW5TdGF0ZSIsImxvY2siLCJ1c2luZyIsIlNraW5VbmxvY2tUeXBlIiwiY29pbiIsInNldENvaW4iLCJ2aWRlbyIsInNldFZpZGVvUHJvIiwiZ2V0Q29tcG9uZW50IiwiU3ByaXRlIiwic3ByaXRlRnJhbWUiLCJyZW1vdmVBbGxDaGlsZHJlbiIsImluc3RhbnRpYXRlIiwiYWRkQ2hpbGQiLCJnZXRIZWFkSW1nIiwibG9hZEhlYWRJbWciLCJzY2hlZHVsZU9uY2UiLCJzZXRDbG9zZUJ0blBvcyIsImhpZGVUaGlzIiwiaGlkZSIsInRvU3RyaW5nIiwiZ2V0U2tpbkFkUHJvIiwiYWRkU2tpbiIsImNsb3NlQnRuIiwieCIsIndpZHRoIiwiaGVpZ2h0Iiwib25CdG5Vc2VTa2luIiwidXNpbmdTa2luIiwib25CdG5Db2luIiwiZ2V0Q29pbiIsImFkZENvaW4iLCJzaG93VGlwIiwibGFuZyIsIm9uQnRuVmlkZW8iLCJhZGRTa2luQWRQcm8iLCJfX2RlY29yYXRlIiwiTGFiZWwiLCJOb2RlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBLElBQUlDLE1BQU0sR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBcEI7O0FBQ0EsSUFBSUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFuQjs7QUFDQSxJQUFJRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQW5COztBQUNBLElBQUlHLFFBQVEsR0FBR0gsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBQ0EsSUFBSUksT0FBTyxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJSyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyxPQUFELENBQXBCOztBQUNBLElBQUlNLE9BQU8sR0FBR04sT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBSU8sQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLElBQUlDLENBQUMsR0FBSSxVQUFVQyxDQUFWLEVBQWE7RUFDbEIsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFB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O0FBQ0gsQ0ExSE8sQ0EwSExWLE9BQU8sV0ExSEYsQ0FBUjs7QUEySEFULE9BQU8sV0FBUCxHQUFrQmlCLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIF91RGF0YSA9IHJlcXVpcmUoXCJ1RGF0YVwiKTtcbnZhciBfbGFuZyA9IHJlcXVpcmUoXCJsYW5nXCIpO1xudmFyIF9oZWFkID0gcmVxdWlyZShcImhlYWRcIik7XG52YXIgX3NraW5NZ3IgPSByZXF1aXJlKFwic2tpbk1nclwiKTtcbnZhciBfdGlwTWdyID0gcmVxdWlyZShcInRpcE1nclwiKTtcbnZhciBfcEluZm8gPSByZXF1aXJlKFwicEluZm9cIik7XG52YXIgX2Jhc2VVSSA9IHJlcXVpcmUoXCJiYXNlVUlcIik7XG52YXIgaCA9IGNjLl9kZWNvcmF0b3I7XG52YXIgZiA9IGguY2NjbGFzcztcbnZhciBnID0gaC5wcm9wZXJ0eTtcbnZhciB5ID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuc2tpbk5hbWUgPSBudWxsO1xuICAgICAgICBlLnNraW5EZXNjID0gbnVsbDtcbiAgICAgICAgZS5idXlCdG4gPSBudWxsO1xuICAgICAgICBlLnZpZGVvQnRuID0gbnVsbDtcbiAgICAgICAgZS51c2VCdG4gPSBudWxsO1xuICAgICAgICBlLmhlYWRDb21wID0gbnVsbDtcbiAgICAgICAgZS5iZ1NwID0gbnVsbDtcbiAgICAgICAgZS5uYW1lRnJhbWVTcCA9IG51bGw7XG4gICAgICAgIGUucm9sZU5vZGUgPSBudWxsO1xuICAgICAgICBlLmZyYW1lQmcgPSBudWxsO1xuICAgICAgICBlLm5lZWRDb2luID0gbnVsbDtcbiAgICAgICAgZS5uZWVkUHJvID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgfVxuICAgIF9fZXh0ZW5kcyhlLCB0KTtcbiAgICBlLnByb3RvdHlwZS5zdGFydCA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB2YXIgZTtcbiAgICAgICAgdmFyIG8gPSB0aGlzO1xuICAgICAgICB2YXIgbiA9IHQucmVmO1xuICAgICAgICB2YXIgaSA9IHQuc2tpbklkO1xuICAgICAgICB2YXIgciA9IHQuc2hvd05vZGU7XG4gICAgICAgIHZhciBzID0gdC51bmxvY2tTdGF0ZTtcbiAgICAgICAgdmFyIGMgPSBfc2tpbk1nci5kZWZhdWx0Lmlucy5nZXRTa2luRGF0YShpLCBuKTtcbiAgICAgICAgdmFyIHUgPSBjLm5hbWU7XG4gICAgICAgIHZhciBwID0gYy5kZXNjO1xuICAgICAgICB2YXIgZCA9IGMudW5sb2NrVHlwZTtcbiAgICAgICAgdmFyIGggPSBjLnVubG9ja1ZhbHVlO1xuICAgICAgICBzd2l0Y2ggKFxuICAgICAgICAgICAgKCh0aGlzLnNraW5OYW1lLnN0cmluZyA9IHUpLFxuICAgICAgICAgICAgKHRoaXMuc2tpbkRlc2Muc3RyaW5nID0gcCksXG4gICAgICAgICAgICAodGhpcy5za2luSWQgPSBpKSxcbiAgICAgICAgICAgICh0aGlzLnJlZiA9IG4pLFxuICAgICAgICAgICAgKHRoaXMudW5sb2NrVmFsdWUgPSBoKSxcbiAgICAgICAgICAgICh0aGlzLmhlYWRDb21wLm5vZGUucGFyZW50LmFjdGl2ZSA9IGkgPT09IF9za2luTWdyLlNraW5JZEVudW0uaGVhZEZyYW1lKSxcbiAgICAgICAgICAgICh0aGlzLmJnU3Aubm9kZS5hY3RpdmUgPSBpID09PSBfc2tpbk1nci5Ta2luSWRFbnVtLmJnKSxcbiAgICAgICAgICAgICh0aGlzLnJvbGVOb2RlLmFjdGl2ZSA9IGkgPT09IF9za2luTWdyLlNraW5JZEVudW0ucm9sZSksXG4gICAgICAgICAgICAodGhpcy5uYW1lRnJhbWVTcC5ub2RlLnBhcmVudC5hY3RpdmUgPSBpID09PSBfc2tpbk1nci5Ta2luSWRFbnVtLm5hbWVGcmFtZSksXG4gICAgICAgICAgICAodGhpcy5idXlCdG4uYWN0aXZlID0gMiA9PT0gZCAmJiBzID09PSBfc2tpbk1nci5Ta2luU3RhdGUubG9jayksXG4gICAgICAgICAgICAodGhpcy52aWRlb0J0bi5hY3RpdmUgPSAxID09PSBkICYmIHMgPT09IF9za2luTWdyLlNraW5TdGF0ZS5sb2NrKSxcbiAgICAgICAgICAgICh0aGlzLnVzZUJ0bi5hY3RpdmUgPSBfc2tpbk1nci5Ta2luU3RhdGUudXNpbmcgIT09IHMgJiYgX3NraW5NZ3IuU2tpblN0YXRlLmxvY2sgIT09IHMpLFxuICAgICAgICAgICAgZClcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBjYXNlIF9za2luTWdyLlNraW5VbmxvY2tUeXBlLmNvaW46XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRDb2luKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIF9za2luTWdyLlNraW5VbmxvY2tUeXBlLnZpZGVvOlxuICAgICAgICAgICAgICAgIHRoaXMuc2V0VmlkZW9Qcm8oKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZiA9IG51bGwgPT09IChlID0gci5nZXRDb21wb25lbnQoY2MuU3ByaXRlKSkgfHwgdm9pZCAwID09PSBlID8gdm9pZCAwIDogZS5zcHJpdGVGcmFtZTtcbiAgICAgICAgc3dpdGNoIChpKSB7XG4gICAgICAgICAgICBjYXNlIF9za2luTWdyLlNraW5JZEVudW0ucm9sZTpcbiAgICAgICAgICAgICAgICB0aGlzLnJvbGVOb2RlLnJlbW92ZUFsbENoaWxkcmVuKCk7XG4gICAgICAgICAgICAgICAgdmFyIGcgPSBjYy5pbnN0YW50aWF0ZShyKTtcbiAgICAgICAgICAgICAgICAoZy55ID0gLTEwMCksIHRoaXMucm9sZU5vZGUuYWRkQ2hpbGQoZyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIF9za2luTWdyLlNraW5JZEVudW0uYmc6XG4gICAgICAgICAgICAgICAgdGhpcy5iZ1NwLnNwcml0ZUZyYW1lID0gZjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgX3NraW5NZ3IuU2tpbklkRW51bS5uYW1lRnJhbWU6XG4gICAgICAgICAgICAgICAgdGhpcy5uYW1lRnJhbWVTcC5zcHJpdGVGcmFtZSA9IGY7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIF9za2luTWdyLlNraW5JZEVudW0uaGVhZEZyYW1lOlxuICAgICAgICAgICAgICAgIHZhciB5ID0gX3VEYXRhLmRlZmF1bHQuaW5zLmdldEhlYWRJbWcoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmhlYWRDb21wLmxvYWRIZWFkSW1nKHksIG4pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG8uc2V0Q2xvc2VCdG5Qb3MoKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5oaWRlVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5zZXRDb2luID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLm5lZWRDb2luLnN0cmluZyA9IHRoaXMudW5sb2NrVmFsdWUudG9TdHJpbmcoKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnNldFZpZGVvUHJvID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IF9wSW5mby5kZWZhdWx0Lmlucy5nZXRTa2luQWRQcm8odGhpcy5za2luSWQsIHRoaXMucmVmKTtcbiAgICAgICAgdm9pZCAwICE9PSB0ICYmXG4gICAgICAgICAgICAoKHRoaXMubmVlZFByby5zdHJpbmcgPSB0ICsgXCIvXCIgKyB0aGlzLnVubG9ja1ZhbHVlKSxcbiAgICAgICAgICAgIHQgPj0gdGhpcy51bmxvY2tWYWx1ZSAmJlxuICAgICAgICAgICAgICAgIChfc2tpbk1nci5kZWZhdWx0Lmlucy5hZGRTa2luKHRoaXMuc2tpbklkLCB0aGlzLnJlZiksXG4gICAgICAgICAgICAgICAgKHRoaXMudmlkZW9CdG4uYWN0aXZlID0gITEpLFxuICAgICAgICAgICAgICAgICh0aGlzLnVzZUJ0bi5hY3RpdmUgPSAhMCkpKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnNldENsb3NlQnRuUG9zID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmNsb3NlQnRuLm5vZGUueCA9IHRoaXMuZnJhbWVCZy53aWR0aCAvIDIgKyB0aGlzLmZyYW1lQmcueCAtIHRoaXMuY2xvc2VCdG4ubm9kZS53aWR0aCAvIDIgLSAxNTtcbiAgICAgICAgdGhpcy5jbG9zZUJ0bi5ub2RlLnkgPSB0aGlzLmZyYW1lQmcuaGVpZ2h0IC8gMiArIHRoaXMuZnJhbWVCZy55IC0gdGhpcy5jbG9zZUJ0bi5ub2RlLmhlaWdodCAvIDIgLSAxNTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLm9uQnRuVXNlU2tpbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgIF9za2luTWdyLmRlZmF1bHQuaW5zLnVzaW5nU2tpbih0aGlzLnNraW5JZCwgdGhpcy5yZWYpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUub25CdG5Db2luID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfcEluZm8uZGVmYXVsdC5pbnMuZ2V0Q29pbigpID49IHRoaXMudW5sb2NrVmFsdWVcbiAgICAgICAgICAgID8gKF9wSW5mby5kZWZhdWx0Lmlucy5hZGRDb2luKC10aGlzLnVubG9ja1ZhbHVlKSxcbiAgICAgICAgICAgICAgX3NraW5NZ3IuZGVmYXVsdC5pbnMuYWRkU2tpbih0aGlzLnNraW5JZCwgdGhpcy5yZWYpLFxuICAgICAgICAgICAgICAodGhpcy5idXlCdG4uYWN0aXZlID0gITEpLFxuICAgICAgICAgICAgICAodGhpcy51c2VCdG4uYWN0aXZlID0gITApLFxuICAgICAgICAgICAgICBfdGlwTWdyLmRlZmF1bHQuaW5zLnNob3dUaXAoXCLotK3kubDmiJDlip9cIikpXG4gICAgICAgICAgICA6IF90aXBNZ3IuZGVmYXVsdC5pbnMuc2hvd1RpcChfbGFuZy5sYW5nWzEwMDAxXSk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vbkJ0blZpZGVvID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfcEluZm8uZGVmYXVsdC5pbnMuYWRkU2tpbkFkUHJvKHRoaXMuc2tpbklkLCB0aGlzLnJlZik7XG4gICAgICAgIHRoaXMuc2V0VmlkZW9Qcm8oKTtcbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW2coY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwic2tpbk5hbWVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtnKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcInNraW5EZXNjXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbZyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcImJ1eUJ0blwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2coY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJ2aWRlb0J0blwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2coY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJ1c2VCdG5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtnKF9oZWFkLmRlZmF1bHQpXSwgZS5wcm90b3R5cGUsIFwiaGVhZENvbXBcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtnKGNjLlNwcml0ZSldLCBlLnByb3RvdHlwZSwgXCJiZ1NwXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbZyhjYy5TcHJpdGUpXSwgZS5wcm90b3R5cGUsIFwibmFtZUZyYW1lU3BcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtnKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwicm9sZU5vZGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtnKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiZnJhbWVCZ1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2coY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwibmVlZENvaW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtnKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcIm5lZWRQcm9cIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gX19kZWNvcmF0ZShbZl0sIGUpO1xufSkoX2Jhc2VVSS5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHk7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/vivo.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b8e25IkG9NO4atNG91lT1oB', 'vivo');
// scripts/vivo.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

exports["default"] = function () {};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdml2by5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDOztBQUNBRCxPQUFPLFdBQVAsR0FBa0IsWUFBWSxDQUFFLENBQWhDIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uICgpIHt9O1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/veBtn.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'eb0f04Zrj5E9omuqiykJWJz', 'veBtn');
// scripts/veBtn.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _adC = require("adC");

var _com = require("com");

var _evts = require("evts");

var _idx = require("idx");

var _pConst = require("pConst");

var _request = require("request");

var _res = require("res");

var _sound = require("sound");

var _lang = require("lang");

var _tipMgr = require("tipMgr");

var _pInfo = require("pInfo");

var m = cc._decorator;
var v = m.ccclass;
var _ = m.property;

var b = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.videoSource = "";
    e.videoDuration = _adC.VEnum2.MEDIUM;
    e.onWatchEndEvent = null;
    e.adSp = null;
    e.cb = null;
    e.eCb = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    _idx.platform.preloadVideo(_adC.VEnum[this.videoDuration]);

    this.adSp || (this.adSp = this.node.getChildByName("bg").getChildByName("img_gk_ds").getComponent(cc.Sprite));
    this.setShareIcon();
  };

  e.prototype.onEnable = function () {
    this.node.on("click", this.onClick, this);
    this.eCb = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eCb);
  };

  e.prototype.onDisable = function () {
    this.node.off("click", this.onClick, this);

    _evts["default"].opE.off(this.eCb);

    this.eCb = null;
  };

  e.prototype.onOperTap = function (t) {
    switch (t.action) {
      case _evts["default"].AD_MAX:
        this.setShareIcon();
    }
  };

  e.prototype.onClick = function (t) {
    var e = this;

    if ((!t || t.interactable) && null != this.onWatchEndEvent && (null == this.cb || this.cb())) {
      var o = _com["default"].ins.a(this.node, 1);

      var n = _pInfo["default"].ins.isMaxShareCount();

      var i = _pInfo["default"].ins.isMaxAdCount();

      if (n && i) return void _tipMgr["default"].ins.showTip(_lang.lang[10009]);
      if (i) return void _idx.platform.share().then(function (n) {
        n && (o(), e.onWatchEndEvent && cc.Component.EventHandler.emitEvents([e.onWatchEndEvent], t), _pInfo["default"].ins.addShareCount());
      })["catch"](function (t) {
        console.error(t);
      });
      var r = this.node.adDotData || e.onWatchEndEvent.customEventData;

      _idx.platform.doWatchAD({
        videoSource: this.videoSource,
        videoDuration: this.videoDuration,
        sequenceInfo: null
      }).then(function () {
        _sound["default"].ins.playBGM();

        o();
        e.onWatchEndEvent && cc.Component.EventHandler.emitEvents([e.onWatchEndEvent], t);

        _pInfo["default"].ins.addAdCount();

        _request["default"].ins.adDot(r, 1);
      })["catch"](function (t) {
        switch (_sound["default"].ins.playBGM(), o(), t) {
          case _pConst.VideoFailCode.NO_AD:
            _tipMgr["default"].ins.showTip(_lang.lang[1e4]), _request["default"].ins.adDot(r, 0);
            break;

          case _pConst.VideoFailCode.CANCELED:
            _request["default"].ins.adDot(r, 2);

        }
      });
    }
  };

  e.prototype.setBeforeWatchCheckHandler = function (t) {
    this.cb = t;
  };

  e.prototype.setShareIcon = function () {
    this.adSp && _pInfo["default"].ins.isMaxAdCount() && (this.adSp.node.$isShare || (_res["default"].ins.lSF("common/lupin_2", this.adSp), this.adSp.node.$isShare = !0));
  };

  __decorate([_(cc.String)], e.prototype, "videoSource", void 0);

  __decorate([_(cc.Component.EventHandler)], e.prototype, "onWatchEndEvent", void 0);

  __decorate([_(cc.Sprite)], e.prototype, "adSp", void 0);

  return __decorate([v], e);
}(cc.Component);

exports["default"] = b;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_shopPack.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '04bfcWd8wxNsb58fYw/OdLP', 'ui_shopPack');
// scripts/ui_shopPack.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _cfgMgr = require("cfgMgr");

var _shopMgr = require("shopMgr");

var _baseUI = require("baseUI");

var _chaptBtn = require("chaptBtn");

var _packItem1 = require("packItem1");

var p = cc._decorator;
var d = p.ccclass;
var h = p.property;

var f = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.itemScroll = null;
    e.btnScroll = null;
    e.packItem = null;
    e.btnItem = null;
    e.btnsComp = [];
    e.curPageIdx = -1;
    e.datasArr = [];
    e.tabIds = [];
    e._packItem = [];
    return e;
  }

  __extends(e, t);

  e.prototype.init = function () {
    var t;
    var e;
    var o = this;
    var n = null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.shop_config) || void 0 === e ? void 0 : e.gift;

    if (n) {
      var i = {};

      for (var r in n) {
        var c = n[r];
        var u = c.tag || 0;
        c.is_shop && (i[u] ? i[u].push(c) : (i[u] = [], i[u].push(c)));
      }

      var p = _shopMgr["default"].ins.getTabsRed();

      for (var d in i) {
        var h = i[d];

        if (h) {
          this.tabIds.push(d);
          var f = h[0].gift || "礼包";
          var g = cc.instantiate(this.btnItem);
          g.active = !0;
          g.parent = this.btnScroll.content;
          var y = g.getComponent(_chaptBtn["default"]);
          y.setLb(f);
          y.setState(!1);
          this.btnsComp.push(y);
          this.datasArr.push(h);
          var m = 1;
          if (p[d]) m = 0;else for (var v = h.length, _ = 0; _ < v; _++) {
            0 == (h[_].price || 0) && m++;
          }
          y.setRed(m);
        }
      }

      var b = this.btnsComp.length;

      var w = function w(t) {
        S.btnsComp[t].node.on("click", function () {
          o.chgViewData(t);
        }, S);
      };

      var S = this;

      for (_ = 0; _ < b; _++) {
        w(_);
      }

      this.btnScroll.node.width = 550;
      var T = this.btnScroll.content.children[0].width * this.btnScroll.content.childrenCount;
      this.btnScroll.node.x = T > this.btnScroll.node.width ? -274 : (this.btnScroll.node.width - T) / 2 - 274;
      T = Math.min(T, 550);
      this.btnScroll.node.width = T;
      this.btnScroll.scrollToLeft();
      this.chgViewData(0);
    }
  };

  e.prototype.chgViewData = function (t) {
    var e = this.curPageIdx;

    if (e != t) {
      var o = this.btnsComp;

      var n = _shopMgr["default"].ins.getTabsRed();

      o[e] && (o[e].setState(!1), o[e].setRed(0), n[this.tabIds[e]] = 1);
      o[t] && (o[t].setState(!0), n[this.tabIds[t]] = 1);

      _shopMgr["default"].ins.setTabsRed(n);

      this.curPageIdx = t;
      this.initListView();
    }
  };

  e.prototype.initListView = function () {
    var t = this;
    var e = this.itemScroll.content;
    e.children.forEach(function (e) {
      t._packItem.push(e);
    });
    e.removeAllChildren();

    for (var o = this.datasArr[this.curPageIdx], n = o.length, i = 0; i < n; i++) {
      var r = o[i];

      var a = this._packItem.shift();

      a || (a = cc.instantiate(this.packItem));
      a.active = !0;
      a.parent = e;
      a.getComponent(_packItem1["default"]).initItem(r);
    }

    e.setContentSize(580, 182 * n);
  };

  e.prototype.hideThis = function () {
    t.prototype.hide.call(this);
  };

  __decorate([h(cc.ScrollView)], e.prototype, "itemScroll", void 0);

  __decorate([h(cc.ScrollView)], e.prototype, "btnScroll", void 0);

  __decorate([h(cc.Node)], e.prototype, "packItem", void 0);

  __decorate([h(cc.Node)], e.prototype, "btnItem", void 0);

  return __decorate([d], e);
}(_baseUI["default"]);

exports["default"] = f;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_tip.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ed9b2LsSfRIso6X0TSRTqgj', 'ui_tip');
// scripts/ui_tip.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _loading = require("loading");

var _baseUI = require("baseUI");

var c = cc._decorator;
var l = c.ccclass;
var u = c.property;

var p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.showLab = null;
    e.tNode = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t, e) {
    var o = this;
    this.showLab.font = e ? "" : _loading.DEFAULTFONT;
    this.showLab.fontSize = e ? 35 : 40;
    this.showLab.string = t;
    this.tNode.scale = 0;
    this.showLab.scheduleOnce(function () {
      o.tNode.height = o.showLab.node.height + 30;
    }, 0);
    cc.Tween.stopAllByTarget(this.tNode);
    this.tNode.setPosition(cc.v2());
    this.onShow();
  };

  e.prototype.onShow = function () {
    cc.tween(this.tNode).parallel(cc.tween(this.tNode).to(0.2, {
      scale: 1
    }), cc.tween(this.tNode).to(2, {
      y: 120
    })).delay(0.1).to(0.2, {
      scale: 0
    }).start();
  };

  __decorate([u(cc.Label)], e.prototype, "showLab", void 0);

  __decorate([u(cc.Node)], e.prototype, "tNode", void 0);

  return __decorate([l], e);
}(_baseUI["default"]);

exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlfdGlwLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9sb2FkaW5nIiwicmVxdWlyZSIsIl9iYXNlVUkiLCJjIiwiY2MiLCJfZGVjb3JhdG9yIiwibCIsImNjY2xhc3MiLCJ1IiwicHJvcGVydHkiLCJwIiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsInNob3dMYWIiLCJ0Tm9kZSIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsImluaXQiLCJvIiwiZm9udCIsIkRFRkFVTFRGT05UIiwiZm9udFNpemUiLCJzdHJpbmciLCJzY2FsZSIsInNjaGVkdWxlT25jZSIsImhlaWdodCIsIm5vZGUiLCJUd2VlbiIsInN0b3BBbGxCeVRhcmdldCIsInNldFBvc2l0aW9uIiwidjIiLCJvblNob3ciLCJ0d2VlbiIsInBhcmFsbGVsIiwidG8iLCJ5IiwiZGVsYXkiLCJzdGFydCIsIl9fZGVjb3JhdGUiLCJMYWJlbCIsIk5vZGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsUUFBUSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlFLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csT0FBRixHQUFZLElBQVo7SUFDQUgsQ0FBQyxDQUFDSSxLQUFGLEdBQVUsSUFBVjtJQUNBLE9BQU9KLENBQVA7RUFDSDs7RUFDREssU0FBUyxDQUFDTCxDQUFELEVBQUlELENBQUosQ0FBVDs7RUFDQUMsQ0FBQyxDQUFDTSxTQUFGLENBQVlDLElBQVosR0FBbUIsVUFBVVIsQ0FBVixFQUFhQyxDQUFiLEVBQWdCO0lBQy9CLElBQUlRLENBQUMsR0FBRyxJQUFSO0lBQ0EsS0FBS0wsT0FBTCxDQUFhTSxJQUFiLEdBQW9CVCxDQUFDLEdBQUcsRUFBSCxHQUFRWixRQUFRLENBQUNzQixXQUF0QztJQUNBLEtBQUtQLE9BQUwsQ0FBYVEsUUFBYixHQUF3QlgsQ0FBQyxHQUFHLEVBQUgsR0FBUSxFQUFqQztJQUNBLEtBQUtHLE9BQUwsQ0FBYVMsTUFBYixHQUFzQmIsQ0FBdEI7SUFDQSxLQUFLSyxLQUFMLENBQVdTLEtBQVgsR0FBbUIsQ0FBbkI7SUFDQSxLQUFLVixPQUFMLENBQWFXLFlBQWIsQ0FBMEIsWUFBWTtNQUNsQ04sQ0FBQyxDQUFDSixLQUFGLENBQVFXLE1BQVIsR0FBaUJQLENBQUMsQ0FBQ0wsT0FBRixDQUFVYSxJQUFWLENBQWVELE1BQWYsR0FBd0IsRUFBekM7SUFDSCxDQUZELEVBRUcsQ0FGSDtJQUdBdkIsRUFBRSxDQUFDeUIsS0FBSCxDQUFTQyxlQUFULENBQXlCLEtBQUtkLEtBQTlCO0lBQ0EsS0FBS0EsS0FBTCxDQUFXZSxXQUFYLENBQXVCM0IsRUFBRSxDQUFDNEIsRUFBSCxFQUF2QjtJQUNBLEtBQUtDLE1BQUw7RUFDSCxDQVpEOztFQWFBckIsQ0FBQyxDQUFDTSxTQUFGLENBQVllLE1BQVosR0FBcUIsWUFBWTtJQUM3QjdCLEVBQUUsQ0FBQzhCLEtBQUgsQ0FBUyxLQUFLbEIsS0FBZCxFQUNLbUIsUUFETCxDQUNjL0IsRUFBRSxDQUFDOEIsS0FBSCxDQUFTLEtBQUtsQixLQUFkLEVBQXFCb0IsRUFBckIsQ0FBd0IsR0FBeEIsRUFBNkI7TUFBQ1gsS0FBSyxFQUFFO0lBQVIsQ0FBN0IsQ0FEZCxFQUN3RHJCLEVBQUUsQ0FBQzhCLEtBQUgsQ0FBUyxLQUFLbEIsS0FBZCxFQUFxQm9CLEVBQXJCLENBQXdCLENBQXhCLEVBQTJCO01BQUNDLENBQUMsRUFBRTtJQUFKLENBQTNCLENBRHhELEVBRUtDLEtBRkwsQ0FFVyxHQUZYLEVBR0tGLEVBSEwsQ0FHUSxHQUhSLEVBR2E7TUFBQ1gsS0FBSyxFQUFFO0lBQVIsQ0FIYixFQUlLYyxLQUpMO0VBS0gsQ0FORDs7RUFPQUMsVUFBVSxDQUFDLENBQUNoQyxDQUFDLENBQUNKLEVBQUUsQ0FBQ3FDLEtBQUosQ0FBRixDQUFELEVBQWdCN0IsQ0FBQyxDQUFDTSxTQUFsQixFQUE2QixTQUE3QixFQUF3QyxLQUFLLENBQTdDLENBQVY7O0VBQ0FzQixVQUFVLENBQUMsQ0FBQ2hDLENBQUMsQ0FBQ0osRUFBRSxDQUFDc0MsSUFBSixDQUFGLENBQUQsRUFBZTlCLENBQUMsQ0FBQ00sU0FBakIsRUFBNEIsT0FBNUIsRUFBcUMsS0FBSyxDQUExQyxDQUFWOztFQUNBLE9BQU9zQixVQUFVLENBQUMsQ0FBQ2xDLENBQUQsQ0FBRCxFQUFNTSxDQUFOLENBQWpCO0FBQ0gsQ0EvQk8sQ0ErQkxWLE9BQU8sV0EvQkYsQ0FBUjs7QUFnQ0FKLE9BQU8sV0FBUCxHQUFrQlksQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgX2xvYWRpbmcgPSByZXF1aXJlKFwibG9hZGluZ1wiKTtcbnZhciBfYmFzZVVJID0gcmVxdWlyZShcImJhc2VVSVwiKTtcbnZhciBjID0gY2MuX2RlY29yYXRvcjtcbnZhciBsID0gYy5jY2NsYXNzO1xudmFyIHUgPSBjLnByb3BlcnR5O1xudmFyIHAgPSAoZnVuY3Rpb24gKHQpIHtcbiAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcbiAgICAgICAgZS5zaG93TGFiID0gbnVsbDtcbiAgICAgICAgZS50Tm9kZSA9IG51bGw7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICAgIHZhciBvID0gdGhpcztcbiAgICAgICAgdGhpcy5zaG93TGFiLmZvbnQgPSBlID8gXCJcIiA6IF9sb2FkaW5nLkRFRkFVTFRGT05UO1xuICAgICAgICB0aGlzLnNob3dMYWIuZm9udFNpemUgPSBlID8gMzUgOiA0MDtcbiAgICAgICAgdGhpcy5zaG93TGFiLnN0cmluZyA9IHQ7XG4gICAgICAgIHRoaXMudE5vZGUuc2NhbGUgPSAwO1xuICAgICAgICB0aGlzLnNob3dMYWIuc2NoZWR1bGVPbmNlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG8udE5vZGUuaGVpZ2h0ID0gby5zaG93TGFiLm5vZGUuaGVpZ2h0ICsgMzA7XG4gICAgICAgIH0sIDApO1xuICAgICAgICBjYy5Ud2Vlbi5zdG9wQWxsQnlUYXJnZXQodGhpcy50Tm9kZSk7XG4gICAgICAgIHRoaXMudE5vZGUuc2V0UG9zaXRpb24oY2MudjIoKSk7XG4gICAgICAgIHRoaXMub25TaG93KCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vblNob3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNjLnR3ZWVuKHRoaXMudE5vZGUpXG4gICAgICAgICAgICAucGFyYWxsZWwoY2MudHdlZW4odGhpcy50Tm9kZSkudG8oMC4yLCB7c2NhbGU6IDF9KSwgY2MudHdlZW4odGhpcy50Tm9kZSkudG8oMiwge3k6IDEyMH0pKVxuICAgICAgICAgICAgLmRlbGF5KDAuMSlcbiAgICAgICAgICAgIC50bygwLjIsIHtzY2FsZTogMH0pXG4gICAgICAgICAgICAuc3RhcnQoKTtcbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW3UoY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwic2hvd0xhYlwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW3UoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJ0Tm9kZVwiLCB2b2lkIDApO1xuICAgIHJldHVybiBfX2RlY29yYXRlKFtsXSwgZSk7XG59KShfYmFzZVVJLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gcDtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/vb.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1a0307mRBFNnr9D0weC/cVX', 'vb');
// scripts/vb.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.VEnum3 = void 0;
var n;

var _idx = require("idx");

var _pConst = require("pConst");

var _uData = require("uData");

(function (t) {
  t[t.SHORT = 0] = "SHORT";
  t[t.LONG = 1] = "LONG";
  t[t.DOUBLE = 2] = "DOUBLE";
})(n = exports.VEnum3 || (exports.VEnum3 = {}));

var s = function () {
  function t() {}

  t.p = function (t) {
    if (_uData["default"].ins.getSetting().vibrate) switch (t) {
      case n.SHORT:
        _idx.platform.vibrate(_pConst.VEnum4.SHORT);

        break;

      case n.LONG:
        _idx.platform.vibrate(_pConst.VEnum4.LONG);

        break;

      case n.DOUBLE:
        _idx.platform.vibrate(_pConst.VEnum4.LONG);

        var e = cc.director.getScene().getChildByName("Canvas");
        cc.tween(e).delay(0.4).call(function () {
          _idx.platform.vibrate(_pConst.VEnum4.LONG);
        }).start();
    }
  };

  return t;
}();

exports["default"] = s;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdmIuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJWRW51bTMiLCJuIiwiX2lkeCIsInJlcXVpcmUiLCJfcENvbnN0IiwiX3VEYXRhIiwidCIsIlNIT1JUIiwiTE9ORyIsIkRPVUJMRSIsInMiLCJwIiwiaW5zIiwiZ2V0U2V0dGluZyIsInZpYnJhdGUiLCJwbGF0Zm9ybSIsIlZFbnVtNCIsImUiLCJjYyIsImRpcmVjdG9yIiwiZ2V0U2NlbmUiLCJnZXRDaGlsZEJ5TmFtZSIsInR3ZWVuIiwiZGVsYXkiLCJjYWxsIiwic3RhcnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3QztBQUNBRCxPQUFPLENBQUNFLE1BQVIsR0FBaUIsS0FBSyxDQUF0QjtBQUNBLElBQUlDLENBQUo7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFsQjs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlFLE1BQU0sR0FBR0YsT0FBTyxDQUFDLE9BQUQsQ0FBcEI7O0FBQ0EsQ0FBQyxVQUFVRyxDQUFWLEVBQWE7RUFDVkEsQ0FBQyxDQUFFQSxDQUFDLENBQUNDLEtBQUYsR0FBVSxDQUFaLENBQUQsR0FBbUIsT0FBbkI7RUFDQUQsQ0FBQyxDQUFFQSxDQUFDLENBQUNFLElBQUYsR0FBUyxDQUFYLENBQUQsR0FBa0IsTUFBbEI7RUFDQUYsQ0FBQyxDQUFFQSxDQUFDLENBQUNHLE1BQUYsR0FBVyxDQUFiLENBQUQsR0FBb0IsUUFBcEI7QUFDSCxDQUpELEVBSUlSLENBQUMsR0FBR0gsT0FBTyxDQUFDRSxNQUFSLEtBQW1CRixPQUFPLENBQUNFLE1BQVIsR0FBaUIsRUFBcEMsQ0FKUjs7QUFLQSxJQUFJVSxDQUFDLEdBQUksWUFBWTtFQUNqQixTQUFTSixDQUFULEdBQWEsQ0FBRTs7RUFDZkEsQ0FBQyxDQUFDSyxDQUFGLEdBQU0sVUFBVUwsQ0FBVixFQUFhO0lBQ2YsSUFBSUQsTUFBTSxXQUFOLENBQWVPLEdBQWYsQ0FBbUJDLFVBQW5CLEdBQWdDQyxPQUFwQyxFQUNJLFFBQVFSLENBQVI7TUFDSSxLQUFLTCxDQUFDLENBQUNNLEtBQVA7UUFDSUwsSUFBSSxDQUFDYSxRQUFMLENBQWNELE9BQWQsQ0FBc0JWLE9BQU8sQ0FBQ1ksTUFBUixDQUFlVCxLQUFyQzs7UUFDQTs7TUFDSixLQUFLTixDQUFDLENBQUNPLElBQVA7UUFDSU4sSUFBSSxDQUFDYSxRQUFMLENBQWNELE9BQWQsQ0FBc0JWLE9BQU8sQ0FBQ1ksTUFBUixDQUFlUixJQUFyQzs7UUFDQTs7TUFDSixLQUFLUCxDQUFDLENBQUNRLE1BQVA7UUFDSVAsSUFBSSxDQUFDYSxRQUFMLENBQWNELE9BQWQsQ0FBc0JWLE9BQU8sQ0FBQ1ksTUFBUixDQUFlUixJQUFyQzs7UUFDQSxJQUFJUyxDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsUUFBSCxDQUFZQyxRQUFaLEdBQXVCQyxjQUF2QixDQUFzQyxRQUF0QyxDQUFSO1FBQ0FILEVBQUUsQ0FBQ0ksS0FBSCxDQUFTTCxDQUFULEVBQ0tNLEtBREwsQ0FDVyxHQURYLEVBRUtDLElBRkwsQ0FFVSxZQUFZO1VBQ2R0QixJQUFJLENBQUNhLFFBQUwsQ0FBY0QsT0FBZCxDQUFzQlYsT0FBTyxDQUFDWSxNQUFSLENBQWVSLElBQXJDO1FBQ0gsQ0FKTCxFQUtLaUIsS0FMTDtJQVZSO0VBaUJQLENBbkJEOztFQW9CQSxPQUFPbkIsQ0FBUDtBQUNILENBdkJPLEVBQVI7O0FBd0JBUixPQUFPLFdBQVAsR0FBa0JZLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbmV4cG9ydHMuVkVudW0zID0gdm9pZCAwO1xudmFyIG47XG52YXIgX2lkeCA9IHJlcXVpcmUoXCJpZHhcIik7XG52YXIgX3BDb25zdCA9IHJlcXVpcmUoXCJwQ29uc3RcIik7XG52YXIgX3VEYXRhID0gcmVxdWlyZShcInVEYXRhXCIpO1xuKGZ1bmN0aW9uICh0KSB7XG4gICAgdFsodC5TSE9SVCA9IDApXSA9IFwiU0hPUlRcIjtcbiAgICB0Wyh0LkxPTkcgPSAxKV0gPSBcIkxPTkdcIjtcbiAgICB0Wyh0LkRPVUJMRSA9IDIpXSA9IFwiRE9VQkxFXCI7XG59KSgobiA9IGV4cG9ydHMuVkVudW0zIHx8IChleHBvcnRzLlZFbnVtMyA9IHt9KSkpO1xudmFyIHMgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHQoKSB7fVxuICAgIHQucCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIGlmIChfdURhdGEuZGVmYXVsdC5pbnMuZ2V0U2V0dGluZygpLnZpYnJhdGUpXG4gICAgICAgICAgICBzd2l0Y2ggKHQpIHtcbiAgICAgICAgICAgICAgICBjYXNlIG4uU0hPUlQ6XG4gICAgICAgICAgICAgICAgICAgIF9pZHgucGxhdGZvcm0udmlicmF0ZShfcENvbnN0LlZFbnVtNC5TSE9SVCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2Ugbi5MT05HOlxuICAgICAgICAgICAgICAgICAgICBfaWR4LnBsYXRmb3JtLnZpYnJhdGUoX3BDb25zdC5WRW51bTQuTE9ORyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2Ugbi5ET1VCTEU6XG4gICAgICAgICAgICAgICAgICAgIF9pZHgucGxhdGZvcm0udmlicmF0ZShfcENvbnN0LlZFbnVtNC5MT05HKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGUgPSBjYy5kaXJlY3Rvci5nZXRTY2VuZSgpLmdldENoaWxkQnlOYW1lKFwiQ2FudmFzXCIpO1xuICAgICAgICAgICAgICAgICAgICBjYy50d2VlbihlKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmRlbGF5KDAuNClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYWxsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWR4LnBsYXRmb3JtLnZpYnJhdGUoX3BDb25zdC5WRW51bTQuTE9ORyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgLnN0YXJ0KCk7XG4gICAgICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gdDtcbn0pKCk7XG5leHBvcnRzLmRlZmF1bHQgPSBzO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Creator.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '77b848PH0BISYS7vYKq3Ogo', 'Creator');
// scripts/Creator.js

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _solver = require("Solver");

var _puzzle = require("Puzzle");

var _puzzleCell = require("PuzzleCell");

var a = function () {
  function t(t) {
    t && (this.seed = t);
  }

  t.prototype.seedRandom = function () {
    return null == this.seed ? Math.random() : (this.seed = (9301 * this.seed + 49297) % 233280, this.seed / 233280);
  };

  t.prototype.getRandomIntBetween = function (t, e) {
    var o = Math.ceil(t);
    var n = Math.floor(e);
    return Math.floor(this.seedRandom() * (n - o + 1)) + o;
  };

  t.prototype.getRandomData = function (t, e, o) {
    void 0 === o && (o = 3);
    var n = this.createRandom(t, t, e, o - 1);
    var i = [];
    n.cells.forEach(function (t) {
      i.push(t.solution);
    });
    return i;
  };

  t.prototype.createRandom = function (e, o, r, a) {
    var s;
    var c;
    var l;
    var u;
    var p = !1;
    var d = "number" == typeof r && r >= 0 && r <= 1;
    var h = [];
    var f = [];
    var g = 0;
    var y = 1;

    for (this.puzzle = new _puzzle["default"](e, o); !1 === p;) {
      for (c = d ? r : this.getRandomIntBetween(200, 800) / 1e3, h.length = 0, f.length = 0, s = 0, u = 0; u < this.puzzle.totalCells; u++) {
        l = this.seedRandom() < c ? 1 : 0, a && (0 == l && 1 == y && g++, g > a && (l = 1, g--), y = l), s += l, u % this.puzzle.width == 0 && u > 0 && (y = 1, g = 0, h.push(f), f = []), f.push(l);
      }

      0 !== s && s !== this.puzzle.totalCells && (h.push(f), this.puzzle = t._populatePuzzleFromGrid(this.puzzle, h), new _solver["default"](this.puzzle).solve() && (p = !0));
    }

    this.puzzle.creator = this;
    return this.puzzle;
  };

  t.prototype.createFromGrid = function (e) {
    new Date();
    var o;
    var r = 0;
    var a = 0;
    if (!(e instanceof Array)) throw "grid is not an array";
    e.forEach(function (t, e) {
      if (!(t instanceof Array)) throw "grid is not a multi-dimensional array";
      if (0 === r) r = t.length;else if (t.length !== r) throw "row " + e + " has an invalid length (" + t.length + ") - expecting " + r;
      a++;
    });
    o = new _puzzle["default"](r, a);
    this.puzzle = t._populatePuzzleFromGrid(o, e);
    this.puzzle.creator = this;
    return !!new _solver["default"](this.puzzle).solve() && this.puzzle;
  };

  t.prototype.createFromHints = function (t) {
    var e;
    var o;
    var a;
    var s;
    var c = this;
    if ("object" != typeof t || !t.row || !t.column) throw 'parameter passed to createFromHints() must be an object containing "row" and "column" properties';
    if (!(t.row instanceof Array && t.column instanceof Array)) throw "hints.row or hints.column must be an array.";
    e = t.column.length;
    o = t.row.length;
    (a = new _puzzle["default"](e, o)).rowHints = t.row;
    a.columnHints = t.column;
    a.creator = this;
    a.grid.forEach(function (t, e) {
      t.forEach(function (t, o) {
        a.cells.push(new _puzzleCell["default"]({
          index: e * a.width + o,
          column: o,
          row: e
        }));
      });
    });
    this.puzzle = a;
    return !!(s = new _solver["default"](this.puzzle)).solve() && (s.puzzle.cells.forEach(function (t, e) {
      var o = c.puzzle.getCellByIndex(e);
      o.aiSolution = t.aiSolution;
      o.solution = t.aiSolution;
    }), this.puzzle);
  };

  t._populatePuzzleFromGrid = function (t, e) {
    var o;
    var n;
    var i;
    var a;
    var s;
    var c;
    var l;
    var u;
    var p;
    var d;
    var h;

    for (t.reset(), t.grid = e, n = 0; n < t.grid.length; n++) {
      for (i = t.grid[n], p = [], t.rowHints[n] = [], a = 0; a < i.length; a++) {
        l = s = i[a], u = a > 0 ? t.grid[n][a - 1] : 0, t.cells.push(new _puzzleCell["default"]({
          index: n * t.width + a,
          column: a,
          row: n,
          solution: s
        })), 1 === l && 0 === u ? p.push(1) : 0 === l && 1 === u ? p.push(0) : 1 === l && 1 === u && p[p.length - 1]++;
      }

      for (d = 0; d < p.length; d++) {
        (h = p[d]) > 0 && t.rowHints[n].push(h);
      }
    }

    for (a = 0; a < t.width; a++) {
      for (t.columnHints[a] = [], o = [], c = a; c < t.totalCells; c += t.width) {
        i = Math.floor(c / t.width), l = t.grid[i][a], u = i > 0 ? t.grid[i - 1][a] : 0, 1 === l && 0 === u ? o.push(1) : 0 === l && 1 === u ? o.push(0) : 1 === l && 1 === u && o[o.length - 1]++;
      }

      for (d = 0; d < o.length; d++) {
        (h = o[d]) > 0 && t.columnHints[a].push(h);
      }
    }

    return t;
  };

  return t;
}();

exports["default"] = a;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/wx.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd8c17AniaBK/rPvMyFh2kSV', 'wx');
// scripts/wx.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _env = require("env");

var _evts = require("evts");

var _pConst = require("pConst");

var _uData = require("uData");

var _c = require("c");

var _adC = require("adC");

var _com = require("com");

var _sound = require("sound");

var _time = require("time");

var _pf = require("pf");

var _errorCode = require("errorCode");

var _ = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.isSharing = !1;
    e.sdkSwitch = _pConst.DefaultSDKSwitch;
    e.videoCheckedMap = {};
    e.videoCheckedLastT = {};
    e.videoMap = {};
    e.isLoading = !1;
    e.isLoggedIn = !1;
    e.onHideT = 0;
    e.noAd = !1;
    e.noVideo = !1;
    e.lastInterAdShowT = 0;
    e.switchesInitd = !1;
    e.ta = null;
    e._share_callback = null;
    e.interstitialAd = null;
    e.interAdReady = !1;
    e.m_bInitBanner = null;
    e.m_bBannerShowed = !1;
    e.m_banner = null;

    e.SetUserCloudStorage = function (t, e, o) {
      var n = new Date();
      wx.setUserCloudStorage({
        KVDataList: [{
          key: "level",
          value: t.toString() + "#" + n.getTime().toString() + "#" + e.toString() + "#" + o.toString()
        }],
        success: function success() {},
        fail: function fail() {}
      });
    };

    e.onKeyboardComplete = wx.onKeyboardComplete;
    e.requirePrivacyAuthorize = e.canUse("2.32.3") && wx.requirePrivacyAuthorize;
    return e;
  }

  __extends(e, t);

  Object.defineProperty(e.prototype, "appId", {
    get: function get() {
      return "wx6ff5aa14de283fd7";
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.string = function () {
    return _pConst.PFCode.Wechat;
  };

  e.prototype.init = function () {
    this.initVersion();
    this.initWechatListener();
    this.initCommonSetting();
    this.initTga();
  };

  e.prototype.initVersion = function () {
    var t;
    var e;
    this.version = wx.getAccountInfoSync && (null === (e = null === (t = wx.getAccountInfoSync()) || void 0 === t ? void 0 : t.miniProgram) || void 0 === e ? void 0 : e.version);
  };

  e.prototype.initTga = function () {};

  e.prototype.isSwitchedInitd = function () {};

  e.prototype.initWechatListener = function () {
    var t = this;
    wx.onShow(function (e) {
      _sound["default"].ins.playBGM(), _evts["default"].plE.emit({
        onShow: !0,
        isSharing: t.isSharing
      }), _uData["default"].ins.syncLaunchOption(e), t.isSharing || t.reenter(), t._share_callback && t._share_callback();
    });
    wx.onHide(function () {
      t.onHideT = _time["default"].ins.serverTime, _evts["default"].plE.emit({
        onHide: !0
      });
    });
    wx.onError(function (t) {
      _env.env.mode !== _env.EM.PROD && wx.showModal({
        title: t.message || "异常报错",
        content: t.stack || "",
        showCancel: !1,
        confirmText: "好的"
      });
    });
    wx.onShareAppMessage(function () {
      return _pConst.SDKConfig.shareData();
    });
    wx.showShareMenu({
      withShareTicket: !0
    });
    this.canUse("2.0.2") || "qq" === this.getSystemData().AppPlatform && wx.onMemoryWarning(function () {
      wx.triggerGC();
    });
    var e = wx.getUpdateManager();
    e.onCheckForUpdate(function () {});
    e.onUpdateFailed(function () {});
    e.onUpdateReady(function () {
      wx.showModal({
        title: "更新提示",
        content: "新版本已经准备好，是否重启小游戏？",
        success: function success(t) {
          t.confirm && e.applyUpdate();
        }
      });
    });
  };

  e.prototype.initCommonSetting = function () {
    _uData["default"].ins.syncLaunchOption(wx.getLaunchOptionsSync());

    wx.getNetworkType({
      success: function success(t) {
        _uData["default"].ins.network = t;
      },
      fail: function fail() {}
    });

    _evts["default"].chE.on(function () {});
  };

  e.prototype.setAccountID = function () {};

  e.prototype.login = function () {
    return new Promise(function (t, e) {
      wx.login({
        success: function success(o) {
          o && o.code ? (_idx.platform.cloud || (_idx.platform.cloud = wx.cloud && wx.cloud.init && (wx.cloud.init({
            env: ""
          }), _idx.platform.cloud = wx.cloud))).callFunction({
            name: "gOpenId",
            success: function success(e) {
              var n = e.result;
              if (n) if ("string" == typeof n) try {
                var i = JSON.parse(n);
                o.openid = i.i;
              } catch (e) {} else o.openid = n.i;
              t(o);
            },
            fail: function fail(t) {
              console.error("err:", t);
              e(_errorCode.errorCode.PF_CLOUD_ERR);
            }
          }) : (console.warn("微信登陆失败：empty code"), t(_errorCode.errorCode.LOGIN_ERR));
        },
        fail: function fail(t) {
          var o = "";
          null != t && null != t.errMsg && (o = t.errMsg);
          console.warn("微信登陆失败：", o);
          e(_errorCode.errorCode.LOGIN_ERR);
        }
      });
    });
  };

  e.prototype.initCloud = function () {
    return new Promise(function (t) {
      wx.login({
        success: function success() {
          var e;
          (null === (e = wx.cloud) || void 0 === e ? void 0 : e.init) && (_idx.platform.cloud = wx.cloud.init({
            env: ""
          }), _idx.platform.cloud = wx.cloud, t(_idx.platform.syncTime()));
        },
        fail: function fail() {
          t(null);
        }
      });
    });
  };

  e.prototype.syncTime = function () {
    return new Promise(function (t) {
      var e = _idx.platform.cloud || (_idx.platform.cloud = wx.cloud);
      e ? e.callFunction({
        name: "gTime",
        success: function success(e) {
          var o;
          var n = e.result;
          if (n) if ("string" == typeof n) try {
            o = JSON.parse(n).t;
          } catch (e) {} else o = n.t;
          t(o || null);
        },
        fail: function fail() {
          return t(null);
        }
      }) : t(null);
    });
  };

  e.prototype.getCloudData = function () {
    var t;
    var e = _idx.platform.cloud || (_idx.platform.cloud = wx.cloud && wx.cloud.init && (wx.cloud.init({
      env: ""
    }), _idx.platform.cloud = wx.cloud));

    if (e) {
      var o = e.database();

      if (o) {
        var n = o.collection("userData");
        t = _idx.platform._check(n);
      }
    }

    return t;
  };

  e.prototype._check = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2, new Promise(function (e) {
          t.where({}).get().then(function (t) {
            if (t) {
              _idx.platform.isCheck = !0;
              var o = t.data;

              if (o && o.length) {
                var n = o[0];
                _idx.platform.dbId = n._id;

                try {
                  var i = JSON.parse(n.uData);
                  e(i);
                } catch (r) {
                  e(null);
                }
              } else e(null);
            } else e(null);
          })["catch"](function (t) {
            console.error(t);
            e(null);
          });
        })];
      });
    });
  };

  e.prototype.setCloudData = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      var e;
      var o;
      var n;
      var i;
      var r;
      return __generator(this, function (a) {
        switch (a.label) {
          case 0:
            return (e = this).isSaving ? [2] : (o = _idx.platform.cloud || (_idx.platform.cloud = wx.cloud && wx.cloud.init && (wx.cloud.init({
              env: ""
            }), _idx.platform.cloud = wx.cloud))) ? [4, o.database()] : [3, 2];

          case 1:
            if (!(n = a.sent())) return [2];
            e.isSaving = !0, i = n.collection("userData"), r = Promise.resolve(), e.isCheck || (r = this._check(i)), r.then(function () {
              e.dbId ? i.doc(e.dbId).update({
                data: {
                  uData: t
                }
              }).then(function (t) {
                console.log(t);
                _idx.platform.isSaving = !1;
              }) : i.add({
                data: {
                  uData: t
                }
              }).then(function (t) {
                _idx.platform.dbId = t.id;
                _idx.platform.isSaving = !1;
              });
            })["catch"](function (t) {
              console.error("写入失败", t);
              return e.isSaving = !1;
            }), a.label = 2;

          case 2:
            return [2];
        }
      });
    });
  };

  e.prototype.getUserInfo = function () {
    return new Promise(function (t, e) {
      wx.getSetting({
        success: function success(o) {
          if (o.authSetting["scope.userInfo"]) wx.getUserInfo({
            success: function success(e) {
              t(e.userInfo);
            },
            fail: function fail() {
              e(null);
            }
          });else {
            var n = wx.createUserInfoButton({
              type: "text",
              text: "获取用户信息",
              style: {
                left: -999,
                top: -999,
                width: 2,
                height: 1,
                lineHeight: 40,
                backgroundColor: "#00000000",
                color: "#ffffff",
                textAlign: "center",
                fontSize: 16,
                borderRadius: 4,
                borderColor: "#ffffff",
                borderWidth: 0
              }
            });
            n.onTap(function (e) {
              n.destroy();
              t(e.userInfo);
            });
          }
        }
      });
    });
  };

  e.prototype.reenter = function () {};

  e.prototype.getStorage = function (t) {
    try {
      var e = wx.getStorageSync(t);
      return null == e || "" == e ? null : JSON.parse(e);
    } catch (o) {}
  };

  e.prototype.setStorage = function (t, e) {
    try {
      wx.setStorageSync(t, JSON.stringify(e));
    } catch (o) {}
  };

  e.prototype.clearStorage = function () {
    try {
      wx.clearStorageSync();
    } catch (t) {}
  };

  e.prototype.removeStorage = function (t) {
    try {
      wx.removeStorageSync(t);
    } catch (e) {}
  };

  e.prototype.trackLogin = function () {};

  e.prototype.trackUserSet = function () {};

  e.prototype.trackUserSetOnce = function () {};

  e.prototype.trackEvent = function () {};

  e.prototype.getSeq = function () {};

  e.prototype.consumeSeq = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (e) {
        switch (e.label) {
          case 0:
            return t.sequenceInfo.type != _pConst.STDSeqType.VIDEO ? [3, 2] : [4, this.doWatchAD(t)];

          case 1:
            e.sent(), this.doShare(), e.label = 2;

          case 2:
            return [2];
        }
      });
    });
  };

  e.prototype.doWatchAD = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      var e;
      var o;
      var n;
      var i;
      return __generator(this, function () {
        if (!this.noAd) {
          if (!this.noVideo) return _evts["default"].adE.emit(_c.ADE.VIDEO), o = _adC.VEnum[null !== (e = t.videoDuration) && void 0 !== e ? e : 30], this.preloadVideo(o) ? null == (n = this.videoMap[o]) ? (_evts["default"].adE.emit(_c.ADE.VIDEO_END), [2, Promise.reject(_pConst.VideoFailCode.NO_AD)]) : (this.showLoading(), i = this, [2, new Promise(function (t, e) {
            n.onClose(function o(i) {
              null != n && n.offClose(o), null != i && i.isEnded ? (_evts["default"].adE.emit(_c.ADE.VIDEO_END), t(1)) : (_evts["default"].adE.emit(_c.ADE.VIDEO_END), e(_pConst.VideoFailCode.CANCELED));
            });
            n.show().then(function () {})["catch"](function () {
              _evts["default"].adE.emit(_c.ADE.VIDEO_END);

              n.destroy();
              i.videoMap[o] = null;
              e(_pConst.VideoFailCode.NO_AD);
            }).then(function () {
              i.hideLoading();
            });
          })]) : (_evts["default"].adE.emit(_c.ADE.VIDEO_END), [2, Promise.reject(_pConst.VideoFailCode.NO_AD)]);
          Promise.reject(_pConst.VideoFailCode.NO_AD);
        }

        return [2];
      });
    });
  };

  e.prototype.doShare = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function () {
        return [2];
      });
    });
  };

  e.prototype.canUse = function (t) {
    return _com["default"].ins.compareVersion(this.getSystemData().SDKVersion, t) >= 0;
  };

  e.prototype.getSystemData = function () {
    if (null == this.systemInfoCache) try {
      this.systemInfoCache = wx.getSystemInfoSync();
    } catch (t) {
      return _pConst.DefaultSystemInfo;
    }
    return this.systemInfoCache;
  };

  e.prototype.getSwitches = function () {};

  e.prototype.vibrate = function (t) {
    t == _pConst.VEnum4.SHORT ? wx.vibrateShort({
      type: "medium"
    }) : t == _pConst.VEnum4.LONG && wx.vibrateLong();
  };

  e.prototype.preloadVideo = function (t) {
    if (!this.canUse("2.0.4")) return !1;
    var e = this.videoCheckedMap[t];
    if (e) return e;
    var o = this.videoCheckedLastT[t];
    var n = Date.now();

    if (!e && (null == o || n - o >= _pConst.SDKConfig.videoCoolTime)) {
      var i = this.videoMap[t];

      if (null == i) {
        var r = this;
        i = wx.createRewardedVideoAd({
          adUnitId: t,
          multiton: !0
        });
        this.videoMap[t] = i;
        i.onLoad(function () {
          r.videoCheckedMap[t] = !0, r.videoCheckedLastT[t] = Date.now();
        });
        i.onError(function () {
          r.videoMap[t] = null;
          r.videoCheckedMap[t] = !1;
          r.videoCheckedLastT[t] = Date.now();
          i.destroy();
        });
      }

      null != i && i.load();
    }

    return !1;
  };

  e.prototype.showModal = function (t) {
    return new Promise(function (e) {
      wx.showModal(Object.assign(Object.assign({}, t), {
        success: function success(t) {
          t.confirm ? e(!0) : t.cancel && e(!1);
        },
        fail: function fail() {
          e(!1);
        }
      }));
    });
  };

  e.prototype.refreshGame = function () {
    wx.restartMiniProgram ? wx.restartMiniProgram({
      fail: function fail() {
        wx.exitMiniProgram();
      },
      path: ""
    }) : wx.exitMiniProgram();
  };

  e.prototype.showLoading = function () {
    this.canUse("1.1.0") && (this.isLoading = !0, wx.showLoading({
      title: "加载中",
      mask: !0
    }));
  };

  e.prototype.hideLoading = function () {
    this.canUse("1.1.0") && this.isLoading && (wx.hideLoading(), this.isLoading = !1);
  };

  e.prototype.log = function () {};

  e.prototype.getMenuBounding = function () {};

  e.prototype.createShareImage = function () {};

  e.prototype.drawImage = function () {};

  e.prototype.preloadInterstitialAD = function () {};

  e.prototype.showInterstitialAD = function () {};

  e.prototype.canShowBanner = function () {};

  e.prototype.getBannerSize = function () {};

  e.prototype.showBanner = function () {};

  e.prototype.hideBanner = function () {};

  e.prototype.getSubscribeCnt = function () {};

  e.prototype.subscribe = function () {};

  e.prototype.startVideoRecord = function () {};

  e.prototype.pauseVideoRecord = function () {};

  e.prototype.resumeVideoRecord = function () {};

  e.prototype.stopVideoRecord = function () {};

  e.prototype.hasVideoRecord = function () {
    return !1;
  };

  e.prototype.shareVideoRecord = function () {};

  e.prototype.uploadAdEvent = function () {};

  e.prototype.addShortcut = function () {};

  e.prototype.reportEvent = function (t, e) {
    wx.reportEvent(t, e);
  };

  e.prototype.PostMessage = function (t, e, o) {
    wx.getOpenDataContext().postMessage({
      Even: t,
      Value1: e,
      Value2: o
    });
  };

  e.prototype.GetOpenDataContext = function () {
    return wx.getOpenDataContext();
  };

  e.prototype.share = function () {
    var t = this;
    return new Promise(function (e) {
      var o = _pConst.SDKConfig.shareData();

      wx.shareAppMessage({
        title: o.title,
        imageUrl: o.imageUrl,
        query: o.query
      });
      t._share_time = new Date().getTime();

      t._share_callback = function () {
        var o = t._share_time;
        t._share_time = t._share_callback = null;

        _sound["default"].ins.playBGM();

        o > 0 && new Date().getTime() - o >= 3e3 ? e(1) : e(0);
      };
    });
  };

  e.prototype.getUserProfile = function () {};

  e.prototype.subScriptionUpdate = function () {
    this.canUse("2.32.1") && wx.getSetting({
      withSubscriptions: !0,
      success: function success(t) {
        var e = t.subscriptionsSetting;
        var o = e.mainSwitch;
        var n = e.itemSettings;
        (!n && !o || n && "accept" != n.SYS_MSG_TYPE_INTERACTIVE) && wx.requestSubscribeSystemMessage({
          msgTypeList: ["SYS_MSG_TYPE_WHATS_NEW"],
          success: function success() {}
        });
      }
    });
  };

  return e;
}(_pf["default"]);

exports["default"] = _;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/worm.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fd1faxCdE9AcbmxbzuujTdp', 'worm');
// scripts/worm.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.sps = [];
    e.sp = null;
    return e;
  }

  __extends(e, t);

  e.prototype.init = function (t) {
    this.sp.spriteFrame = this.sps[t];
  };

  __decorate([c([cc.SpriteFrame])], e.prototype, "sps", void 0);

  __decorate([c(cc.Sprite)], e.prototype, "sp", void 0);

  return __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcd29ybS5qcyJdLCJuYW1lcyI6WyJuIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJhIiwiY2MiLCJfZGVjb3JhdG9yIiwicyIsImNjY2xhc3MiLCJjIiwicHJvcGVydHkiLCJsIiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsInNwcyIsInNwIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwiaW5pdCIsInNwcml0ZUZyYW1lIiwiX19kZWNvcmF0ZSIsIlNwcml0ZUZyYW1lIiwiU3ByaXRlIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztFQUFDQyxLQUFLLEVBQUUsQ0FBQztBQUFULENBQTdDO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLFVBQVg7QUFDQSxJQUFJQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0ksT0FBVjtBQUNBLElBQUlDLENBQUMsR0FBR0wsQ0FBQyxDQUFDTSxRQUFWOztBQUNBLElBQUlDLENBQUMsR0FBSSxVQUFVQyxDQUFWLEVBQWE7RUFDbEIsU0FBU0MsQ0FBVCxHQUFhO0lBQ1QsSUFBSUEsQ0FBQyxHQUFJLFNBQVNELENBQVQsSUFBY0EsQ0FBQyxDQUFDRSxLQUFGLENBQVEsSUFBUixFQUFjQyxTQUFkLENBQWYsSUFBNEMsSUFBcEQ7SUFDQUYsQ0FBQyxDQUFDRyxHQUFGLEdBQVEsRUFBUjtJQUNBSCxDQUFDLENBQUNJLEVBQUYsR0FBTyxJQUFQO0lBQ0EsT0FBT0osQ0FBUDtFQUNIOztFQUNESyxTQUFTLENBQUNMLENBQUQsRUFBSUQsQ0FBSixDQUFUOztFQUNBQyxDQUFDLENBQUNNLFNBQUYsQ0FBWUMsSUFBWixHQUFtQixVQUFVUixDQUFWLEVBQWE7SUFDNUIsS0FBS0ssRUFBTCxDQUFRSSxXQUFSLEdBQXNCLEtBQUtMLEdBQUwsQ0FBU0osQ0FBVCxDQUF0QjtFQUNILENBRkQ7O0VBR0FVLFVBQVUsQ0FBQyxDQUFDYixDQUFDLENBQUMsQ0FBQ0osRUFBRSxDQUFDa0IsV0FBSixDQUFELENBQUYsQ0FBRCxFQUF3QlYsQ0FBQyxDQUFDTSxTQUExQixFQUFxQyxLQUFyQyxFQUE0QyxLQUFLLENBQWpELENBQVY7O0VBQ0FHLFVBQVUsQ0FBQyxDQUFDYixDQUFDLENBQUNKLEVBQUUsQ0FBQ21CLE1BQUosQ0FBRixDQUFELEVBQWlCWCxDQUFDLENBQUNNLFNBQW5CLEVBQThCLElBQTlCLEVBQW9DLEtBQUssQ0FBekMsQ0FBVjs7RUFDQSxPQUFPRyxVQUFVLENBQUMsQ0FBQ2YsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBakI7QUFDSCxDQWRPLENBY0xSLEVBQUUsQ0FBQ29CLFNBZEUsQ0FBUjs7QUFlQXZCLE9BQU8sV0FBUCxHQUFrQlMsQ0FBbEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6ICEwfSk7XG52YXIgYSA9IGNjLl9kZWNvcmF0b3I7XG52YXIgcyA9IGEuY2NjbGFzcztcbnZhciBjID0gYS5wcm9wZXJ0eTtcbnZhciBsID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuc3BzID0gW107XG4gICAgICAgIGUuc3AgPSBudWxsO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0aGlzLnNwLnNwcml0ZUZyYW1lID0gdGhpcy5zcHNbdF07XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtjKFtjYy5TcHJpdGVGcmFtZV0pXSwgZS5wcm90b3R5cGUsIFwic3BzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYyhjYy5TcHJpdGUpXSwgZS5wcm90b3R5cGUsIFwic3BcIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gX19kZWNvcmF0ZShbc10sIGUpO1xufSkoY2MuQ29tcG9uZW50KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGw7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_saveRestore.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3c546+ldmlAJ73ZKuAVm4Qb', 'ui_saveRestore');
// scripts/ui_saveRestore.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _idx = require("idx");

var _panelMgr = require("panelMgr");

var _tipMgr = require("tipMgr");

var _baseUI = require("baseUI");

var d = cc._decorator;
var h = d.ccclass;
var f = d.property;

var g = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.timeL = null;
    e.lvL = null;
    e.coinNumL = null;
    e.timeR = null;
    e.lvR = null;
    e.coinNumR = null;
    e.infoL = null;
    e.infoR = null;
    e.nodeL = null;
    e.nodeR = null;
    e.userDatas = [];
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {};

  e.prototype.init = function (t) {
    var e = t.userDatas;
    this.rePanel(e);
  };

  e.prototype.rePanel = function (t) {
    return __awaiter(this, void 0, void 0, function () {
      var e;
      var o;
      var n;
      var i;
      var r;
      var a;
      var c;
      var l;
      var u;
      var p;
      var d;
      var h;
      var f;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            return this.userDatas = [], this.timeL.string = "暂无数据", this.lvL.string = "", this.coinNumL.string = "0", this.timeR.string = "暂无数据", this.lvR.string = "", this.coinNumL.string = "0", t ? (e = t[0], o = t[1], e && e.update_at ? (r = e.update_at, a = new Date(r), c = a.getFullYear(), l = a.getMonth() + 1, u = a.getDate(), this.timeL.string = c + "/" + l + "/" + u, n = JSON.parse(e.user_data), "localData" != e.save_tag ? [3, 2] : (this.infoL.string = "自动备份", [4, this.compareData(n)])) : [3, 4]) : [3, 10];

          case 1:
            return n = s.sent(), [3, 3];

          case 2:
            this.infoL.string = "手动备份", s.label = 3;

          case 3:
            return d = n.puzzleLvl || 0, h = n.coin || 0, this.lvL.string = "关卡：" + d, this.coinNumL.string = "" + h, i = JSON.stringify(n), e.user_data = i, this.userDatas.push(e), [3, 5];

          case 4:
            this.nodeL.active = !1, s.label = 5;

          case 5:
            return o && o.update_at ? (r = o.update_at, a = new Date(r), c = a.getFullYear(), l = a.getMonth() + 1, u = a.getDate(), this.timeR.string = c + "/" + l + "/" + u, p = JSON.parse(o.user_data), "localData" != o.save_tag ? [3, 7] : (this.infoR.string = "自动备份", [4, this.compareData(p)])) : [3, 9];

          case 6:
            return p = s.sent(), [3, 8];

          case 7:
            this.infoR.string = "手动备份", s.label = 8;

          case 8:
            return d = p.puzzleLvl || 0, h = p.coin || 0, this.lvR.string = "关卡：" + d, this.coinNumR.string = "" + h, f = JSON.stringify(p), o.user_data = f, this.userDatas.push(o), [3, 10];

          case 9:
            this.nodeR.active = !1, s.label = 10;

          case 10:
            return [2];
        }
      });
    });
  };

  e.prototype.compareData = function (t) {
    var e;
    var o;
    return __awaiter(this, void 0, void 0, function () {
      var n;
      var i;
      var r;
      var a;
      var l;
      var u;
      return __generator(this, function (s) {
        switch (s.label) {
          case 0:
            return _idx.platform.getCloudData ? [4, _idx.platform.getCloudData()] : [3, 2];

          case 1:
            n = s.sent(), s.label = 2;

          case 2:
            return r = (null == t ? void 0 : t.puzzleLvl) || 0, a = (null === (e = null == t ? void 0 : t.bag) || void 0 === e ? void 0 : e.puzzle_pieces) || 0, l = (null == n ? void 0 : n.puzzleLvl) || 0, u = (null === (o = null == n ? void 0 : n.bag) || void 0 === o ? void 0 : o.puzzle_pieces) || 0, (i = r > l || a > u ? t : n) ? [2, i] : [2, t];
        }
      });
    });
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onBtnCheck = function (t, e) {
    var o = this.userDatas[e];
    o && o.update_at ? _panelMgr["default"].ins.open("ui/ui_saveConfirm", {
      cData: o
    }) : _tipMgr["default"].ins.showTip("暂无数据");
  };

  __decorate([f(cc.Label)], e.prototype, "timeL", void 0);

  __decorate([f(cc.Label)], e.prototype, "lvL", void 0);

  __decorate([f(cc.Label)], e.prototype, "coinNumL", void 0);

  __decorate([f(cc.Label)], e.prototype, "timeR", void 0);

  __decorate([f(cc.Label)], e.prototype, "lvR", void 0);

  __decorate([f(cc.Label)], e.prototype, "coinNumR", void 0);

  __decorate([f(cc.Label)], e.prototype, "infoL", void 0);

  __decorate([f(cc.Label)], e.prototype, "infoR", void 0);

  __decorate([f(cc.Node)], e.prototype, "nodeL", void 0);

  __decorate([f(cc.Node)], e.prototype, "nodeR", void 0);

  return __decorate([h], e);
}(_baseUI["default"]);

exports["default"] = g;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_mailInfo.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9f5988cQTZGpqvbdBk5aXo1', 'ui_mailInfo');
// scripts/ui_mailInfo.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _item1 = require("item1");

var _mailMgr = require("mailMgr");

var _panelMgr = require("panelMgr");

var _baseUI = require("baseUI");

var p = cc._decorator;
var d = p.ccclass;
var h = p.property;

var f = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.scrollView = null;
    e.title = null;
    e.cont = null;
    e.itemPfb = null;
    e.awardNode = null;
    e.deleteNode = null;
    e._mailItem = [];
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {};

  e.prototype.init = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }

    var o = t[0].id;
    this.mailId = o;
    var n = _mailMgr["default"].ins.serverMail;
    this.title.string = n[o].title;
    this.cont.string = n[o].msg;
    this.updateItem();
  };

  e.prototype.updateItem = function (t) {
    var e = this;
    void 0 === t && (t = !0);
    var o = _mailMgr["default"].ins.mailInfo.mail[this.mailId];
    var n = _mailMgr["default"].ins.serverMail;
    var i = JSON.parse(n[this.mailId].props);

    if (t) {
      for (var r in this.scrollView.content.children.forEach(function (t) {
        e._mailItem.push(t);
      }), this.scrollView.content.removeAllChildren(), i) {
        if (i.hasOwnProperty(r)) {
          var a = this._mailItem.shift() || cc.instantiate(this.itemPfb);
          this.scrollView.content.addChild(a);
          a.getComponent(_item1["default"]).init(r, i[r], o);
        }
      }

      if (this.scrollView.content.childrenCount) {
        var l = (this.scrollView.content.children[0].width + 5.5) * this.scrollView.content.childrenCount;
        this.scrollView.node.x = l > this.scrollView.node.width ? -209 : (this.scrollView.node.width - l) / 2 - 209;
        l = Math.min(l, 360);
        this.scrollView.node.width = l;
        this.scrollView.scrollToLeft();
      }
    }

    var u = Object.keys(i).length > 0;
    this.awardNode.active = u && o != _mailMgr.mailState.award;
    this.deleteNode.active = !this.awardNode.active;
  };

  e.prototype.updMail = function () {};

  e.prototype.getAward = function () {
    if (_mailMgr["default"].ins.getAward(this.mailId)) {
      for (var t = [], e = this.scrollView.content.childrenCount - 1; e >= 0; e--) {
        var o = this.scrollView.content.children[e];
        var n = o.parent.convertToWorldSpaceAR(o.position);
        var i = {};
        i.itemId = o.getComponent(_item1["default"]).key;
        i.worldPos = n;
        i.value = o.getComponent(_item1["default"]).countStr;
        t.push(i);
      }

      _panelMgr["default"].ins.open("ui/ui_flyAni", {
        itemDatas: t
      });

      this.updateItem(!1);
    }
  };

  e.prototype["delete"] = function () {
    _mailMgr["default"].ins.deleteMail(this.mailId);

    this.hideThis();

    _evts["default"].opE.emit({
      action: _evts["default"].UPDMAIL,
      data: {
        type: "delete",
        id: this.mailId
      }
    });
  };

  e.prototype.changereadState = function () {
    _mailMgr["default"].ins.readMail(this.mailId) && _evts["default"].opE.emit({
      action: _evts["default"].UPDMAIL,
      data: {
        type: "read",
        id: this.mailId
      }
    });
  };

  e.prototype.hideThis = function () {
    this.hide();
  };

  e.prototype.onHide = function () {
    this.changereadState();
  };

  __decorate([h(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([h(cc.Label)], e.prototype, "title", void 0);

  __decorate([h(cc.Label)], e.prototype, "cont", void 0);

  __decorate([h(cc.Prefab)], e.prototype, "itemPfb", void 0);

  __decorate([h(cc.Node)], e.prototype, "awardNode", void 0);

  __decorate([h(cc.Node)], e.prototype, "deleteNode", void 0);

  return __decorate([d], e);
}(_baseUI["default"]);

exports["default"] = f;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui_rePlay.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '24caeZaNyxM8KAZRT3lrCcp', 'ui_rePlay');
// scripts/ui_rePlay.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _idx = require("idx");

var _res = require("res");

var _cfgMgr = require("cfgMgr");

var _global = require("global");

var _bagMgr = require("bagMgr");

var _festivalMgr = require("festivalMgr");

var _levelMgr = require("levelMgr");

var _panelMgr = require("panelMgr");

var _pInfo = require("pInfo");

var _game = require("game");

var _baseUI = require("baseUI");

var v = cc._decorator;
var _ = v.ccclass;
var b = v.property;

var w = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.endTitleNode = null;
    e.pauseTitleNode = null;
    e.shareBtn = null;
    e.shareIcon = null;
    e.shareCount = null;
    e.curLb = null;
    e.preLb = null;
    e.curScoreLbl = null;
    e.preBestScore = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    _evts["default"].opE.on(this.onOperTap.bind(this));
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].SHOWVIDEOSHARE:
        _game["default"].type != _pInfo.gameType.practice && this.shareBtn && (this.shareBtn.active = !0);
    }
  };

  e.prototype.init = function (t) {
    var e = t.curScore;
    var o = t.continueCb;
    this.continueCb = o;
    var n = this.endTitleNode.active = !o;
    this.pauseTitleNode.active = !!o;
    n && _idx.platform.stopVideoRecord();
    var i = _game["default"].type;
    var r = _pInfo["default"].ins;
    var a = this.shareIcon;
    var u = this.shareCount;
    var p = _cfgMgr["default"].serverCfg.share_rules.rules;
    var d = p.main_line.val;
    var f = p.main_line.props;
    this.curScore = e;

    _levelMgr["default"].ins.getLevelCost();

    var m = "当前连胜:";
    var v = "最高连胜:";

    var _ = r.getConsWinTimes();

    var b = r.getRecordData().main.heWins || 0;
    i == _pInfo.gameType.race && (m = "当前积分:", v = "最高积分:", _ = e, b = r.getRecordData().race.hePoints || 0, d = p.qw_line.val, f = p.qw_line.props);
    this.curLb.string = m;
    this.preLb.string = v;
    this.curScoreLbl.string = _ + "";
    this.preBestScore.string = b + "";

    _res["default"].ins.getBundleByString("resSps").then(function (t) {
      a.spriteFrame = t.get("item/" + f, cc.SpriteFrame);
    })["catch"](function (t) {
      console.error("RTool.ins.getBundleByString('resSps')", t);
    });

    u.string = "+" + d;
    a.node.active = (i == _pInfo.gameType.race ? r.getRaceShareTime() : r.getNormalShareTime()) < 3;
  };

  e.prototype.getPower = function (t) {
    _pInfo["default"].ins.addPower(t);
  };

  e.prototype.onContinue = function () {
    var t;
    this.hide();
    null === (t = this.continueCb) || void 0 === t || t.call(this);
  };

  e.prototype.onClose = function () {
    this.continueCb ? this.onContinue() : this.hideThis();
  };

  e.prototype.onShare = function () {
    var t = this;

    _idx.platform.shareVideoRecord().then(function (e) {
      var o = t.shareIcon;

      if (1 == e && o && o.isValid && o.node.active) {
        var n = _game["default"].type == _pInfo.gameType.race;
        var i = _pInfo["default"].ins;
        var r = void 0;
        var a = void 0;
        var s = void 0;
        var c = _cfgMgr["default"].serverCfg.share_rules.rules;

        if (n) {
          s = c.qw_line.val;
          a = c.qw_line.props;
          var u = i.getRaceShareTime();
          i.setRaceShareTime(u + 1);
        } else s = c.main_line.val, a = c.main_line.props, u = i.getNormalShareTime(), i.setNormalShareTime(u + 1);

        switch (a) {
          case "coin":
            r = i.getCoin(), i.addCoin(s);
            break;

          case "times":
            i.addPower(s);
            break;

          default:
            _bagMgr["default"].ins.addItem(a, s);

        }

        var d = t.shareIcon.node.parent.convertToWorldSpaceAR(t.shareIcon.node.position);

        _panelMgr["default"].ins.open("ui/ui_flyAni", {
          itemDatas: [{
            itemId: a,
            worldPos: d,
            value: s
          }],
          showCoin: r
        });

        t.shareBtn.active = !1;
      }
    })["catch"](function () {
      console.error("shareErr");
    });
  };

  e.prototype.onBtnGuide = function () {
    _pInfo.chgScene(_pInfo.sceneType.guide);
  };

  e.prototype.onBtnTrain = function () {
    _pInfo.chgScene(_pInfo.sceneType.game, {
      gameType: _pInfo.gameType.practice
    });
  };

  e.prototype.hideThis = function () {
    var t = _game["default"].type;
    t == _pInfo.gameType.race ? (_global["default"].loadToRace = 4, _festivalMgr["default"].ins.updPro(_festivalMgr.fesTaskKey.raceScore, this.curScore)) : t == _pInfo.gameType.challenge && (_global["default"].loadToRace = 3);
    t != _pInfo.gameType.practice ? (_pInfo["default"].ins.recordGameResult(_game["default"].type, !1, this.curScore), _pInfo.chgScene(_pInfo.sceneType.main, {
      cb: void 0
    })) : _pInfo.chgScene(_pInfo.sceneType.main);
  };

  __decorate([b(cc.Node)], e.prototype, "endTitleNode", void 0);

  __decorate([b(cc.Node)], e.prototype, "pauseTitleNode", void 0);

  __decorate([b(cc.Node)], e.prototype, "shareBtn", void 0);

  __decorate([b(cc.Sprite)], e.prototype, "shareIcon", void 0);

  __decorate([b(cc.Label)], e.prototype, "shareCount", void 0);

  __decorate([b(cc.Label)], e.prototype, "curLb", void 0);

  __decorate([b(cc.Label)], e.prototype, "preLb", void 0);

  __decorate([b(cc.Label)], e.prototype, "curScoreLbl", void 0);

  __decorate([b(cc.Label)], e.prototype, "preBestScore", void 0);

  return __decorate([_], e);
}(_baseUI["default"]);

exports["default"] = w;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/plugins/flyio.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '51480P4Eh5Njbdz0SzmweFP', 'flyio');
// scripts/plugins/flyio.js

"use strict";

var o = new (require("fly"))();
module.exports = o;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xccGx1Z2luc1xcZmx5aW8uanMiXSwibmFtZXMiOlsibyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUMsR0FBRyxLQUFLQyxPQUFPLENBQUMsS0FBRCxDQUFaLEdBQVI7QUFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxDQUFqQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG8gPSBuZXcgKHJlcXVpcmUoXCJmbHlcIikpKCk7XG5tb2R1bGUuZXhwb3J0cyA9IG87XG4iXX0=
//------QC-SOURCE-SPLIT------
