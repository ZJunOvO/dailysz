
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/dateItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fd235ZZ7QVCtYwyn8Ct+nY3', 'dateItem');
// scripts/dateItem.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});
var a = cc._decorator;
var s = a.ccclass;
var c = a.property;

var l = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bg = null;
    e.bgTypes = [];
    e.dateLb = null;
    e.select = null;
    e.finish = null;
    return e;
  }

  var o;

  __extends(e, t);

  o = e;

  e.prototype.setDate = function (t) {
    this.dateLb.string = t;
  };

  e.prototype.setLocked = function (t) {
    t ? (this.bg.spriteFrame = this.bgTypes[1], this.dateLb.node.color = o.color2, this.dateLb.node.opacity = 180) : (this.bg.spriteFrame = this.bgTypes[0], this.dateLb.node.color = o.color1, this.dateLb.node.opacity = 255);
  };

  e.prototype.setSelected = function (t) {
    this.select.active = t;
  };

  e.prototype.setFinish = function (t) {
    this.finish.active = t;
    t && (this.bg.spriteFrame = this.bgTypes[2], this.dateLb.node.color = cc.Color.WHITE, this.dateLb.node.opacity = 255);
  };

  e.color1 = new cc.Color(201, 103, 23);
  e.color2 = new cc.Color(255, 231, 209);

  __decorate([c(cc.Sprite)], e.prototype, "bg", void 0);

  __decorate([c([cc.SpriteFrame])], e.prototype, "bgTypes", void 0);

  __decorate([c(cc.Label)], e.prototype, "dateLb", void 0);

  __decorate([c(cc.Node)], e.prototype, "select", void 0);

  __decorate([c(cc.Node)], e.prototype, "finish", void 0);

  return o = __decorate([s], e);
}(cc.Component);

exports["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZGF0ZUl0ZW0uanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYSIsImNjIiwiX2RlY29yYXRvciIsInMiLCJjY2NsYXNzIiwiYyIsInByb3BlcnR5IiwibCIsInQiLCJlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJiZyIsImJnVHlwZXMiLCJkYXRlTGIiLCJzZWxlY3QiLCJmaW5pc2giLCJvIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwic2V0RGF0ZSIsInN0cmluZyIsInNldExvY2tlZCIsInNwcml0ZUZyYW1lIiwibm9kZSIsImNvbG9yIiwiY29sb3IyIiwib3BhY2l0eSIsImNvbG9yMSIsInNldFNlbGVjdGVkIiwiYWN0aXZlIiwic2V0RmluaXNoIiwiQ29sb3IiLCJXSElURSIsIl9fZGVjb3JhdGUiLCJTcHJpdGUiLCJTcHJpdGVGcmFtZSIsIkxhYmVsIiwiTm9kZSIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7RUFBQ0MsS0FBSyxFQUFFLENBQUM7QUFBVCxDQUE3QztBQUNBLElBQUlDLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxVQUFYO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNJLE9BQVY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBVjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksVUFBVUMsQ0FBVixFQUFhO0VBQ2xCLFNBQVNDLENBQVQsR0FBYTtJQUNULElBQUlBLENBQUMsR0FBSSxTQUFTRCxDQUFULElBQWNBLENBQUMsQ0FBQ0UsS0FBRixDQUFRLElBQVIsRUFBY0MsU0FBZCxDQUFmLElBQTRDLElBQXBEO0lBQ0FGLENBQUMsQ0FBQ0csRUFBRixHQUFPLElBQVA7SUFD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SixDQUFGLENBQUQsRUFBZTdCLENBQUMsQ0FBQ1UsU0FBakIsRUFBNEIsUUFBNUIsRUFBc0MsS0FBSyxDQUEzQyxDQUFWOztFQUNBZSxVQUFVLENBQUMsQ0FBQzdCLENBQUMsQ0FBQ0osRUFBRSxDQUFDcUMsSUFBSixDQUFGLENBQUQsRUFBZTdCLENBQUMsQ0FBQ1UsU0FBakIsRUFBNEIsUUFBNUIsRUFBc0MsS0FBSyxDQUEzQyxDQUFWOztFQUNBLE9BQVFGLENBQUMsR0FBR2lCLFVBQVUsQ0FBQyxDQUFDL0IsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBdEI7QUFDSCxDQTNDTyxDQTJDTFIsRUFBRSxDQUFDc0MsU0EzQ0UsQ0FBUjs7QUE0Q0F6QyxPQUFPLFdBQVAsR0FBa0JTLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiAhMH0pO1xudmFyIGEgPSBjYy5fZGVjb3JhdG9yO1xudmFyIHMgPSBhLmNjY2xhc3M7XG52YXIgYyA9IGEucHJvcGVydHk7XG52YXIgbCA9IChmdW5jdGlvbiAodCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xuICAgICAgICBlLmJnID0gbnVsbDtcbiAgICAgICAgZS5iZ1R5cGVzID0gW107XG4gICAgICAgIGUuZGF0ZUxiID0gbnVsbDtcbiAgICAgICAgZS5zZWxlY3QgPSBudWxsO1xuICAgICAgICBlLmZpbmlzaCA9IG51bGw7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICB2YXIgbztcbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgbyA9IGU7XG4gICAgZS5wcm90b3R5cGUuc2V0RGF0ZSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHRoaXMuZGF0ZUxiLnN0cmluZyA9IHQ7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5zZXRMb2NrZWQgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICB0XG4gICAgICAgICAgICA/ICgodGhpcy5iZy5zcHJpdGVGcmFtZSA9IHRoaXMuYmdUeXBlc1sxXSksXG4gICAgICAgICAgICAgICh0aGlzLmRhdGVMYi5ub2RlLmNvbG9yID0gby5jb2xvcjIpLFxuICAgICAgICAgICAgICAodGhpcy5kYXRlTGIubm9kZS5vcGFjaXR5ID0gMTgwKSlcbiAgICAgICAgICAgIDogKCh0aGlzLmJnLnNwcml0ZUZyYW1lID0gdGhpcy5iZ1R5cGVzWzBdKSxcbiAgICAgICAgICAgICAgKHRoaXMuZGF0ZUxiLm5vZGUuY29sb3IgPSBvLmNvbG9yMSksXG4gICAgICAgICAgICAgICh0aGlzLmRhdGVMYi5ub2RlLm9wYWNpdHkgPSAyNTUpKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnNldFNlbGVjdGVkID0gZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgdGhpcy5zZWxlY3QuYWN0aXZlID0gdDtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLnNldEZpbmlzaCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHRoaXMuZmluaXNoLmFjdGl2ZSA9IHQ7XG4gICAgICAgIHQgJiZcbiAgICAgICAgICAgICgodGhpcy5iZy5zcHJpdGVGcmFtZSA9IHRoaXMuYmdUeXBlc1syXSksXG4gICAgICAgICAgICAodGhpcy5kYXRlTGIubm9kZS5jb2xvciA9IGNjLkNvbG9yLldISVRFKSxcbiAgICAgICAgICAgICh0aGlzLmRhdGVMYi5ub2RlLm9wYWNpdHkgPSAyNTUpKTtcbiAgICB9O1xuICAgIGUuY29sb3IxID0gbmV3IGNjLkNvbG9yKDIwMSwgMTAzLCAyMyk7XG4gICAgZS5jb2xvcjIgPSBuZXcgY2MuQ29sb3IoMjU1LCAyMzEsIDIwOSk7XG4gICAgX19kZWNvcmF0ZShbYyhjYy5TcHJpdGUpXSwgZS5wcm90b3R5cGUsIFwiYmdcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtjKFtjYy5TcHJpdGVGcmFtZV0pXSwgZS5wcm90b3R5cGUsIFwiYmdUeXBlc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2MoY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwiZGF0ZUxiXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcInNlbGVjdFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2MoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJmaW5pc2hcIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gKG8gPSBfX2RlY29yYXRlKFtzXSwgZSkpO1xufSkoY2MuQ29tcG9uZW50KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGw7XG4iXX0=