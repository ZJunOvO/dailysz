
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/page_shop.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6cfcdLL6MJNqIEFWRnYXtGU', 'page_shop');
// scripts/page_shop.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _evts = require("evts");

var _mySafeArea = require("mySafeArea");

var _res = require("res");

var _cfgMgr = require("cfgMgr");

var _global = require("global");

var _panelMgr = require("panelMgr");

var _skinMgr = require("skinMgr");

var _pInfo = require("pInfo");

var _item = require("item");

var _shopItem1 = require("shopItem1");

var v = cc._decorator;
var _ = v.ccclass;
var b = v.property;

var w = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.bgNode = null;
    e.topSpNode = null;
    e.spineNode = null;
    e.scrollView = null;
    e.topBgSp = null;
    e.topBgSp1 = null;
    e.powerItem = null;
    e.goldItem = null;
    e.itemSc = null;
    e.itemPre = null;
    e.lightNode = null;
    e.eventFunc = null;
    return e;
  }

  __extends(e, t);

  e.prototype.onLoad = function () {
    this.node.height = cc.winSize.height;
    _global["default"].padScale && (this.bgNode.scaleX = this.topSpNode.parent.scale = _global["default"].padScale);
    this.loadGirl();
    this.onResize();
    this.eventFunc = this.onOperTap.bind(this);

    _evts["default"].opE.on(this.eventFunc);
  };

  e.prototype.onOperTap = function (t) {
    var e = null == t ? void 0 : t.action;
    if (e) switch (e) {
      case _evts["default"].REFRESH_CFGDATA:
        this.initPanel();
    }
  };

  e.prototype.onResize = function () {
    var t = _mySafeArea.getSafeAreaRect().yMin;

    var e = cc.winSize.height - 1280 - t;
    this.scrollView.node.height += e;
    this.scrollView.content.parent.height += e;
    this.topBgSp.height += e;
    this.topBgSp1.height += e;
  };

  e.prototype.start = function () {
    this.initPanel();
  };

  e.prototype.loadGirl = function () {
    return __awaiter(this, void 0, void 0, function () {
      var t = this;
      return __generator(this, function () {
        _skinMgr["default"].ins.updateRole(_pInfo["default"].ins.getUsingSkin().role, this.spineNode);

        _res["default"].ins.getBundleByString("resSps").then(function (e) {
          e.load("spine/light/action", sp.SkeletonData, function (e, o) {
            if (!e && t.node && t.node.isValid) {
              var n = new cc.Node();
              var i = n.addComponent(sp.Skeleton);
              i.skeletonData = o;
              i.animation = "animation";
              n.parent = t.lightNode;
            }
          });
        })["catch"](function (t) {
          console.error("RTool.ins.getBundleByString('resSps')", t);
        });

        return [2];
      });
    });
  };

  e.prototype.initPanel = function () {
    this.powerItem.initPower();
    this.goldItem.initGold();
    this.initPack();
  };

  e.prototype.initPack = function () {
    var t;
    var e;
    this.itemSc.content.removeAllChildren();
    var o = null === (e = null === (t = _cfgMgr["default"].serverCfg) || void 0 === t ? void 0 : t.shop_config) || void 0 === e ? void 0 : e.gift;

    if (o) {
      var n = {};

      var i = _pInfo["default"].ins.getShopRecord();

      for (var r in o) {
        var a = (null == (n = o[r]) ? void 0 : n.daily_limit_nums) || 0;
        var s = i[n.key] || 0;
        if ((null == n ? void 0 : n.is_shop) && s < a) break;
      }

      if (this.itemSc.node.width = 330, n && n.props) {
        for (var r in n.props) {
          var c = n.props[r];
          var l = cc.instantiate(this.itemPre);
          l.active = !0;
          this.itemSc.content.addChild(l);
          l.getComponent(_item["default"]).initByData(r, c);
        }

        var u = this.itemSc.content.children[0].width * this.itemSc.content.childrenCount;
        this.itemSc.node.x = u > this.itemSc.node.width ? -4 : (this.itemSc.node.width - u) / 2 - 4;
        u = Math.min(u, 330);
        this.itemSc.node.width = u;
        this.itemSc.scrollToLeft();
      }
    }
  };

  e.prototype.onBtnGift = function () {
    _panelMgr["default"].ins.open("ui/ui_shopPack", null).then(function () {
      _evts["default"].opE.emit({
        action: _evts["default"].UPD_MAIN_RED
      });
    });
  };

  e.prototype.onDestroy = function () {
    _evts["default"].opE.off(this.eventFunc);

    this.eventFunc = null;
  };

  __decorate([b(cc.Node)], e.prototype, "bgNode", void 0);

  __decorate([b(cc.Node)], e.prototype, "topSpNode", void 0);

  __decorate([b(cc.Node)], e.prototype, "spineNode", void 0);

  __decorate([b(cc.ScrollView)], e.prototype, "scrollView", void 0);

  __decorate([b(cc.Node)], e.prototype, "topBgSp", void 0);

  __decorate([b(cc.Node)], e.prototype, "topBgSp1", void 0);

  __decorate([b(_shopItem1["default"])], e.prototype, "powerItem", void 0);

  __decorate([b(_shopItem1["default"])], e.prototype, "goldItem", void 0);

  __decorate([b(cc.ScrollView)], e.prototype, "itemSc", void 0);

  __decorate([b(cc.Node)], e.prototype, "itemPre", void 0);

  __decorate([b(cc.Node)], e.prototype, "lightNode", void 0);

  return __decorate([_], e);
}(cc.Component);

exports["default"] = w;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xccGFnZV9zaG9wLmpzIl0sIm5hbWVzIjpbIm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9ldnRzIiwicmVxdWlyZSIsIl9teVNhZmVBcmVhIiwiX3JlcyIsIl9jZmdNZ3IiLCJfZ2xvYmFsIiwiX3BhbmVsTWdyIiwiX3NraW5NZ3IiLCJfcEluZm8iLCJfaXRlbSIsIl9zaG9wSXRlbTEiLCJ2IiwiY2MiLCJfZGVjb3JhdG9yIiwiXyIsImNjY2xhc3MiLCJiIiwicHJvcGVydHkiLCJ3IiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsImJnTm9kZSIsInRvcFNwTm9kZSIsInNwaW5lTm9kZSIsInNjcm9sbFZpZXciLCJ0b3BCZ1NwIiwidG9wQmdTcDEiLCJwb3dlckl0ZW0iLCJnb2xkSXRlbSIsIml0ZW1TYyIsIml0ZW1QcmUiLCJsaWdodE5vZGUiLCJldmVudEZ1bmMiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJvbkxvYWQiLCJub2RlIiwiaGVpZ2h0Iiwid2luU2l6ZSIsInBhZFNjYWxlIiwic2NhbGVYIiwicGFyZW50Iiwic2NhbGUiLCJsb2FkR2lybCIsIm9uUmVzaXplIiwib25PcGVyVGFwIiwiYmluZCIsIm9wRSIsIm9uIiwiYWN0aW9uIiwiUkVGUkVTSF9DRkdEQVRBIiwiaW5pdFBhbmVsIiwiZ2V0U2FmZUFyZWFSZWN0IiwieU1pbiIsImNvbnRlbnQiLCJzdGFydCIsIl9fYXdhaXRlciIsIl9fZ2VuZXJhdG9yIiwiaW5zIiwidXBkYXRlUm9sZSIsImdldFVzaW5nU2tpbiIsInJvbGUiLCJnZXRCdW5kbGVCeVN0cmluZyIsInRoZW4iLCJsb2FkIiwic3AiLCJTa2VsZXRvbkRhdGEiLCJvIiwiaXNWYWxpZCIsIk5vZGUiLCJpIiwiYWRkQ29tcG9uZW50IiwiU2tlbGV0b24iLCJza2VsZXRvbkRhdGEiLCJhbmltYXRpb24iLCJjb25zb2xlIiwiZXJyb3IiLCJpbml0UG93ZXIiLCJpbml0R29sZCIsImluaXRQYWNrIiwicmVtb3ZlQWxsQ2hpbGRyZW4iLCJzZXJ2ZXJDZmciLCJzaG9wX2NvbmZpZyIsImdpZnQiLCJnZXRTaG9wUmVjb3JkIiwiciIsImEiLCJkYWlseV9saW1pdF9udW1zIiwicyIsImtleSIsImlzX3Nob3AiLCJ3aWR0aCIsInByb3BzIiwiYyIsImwiLCJpbnN0YW50aWF0ZSIsImFjdGl2ZSIsImFkZENoaWxkIiwiZ2V0Q29tcG9uZW50IiwiaW5pdEJ5RGF0YSIsInUiLCJjaGlsZHJlbiIsImNoaWxkcmVuQ291bnQiLCJ4IiwiTWF0aCIsIm1pbiIsInNjcm9sbFRvTGVmdCIsIm9uQnRuR2lmdCIsIm9wZW4iLCJlbWl0IiwiVVBEX01BSU5fUkVEIiwib25EZXN0cm95Iiwib2ZmIiwiX19kZWNvcmF0ZSIsIlNjcm9sbFZpZXciLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBSjtBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0VBQUNDLEtBQUssRUFBRSxDQUFDO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsS0FBSyxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFuQjs7QUFDQSxJQUFJQyxXQUFXLEdBQUdELE9BQU8sQ0FBQyxZQUFELENBQXpCOztBQUNBLElBQUlFLElBQUksR0FBR0YsT0FBTyxDQUFDLEtBQUQsQ0FBbEI7O0FBQ0EsSUFBSUcsT0FBTyxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJSSxPQUFPLEdBQUdKLE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlLLFNBQVMsR0FBR0wsT0FBTyxDQUFDLFVBQUQsQ0FBdkI7O0FBQ0EsSUFBSU0sUUFBUSxHQUFHTixPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFJTyxNQUFNLEdBQUdQLE9BQU8sQ0FBQyxPQUFELENBQXBCOztBQUNBLElBQUlRLEtBQUssR0FBR1IsT0FBTyxDQUFD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RCxFQUFlbkQsQ0FBQyxDQUFDZ0IsU0FBakIsRUFBNEIsU0FBNUIsRUFBdUMsS0FBSyxDQUE1QyxDQUFWOztFQUNBK0UsVUFBVSxDQUFDLENBQUNuRyxDQUFDLENBQUNKLEVBQUUsQ0FBQzJELElBQUosQ0FBRixDQUFELEVBQWVuRCxDQUFDLENBQUNnQixTQUFqQixFQUE0QixXQUE1QixFQUF5QyxLQUFLLENBQTlDLENBQVY7O0VBQ0EsT0FBTytFLFVBQVUsQ0FBQyxDQUFDckcsQ0FBRCxDQUFELEVBQU1NLENBQU4sQ0FBakI7QUFDSCxDQWpJTyxDQWlJTFIsRUFBRSxDQUFDeUcsU0FqSUUsQ0FBUjs7QUFrSUF2SCxPQUFPLFdBQVAsR0FBa0JvQixDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG47XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogITB9KTtcbnZhciBfZXZ0cyA9IHJlcXVpcmUoXCJldnRzXCIpO1xudmFyIF9teVNhZmVBcmVhID0gcmVxdWlyZShcIm15U2FmZUFyZWFcIik7XG52YXIgX3JlcyA9IHJlcXVpcmUoXCJyZXNcIik7XG52YXIgX2NmZ01nciA9IHJlcXVpcmUoXCJjZmdNZ3JcIik7XG52YXIgX2dsb2JhbCA9IHJlcXVpcmUoXCJnbG9iYWxcIik7XG52YXIgX3BhbmVsTWdyID0gcmVxdWlyZShcInBhbmVsTWdyXCIpO1xudmFyIF9za2luTWdyID0gcmVxdWlyZShcInNraW5NZ3JcIik7XG52YXIgX3BJbmZvID0gcmVxdWlyZShcInBJbmZvXCIpO1xudmFyIF9pdGVtID0gcmVxdWlyZShcIml0ZW1cIik7XG52YXIgX3Nob3BJdGVtMSA9IHJlcXVpcmUoXCJzaG9wSXRlbTFcIik7XG52YXIgdiA9IGNjLl9kZWNvcmF0b3I7XG52YXIgXyA9IHYuY2NjbGFzcztcbnZhciBiID0gdi5wcm9wZXJ0eTtcbnZhciB3ID0gKGZ1bmN0aW9uICh0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgdmFyIGUgPSAobnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHx8IHRoaXM7XG4gICAgICAgIGUuYmdOb2RlID0gbnVsbDtcbiAgICAgICAgZS50b3BTcE5vZGUgPSBudWxsO1xuICAgICAgICBlLnNwaW5lTm9kZSA9IG51bGw7XG4gICAgICAgIGUuc2Nyb2xsVmlldyA9IG51bGw7XG4gICAgICAgIGUudG9wQmdTcCA9IG51bGw7XG4gICAgICAgIGUudG9wQmdTcDEgPSBudWxsO1xuICAgICAgICBlLnBvd2VySXRlbSA9IG51bGw7XG4gICAgICAgIGUuZ29sZEl0ZW0gPSBudWxsO1xuICAgICAgICBlLml0ZW1TYyA9IG51bGw7XG4gICAgICAgIGUuaXRlbVByZSA9IG51bGw7XG4gICAgICAgIGUubGlnaHROb2RlID0gbnVsbDtcbiAgICAgICAgZS5ldmVudEZ1bmMgPSBudWxsO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgX19leHRlbmRzKGUsIHQpO1xuICAgIGUucHJvdG90eXBlLm9uTG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5ub2RlLmhlaWdodCA9IGNjLndpblNpemUuaGVpZ2h0O1xuICAgICAgICBfZ2xvYmFsLmRlZmF1bHQucGFkU2NhbGUgJiYgKHRoaXMuYmdOb2RlLnNjYWxlWCA9IHRoaXMudG9wU3BOb2RlLnBhcmVudC5zY2FsZSA9IF9nbG9iYWwuZGVmYXVsdC5wYWRTY2FsZSk7XG4gICAgICAgIHRoaXMubG9hZEdpcmwoKTtcbiAgICAgICAgdGhpcy5vblJlc2l6ZSgpO1xuICAgICAgICB0aGlzLmV2ZW50RnVuYyA9IHRoaXMub25PcGVyVGFwLmJpbmQodGhpcyk7XG4gICAgICAgIF9ldnRzLmRlZmF1bHQub3BFLm9uKHRoaXMuZXZlbnRGdW5jKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLm9uT3BlclRhcCA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHZhciBlID0gbnVsbCA9PSB0ID8gdm9pZCAwIDogdC5hY3Rpb247XG4gICAgICAgIGlmIChlKVxuICAgICAgICAgICAgc3dpdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBfZXZ0cy5kZWZhdWx0LlJFRlJFU0hfQ0ZHREFUQTpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbml0UGFuZWwoKTtcbiAgICAgICAgICAgIH1cbiAgICB9O1xuICAgIGUucHJvdG90eXBlLm9uUmVzaXplID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdCA9IF9teVNhZmVBcmVhLmdldFNhZmVBcmVhUmVjdCgpLnlNaW47XG4gICAgICAgIHZhciBlID0gY2Mud2luU2l6ZS5oZWlnaHQgLSAxMjgwIC0gdDtcbiAgICAgICAgdGhpcy5zY3JvbGxWaWV3Lm5vZGUuaGVpZ2h0ICs9IGU7XG4gICAgICAgIHRoaXMuc2Nyb2xsVmlldy5jb250ZW50LnBhcmVudC5oZWlnaHQgKz0gZTtcbiAgICAgICAgdGhpcy50b3BCZ1NwLmhlaWdodCArPSBlO1xuICAgICAgICB0aGlzLnRvcEJnU3AxLmhlaWdodCArPSBlO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaW5pdFBhbmVsKCk7XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5sb2FkR2lybCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHQgPSB0aGlzO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBfc2tpbk1nci5kZWZhdWx0Lmlucy51cGRhdGVSb2xlKF9wSW5mby5kZWZhdWx0Lmlucy5nZXRVc2luZ1NraW4oKS5yb2xlLCB0aGlzLnNwaW5lTm9kZSk7XG4gICAgICAgICAgICAgICAgX3Jlcy5kZWZhdWx0Lmluc1xuICAgICAgICAgICAgICAgICAgICAuZ2V0QnVuZGxlQnlTdHJpbmcoXCJyZXNTcHNcIilcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUubG9hZChcInNwaW5lL2xpZ2h0L2FjdGlvblwiLCBzcC5Ta2VsZXRvbkRhdGEsIGZ1bmN0aW9uIChlLCBvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFlICYmIHQubm9kZSAmJiB0Lm5vZGUuaXNWYWxpZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbiA9IG5ldyBjYy5Ob2RlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpID0gbi5hZGRDb21wb25lbnQoc3AuU2tlbGV0b24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpLnNrZWxldG9uRGF0YSA9IG87XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkuYW5pbWF0aW9uID0gXCJhbmltYXRpb25cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbi5wYXJlbnQgPSB0LmxpZ2h0Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiUlRvb2wuaW5zLmdldEJ1bmRsZUJ5U3RyaW5nKCdyZXNTcHMnKVwiLCB0KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyXTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmluaXRQYW5lbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5wb3dlckl0ZW0uaW5pdFBvd2VyKCk7XG4gICAgICAgIHRoaXMuZ29sZEl0ZW0uaW5pdEdvbGQoKTtcbiAgICAgICAgdGhpcy5pbml0UGFjaygpO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuaW5pdFBhY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0O1xuICAgICAgICB2YXIgZTtcbiAgICAgICAgdGhpcy5pdGVtU2MuY29udGVudC5yZW1vdmVBbGxDaGlsZHJlbigpO1xuICAgICAgICB2YXIgbyA9XG4gICAgICAgICAgICBudWxsID09PSAoZSA9IG51bGwgPT09ICh0ID0gX2NmZ01nci5kZWZhdWx0LnNlcnZlckNmZykgfHwgdm9pZCAwID09PSB0ID8gdm9pZCAwIDogdC5zaG9wX2NvbmZpZykgfHxcbiAgICAgICAgICAgIHZvaWQgMCA9PT0gZVxuICAgICAgICAgICAgICAgID8gdm9pZCAwXG4gICAgICAgICAgICAgICAgOiBlLmdpZnQ7XG4gICAgICAgIGlmIChvKSB7XG4gICAgICAgICAgICB2YXIgbiA9IHt9O1xuICAgICAgICAgICAgdmFyIGkgPSBfcEluZm8uZGVmYXVsdC5pbnMuZ2V0U2hvcFJlY29yZCgpO1xuICAgICAgICAgICAgZm9yICh2YXIgciBpbiBvKSB7XG4gICAgICAgICAgICAgICAgdmFyIGEgPSAobnVsbCA9PSAobiA9IG9bcl0pID8gdm9pZCAwIDogbi5kYWlseV9saW1pdF9udW1zKSB8fCAwO1xuICAgICAgICAgICAgICAgIHZhciBzID0gaVtuLmtleV0gfHwgMDtcbiAgICAgICAgICAgICAgICBpZiAoKG51bGwgPT0gbiA/IHZvaWQgMCA6IG4uaXNfc2hvcCkgJiYgcyA8IGEpIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCgodGhpcy5pdGVtU2Mubm9kZS53aWR0aCA9IDMzMCksIG4gJiYgbi5wcm9wcykpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciByIGluIG4ucHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGMgPSBuLnByb3BzW3JdO1xuICAgICAgICAgICAgICAgICAgICB2YXIgbCA9IGNjLmluc3RhbnRpYXRlKHRoaXMuaXRlbVByZSk7XG4gICAgICAgICAgICAgICAgICAgIGwuYWN0aXZlID0gITA7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbVNjLmNvbnRlbnQuYWRkQ2hpbGQobCk7XG4gICAgICAgICAgICAgICAgICAgIGwuZ2V0Q29tcG9uZW50KF9pdGVtLmRlZmF1bHQpLmluaXRCeURhdGEociwgYyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciB1ID0gdGhpcy5pdGVtU2MuY29udGVudC5jaGlsZHJlblswXS53aWR0aCAqIHRoaXMuaXRlbVNjLmNvbnRlbnQuY2hpbGRyZW5Db3VudDtcbiAgICAgICAgICAgICAgICB0aGlzLml0ZW1TYy5ub2RlLnggPSB1ID4gdGhpcy5pdGVtU2Mubm9kZS53aWR0aCA/IC00IDogKHRoaXMuaXRlbVNjLm5vZGUud2lkdGggLSB1KSAvIDIgLSA0O1xuICAgICAgICAgICAgICAgIHUgPSBNYXRoLm1pbih1LCAzMzApO1xuICAgICAgICAgICAgICAgIHRoaXMuaXRlbVNjLm5vZGUud2lkdGggPSB1O1xuICAgICAgICAgICAgICAgIHRoaXMuaXRlbVNjLnNjcm9sbFRvTGVmdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBlLnByb3RvdHlwZS5vbkJ0bkdpZnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF9wYW5lbE1nci5kZWZhdWx0Lmlucy5vcGVuKFwidWkvdWlfc2hvcFBhY2tcIiwgbnVsbCkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfZXZ0cy5kZWZhdWx0Lm9wRS5lbWl0KHthY3Rpb246IF9ldnRzLmRlZmF1bHQuVVBEX01BSU5fUkVEfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUub25EZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfZXZ0cy5kZWZhdWx0Lm9wRS5vZmYodGhpcy5ldmVudEZ1bmMpO1xuICAgICAgICB0aGlzLmV2ZW50RnVuYyA9IG51bGw7XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtiKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiYmdOb2RlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYihjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcInRvcFNwTm9kZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2IoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJzcGluZU5vZGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtiKGNjLlNjcm9sbFZpZXcpXSwgZS5wcm90b3R5cGUsIFwic2Nyb2xsVmlld1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW2IoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJ0b3BCZ1NwXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYihjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcInRvcEJnU3AxXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYihfc2hvcEl0ZW0xLmRlZmF1bHQpXSwgZS5wcm90b3R5cGUsIFwicG93ZXJJdGVtXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYihfc2hvcEl0ZW0xLmRlZmF1bHQpXSwgZS5wcm90b3R5cGUsIFwiZ29sZEl0ZW1cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtiKGNjLlNjcm9sbFZpZXcpXSwgZS5wcm90b3R5cGUsIFwiaXRlbVNjXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbYihjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcIml0ZW1QcmVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtiKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwibGlnaHROb2RlXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW19dLCBlKTtcbn0pKGNjLkNvbXBvbmVudCk7XG5leHBvcnRzLmRlZmF1bHQgPSB3O1xuIl19