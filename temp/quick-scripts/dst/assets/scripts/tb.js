
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/tb.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b3b25KMz3pN65/TF12QdPWO', 'tb');
// scripts/tb.js

"use strict";

var n;
Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _ali = require("ali");

var _uData = require("uData");

var _evts = require("evts");

var _pConst = require("pConst");

var _sound = require("sound");

var _idx = require("idx");

var _time = require("time");

var _ali = require("ali");

var h = function (t) {
  function e() {
    return t.call(this) || this;
  }

  __extends(e, t);

  Object.defineProperty(e.prototype, "appId", {
    get: function get() {
      return "3000000107678912";
    },
    enumerable: !1,
    configurable: !0
  });

  e.prototype.string = function () {
    return _pConst.PFCode.TaoBao;
  };

  e.prototype.login = function () {
    return Promise.resolve();
  };

  e.prototype.initAliListener = function () {
    var t = this;

    _ali.my.onShow(function (e) {
      _evts["default"].plE.emit({
        onShow: !0,
        isSharing: t.isSharing
      }), _uData["default"].ins.syncLaunchOption(e), t.isSharing || t.reenter(), t.bySlider = "gamecenter" == e.query.sourceChannel, _evts["default"].opE.emit({
        action: _evts["default"].Slider_Chg
      });
    });

    _ali.my.onHide(function () {
      t.onHideT = _time["default"].ins.serverTime;

      _evts["default"].plE.emit({
        onHide: !0
      });
    });

    var e = _pConst.SDKConfig.shareData();

    this.canUse("8.8.0") && (_ali.my.onShareAppMessage = function () {
      return {
        title: e.title,
        desc: "",
        imageUrl: "https://tjkj300.oss-cn-shenzhen.aliyuncs.com/web/tjkj300web/other/share.jpg"
      };
    });
    _ali.my.onMemoryWarning && _ali.my.onMemoryWarning(function () {
      _ali.my.triggerGC && _ali.my.triggerGC();
    });
  };

  e.prototype.initCommonSetting = function () {
    _ali.my.getNetworkType({
      success: function success() {},
      fail: function fail() {}
    });

    _evts["default"].chE.on(function () {});
  };

  e.prototype.syncTime = function () {
    return new Promise(function (t) {
      var e = _idx.platform.cloud;
      e ? e.callContainer({
        path: "/api/gTime",
        init: {
          method: "GET",
          header: {
            "content-type": "application/json"
          },
          timeout: 2e3
        },
        success: function success(e) {
          var o;
          var n = e.data;
          if (n) if ("string" == typeof n) try {
            o = JSON.parse(n).t;
          } catch (e) {} else o = n.t;
          t(o || null);
        },
        fail: function fail() {
          return t(null);
        }
      }) : t(null);
    });
  };

  e.prototype.doWatchAD = function () {};

  e.prototype.share = function () {
    return new Promise(function (t) {
      _ali.my.showSharePanel({
        from: "code",
        success: function success() {
          _sound["default"].ins.playBGM();

          t(1);
        },
        fail: function fail(e) {
          console.error("alisharedata fail:", e);

          _sound["default"].ins.playBGM();

          t(0);
        }
      });
    });
  };

  return e;
}(_ali["default"]);

exports["default"] = h;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdGIuanMiXSwibmFtZXMiOlsibiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2FsaSIsInJlcXVpcmUiLCJfdURhdGEiLCJfZXZ0cyIsIl9wQ29uc3QiLCJfc291bmQiLCJfaWR4IiwiX3RpbWUiLCJoIiwidCIsImUiLCJjYWxsIiwiX19leHRlbmRzIiwicHJvdG90eXBlIiwiZ2V0IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsInN0cmluZyIsIlBGQ29kZSIsIlRhb0JhbyIsImxvZ2luIiwiUHJvbWlzZSIsInJlc29sdmUiLCJpbml0QWxpTGlzdGVuZXIiLCJteSIsIm9uU2hvdyIsInBsRSIsImVtaXQiLCJpc1NoYXJpbmciLCJpbnMiLCJzeW5jTGF1bmNoT3B0aW9uIiwicmVlbnRlciIsImJ5U2xpZGVyIiwicXVlcnkiLCJzb3VyY2VDaGFubmVsIiwib3BFIiwiYWN0aW9uIiwiU2xpZGVyX0NoZyIsIm9uSGlkZSIsIm9uSGlkZVQiLCJzZXJ2ZXJUaW1lIiwiU0RLQ29uZmlnIiwic2hhcmVEYXRhIiwiY2FuVXNlIiwib25TaGFyZUFwcE1lc3NhZ2UiLCJ0aXRsZSIsImRlc2MiLCJpbWFnZVVybCIsIm9uTWVtb3J5V2FybmluZyIsInRyaWdnZXJHQyIsImluaXRDb21tb25TZXR0aW5nIiwiZ2V0TmV0d29ya1R5cGUiLCJzdWNjZXNzIiwiZmFpbCIsImNoRSIsIm9uIiwic3luY1RpbWUiLCJwbGF0Zm9ybSIsImNsb3VkIiwiY2FsbENvbnRhaW5lciIsInBhdGgiLCJpbml0IiwibWV0aG9kIiwiaGVhZGVyIiwidGltZW91dCIsIm8iLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwiZG9XYXRjaEFEIiwic2hhcmUiLCJzaG93U2hhcmVQYW5lbCIsImZyb20iLCJwbGF5QkdNIiwiY29uc29sZSIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7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RDtRQUNIO01BVmtCLENBQXZCO0lBWUgsQ0FiTSxDQUFQO0VBY0gsQ0FmRDs7RUFnQkEsT0FBT0MsQ0FBUDtBQUNILENBN0ZPLENBNkZMVixJQUFJLFdBN0ZDLENBQVI7O0FBOEZBRixPQUFPLFdBQVAsR0FBa0JVLENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogITAgfSk7XG52YXIgX2FsaSA9IHJlcXVpcmUoXCJhbGlcIik7XG52YXIgX3VEYXRhID0gcmVxdWlyZShcInVEYXRhXCIpO1xudmFyIF9ldnRzID0gcmVxdWlyZShcImV2dHNcIik7XG52YXIgX3BDb25zdCA9IHJlcXVpcmUoXCJwQ29uc3RcIik7XG52YXIgX3NvdW5kID0gcmVxdWlyZShcInNvdW5kXCIpO1xudmFyIF9pZHggPSByZXF1aXJlKFwiaWR4XCIpO1xudmFyIF90aW1lID0gcmVxdWlyZShcInRpbWVcIik7XG52YXIgX2FsaSA9IHJlcXVpcmUoXCJhbGlcIik7XG52YXIgaCA9IChmdW5jdGlvbih0KSB7XG4gICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgcmV0dXJuIHQuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBfX2V4dGVuZHMoZSwgdCk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLCBcImFwcElkXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBcIjMwMDAwMDAxMDc2Nzg5MTJcIjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogITEsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogITBcbiAgICB9KTtcbiAgICBlLnByb3RvdHlwZS5zdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9wQ29uc3QuUEZDb2RlLlRhb0JhbztcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmxvZ2luID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9O1xuICAgIGUucHJvdG90eXBlLmluaXRBbGlMaXN0ZW5lciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdCA9IHRoaXM7XG4gICAgICAgIF9hbGkubXkub25TaG93KGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIF9ldnRzLmRlZmF1bHQucGxFLmVtaXQoeyBvblNob3c6ICEwLCBpc1NoYXJpbmc6IHQuaXNTaGFyaW5nIH0pLFxuICAgICAgICAgICAgICAgIF91RGF0YS5kZWZhdWx0Lmlucy5zeW5jTGF1bmNoT3B0aW9uKGUpLFxuICAgICAgICAgICAgICAgIHQuaXNTaGFyaW5nIHx8IHQucmVlbnRlcigpLFxuICAgICAgICAgICAgICAgICh0LmJ5U2xpZGVyID0gXCJnYW1lY2VudGVyXCIgPT0gZS5xdWVyeS5zb3VyY2VDaGFubmVsKSxcbiAgICAgICAgICAgICAgICBfZXZ0cy5kZWZhdWx0Lm9wRS5lbWl0KHsgYWN0aW9uOiBfZXZ0cy5kZWZhdWx0LlNsaWRlcl9DaGcgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBfYWxpLm15Lm9uSGlkZShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHQub25IaWRlVCA9IF90aW1lLmRlZmF1bHQuaW5zLnNlcnZlclRpbWU7XG4gICAgICAgICAgICBfZXZ0cy5kZWZhdWx0LnBsRS5lbWl0KHsgb25IaWRlOiAhMCB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBlID0gX3BDb25zdC5TREtDb25maWcuc2hhcmVEYXRhKCk7XG4gICAgICAgIHRoaXMuY2FuVXNlKFwiOC44LjBcIikgJiZcbiAgICAgICAgICAgIChfYWxpLm15Lm9uU2hhcmVBcHBNZXNzYWdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGUudGl0bGUsXG4gICAgICAgICAgICAgICAgICAgIGRlc2M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGltYWdlVXJsOiBcImh0dHBzOi8vdGprajMwMC5vc3MtY24tc2hlbnpoZW4uYWxpeXVuY3MuY29tL3dlYi90amtqMzAwd2ViL290aGVyL3NoYXJlLmpwZ1wiXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBfYWxpLm15Lm9uTWVtb3J5V2FybmluZyAmJlxuICAgICAgICAgICAgX2FsaS5teS5vbk1lbW9yeVdhcm5pbmcoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgX2FsaS5teS50cmlnZ2VyR0MgJiYgX2FsaS5teS50cmlnZ2VyR0MoKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuaW5pdENvbW1vblNldHRpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgX2FsaS5teS5nZXROZXR3b3JrVHlwZSh7IHN1Y2Nlc3M6IGZ1bmN0aW9uKCkge30sIGZhaWw6IGZ1bmN0aW9uKCkge30gfSk7XG4gICAgICAgIF9ldnRzLmRlZmF1bHQuY2hFLm9uKGZ1bmN0aW9uKCkge30pO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuc3luY1RpbWUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgIHZhciBlID0gX2lkeC5wbGF0Zm9ybS5jbG91ZDtcbiAgICAgICAgICAgIGVcbiAgICAgICAgICAgICAgICA/XG4gICAgICAgICAgICAgICAgZS5jYWxsQ29udGFpbmVyKHtcbiAgICAgICAgICAgICAgICAgICAgcGF0aDogXCIvYXBpL2dUaW1lXCIsXG4gICAgICAgICAgICAgICAgICAgIGluaXQ6IHsgbWV0aG9kOiBcIkdFVFwiLCBoZWFkZXI6IHsgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSwgdGltZW91dDogMmUzIH0sXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG4gPSBlLmRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCJzdHJpbmdcIiA9PSB0eXBlb2YgbilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG8gPSBKU09OLnBhcnNlKG4pLnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBvID0gbi50O1xuICAgICAgICAgICAgICAgICAgICAgICAgdChvIHx8IG51bGwpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0KG51bGwpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSkgOlxuICAgICAgICAgICAgICAgIHQobnVsbCk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgZS5wcm90b3R5cGUuZG9XYXRjaEFEID0gZnVuY3Rpb24oKSB7fTtcbiAgICBlLnByb3RvdHlwZS5zaGFyZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgX2FsaS5teS5zaG93U2hhcmVQYW5lbCh7XG4gICAgICAgICAgICAgICAgZnJvbTogXCJjb2RlXCIsXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIF9zb3VuZC5kZWZhdWx0Lmlucy5wbGF5QkdNKCk7XG4gICAgICAgICAgICAgICAgICAgIHQoMSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJhbGlzaGFyZWRhdGEgZmFpbDpcIiwgZSk7XG4gICAgICAgICAgICAgICAgICAgIF9zb3VuZC5kZWZhdWx0Lmlucy5wbGF5QkdNKCk7XG4gICAgICAgICAgICAgICAgICAgIHQoMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIGU7XG59KShfYWxpLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gaDsiXX0=