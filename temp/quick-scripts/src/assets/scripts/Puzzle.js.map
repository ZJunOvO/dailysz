{"version":3,"sources":["assets\\scripts\\Puzzle.js"],"names":["Object","defineProperty","exports","value","_utility","require","i","t","e","toString","width","parseInt","height","totalCells","reset","prototype","getZeroFilledArray","creator","cells","rowHints","columnHints","grid","map","checkUserSolution","every","userSolution","solution","getRowCells","o","n","push","length","getColumnCells","getCellByIndex"],"mappings":";;;;;;AAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAACC,KAAK,EAAE,CAAC;AAAT,CAA7C;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAIC,CAAC,GAAI,YAAY;EACjB,SAASC,CAAT,CAAWA,CAAX,EAAcC,CAAd,EAAiB;IACb,IAAI,KAAK,CAAL,KAAWD,CAAX,IAAgB,KAAK,CAAL,KAAWC,CAA/B,EAAkC,MAAM,uDAAN;IAClC,IAAID,CAAC,IAAI,CAAL,IAAUC,CAAC,IAAI,CAAf,IAAqB,MAAMD,CAAN,IAAW,MAAMC,CAA1C,EACI,MAAM,yBAAyBD,CAAC,CAACE,QAAF,EAAzB,GAAwC,KAAxC,GAAgDD,CAAC,CAACC,QAAF,EAAtD;IACJ,KAAKC,KAAL,GAAa,YAAY,OAAOH,CAAnB,GAAuBA,CAAvB,GAA2BI,QAAQ,CAACJ,CAAC,CAACE,QAAF,EAAD,EAAe,EAAf,CAAhD;IACA,KAAKG,MAAL,GAAc,YAAY,OAAOJ,CAAnB,GAAuBA,CAAvB,GAA2BG,QAAQ,CAACH,CAAC,CAACC,QAAF,EAAD,EAAe,EAAf,CAAjD;IACA,KAAKI,UAAL,GAAkB,KAAKH,KAAL,GAAa,KAAKE,MAApC;IACA,KAAKE,KAAL;EACH;;EACDP,CAAC,CAACQ,SAAF,CAAYD,KAAZ,GAAoB,YAAY;IAC5B,IAAIP,CAAC,GAAG,IAAR;IACA,IAAIC,CAAC,GAAGJ,QAAQ,WAAR,CAAiBY,kBAAzB;IACA,KAAKC,OAAL,GAAe,IAAf;IACA,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKC,WAAL,GAAmB,EAAnB;IACA,KAAKC,IAAL,GAAYb,CAAC,CAAC,KAAKI,MAAN,CAAD,CAAeU,GAAf,CAAmB,YAAY;MACvC,OAAOd,CAAC,CAACD,CAAC,CAACG,KAAH,CAAR;IACH,CAFW,CAAZ;EAGH,CAVD;;EAWAH,CAAC,CAACQ,SAAF,CAAYQ,iBAAZ,GAAgC,YAAY;IACxC,OAAO,KAAKL,KAAL,CAAWM,KAAX,CAAiB,UAAUjB,CAAV,EAAa;MACjC,IAAIC,CAAC,GAAG,MAAMD,CAAC,CAACkB,YAAR,GAAuB,CAAvB,GAA2B,CAAnC;MACA,OAAOlB,CAAC,CAACmB,QAAF,KAAelB,CAAtB;IACH,CAHM,CAAP;EAIH,CALD;;EAMAD,CAAC,CAACQ,SAAF,CAAYY,WAAZ,GAA0B,UAAUpB,CAAV,EAAa;IACnC,IAAIC,CAAJ;IACA,IAAIoB,CAAC,GAAG,EAAR;IACA,IAAIC,CAAC,GAAGtB,CAAC,GAAG,KAAKG,KAAjB;IACA,IAAIJ,CAAC,GAAGuB,CAAC,GAAG,KAAKnB,KAAjB;;IACA,KAAKF,CAAC,GAAGqB,CAAT,EAAYrB,CAAC,GAAGF,CAAhB,EAAmBE,CAAC,EAApB;MAAwBoB,CAAC,CAACE,IAAF,CAAO,KAAKZ,KAAL,CAAWV,CAAX,CAAP;IAAxB;;IACA,OAAOoB,CAAC,CAACG,MAAF,GAAW,CAAX,IAAgBH,CAAvB;EACH,CAPD;;EAQArB,CAAC,CAACQ,SAAF,CAAYiB,cAAZ,GAA6B,UAAUzB,CAAV,EAAa;IACtC,IAAIC,CAAJ;IACA,IAAIoB,CAAC,GAAG,EAAR;;IACA,KAAKpB,CAAC,GAAGD,CAAT,EAAYC,CAAC,GAAG,KAAKU,KAAL,CAAWa,MAA3B,EAAmCvB,CAAC,IAAI,KAAKE,KAA7C;MAAoDkB,CAAC,CAACE,IAAF,CAAO,KAAKZ,KAAL,CAAWV,CAAX,CAAP;IAApD;;IACA,OAAOoB,CAAC,CAACG,MAAF,GAAW,CAAX,IAAgBH,CAAvB;EACH,CALD;;EAMArB,CAAC,CAACQ,SAAF,CAAYkB,cAAZ,GAA6B,UAAU1B,CAAV,EAAa;IACtC,IAAIC,CAAC,GAAG,YAAY,OAAOD,CAAnB,GAAuBI,QAAQ,CAACJ,CAAD,EAAI,EAAJ,CAA/B,GAAyCA,CAAjD;IACA,OAAO,CAAC,CAAC,KAAKW,KAAL,CAAWV,CAAX,CAAF,IAAmB,KAAKU,KAAL,CAAWV,CAAX,CAA1B;EACH,CAHD;;EAIA,OAAOD,CAAP;AACH,CA9CO,EAAR;;AA+CAL,OAAO,WAAP,GAAkBI,CAAlB","sourceRoot":"/","sourcesContent":["Object.defineProperty(exports, \"__esModule\", {value: !0});\nvar _utility = require(\"Utility\");\nvar i = (function () {\n    function t(t, e) {\n        if (void 0 === t || void 0 === e) throw \"width and height are required constructor parameters.\";\n        if (t <= 0 || e <= 0 || (1 === t && 1 === e))\n            throw \"invalid dimensions: \" + t.toString() + \" x \" + e.toString();\n        this.width = \"number\" == typeof t ? t : parseInt(t.toString(), 10);\n        this.height = \"number\" == typeof e ? e : parseInt(e.toString(), 10);\n        this.totalCells = this.width * this.height;\n        this.reset();\n    }\n    t.prototype.reset = function () {\n        var t = this;\n        var e = _utility.default.getZeroFilledArray;\n        this.creator = null;\n        this.cells = [];\n        this.rowHints = [];\n        this.columnHints = [];\n        this.grid = e(this.height).map(function () {\n            return e(t.width);\n        });\n    };\n    t.prototype.checkUserSolution = function () {\n        return this.cells.every(function (t) {\n            var e = 1 === t.userSolution ? 1 : 0;\n            return t.solution === e;\n        });\n    };\n    t.prototype.getRowCells = function (t) {\n        var e;\n        var o = [];\n        var n = t * this.width;\n        var i = n + this.width;\n        for (e = n; e < i; e++) o.push(this.cells[e]);\n        return o.length > 0 && o;\n    };\n    t.prototype.getColumnCells = function (t) {\n        var e;\n        var o = [];\n        for (e = t; e < this.cells.length; e += this.width) o.push(this.cells[e]);\n        return o.length > 0 && o;\n    };\n    t.prototype.getCellByIndex = function (t) {\n        var e = \"number\" != typeof t ? parseInt(t, 10) : t;\n        return !!this.cells[e] && this.cells[e];\n    };\n    return t;\n})();\nexports.default = i;\n"]}